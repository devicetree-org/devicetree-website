%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 18 FMDOCUMENT
0 0 /Times-BoldItalic FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Bold FMFONTDEFINE
3 0 /Times-Italic FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /Courier-Bold FMFONTDEFINE
6 0 /Courier-Oblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(1) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.75 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
0 X
0 0 0 1 0 0 0 K
1.8 (PowerPC Processor binding to:) 190.55 624 P
1.8 (IEEE 1275-1994) 244.36 550 P
1.8 (Standard for Boot) 239.71 514 P
1.8 (\050Initialization, Con\336guration\051) 198.6 478 P
(Firmware) 271.01 442 T
1.8 (Revision: 1.8) 257.09 358 P
1.8 (Date: February 7, 1996) 219.82 322 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(2) 535.5 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(3) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 0 1 0 0 0 K
1 12 Q
0 X
(1) 36 711 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 36 699 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 36 687 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 36 675 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 36 663 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6) 36 651 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 36 639 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 36 627 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9) 36 615 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 36 603 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(11) 36 591 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(12) 36 579 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(13) 36 567 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(14) 36 555 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(15) 36 543 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(16) 36 531 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 36 519 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(18) 36 507 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(19) 36 495 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 36 483 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 36 471 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(22) 36 459 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(23) 36 447 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 36 435 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 36 423 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 36 411 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 36 399 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 36 387 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 36 375 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 36 363 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 36 351 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(32) 36 339 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(33) 36 327 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(34) 36 315 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(35) 36 303 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(36) 36 291 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(37) 36 279 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(38) 36 267 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(39) 36 255 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(40) 36 243 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(41) 36 231 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(42) 36 219 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(43) 36 207 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(44) 36 195 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(45) 36 183 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(46) 36 171 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(47) 36 159 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(48) 36 147 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(49) 36 135 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(50) 36 123 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(51) 36 111 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(52) 36 99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(53) 36 87 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(54) 36 75 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(55) 36 63 T
0 0 0 1 0 0 0 K
27 72 54 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 18 Q
0 X
0 0 0 1 0 0 0 K
1.8 (Purpose of this PowerPC Pr) 72 708 P
1.8 (ocessor binding) 294.84 708 P
1 10 Q
1 (This document speci\336es the application of Open Firmware to a PowerPC Processor, including requirements and) 72 678.33 P
1 (practices to support unique \336rmware speci\336c to a PowerPC Processor) 72 666.33 P
1 (. The core requirements and practices) 359.02 666.33 P
1 (speci\336ed by Open Firmware must be augmented by processor) 72 654.33 P
1 (-speci\336c requirements to form a complete) 326.98 654.33 P
1 (speci\336cation for the \336rmware implementation for a PowerPC Processor. This document establishes such) 72 642.33 P
1 (additional requirements pertaining to the processor and the support required by Open Firmware.) 72 630.33 P
2 18 Q
(T) 72 589 T
(ask Gr) 82.35 589 T
(oup Members) 134.53 589 T
1 10 Q
1 (The PowerPC Processor binding team members were the following:) 72 558.33 P
1 (Mitch Bradley) 72 539.33 P
1 (, FirmW) 130.4 539.33 P
1 (orks) 164.49 539.33 P
1 (Jordan Brown, SunSoft) 72 520.33 P
1 (Bob Cof) 72 501.33 P
1 (\336n, IBM) 106.99 501.33 P
1 (David Kahn, Sun Microsystems, Inc.) 72 482.33 P
1 (John Kingman, IBM) 72 463.33 P
1 (Luan Nguyen, Dr) 72 444.33 P
1 (., IBM) 143.71 444.33 P
1 (Mike Segapeli\050editor\051, IBM) 72 425.33 P
1 (Lilian W) 72 406.33 P
1 (alter) 108.03 406.33 P
1 (, FirePower) 125.4 406.33 P
2 18 Q
(T) 72 365 T
(rademarks) 82.67 365 T
1 10 Q
1 (The following terms, denoted by a registration symbol \050\250\051 or trademark symbol\050\252\051) 72 334.33 P
1 (on the \336rst occurrence in this publication, are registered trademarks or trademarks of) 72 322.33 P
1 (the companies as shown in the list below:) 72 310.33 P
2 12 Q
(T) 90 291.33 T
(rademark) 97.12 291.33 T
(Company) 198 291.33 T
1 10 Q
(PowerPC) 90 272.33 T
1 (International Business Machines Corporation) 198 272.33 P
2 18 Q
(Revision History) 72 212 T
2 10 Q
(Revision 1.01) 72 181.33 T
(April 18,1995) 144 181.33 T
1 F
(Included changes from Open Firmware Working Group Meeting of 01/25/9) 216 181.33 T
2 F
(Revision 1.02) 72 157.33 T
(May 5,1995) 144 157.33 T
1 F
(Applied proposals 222, 223, 252, 253, 254, 258, 260, 261 and 263.) 216 157.33 T
2 F
(Revision 1.03) 72 133.33 T
(July 3,1995) 144 133.33 T
1 F
(Edited IP description in Initial Program State Section.) 216 133.33 T
(Applied proposals 255 and 267.) 216 121.33 T
2 F
(Revision 1.4) 72 97.33 T
(Aug. 11,1995) 144 97.33 T
1 F
(Include changes from Open Firmware Working Group Meeting of 07/19/95.) 216 97.33 T
(Add SMP Binding to document. Rearrange Section 1.) 216 85.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(4) 535.5 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 0 1 0 0 0 K
1 12 Q
0 X
(1) 27 711 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 27 699 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 27 687 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 27 675 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 27 663 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6) 27 651 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 27 639 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 27 627 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9) 27 615 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 27 603 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(11) 27 591 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(12) 27 579 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(13) 27 567 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(14) 27 555 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(15) 27 543 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(16) 27 531 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 27 519 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(18) 27 507 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(19) 27 495 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 27 483 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 27 471 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(22) 27 459 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(23) 27 447 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 27 435 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 27 423 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 27 411 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 27 399 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 27 387 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 27 375 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 27 363 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 27 351 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(32) 27 339 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(33) 27 327 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(34) 27 315 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(35) 27 303 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(36) 27 291 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(37) 27 279 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(38) 27 267 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(39) 27 255 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(40) 27 243 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(41) 27 231 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(42) 27 219 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(43) 27 207 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(44) 27 195 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(45) 27 183 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(46) 27 171 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(47) 27 159 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(48) 27 147 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(49) 27 135 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(50) 27 123 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(51) 27 111 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(52) 27 99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(53) 27 87 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(54) 27 75 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(55) 27 63 T
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(Applied Proposals 276, 277, 278.) 216 713.33 T
(Removed \322Openprom\323 Section \050Moved to Platform Bindings\051.) 216 701.33 T
(Changed name of \32264-bit-addressing\323 property to \32264-bit\323.) 216 689.33 T
2 F
(Revision 1.5) 72 665.33 T
(Sept. 14,1995) 144 665.33 T
1 F
(Fixed bad cross-references. Minor editorial changes.) 216 665.33 T
2 F
(Revision 1.6) 72 641.33 T
(Oct. 27,1995) 144 641.33 T
1 F
1.5 (Included changes from Open Firmware Working Group Meeting of 09/20/95.) 216 641.33 P
1.55 (Fixed errata. Added new ELF Section. Corrected format of MP Section \050CIS) 216 629.33 P
(Calls\051.) 216 617.33 T
2 F
(Revision 1.7) 72 593.33 T
(Jan. 12,1996) 144 593.33 T
1 F
(Review Draft. Not formally released.) 216 593.33 T
2 F
(Revision 1.8) 72 569.33 T
(Feb 7,1996) 144 569.33 T
1 F
(Included changes from Open Firmware Working Group Meeting of 01/16/96.) 216 569.33 T
0.98 (Added new section \0506.2.2\051 describing physical address formats and representa-) 216 557.33 P
(tions for CPU nodes.) 216 545.33 T
(Applied proposal 291.) 216 533.33 T
0.52 (Changed the two notes in Section 12.2 to regular text since they both contained) 216 521.33 P
(requirements.) 216 509.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(5) 72 750 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 435.49 750 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.45 (February 14, 1996 Revision 1.8) 423.49 38 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 0 1 0 0 0 K
1 12 Q
0 X
(1) 36 711 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 36 699 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 36 687 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 36 675 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 36 663 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6) 36 651 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 36 639 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 36 627 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9) 36 615 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 36 603 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(11) 36 591 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(12) 36 579 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(13) 36 567 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(14) 36 555 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(15) 36 543 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(16) 36 531 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 36 519 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(18) 36 507 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(19) 36 495 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 36 483 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 36 471 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(22) 36 459 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(23) 36 447 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 36 435 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 36 423 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 36 411 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 36 399 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 36 387 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 36 375 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 36 363 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 36 351 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(32) 36 339 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(33) 36 327 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(34) 36 315 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(35) 36 303 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(36) 36 291 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(37) 36 279 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(38) 36 267 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(39) 36 255 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(40) 36 243 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(41) 36 231 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(42) 36 219 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(43) 36 207 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(44) 36 195 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(45) 36 183 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(46) 36 171 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(47) 36 159 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(48) 36 147 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(49) 36 135 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(50) 36 123 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(51) 36 111 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(52) 36 99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(53) 36 87 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(54) 36 75 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(55) 36 63 T
0 0 0 1 0 0 0 K
27 72 54 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 18 Q
0 X
0 0 0 1 0 0 0 K
(T) 72 708 T
(able of Contents) 82.35 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(1.   Overview) 90 619 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 156 619 T
( 7) 459 619 T
(2. References and Terms) 90 605 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 210 605 T
( 7) 459 605 T
(2.1 References) 108 591 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 180 591 T
(7) 462 591 T
(2.2 Terms) 108 577 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 159 577 T
(7) 462 577 T
(3. Endian-ness Support) 90 563 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 204 563 T
( 8) 459 563 T
(3.1 Bi-Endian Booting) 108 549 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 219 549 T
(8) 462 549 T
(4. Data Formats and Representations) 90 535 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 267 535 T
( 8) 459 535 T
(5. Addressing) 90 521 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 159 521 T
( 9) 459 521 T
(5.1 PowerPC address translation model) 108 507 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . .) 297 507 T
(9) 462 507 T
(5.1.1 Translation requirements) 126 493 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 276 493 T
(9) 462 493 T
(5.1.2 HTAB translation) 126 479 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 240 479 T
(9) 462 479 T
(5.1.3 BAT translation) 126 465 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 231 465 T
(9) 462 465 T
(5.2 Open Firmware\325s use of memory) 108 451 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . .) 288 451 T
(10) 456 451 T
(5.2.1 Real-Mode) 126 437 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 207 437 T
(10) 456 437 T
(5.2.2 Virtual-Mode) 126 423 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 219 423 T
(11) 456 423 T
(5.2.3  Device Interface \050Real-Mode\051) 126 409 T
( . . . . . . . . . . . . . . . . . . . . . . . . .) 303 409 T
(11) 456 409 T
(5.2.4 Device Interface \050Virtual-Mode\051) 126 395 T
(. . . . . . . . . . . . . . . . . . . . . . . .) 312 395 T
(11) 456 395 T
(5.2.5 Client Interface \050Real-Mode\051) 126 381 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . .) 294 381 T
(11) 456 381 T
(5.2.6 Client Interface \050Virtual-Mode\051) 126 367 T
(. . . . . . . . . . . . . . . . . . . . . . . . .) 306 367 T
(11) 456 367 T
(5.2.7 User Interface \050Real-Mode\051) 126 353 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . .) 288 353 T
(12) 456 353 T
(5.2.8 User Interface \050Virtual-Mode\051) 126 339 T
(. . . . . . . . . . . . . . . . . . . . . . . . . .) 300 339 T
(12) 456 339 T
(6. Properties) 90 325 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 153 325 T
( 13) 453 325 T
(6.1 Root node properties) 108 311 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 228 311 T
(13) 456 311 T
(6.2 CPU properties) 108 297 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 201 297 T
(13) 456 297 T
(6.2.1 The Device Tree) 126 283 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 234 283 T
(13) 456 283 T
(6.2.2  Physical Address Formats and Representations for CPU Nodes) 126 269 T
(13) 458.3 269 T
(6.2.2.1 Numerical Representation) 144 255 T
( . . . . . . . . . . . . . . . . . . . . . . . .) 309 255 T
(13) 456 255 T
(6.2.2.2 Text Representation) 144 241 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 282 241 T
(14) 456 241 T
(6.2.2.3 Unit Address Representation) 144 227 T
(. . . . . . . . . . . . . . . . . . . . . .) 324 227 T
(14) 456 227 T
(6.2.3 CPUS Node Properties) 126 213 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 264 213 T
(14) 456 213 T
(6.2.4  CPU Node Properties) 126 199 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 261 199 T
(14) 456 199 T
(6.2.5 TLB properties) 126 185 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 228 185 T
(15) 456 185 T
(6.2.6 Internal \050L1\051 cache properties) 126 171 T
( . . . . . . . . . . . . . . . . . . . . . . . . . .) 297 171 T
(15) 456 171 T
(6.2.7 Memory Management Unit properties) 126 157 T
(. . . . . . . . . . . . . . . . . . . .) 336 157 T
(16) 456 157 T
(6.3 External \050L2,L3...\051 cache node properties) 108 143 T
(. . . . . . . . . . . . . . . . . . . . . .) 324 143 T
(16) 456 143 T
(7. Methods) 90 129 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 144 129 T
( 17) 453 129 T
(7.1 MMU related methods) 108 115 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 237 115 T
(17) 456 115 T
(8. Client Interface Requirements) 90 101 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 249 101 T
( 17) 453 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6) 535.5 750 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(February 14, 1996 Revision 1.8) 72 38 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 0 1 0 0 0 K
1 12 Q
0 X
(1) 27 711 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 27 699 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 27 687 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 27 675 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 27 663 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6) 27 651 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 27 639 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 27 627 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9) 27 615 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 27 603 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(11) 27 591 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(12) 27 579 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(13) 27 567 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(14) 27 555 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(15) 27 543 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(16) 27 531 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 27 519 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(18) 27 507 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(19) 27 495 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 27 483 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 27 471 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(22) 27 459 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(23) 27 447 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 27 435 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 27 423 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 27 411 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 27 399 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 27 387 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 27 375 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 27 363 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 27 351 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(32) 27 339 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(33) 27 327 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(34) 27 315 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(35) 27 303 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(36) 27 291 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(37) 27 279 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(38) 27 267 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(39) 27 255 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(40) 27 243 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(41) 27 231 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(42) 27 219 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(43) 27 207 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(44) 27 195 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(45) 27 183 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(46) 27 171 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(47) 27 159 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(48) 27 147 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(49) 27 135 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(50) 27 123 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(51) 27 111 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(52) 27 99 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(53) 27 87 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(54) 27 75 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(55) 27 63 T
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(8.1 Calling Conventions) 108 712 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 228 712 T
(17) 456 712 T
(9. Client Program Requirements) 90 698 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 246 698 T
( 18) 453 698 T
(9.1 Client Program Format) 108 684 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 240 684 T
(18) 456 684 T
(9.1.1 ELF Note Section) 126 670 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 240 670 T
(19) 456 670 T
(9.1.2  Handling ELF-format Client Programs) 126 656 T
( . . . . . . . . . . . . . . . . . .) 345 656 T
(20) 456 656 T
(9.1.2.1  Recognizing ELF-format Programs) 144 642 T
( . . . . . . . . . . . . . . . .) 357 642 T
(20) 456 642 T
(9.1.2.2  Preparing ELF-format programs for execution) 144 628 T
(. . . . . . . .) 408 628 T
(20) 456 628 T
(9.2 Load Address) 108 614 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 195 614 T
(21) 456 614 T
(9.3 Initial Program State) 108 600 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 228 600 T
(21) 456 600 T
(9.3.1 Initial Register Values) 126 586 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 261 586 T
(21) 456 586 T
(9.3.2 Initial Stack) 126 572 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 213 572 T
(22) 456 572 T
(9.3.3 Client Interface Handler Address) 126 558 T
(. . . . . . . . . . . . . . . . . . . . . . . .) 312 558 T
(22) 456 558 T
(9.3.4 Client Program Arguments) 126 544 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 285 544 T
(22) 456 544 T
(9.4 Caching) 108 530 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 168 530 T
(22) 456 530 T
(9.5 Interrupts) 108 516 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 174 516 T
(23) 456 516 T
(9.6 Client callbacks) 108 502 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 204 502 T
(23) 456 502 T
(9.6.1 Real-Mode physical memory management assist callback) 126 488 T
(. . . .) 432 488 T
(23) 456 488 T
(9.6.2 Virtual address translation assist callbacks) 126 474 T
( . . . . . . . . . . . . . . . .) 357 474 T
(23) 456 474 T
(10. User Interface Requirements) 90 460 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 246 460 T
( 24) 453 460 T
(10.1 Machine Register Access) 108 446 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 255 446 T
(24) 456 446 T
(10.1.1 Branch Unit Registers) 126 432 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 267 432 T
(24) 456 432 T
(10.1.2 Fixed-Point Registers) 126 418 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 264 418 T
(24) 456 418 T
(10.1.3 Floating-Point Registers) 126 404 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 279 404 T
(25) 456 404 T
(11. Configuration Variables) 90 390 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 225 390 T
( 25) 453 390 T
(12. MP Extensions) 90 376 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 183 376 T
( 25) 453 376 T
(12.1 The Device Tree) 108 362 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 213 362 T
(25) 456 362 T
(12.1.1 Additional Properties) 126 348 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 264 348 T
(25) 456 348 T
(12.2 Initialization) 108 334 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 195 334 T
(26) 456 334 T
(12.3  Client Interface Services) 108 320 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 255 320 T
(27) 456 320 T
(12.4 Breakpoints) 108 306 T
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 192 306 T
(28) 456 306 T
(12.5 Serialization) 108 292 T
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 195 292 T
(28) 456 292 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(7) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(1.    Overview) 72 710.67 T
1 10 Q
1 (This document speci\336es the application of) 72 693.33 P
3 F
1 (IEEE Std 1275-1994 Standar) 249.65 693.33 P
1 (d for Boot \050Initialization, Con\336guration\051) 369.22 693.33 P
1 (Firmwar) 72 681.33 P
1 (e, Cor) 107.19 681.33 P
1 (e Practices and Requir) 132.82 681.33 P
1 (ements) 227.38 681.33 P
1 F
1 ( to computer systems that use the PowerPC Instruction Set) 255.15 681.33 P
0.86 (Architecture, including instruction-set-speci\336c requirements and practices for debugging, client program interface) 72 669.33 P
1 (and data formats. An implementation of Open Firmware for PowerPC) 72 657.33 P
3 F
1 (shall) 364.46 657.33 P
1 F
1 ( implement the core requirements as) 383.91 657.33 P
1 (de\336ned in [1] and the PowerPC-speci\336c extensions described in this binding.) 72 645.33 P
1 (While this document addresses the of) 72 626.33 P
1 (\336cial PowerPC architecture [2], the name "PowerPC" only requires) 226.52 626.33 P
1 (compliance to Book I. The descriptions that follow) 72 614.33 P
1 (, and the relevant sections describing translation features for) 282.22 614.33 P
1 (this binding, assume that the system\325) 72 602.33 P
1 (s PowerPC processor\050s\051 implement the entire set of Books I-III. Some) 224.23 602.33 P
1 ("PowerPC" processors may implement dif) 72 590.33 P
1 (ferent Book II-III features; such processors may need a variant of this) 245.08 590.33 P
1 (binding describing the dif) 72 578.33 P
1 (ferences to the mapping functions, etc.) 177.87 578.33 P
1 (This document de\336nes the binding to PowerPC processors that use 32-bit addressing. Since the minimum cell) 72 559.33 P
1 (size of Open Firmware is 32 bits, only one cell is necessary to represent addresses of processor bus devices;) 72 547.33 P
1 (hence, the value of) 72 535.33 P
4 F
2.4 ("#address-cells") 154.03 535.33 P
1 F
1 ( for the root node) 250.03 535.33 P
3 F
1 (shall) 326.96 535.33 P
1 F
1 ( be 1.) 346.41 535.33 P
2 9 Q
0.9 (Note: 64-bit pr) 108 517 P
0.9 (ocessors can follow the speci\336cations contained her) 166.63 517 P
0.9 (ein as long as all) 367.35 517 P
0.8 (addr) 108 507 P
0.8 (esses r) 126.34 507 P
0.8 (elevant to Open Firmwar) 151.73 507 P
0.8 (e ar) 251.21 507 P
0.8 (e kept within the \336rst 4 GB; i.e., the upper 32 bits) 266.6 507 P
0.9 (of 64-bit addr) 108 497 P
0.9 (esses ar) 162.64 497 P
0.9 (e assumed to contain 0s.) 192.62 497 P
2 14 Q
(2.  Refer) 72 467.67 T
(ences and T) 122.67 467.67 T
(erms) 192.16 467.67 T
(2.1.  Refer) 72 435.67 T
(ences) 133.17 435.67 T
1 10 Q
1 (This standard shall be used in conjunction with the following publications. When the following standards are) 72 418.33 P
1 (superseded by an approved revision, the revision) 72 406.33 P
3 F
1 (shall) 276.74 406.33 P
1 F
1 ( apply) 296.19 406.33 P
1 (.) 321.26 406.33 P
([1]) 72 387.33 T
3 F
1 (IEEE Std 1275-1994 Standar) 90 387.33 P
1 (d for Boot \050Initialization, Con\336guration\051 Firmwar) 209.57 387.33 P
1 (e, Cor) 414.78 387.33 P
1 (e Practices and) 440.41 387.33 P
(Requir) 72 375.33 T
(ements) 98.85 375.33 T
1 F
(.) 126.62 375.33 T
([2]) 72 356.33 T
3 F
1 (PowerPC Ar) 90 356.33 P
1 (chitectur) 142.02 356.33 P
1 (e) 177.2 356.33 P
1 F
1 (, published by IBM \050Customer Reorder Number 52G7487\051.) 181.64 356.33 P
([3]) 72 337.33 T
3 F
1 (System V Application Binary Interface) 90 337.33 P
1 F
1 (, published by UNIX System Laboratories. This document describes) 247.87 337.33 P
1 (the generic architecture of the ELF \050Executable and Linking Format\051 object \336le format.) 72 325.33 P
([4]) 72 306.33 T
3 F
1 (Peering Inside the PE: A T) 90 306.33 P
1 (our of the W) 202.12 306.33 P
1 (in32 Portable Executable File Format) 254.29 306.33 P
1 F
1 (, found in the March, 1994) 411.61 306.33 P
1 (issue of) 72 294.33 P
3 F
1 (Micr) 107.33 294.33 P
1 (osoft Systems Journal) 126.4 294.33 P
1 F
1 (.) 215.62 294.33 P
([5]) 72 275.33 T
3 F
0.93 (System V Application Binary Interface, PowerPC Pr) 90 275.33 P
0.93 (ocessor Supplement) 305.46 275.33 P
1 F
0.93 (, Sunsoft. This document de\336nes the) 386.1 275.33 P
1 (PowerPC speci\336c ABI for System V and also gives details on the PowerPC ELF format.) 72 263.33 P
2 14 Q
(2.2.  T) 72 232.67 T
(erms) 108.05 232.67 T
1 10 Q
1 (This standard uses technical terms as they are de\336ned in the documents cited in \322References\323 on page) 72 215.33 P
1 (7, plus) 497.63 215.33 P
1 (the following terms:) 72 203.33 P
2 F
1 (cor) 72 184.33 P
1 (e, cor) 85.7 184.33 P
1 (e speci\336cation) 109.84 184.33 P
1 F
1 (: refers to) 170.56 184.33 P
3 F
1 (IEEE Std 1275-1994 Standar) 214.38 184.33 P
1 (d for Boot \050Initialization, Con\336guration\051) 333.95 184.33 P
1 (Firmwar) 72 172.33 P
1 (e, Cor) 107.19 172.33 P
1 (e Practices and Requir) 132.82 172.33 P
1 (ements) 227.38 172.33 P
2 F
1 (ELF) 72 153.33 P
1 F
1 (: Executable and Linking Format. A binary object \336le format de\336ned by [3][5] that is used to represent) 91.45 153.33 P
3 F
1 (client pr) 72 141.33 P
1 (ograms) 106.24 141.33 P
1 F
1 ( in Open Firmware for PowerPC.) 136.24 141.33 P
2 F
1 (linkage ar) 72 122.33 P
1 (ea) 115.88 122.33 P
1 F
1 (: An area within the stack that is reserved for saving certain registers across procedure calls in) 125.32 122.33 P
1 (PowerPC run-time models. This area is reserved by the caller and is allocated above the current stack pointer) 72 110.33 P
(\050) 72 98.33 T
5 F
(%r1) 75.33 98.33 T
1 F
(\051.) 93.33 98.33 T
52 706 54 720 R
V
52 532 54 542 R
V
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(8) 535.5 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
1 (Open Firmwar) 72 713.33 P
1 (e) 136.98 713.33 P
1 F
1 (: The \336rmware architecture de\336ned by the core speci\336cation or) 141.42 713.33 P
1 (, when used as an adjective, a) 401.9 713.33 P
1 (software component compliant with the core speci\336cation.) 72 701.33 P
2 F
1 (pr) 72 682.33 P
1 (ocedur) 81.82 682.33 P
1 (e descriptor) 111.08 682.33 P
1 F
1 (: a data structure used by some PowerPC run-time models to represent a C "pointer to) 162.9 682.33 P
1 (procedure". The \336rst word of this structure contains the actual address of the procedure.) 72 670.33 P
2 F
1 (Real-Mode) 72 651.33 P
1 F
1 (: The mode in which Open Firmware and its client are running with translation disabled; all) 119.21 651.33 P
1 (addresses passed between the client and Open Firmware are real \050i.e., hardware\051 addresses.) 72 639.33 P
2 F
1 (T) 72 620.33 P
1 (able of Contents \050T) 77.75 620.33 P
1 (OC\051) 162.51 620.33 P
1 F
1 (: A data structure used by some PowerPC run-time models that is used for access to) 180.84 620.33 P
1 (global variables and for inter) 72 608.33 P
1 (-module linkage. When a T) 191.33 608.33 P
1 (OC is used,) 304.85 608.33 P
2 F
1 (%r2) 356.74 608.33 P
1 F
1 ( contains its base address.) 376.18 608.33 P
2 F
1 (V) 72 589.33 P
1 (irtual-Mode) 78.85 589.33 P
1 F
1 (: The mode in which Open Firmware and its client share a single virtual address space, and) 130.51 589.33 P
0.85 (address translation is enabled; all addresses passed between the client and Open Firmware are virtual \050translated\051) 72 577.33 P
(addresses.) 72 565.33 T
2 14 Q
(3.  Endian-ness Support) 72 534.67 T
1 10 Q
1 (An implementation of the PowerPC Open Firmware must support both Big- and Little-Endian system) 72 517.33 P
1 (implementations. This section describes added features to the core Open Firmware architecture features to) 72 505.33 P
1 (support bi-endian booting.) 72 493.33 P
2 14 Q
(3.1.  Bi-Endian Booting) 72 462.67 T
1 10 Q
0.79 (The Con\336guration V) 72 445.33 P
0.79 (ariable) 155.79 445.33 P
5 F
1.88 (little-endian?) 186.29 445.33 P
1 F
0.79 ( must be implemented. The basic concept of bi-endian support is) 270.29 445.33 P
1 (to keep in the) 72 433.33 P
5 F
2.4 (little-endian?) 132.66 433.33 P
1 F
1 ( variable a "cached" indication of the desired endian-ness of client programs) 216.66 433.33 P
1 (\050for example operating systems or their loaders\051. This variable indicates the expected endian-mode of a boot) 72 421.33 P
1 (tar) 72 409.33 P
1 (get;) 82.37 409.33 P
5 F
2.4 (false) 100.87 409.33 P
1 F
1 ( \0500\051 indicates Big-Endian,) 130.87 409.33 P
5 F
2.4 (true) 240.69 409.33 P
1 F
1 ( \050-1\051 indicates Little-Endian; the default value of) 264.69 409.33 P
5 F
2.4 (little-) 469.32 409.33 P
2.4 (endian?) 72 397.33 P
1 F
1 ( is implementation dependent.) 114 397.33 P
1 (The client program must describe its endian-mode in the header section of its image as described in) 72 378.33 P
1 (section) 72 366.33 P
1 (9.1.1. . When Open Firmware is started, Open Firmware must use the value of) 102.83 366.33 P
5 F
2.4 (little-endian?) 432.61 366.33 P
1 F
1 ( to) 516.61 366.33 P
1 (establish the endian-mode of a system. After Open Firmware locates and loads a client program, the correct) 72 354.33 P
1 (endian-mode must be veri\336ed with the description in the header section of the client program image. If the) 72 342.33 P
1 (cached value is correct, Open Firmware proceeds, with the system in its current endian-mode.) 72 330.33 P
0.94 (If, however) 72 311.33 P
0.94 (, Open Firmware determines that the endian-mode of the client program is dif) 118.64 311.33 P
0.94 (ferent from what it had) 440.58 311.33 P
1 (assumed, it must set) 72 299.33 P
5 F
2.4 (little-endian?) 159.06 299.33 P
1 F
1 ( appropriately and recon\336gure the) 243.06 299.33 P
413.86 298.24 386.08 298.24 2 L
V
0.49 H
0 Z
N
1 (system) 386.08 299.33 P
1 ( \050hardware and \336rmware\051 for) 413.86 299.33 P
1 (the new endian-mode, possibly by resetting the system as with) 72 287.33 P
5 F
2.4 (reset-all) 334.48 287.33 P
4 F
2.4 (.) 388.48 287.33 P
2 9 Q
0.9 (Note: the endian-mode applies to the entir) 108 269 P
0.9 (e hardwar) 274.73 269 P
0.9 (e system, including the pr) 315.21 269 P
0.9 (ocessor\050s\051.) 416.9 269 P
0.9 (Open Firmwar) 108 259 P
0.9 (e) 166.48 259 P
0 F
0.9 (shall) 173.63 259 P
2 F
0.9 ( perform whatever steps ar) 191.64 259 P
0.9 (e r) 299.04 259 P
0.9 (equir) 310.02 259 P
0.9 (ed to enable the system to run in) 330.36 259 P
0.9 (the speci\336ed mode) 108 249 P
0 F
0.9 (.) 180.3 249 P
3 10 Q
0.83 (Client pr) 72 234.33 P
0.83 (ogram) 108.3 234.33 P
1 F
0.83 (s can use) 134.41 234.33 P
4 F
1.98 (setprop) 175.48 234.33 P
1 F
0.83 ( to alter the value of) 217.48 234.33 P
5 F
1.98 (little-endian?) 305.2 234.33 P
4 F
1.98 (;) 389.2 234.33 P
1 F
0.83 ( users can alter it via the) 395.2 234.33 P
5 F
1.98 (setenv) 500.67 234.33 P
1 F
1 (command from the) 72 222.33 P
3 F
1 (user interface) 153.6 222.33 P
1 F
1 ( \050if present\051. The alteration of) 209.87 222.33 P
5 F
2.4 (little-endian?) 336.67 222.33 P
3 F
1 (shall not) 424.17 222.33 P
1 F
1 ( cause the system) 459.9 222.33 P
1 (to be recon\336gured until the system is re-booted.) 72 210.33 P
2 9 Q
0.9 (Note:  this mechanism intr) 108 192 P
0.9 (oduces an extra con\336guration pass. However) 213.43 192 P
0.9 (, this occurs only) 388.59 192 P
0.9 (when switching the endian-mode fr) 108 182 P
0.9 (om that which was last used. For most boots, Open) 246.44 182 P
0.9 (Firmwar) 108 172 P
0.9 (e will be appr) 142.33 172 P
0.9 (opriately con\336gur) 197.12 172 P
0.9 (ed, so that no additional overhead will occur) 266.61 172 P
0.9 (.) 442.09 172 P
2 14 Q
(4.  Data Formats and Repr) 72 126.67 T
(esentations) 231.95 126.67 T
1 10 Q
1 (The cell size) 72 109.33 P
3 F
1 (shall) 128.04 109.33 P
1 F
1 ( be 32 bits. Number ranges for) 147.49 109.33 P
3 F
1 (n) 278.91 109.33 P
1 F
1 (,) 283.91 109.33 P
3 F
1 (u) 289.91 109.33 P
1 F
1 (, and other cell-sized items are consistent with 32-bit,) 294.91 109.33 P
1 (two's-complement number representation.) 72 97.33 P
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(9) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
1 (The required alignment for items accessed with) 72 713.33 P
3 F
1 (a-addr) 271.46 713.33 P
1 F
1 ( addresses) 298.68 713.33 P
3 F
1 (shall) 344 713.33 P
1 F
1 ( be four) 363.45 713.33 P
1 (-byte aligned \050i.e., a multiple of) 396.35 713.33 P
(4\051.) 72 701.33 T
1 (Each operation involving a) 72 682.33 P
3 F
1 (qaddr) 186.54 682.33 P
1 F
1 ( address) 210.43 682.33 P
3 F
1 (shall) 247.42 682.33 P
1 F
1 ( be performed with a single 32-bit access to the addressed) 266.87 682.33 P
1 (location; similarly) 72 670.33 P
1 (, each) 145.41 670.33 P
3 F
1 (waddr) 173.23 670.33 P
1 F
1 ( access) 198.79 670.33 P
3 F
1 (shall) 231.33 670.33 P
1 F
1 ( be performed with a single 16-bit access. This implies four) 250.78 670.33 P
1 (-byte) 498.6 670.33 P
1 (alignment for) 72 658.33 P
3 F
1 (qaddrs) 130.66 658.33 P
1 F
1 ( and two-byte alignment for) 158.44 658.33 P
3 F
1 (waddrs) 277.59 658.33 P
1 F
1 (.) 307.04 658.33 P
2 14 Q
(5.  Addr) 72 627.67 T
(essing) 121.14 627.67 T
(5.1.  PowerPC addr) 72 595.67 T
(ess translation model) 188.79 595.67 T
1 10 Q
1 (This section describes the model that is used for co-existence of Open Firmware and client programs \050i.e.,) 72 578.33 P
1 (operating systems\051 with respect to address translation.) 72 566.33 P
0.82 (The following overview of translation is provided so that the issues relevant to Open Firmware for PowerPC can) 72 547.33 P
1 (be discussed. Details that are not relevant to Open Firmware issues \050e.g., protection\051 are not described in detail;) 72 535.33 P
1 (the PowerPC architecture [2], particularly Book III, should be consulted for the details. For the scope of this) 72 523.33 P
1 (section, terms will be used as de\336ned in [2] and the 32-bit processor model is assumed.) 72 511.33 P
2 12 Q
(5.1.1.  T) 72 486 T
(ranslation r) 112.12 486 T
(equir) 172.24 486 T
(ements) 199.36 486 T
1 10 Q
2.26 (The default access mode of storage for load and stores \050i.e., with translation disabled -- referred to as) 72 469.33 P
3 F
2.26 (Real-) 518.34 469.33 P
1.23 (Mode) 72 457.33 P
1 F
1.23 (\051 within PowerPC assumes that caches are enabled \050in copy-back mode\051. In order to perform access to I/O) 94.77 457.33 P
1.23 (device registers, the access mode must be set to Cache-Inhibited, Guarded by establishing a translation with this) 72 445.33 P
1.24 (mode and enabling translation. Thus, even though most of a client program and/or Open Firmware can run with) 72 433.33 P
1 (translation disabled, it) 72 421.33 P
185.56 420.24 166.11 420.24 2 L
V
0.49 H
0 Z
N
1 (must) 166.11 421.33 P
1 ( be enabled when performing I/O.) 185.56 421.33 P
2 12 Q
(5.1.2.  HT) 72 396 T
(AB translation) 121.45 396 T
1 10 Q
1 (An Ef) 72 379.33 P
1 (fective Address \050EA\051 of the PowerPC processors is 32 bit wide. Each EA is then translated into a 52-bit) 96.98 379.33 P
0.9 (V) 72 367.33 P
0.9 (irtual Address \050V) 78.62 367.33 P
0.9 (A) 148.56 367.33 P
159.11 366.24 155.78 366.24 2 L
V
N
0.9 (\051) 155.78 367.33 P
0.9 ( by prepending a 24-bit V) 159.11 367.33 P
0.9 (irtual Segment Id \050VSID\051 to the 28 LSbs of the ef) 266.06 367.33 P
0.9 (fective address;) 473.21 367.33 P
1 (the VSID is obtained by indexing into a set of 16 Segment Registers \050SRs\051 using the 4 MSbs of the EA.) 72 355.33 P
1 (Finally) 72 343.33 P
1 (, the virtual address is translated into a Real Address \050RA\051.   This is done by mapping the V) 99.69 343.33 P
1 (irtual Page-) 484.44 343.33 P
0.88 (Number \050VPN\051 \050bits 0-39 of the V) 72 331.33 P
0.88 (A\051 into a Real Page Number \050RPN\051 and concatenating this RPN with the byte) 214.32 331.33 P
1 (of) 72 319.33 P
1 (fset \050bits 40-51 of the V) 80.15 319.33 P
1 (A\051. The mapping of VPN to RPN involves a hashing algorithm within the Hashed) 179.68 319.33 P
1 (Page T) 72 307.33 P
1 (able \050HT) 100.35 307.33 P
1 (AB\051 to locate a Page T) 136.37 307.33 P
1 (able Entry \050PTE\051 that matches the VPN and using that entry\325) 232.04 307.33 P
1 (s RPN) 484.79 307.33 P
1 (component. If a valid entry is not found, a Data Storage Interrupt \050DSI\051 or Instruction Storage Interrupt \050ISI\051 is) 72 295.33 P
1 (signalled, depending upon the source of the access.) 72 283.33 P
1 (This process is not performed for every translation! Processors will typically have a T) 72 264.33 P
1 (ranslation Look-aside) 428.2 264.33 P
1 (Buf) 72 252.33 P
1 (fer \050TLB\051 that caches the most recent translations, thus exploiting the natural spatial locality of programs to) 86.82 252.33 P
1 (reduce the overhead of address translation. On most PowerPC processors, the TLB updates are performed in) 72 240.33 P
1 (hardware. However) 72 228.33 P
1 (, the architecture allows an implementation to use a software-assisted mechanism to perform) 151.45 228.33 P
0.97 (the TLB updates. Such schemes must not af) 72 216.33 P
0.97 (fect the architected state of the processor unless the translation fails;) 254.13 216.33 P
1 (i.e., the HT) 72 204.33 P
1 (AB does not contain a valid PTE for the V) 118.47 204.33 P
1 (A and a DSI/ISI is signalled.) 296.44 204.33 P
2 9 Q
0.9 (Note: one unusual featur) 108 186 P
0.9 (e of this translation mechanism is that valid translations might) 205.79 186 P
0.9 (not be found in the HT) 108 176 P
0.9 (AB; the HT) 199.6 176 P
0.9 (AB might be too small to contain all of the curr) 245.74 176 P
0.9 (ently) 435.56 176 P
0.9 (valid translations. This intr) 108 166 P
0.9 (oduces a level of complexity in the use of addr) 215.56 166 P
0.9 (ess translation) 399.24 166 P
0.9 (by Open Firmwar) 108 156 P
0.9 (e, as discussed below) 179.14 156 P
0.9 (.) 260.85 156 P
2 12 Q
(5.1.3.  BA) 72 132 T
(T translation) 120.78 132 T
1 10 Q
0.81 (T) 72 115.33 P
0.81 (o further reduce the translation overhead for contiguous regions of virtual and real address spaces \050e.g., a frame) 77.41 115.33 P
1 (buf) 72 103.33 P
1 (fer) 85.15 103.33 P
1 (, or all of real memory\051, the Block Address T) 95.85 103.33 P
1 (ranslation \050BA) 285.3 103.33 P
1 (T\051 mechanism is also supported by PowerPC.) 344.35 103.33 P
1 (The Block Address T) 72 91.33 P
1 (ranslation involves the use of BA) 160.47 91.33 P
1 (T registers that contain a Block Ef) 297.96 91.33 P
1 (fective Page Index) 440.98 91.33 P
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(10) 531 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
1 (\050BEPI\051, a Block Length \050BL\051 speci\336er and a Block Real Page Number \050BRPN\051; the architecture de\336nes 4 BA) 72 713.33 P
1 (T) 526.71 713.33 P
1 (registers for data \050DBA) 72 701.33 P
1 (T registers\051 and 4 BA) 168.03 701.33 P
1 (T registers for instruction \050IBA) 257.57 701.33 P
1 (T registers\051) 385.44 701.33 P
1 8 Q
0.8 (1) 432.26 705.33 P
1 10 Q
1 (.) 436.26 701.33 P
1 (Block Address T) 72 682.33 P
1 (ranslation is done my matching some number of upper bits of the EA \050speci\336ed by the BL) 141.42 682.33 P
1 (value\051 against each of the BA) 72 670.33 P
1 (T registers. If a match is found, the corresponding BRPN bits replace the matched) 194.47 670.33 P
1 (bits in the EA to produce the RA.) 72 658.33 P
1 (BA) 72 639.33 P
1 (T translation takes precedence over HT) 84.78 639.33 P
1 (AB translation; i.e., if a mapping for a storage location is present in) 246.43 639.33 P
1 (both a BA) 72 627.33 P
1 (T register and the HT) 114 627.33 P
1 (AB, the Block Address T) 203.29 627.33 P
1 (ranslation will be used.) 308.32 627.33 P
2 14 Q
(5.2.  Open Firmwar) 72 596.67 T
(e\325) 189.57 596.67 T
(s use of memory) 199.93 596.67 T
1 10 Q
1 (Open Firmware shall use the memory resources within the space indicated by the) 72 579.33 P
5 F
2.4 (real-base, real-) 412.44 579.33 P
2.4 (size, virt-base) 72 567.33 P
4 F
2.4 (and) 172.8 567.33 P
5 F
2.4 ( virt-size) 190.8 567.33 P
1 F
1 ( Con\336guration V) 253.2 567.33 P
1 (ariables de\336ned for PowerPC. As described in) 321.87 567.33 P
1 (section) 72 555.33 P
1 (9.1.1. , a mechanism is de\336ned to enable Open Firmware to determine if its current con\336guration is) 102.83 555.33 P
1 (consistent with the requirements of the client.) 72 543.33 P
0.87 (When a client program is loaded and the header of the client has either the) 72 524.33 P
5 F
2.08 (real-base) 384.65 524.33 P
1 F
0.87 ( or) 438.65 524.33 P
5 F
2.08 (virt-base) 453.72 524.33 P
1 F
0.87 ( values) 507.72 524.33 P
1 (equal to -1, \336rmware may choose its base locations. If the values in the header of the client con\337ict with the) 72 512.33 P
1 (current values of the con\336guration variables then \336rmware shall set the con\336gurations variables to those found) 72 500.33 P
1 (in the client\325) 72 488.33 P
1 (s header and restart itself.) 124 488.33 P
1 (If a client does not provide enough real or virtual memory for \336rmware then the \336rmware should not boot the) 72 469.33 P
1 (client and the condition should be reported to the user) 72 457.33 P
1 (.) 295.7 457.33 P
1 (A PowerPC Open Firmware binding) 72 438.33 P
3 F
1 (shall) 225.6 438.33 P
1 F
1 ( support two dif) 245.05 438.33 P
1 (ferent addressing models, depending upon the setting) 311.48 438.33 P
1 (of the) 72 426.33 P
5 F
2.4 (real-mode?) 99.55 426.33 P
1 F
1 ( Con\336guration V) 159.55 426.33 P
1 (ariable. This variable indicates the Open Firmware addressing mode that a) 228.22 426.33 P
1 (client program expects;) 72 414.33 P
5 F
2.4 (false) 171.37 414.33 P
1 F
1 ( \0500\051 indicates V) 201.37 414.33 P
1 (irtual-Mode,) 265.7 414.33 P
5 F
2.4 (true) 319.47 414.33 P
1 F
1 ( \050-1\051 indicates Real-Mode; the default value of) 343.47 414.33 P
5 F
2.4 (real-mode?) 72 402.33 P
1 F
1 ( is implementation dependent.) 132 402.33 P
1.19 (The management of) 72 383.33 P
5 F
2.87 (real-mode?) 158.06 383.33 P
1 F
1.19 ( is analogous to) 218.06 383.33 P
5 F
2.87 (little-endian?) 287.84 383.33 P
1 F
1.19 (. Open Firmware determines its address-) 371.84 383.33 P
1.63 (ing mode using the value of) 72 371.33 P
5 F
3.92 (real-mode?) 195.69 371.33 P
1 F
1.63 (. If the current state of) 255.69 371.33 P
5 F
3.92 (real-mode?) 356.86 371.33 P
1 F
1.63 ( \050and hence, the current state) 416.86 371.33 P
1.74 (of Open Firmware\051 is incorrect, it) 72 359.33 P
3 F
1.74 (shall) 219.91 359.33 P
1 F
1.74 ( set) 239.36 359.33 P
5 F
4.18 (real-mode?) 258.95 359.33 P
1 F
1.74 ( appropriately and reset itself, possibly by executing) 318.95 359.33 P
5 F
(reset-all) 72 347.33 T
1 F
(.) 126 347.33 T
1 (Memory that cannot be allocated for general purpose use, for example physical memory on PowerPC systems) 72 330.33 P
1 (used for interrupt vectors, shall not appear in the "available" property of the memory node. A Client Program) 72 318.33 P
1 (that needs to use such memory for its architected purpose must not claim that area prior to use.) 72 306.33 P
1 (In the following two sections, some of conventions in Real-Mode and V) 72 287.33 P
1 (irtual-Mode address translations are) 371.26 287.33 P
1 (described. Remaining sections describe the assumptions that Open Firmware makes about the state and control) 72 275.33 P
1 (of the system in regard to Open Firmware\325) 72 263.33 P
1 (s use of system resources for three Open Firmware interfaces \050e.g.) 249.25 263.33 P
1 (Device, User and Client interfaces\051.) 72 251.33 P
2 12 Q
(5.2.1.  Real-Mode) 72 226 T
1 10 Q
1.96 (When) 72 209.33 P
5 F
4.69 (real-mode?) 100.33 209.33 P
1 F
1.96 ( is) 160.34 209.33 P
5 F
4.69 (true) 175.91 209.33 P
1 F
1.96 (, Open Firmware must con\336gure its address translation to run in Real-Mode. In) 199.91 209.33 P
1.87 (Real-Mode, the use of address translations by Open Firmware and its clients are considered independent; they) 72 197.33 P
1.35 (do not share any translations. All interfaces between the two must pass addresses with the RA of the data. Any) 72 185.33 P
1.64 (data structure shared by Open Firmware and its clients that refer to) 72 173.33 P
3 F
1.64 (virt) 361.6 173.33 P
1 F
1.64 ( addresses in [1], or this binding, must) 375.48 173.33 P
1 (be RAs \050i.e., hardware addresses\051.) 72 161.33 P
2 9 Q
0.9 (Note: in particular) 108 143 P
0.9 (, that the addr) 180.96 143 P
0.9 (ess of the Client interface handler) 238.5 143 P
0.9 (, that is passed to the) 371.4 143 P
0.9 (client, has to be a RA.) 108 133 P
72 86 540 116 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 94 351 94 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
1 8 Q
0 X
0 0 0 1 0 0 0 K
(1) 108 83.33 T
1 10 Q
(The 601 has a single set of BA) 114 79.33 T
(T registers that are shared by both instruction and data accesses.) 235.93 79.33 T
52 576 54 586 R
V
52 509 54 519 R
V
52 327 54 337 R
V
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(11) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
1 (The Con\336guration V) 72 713.33 P
1 (ariables) 156.22 713.33 P
5 F
2.4 (real-base) 190.82 713.33 P
1 F
1 ( and) 244.82 713.33 P
5 F
2.4 (real-size) 266.26 713.33 P
1 F
1 ( should indicate the physical memory base and size) 320.26 713.33 P
0.96 (in which Open Firmware must locate itself.   The Con\336guration V) 72 701.33 P
0.96 (ariables) 345.89 701.33 P
5 F
2.31 (virt-base) 380.46 701.33 P
4 F
2.31 (and) 442.77 701.33 P
5 F
2.31 ( virt-size) 460.77 701.33 P
1 F
0.96 ( do) 523.08 701.33 P
1 (not have meaning and should be set to -1.) 72 689.33 P
2 12 Q
(5.2.2.  V) 72 645 T
(irtual-Mode) 113.22 645 T
1 10 Q
1.56 (When) 72 628.33 P
5 F
3.75 (real-mode?) 99.94 628.33 P
1 F
1.56 ( is) 159.94 628.33 P
5 F
3.75 (false) 174.74 628.33 P
1 F
1.56 (, Open Firmware) 204.74 628.33 P
3 F
1.56 (shall) 279.97 628.33 P
1 F
1.56 ( con\336gure itself to run in) 299.42 628.33 P
3 F
1.56 (V) 410.45 628.33 P
1.56 (irtual-Mode) 415.82 628.33 P
1 F
1.56 (. In V) 464.15 628.33 P
1.56 (irtual-Mode,) 489.73 628.33 P
1.26 (Open Firmware and its client will share a single virtual address space. This binding provides interfaces to allow) 72 616.33 P
1 (Open Firmware and its client to ensure that this single virtual address model can be maintained.) 72 604.33 P
1 (The Con\336guration V) 72 587.33 P
1 (ariables) 156.22 587.33 P
5 F
2.4 (virt-base) 190.82 587.33 P
4 F
2.4 (and) 253.22 587.33 P
5 F
2.4 ( virt-size) 271.22 587.33 P
1 F
1 ( should indicate the virtual address space base) 333.62 587.33 P
1 (address and size that Open Firmware should use. The Con\336guration V) 72 575.33 P
1 (ariables) 362.24 575.33 P
5 F
2.4 (real-base) 396.84 575.33 P
1 F
1 ( and) 450.84 575.33 P
5 F
2.4 (real-size) 472.28 575.33 P
1 F
1 (should indicate the physical memory base and size in which Open Firmware must locate itself.) 72 563.33 P
2 12 Q
(5.2.3.   Device Interface \050Real-Mode\051) 72 538 T
1 10 Q
1 (While Open Firmware is performing system initialization and probing functions, it establishes and maintains its) 72 521.33 P
1 (own translations. In particular) 72 509.33 P
1 (, it maintains its own HT) 194.58 509.33 P
1 (AB \050and/or BA) 298.23 509.33 P
1 (T registers\051 and handles any DSI/ISI) 360.78 509.33 P
1 (interrupts itself.) 72 497.33 P
2 9 Q
0.9 (Note: in Real-Mode, all translations will be) 108 479 P
0 F
0.9 (virt=real) 281.3 479 P
2 F
0.9 (; the primary r) 313.42 479 P
0.9 (eason for translation is) 373.7 479 P
0.9 (to allow appr) 108 469 P
0.9 (opriate I/O accesses.) 160.64 469 P
2 12 Q
(5.2.4.  Device Interface \050V) 72 445 T
(irtual-Mode\051) 203.84 445 T
1 10 Q
1.59 (Open Firmware will establish its own translation environment, handling DSI/ISI interrupts as in the Real-Mode) 72 428.33 P
1.85 (case. However) 72 416.33 P
1.85 (, this environment will, in general, contain translations where the virtual address is not equal to) 132.31 416.33 P
1 (the real address. The virtual address space used by Open Firmware must be compatible with its client.) 72 404.33 P
2 9 Q
0.9 (Note: Since these virtual addr) 108 386 P
0.9 (esses will be used by the Client and/or User Interfaces \050e.g.,) 225.93 386 P
0.9 (for pointers to its code, device-tr) 108 376 P
0.9 (ee, etc.\051, their translations must be pr) 236.81 376 P
0.9 (eserved until the) 385.27 376 P
0.9 (target OS decides that it no longer r) 108 366 P
0.9 (equir) 251.87 366 P
0.9 (es the services of Open Firmwar) 272.21 366 P
0.9 (e.) 400.27 366 P
2 12 Q
(5.2.5.  Client Interface \050Real-Mode\051) 72 342 T
1 10 Q
1.47 (In Real-Mode, addresses of client data are real.; the client must ensure that all data areas referred to across the) 72 325.33 P
1.25 (Client Interface are valid real addresses. This may require moving data to meet any requirements for contiguous) 72 313.33 P
2.77 (storage areas \050e.g., for) 72 301.33 P
5 F
6.64 (read/write) 174.42 301.33 P
1 F
2.77 ( calls\051. T) 234.42 301.33 P
2.77 (ranslation) 274.87 301.33 P
3 F
2.77 (shall) 319.58 301.33 P
1 F
2.77 ( be disabled before the client interface call is) 339.03 301.33 P
(made.) 72 289.33 T
1 (Open Firmware will typically have to maintain its translations in order to perform I/O. Since the client may be) 72 272.33 P
1 (running with translation enabled \050except for the Client interface call\051, Open Firmware) 72 260.33 P
3 F
1 (shall) 429.76 260.33 P
1 F
1 ( save the state of all) 449.21 260.33 P
1 (relevant translation resources \050e.g., SDR1, BA) 72 248.33 P
1 (T) 261.69 248.33 P
1 (s\051 and restore them before returning to the client. Likewise, it) 267.1 248.33 P
3 F
0.96 (may) 72 236.33 P
1 F
0.96 ( take over the DSI/ISI interrupts for its own use \050e.g., for doing "lazy" allocation of BA) 88.66 236.33 P
0.96 (T) 451.87 236.33 P
0.96 (s\051; it) 457.28 236.33 P
3 F
0.96 (shall) 479.76 236.33 P
1 F
0.96 ( preserve) 499.21 236.33 P
1 (the state of any interrupt vectors for its client.) 72 224.33 P
1 (Since the state of the address translation system is not predictable to any interrupts, the client) 72 205.33 P
3 F
1 (shall) 462.68 205.33 P
1 F
1 ( ensure that) 482.13 205.33 P
1 (interrupts are disabled before calling the Client Interface handler) 72 193.33 P
1 (.) 338.27 193.33 P
1 (Once a client program starts execution, physical memory shall be managed by the client program. Since Open) 72 174.33 P
1 (Firmware does not know which physical memory locations the client program is using, Open Firmware shall) 72 162.33 P
1 (request physical memory) 72 150.33 P
1 (, if needed, from the client program \050using) 173.89 150.33 P
2 F
1 (alloc-r) 354.08 150.33 P
1 (eal-mem) 381.67 150.33 P
1 F
1 (\051.) 418.32 150.33 P
1 (In Real-Mode,) 72 131.33 P
2 F
1 (claim) 134.82 131.33 P
1 F
1 ( methods) 158.15 131.33 P
3 F
1 (shall) 199.04 131.33 P
1 F
1 ( not allocate more pages than are necessary to satisfy the request.) 218.49 131.33 P
2 12 Q
(5.2.6.  Client Interface \050V) 72 106 T
(irtual-Mode\051) 201.19 106 T
1 10 Q
1 (Client interface calls are essentially "subroutine" calls to Open Firmware. Hence, the client interface executes in) 72 89.33 P
1 (the environment of its client, including any translations that the OS has established. E.g., addresses passed in to) 72 77.33 P
52 401 54 423 R
V
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(12) 531 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
1 (the client interface are assumed to be valid virtual addresses within the scope of the OS. Any DSI/ISI interrupts) 72 713.33 P
1 (are either invalid addresses or caused by HT) 72 701.33 P
1 (AB "spills". In either case, the OS has the responsibility for the) 255.65 701.33 P
1 (handling of such exceptions.) 72 689.33 P
2 9 Q
0.9 (Note: addr) 108 671 P
0.9 (esses that the Open Firmwar) 150.48 671 P
0.9 (e internal use will be those that wer) 264.4 671 P
0.9 (e established) 406.28 671 P
0.9 (by the Device interface \050or) 108 661 P
0.9 (, by subsequent actions of the Client or User interface\051. Thus,) 212.24 661 P
0.9 (the client must pr) 108 651 P
0.9 (eserve these Open Firmwar) 178.28 651 P
0.9 (e translations if it takes over the virtual) 286.54 651 P
0.9 (memory management function.) 108 641 P
1 10 Q
0.94 (In addition to using existing translations, the Client Interface might require the establishment of new translations) 72 626.33 P
1 (\050e.g., due to) 72 614.33 P
5 F
2.4 (map-in) 124.99 614.33 P
1 F
1 ( calls during) 160.99 614.33 P
5 F
2.4 (open) 215.93 614.33 P
1 F
1 ( time\051, or the removal of old translations \050e.g., during) 239.93 614.33 P
5 F
2.4 (map-out) 465.46 614.33 P
1 F
1 ( calls) 507.46 614.33 P
1 (during) 72 602.33 P
5 F
2.4 (close) 101.61 602.33 P
1 F
1 ( time\051. Since this requires altering the Client\325) 131.61 602.33 P
1 (s translation resources \050e.g., HT) 318.6 602.33 P
1 (AB\051, possibly) 449.27 602.33 P
1 (handling spill conditions, Open Firmware can not know how to perform these updates to the HT) 72 590.33 P
1 (AB.) 471.16 590.33 P
1 (Hence, there) 72 571.33 P
3 F
1 (shall) 127.03 571.33 P
1 F
1 ( be) 146.48 571.33 P
4 F
2.4 (callback) 162.92 571.33 P
1 F
1 ( services provided by the client for use by Open Firmware for such actions;) 210.92 571.33 P
1 (see section) 72 559.33 P
1 (9.6.2.) 119.1 559.33 P
1 (In order to let clients \050i.e., tar) 72 540.33 P
1 (get operating systems\051 know where Open Firmware lives in the address space, the) 194.74 540.33 P
1 (following rules) 72 528.33 P
3 F
1 (shall) 137.33 528.33 P
1 F
1 ( be followed by an Open Firmware implementation for PowerPC and by client programs.) 156.78 528.33 P
1 (Open Firmware:) 72 509.33 P
5 11 Q
(\245) 108 490.33 T
1 10 Q
(Open Firmware) 114.6 490.33 T
3 F
(shall) 180.14 490.33 T
1 F
( maintain its "translations" "mmu"-node property \050see section) 199.59 490.33 T
(6.2.7. \051) 448.11 490.33 T
5 11 Q
(\245) 108 475.33 T
1 10 Q
(Open Firmware\325) 114.6 475.33 T
(s) 180.42 475.33 T
2 F
(claim) 186.81 475.33 T
1 F
( methods) 210.14 475.33 T
3 F
(shall) 249.03 475.33 T
1 F
(not allocate more pages than are necessary to satisfy the) 270.98 475.33 T
(request.) 117 463.33 T
5 11 Q
-0.81 (\245) 108 448.33 P
1 10 Q
-0.31 (When a client executes) 114.6 448.33 P
2 F
-0.31 (set-callback) 208.34 448.33 P
1 F
-0.31 (, Open Firmware) 258.89 448.33 P
3 F
-0.31 (shall) 328.52 448.33 P
1 F
-0.31 ( attempt to invoke the "translate" callback.) 347.96 448.33 P
(If the translate callback is implemented, Open Firmware) 117 436.33 T
3 F
(shall) 345.01 436.33 T
1 F
( cease use of address translation hard-) 364.46 436.33 T
(ware, instead using the client callbacks for changes to address translation.) 117 424.33 T
1 (The) 117 409.33 P
2 F
1 (exit) 136.05 409.33 P
1 F
1 ( service must continue to work after a) 151.6 409.33 P
2 F
1 (set-callback) 312.9 409.33 P
1 F
1 ( that takes over address translation. This) 363.45 409.33 P
1 (implies that Open Firmware takes responsibility for address translation hardware upon) 117 397.33 P
2 F
1 (exit) 476.56 397.33 P
1 F
1 ( and must) 492.11 397.33 P
1 (maintain internal information about translations that it requests of the client.) 117 385.33 P
1 (Client Programs:) 72 366.33 P
5 11 Q
-0.92 (\245) 108 347.33 P
1 10 Q
-0.35 (Client programs that take control of the management of address translation hardware and expect to be) 114.6 347.33 P
(able to subsequently invoke Open Firmware client services must provide callbacks to assist Open) 117 335.33 T
(Firmware in address translation \050see section) 117 323.33 T
(9.6.2. \051.) 295.3 323.33 T
5 11 Q
(\245) 108 308.33 T
1 10 Q
(A client program shall not directly manipulate any address translation hardware before it either a\051) 114.6 308.33 T
(ceases to invoke OF client services or b\051 issues a) 117 296.33 T
2 F
(set-callback) 314.74 296.33 T
1 F
(to install the "translate" callback.) 367.79 296.33 T
2 9 Q
0.9 (Note: The intended sequence is that a client pr) 108 278 P
0.9 (ogram will \336rst issue a set-callback and) 293.03 278 P
0.9 (then take contr) 108 268 P
0.9 (ol of addr) 168.13 268 P
0.9 (ess translation hardwar) 207.27 268 P
0.9 (e. Addr) 299.91 268 P
0.9 (ess translation hardwar) 329.64 268 P
0.9 (e includes) 422.28 268 P
0.9 (BA) 108 258 P
0.9 (T r) 119.83 258 P
0.9 (egisters, page table, segment r) 132.82 258 P
0.9 (egisters, Machine State Register and the interrupt vec-) 251.24 258 P
0.9 (tors r) 108 248 P
0.9 (elating to translation faults.) 129.98 248 P
2 12 Q
(5.2.7.  User Interface \050Real-Mode\051) 72 224 T
1 10 Q
1.29 (In Real-Mode, Open Firmware regains total control of the system. As with the Client interface in Real-Mode, it) 72 207.33 P
3 F
1.89 (shall) 72 195.33 P
1 F
1.89 ( save the state of the translation resources \050including interrupt vectors\051 upon entry and) 91.45 195.33 P
3 F
1.89 (shall) 464.55 195.33 P
1 F
1.89 ( restore them) 484 195.33 P
1 (upon exit.) 72 183.33 P
2 12 Q
(5.2.8.  User Interface \050V) 72 158 T
(irtual-Mode\051) 193.85 158 T
1 10 Q
1 (When the User interface is invoked, Open Firmware is responsible for managing the machine. Therefore, it will) 72 141.33 P
1 (take over control of any relevant interrupt vectors for its own handling. In particular) 72 129.33 P
1 (, it will take over DSI/ISI) 420.64 129.33 P
1 (handling in order to report errors to the user for bad addresses, protection violations, etc. However) 72 117.33 P
1 (, as described) 479.85 117.33 P
1 (above, one source of DSI/ISI may simply be HT) 72 105.33 P
1 (AB spills. As with the case of) 272.78 105.33 P
5 F
2.4 (map-in) 401.44 105.33 P
1 F
1 ( and) 437.44 105.33 P
5 F
2.4 (map-out) 458.88 105.33 P
1 F
1 ( calls,) 500.88 105.33 P
1 (the User interface can not know how to handle such spill conditions, itself, or even if this is, in fact, a spill) 72 93.33 P
1 (versus a bad address.) 72 81.33 P
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(13) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
1 (Hence, there) 72 713.33 P
3 F
1 (shall) 127.03 713.33 P
1 F
1 ( be a) 146.48 713.33 P
4 F
2.4 (callback) 170.86 713.33 P
1 F
1 ( service provided by the client for use by Open Firmware to resolve such) 218.86 713.33 P
1 (translations; see section) 72 701.33 P
1 (9.6.2.) 171.49 701.33 P
199.99 700.24 197.49 700.24 2 L
V
0.49 H
0 Z
N
1 (.) 197.49 701.33 P
2 14 Q
(6.  Pr) 72 670.67 T
(operties) 104.02 670.67 T
1 10 Q
1 (This section describes the standard properties of a PowerPC Open Firmware implementation.) 72 653.33 P
2 14 Q
(6.1.  Root node pr) 72 622.67 T
(operties) 178.3 622.67 T
1 10 Q
1 (The following properties of the root node \050) 72 605.33 P
4 F
2.4 ("/") 250.36 605.33 P
1 F
1 (\051 shall be created by an Open Firmware implementation.) 268.36 605.33 P
2 9 Q
0.9 (Note: Note that the r) 108 587 P
0.9 (oot node typically corr) 190.91 587 P
0.9 (esponds to the common pr) 280.19 587 P
0.9 (ocessor bus in a) 384.62 587 P
0.9 (PowerPC system.) 108 577 P
5 10 Q
("#address-cells") 72 562.33 T
1 F
1 (Standard property) 90 547.33 P
1 (, encoded as with) 162.28 547.33 P
5 F
2.4 (encode-int) 238.21 547.33 P
1 F
1 (, that speci\336es the number of cells required to represent) 298.21 547.33 P
1 (physical addresses on the processor bus; the value of) 90 537.33 P
4 F
2.4 ("#address-cells") 312.57 537.33 P
1 F
1 ( for the processor bus) 408.57 537.33 P
3 F
1 (shall) 502.16 537.33 P
1 F
1 ( be) 521.61 537.33 P
4 F
(1) 90 527.33 T
1 F
(.) 96 527.33 T
5 F
("clock-frequency") 72 509.33 T
1 F
1 (Standard property) 90 494.33 P
1 (, encoded as with) 162.28 494.33 P
5 F
2.4 (encode-int) 238.21 494.33 P
1 F
1 (, that represents the primary system bus speed \050in hertz\051.) 298.21 494.33 P
5 F
("system-id") 72 476.33 T
1 F
1 (Standard property) 90 461.33 P
1 (, encoded as with encode-string, that contains the identi\336cation of the computer system.) 162.28 461.33 P
1 (This string shall be unique across all systems and all manufacturers. If the system-id begins with "0", it) 90 451.33 P
1 (shall be of the form "0nnnnnnmmmmmm" where nnnnnn is a sequence of 6 uppercase hexadecimal digits) 90 441.33 P
1 (representing a 24-bit Or) 90 431.33 P
1 (ganizationally Unique Identi\336er \050OUI\051 assigned by the IEEE Registration Authority) 188.63 431.33 P
1 (Committee, and mmmmmm is a sequence of 6 uppercase hexadecimal digits representing a 24-bit binary) 90 421.33 P
1 (number assigned by the manufacturer to assure uniqueness.) 90 411.33 P
1 (Note: For systems with built-in ethernet or other IEEE 802-style interfaces, the 6-byte MAC address) 90 393.33 P
1 (assigned to that interface meets the requirements and should be used as the system-id.) 90 383.33 P
2 14 Q
(6.2.  CPU pr) 72 354.67 T
(operties) 146.02 354.67 T
2 12 Q
(6.2.1.  The Device T) 72 328 T
(r) 172.1 328 T
(ee) 177.22 328 T
1 10 Q
0.97 (Open Firmware requires that the multiple instances of any device that appears more than once in the device tree) 72 311.33 P
1 (must be distinguishable by means of their \322reg\323 properties. The \322reg\323 property must express the \322address\323 of) 72 299.33 P
1 (each node relative to its parent \322bus\323. Furthermore, the core speci\336cation says that the root node of the device) 72 287.33 P
0.91 (tree usually represents the \322main physical bus\323 of the system. Thus, if processors are not directly addressable on) 72 275.33 P
1 (the main physical bus, as is expected to be the case on many/most PowerPC-based systems, the CPU nodes on) 72 263.33 P
0.91 (such systems may not be children of the root node but must instead be children of a pseudo-device node. In this) 72 251.33 P
1 (case, the name of the pseudo-device node, which will usually be a child of the root node, shall be \322cpus\323.) 72 239.33 P
1 (The \322cpus\323 node shall have one child node of device-type \322cpu\323 for each processor) 72 220.33 P
1 (.) 417.4 220.33 P
2 12 Q
(6.2.2.   Physical Addr) 72 195 T
(ess Formats and Repr) 180.79 195 T
(esentations for CPU Nodes) 292.9 195 T
(6.2.2.1.  Numerical Repr) 72 169 T
(esentation) 196.76 169 T
1 10 Q
1 (The numerical representation of a processor) 72 152.33 P
1 (\325) 253.15 152.33 P
1 (s "address" in a PowerPC system shall consist of one cell, encoded) 255.93 152.33 P
1 (as follows \050Bit# 0 refers to the least signi\336cant bit\051:) 72 140.33 P
4 F
(Bit#) 198 121.33 T
(33222222 22221111 11111100 00000000) 225 121.33 T
(10987654 32109876 54321098 76543210) 225 110.33 T
(phys.lo cell:) 117 88.33 T
(00000000 00000000 00000000 pppppppp) 225 88.33 T
52 74 54 227 R
V
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(14) 531 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(where:) 90 713.33 T
4 F
(pppppppp) 117 694.33 T
-0.86 (is an 8-bit integer representing the interprocessor inter-) 198 694.33 P
(rupt identifier used by the platform.) 198 683.33 T
2 12 Q
(6.2.2.2.  T) 72 649 T
(ext Repr) 120.9 649 T
(esentation) 165 649 T
1 10 Q
1 (The text representation of a processor) 72 632.33 P
1 (\325) 228.16 632.33 P
1 (s "address" shall be an ASCII hexadecimal number in the range) 230.94 632.33 P
4 F
2.4 (0...FF) 498.66 632.33 P
1 F
1 (.) 533.86 632.33 P
1 (Conversion of the hexadecimal number from text representation to numeric representation shall be case) 72 613.33 P
1 (insensitive, and leading zeros shall be permitted but not required.) 72 601.33 P
0.92 (Conversion from numeric representation to text representation shall use the lower case forms of the hexadecimal) 72 582.33 P
1 (digits in the range) 72 570.33 P
4 F
2.4 (a..f) 150.44 570.33 P
1 F
1 (, suppressing leading zeros.) 174.44 570.33 P
2 12 Q
(6.2.2.3.  Unit Addr) 72 545 T
(ess Repr) 166.79 545 T
(esentation) 210.23 545 T
1 10 Q
1 (A processor) 72 528.33 P
1 (\325) 121.41 528.33 P
1 (s "unit-number" \050i.e. the \336rst component of its ") 124.19 528.33 P
5 F
2.4 (reg) 323.31 528.33 P
1 F
1 (" value\051 is the interprocessor interrupt) 341.31 528.33 P
1 (destination identi\336er used by the platform. For a uni-processor platform, the "unit-number" shall be zero.) 72 516.33 P
2 12 Q
(6.2.3.  CPUS Node Pr) 72 491 T
(operties) 181.44 491 T
1 10 Q
1 (The following properties shall be created within the "cpus" node.) 72 474.33 P
5 F
("#address-cells") 72 457.33 T
1 F
1 (Standard) 90 442.33 P
3 F
1 (pr) 129.05 442.33 P
1 (op-name) 137.57 442.33 P
1 F
1 ( to de\336ne the number of cells required to represent the physical addresses for the "cpu") 172.56 442.33 P
1 (nodes \050i.e., the children of the "cpus" node\051.) 90 432.33 P
3 F
1 (pr) 90 414.33 P
1 (op-encoded-array) 98.52 414.33 P
1 F
1 (: Integer constant 1, encoded as with) 170.72 414.33 P
5 F
2.4 (encode-int) 326.58 414.33 P
1 F
1 (.) 386.58 414.33 P
1 (   The value of) 90 396.33 P
4 F
2.4 ("#address-cells") 156.54 396.33 P
1 F
1 ( for the "cpus" node) 252.54 396.33 P
3 F
1 (shall) 339.85 396.33 P
1 F
1 ( be) 359.3 396.33 P
4 F
2.4 (1) 375.74 396.33 P
1 F
1 (.) 381.74 396.33 P
5 F
("#size-cells") 72 378.33 T
1 F
1 (Standard) 90 363.33 P
3 F
1 (pr) 129.05 363.33 P
1 (op-name) 137.57 363.33 P
1 F
1 (to de\336ne the number of cells necessary to represent the length of a physical address) 176.06 363.33 P
(range.) 90 353.33 T
3 F
1 (pr) 90 335.33 P
1 (op-encoded-array) 98.52 335.33 P
1 F
1 (: Integer constant 0, encoded as with) 170.72 335.33 P
2 F
1 (encode-int.) 326.58 335.33 P
1 F
1 (The value of "#size-cells" for the "cpus" pseudo-device node is 0 because the processors that are) 90 317.33 P
1 (represented by the cpu nodes do not consume any physical address space.) 90 307.33 P
2 12 Q
(6.2.4.   CPU Node Pr) 72 284 T
(operties) 177.77 284 T
1 10 Q
1 (For each CPU in the system, a cpu-node) 72 267.33 P
3 F
1 (shall) 243.59 267.33 P
1 F
1 ( be de\336ned as a child of) 263.04 267.33 P
4 F
2.4 ("cpus") 367.52 267.33 P
1 F
1 ( The following properties apply) 403.52 267.33 P
1 (to each of these nodes.) 72 255.33 P
5 F
("name") 72 236.33 T
1 F
1 (Open Firmware standard property) 90 221.33 P
1 (. The value of the is property shall be of the form: "PowerPC,XXX",) 228.15 221.33 P
1 (where XXX is 601, 603, 604 etc.) 90 211.33 P
5 F
2.4 ("device_type") 72 193.33 P
1 F
1 (Open Firmware standard property) 90 178.33 P
1 (. The value of this property for CPU nodes) 228.15 178.33 P
3 F
1 (shall) 410.46 178.33 P
1 F
1 ( be) 429.91 178.33 P
4 F
2.4 ("cpu") 446.35 178.33 P
1 F
1 (.) 476.35 178.33 P
5 F
("reg") 72 160.33 T
1 F
1 (Standard) 90 145.33 P
3 F
1 (pr) 129.05 145.33 P
1 (op-name) 137.57 145.33 P
1 F
1 (to de\336ne a cpu node\325) 176.06 145.33 P
1 (s unit-address.) 263.38 145.33 P
3 F
1 (pr) 90 127.33 P
1 (op-encoded-array) 98.52 127.33 P
1 F
1 (: an integer encoded as with) 170.72 127.33 P
2 F
1 (encode-int) 291.14 127.33 P
1 F
1 (.) 335.58 127.33 P
1 (For a cpu node, the \336rst and only value of the "reg" property shall be the inter) 90 109.33 P
1 (-processor interrupt number) 416.41 109.33 P
1 (assigned to the processor represented by the node. For a uni-processor platform, the value of the "reg") 90 99.33 P
1 (property shall be zero.) 90 89.33 P
52 471 54 720 R
V
52 393 54 403 R
V
52 360 54 370 R
V
52 86 54 134 R
V
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(15) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
5 10 Q
0 X
0 0 0 1 0 0 0 K
2.4 ( "cpu-version") 72 713.33 P
1 F
0.86 (Standard property) 90 698.33 P
0.86 (, encoded as with) 162.14 698.33 P
5 F
2.07 (encode-int) 237.52 698.33 P
1 F
0.86 (, that represents the processor type. This value is obtained) 297.52 698.33 P
1 (by reading the Processor V) 90 688.33 P
1 (ersion Register of the CPU.) 201.2 688.33 P
5 F
("clock-frequency") 72 670.33 T
1 F
1 (Standard property) 90 655.33 P
1 (, encoded as with) 162.28 655.33 P
5 F
2.4 (encode-int) 238.21 655.33 P
1 F
1 (, that represents the internal processor speed \050in hertz\051 of) 298.21 655.33 P
1 (this node.) 90 645.33 P
5 F
("timebase-frequency") 72 627.33 T
1 F
1 (Standard property) 90 612.33 P
1 (, encoded as with) 162.28 612.33 P
5 F
2.4 (encode-int) 238.21 612.33 P
1 F
1 (, that represents the rate \050in hertz\051 at which the PowerPC) 298.21 612.33 P
1 (T) 90 602.33 P
1 (imeBase and Decrementer registers increment.) 95.76 602.33 P
1 (Note: The 601 PowerPC does not have a timebase frequency) 90 584.33 P
1 (, therefore on a 601 PowerPC the value) 341.36 584.33 P
1 (reported in this property shall be 1 billion which represents the logical rate of the real time clock.) 90 574.33 P
5 F
("64-bit") 72 556.33 T
3 F
1 (pr) 90 541.33 P
1 (op-encoded-array) 98.52 541.33 P
1 F
1 (: <none>) 170.72 541.33 P
1 (This property) 90 523.33 P
1 (, if present, indicates that the PowerPC microprocessor de\336ned by this CPU node is a 64-bit) 144.51 523.33 P
1 (implementation of the PowerPC architecture. The absence of this property indicates that the microprocessor) 90 513.33 P
1 (de\336ned by this CPU node is a 32 bit implementation of the PowerPC architecture) 90 503.33 P
5 F
("603-translation") 72 485.33 T
3 F
1 (pr) 90 470.33 P
1 (op-encoded-array) 98.52 470.33 P
1 F
1 (: <none>) 170.72 470.33 P
1 (This property) 90 452.33 P
1 (, if present, indicates that the PowerPC microprocessor de\336ned by this CPU node uses the) 144.51 452.33 P
1 (PowerPC 603 de\336ned mechanism to update its T) 90 442.33 P
1 (ranslation Lookaside Buf) 291.92 442.33 P
1 (fers \050TLBs\051. The absence of this) 394.84 442.33 P
1 (property indicates that the PowerPC microprocessor de\336ned by this CPU node does not use the PowerPC) 90 432.33 P
1 (603 de\336ned mechanism to update its TLBs.) 90 422.33 P
5 F
("603-power-management") 72 404.33 T
3 F
1 (pr) 90 389.33 P
1 (op-encoded-array) 98.52 389.33 P
1 F
1 (: <none>) 170.72 389.33 P
1 (This property) 90 371.33 P
1 (, if present, indicates that the PowerPC microprocessor de\336ned by this CPU node implements) 144.51 371.33 P
1 (the PowerPC 603 de\336ned power management states. The absence of this property indicates that the) 90 361.33 P
1 (PowerPC microprocessor de\336ned by this CPU node does not support the PowerPC 603 de\336ned power) 90 351.33 P
1 (management states.) 90 341.33 P
2 12 Q
(6.2.5.  TLB pr) 72 318 T
(operties) 143.8 318 T
1 10 Q
1.41 (Since the PowerPC architecture de\336nes the MMU as being part of the processor) 72 301.33 P
1.41 (, the properties de\336ned by Sec-) 408.51 301.33 P
1 (tion 3.6.5 of [1] and the following MMU-related properties shall be presented under "cpu" nodes.) 72 289.33 P
5 F
("tlb-size") 72 272.33 T
1 F
1 (Standard property) 90 257.33 P
1 (, encoded as with) 162.28 257.33 P
5 F
2.4 (encode-int) 238.21 257.33 P
1 F
1 (, that represents the total number of TLB entries.) 298.21 257.33 P
5 F
("tlb-sets") 72 239.33 T
1 F
1 (Standard property) 90 224.33 P
1 (, encoded as with encode-int, that represents the number of associativity sets of the TLB.) 162.28 224.33 P
1 (A value of 1 indicates that the TLB is fully-associative.) 90 214.33 P
2 12 Q
(6.2.6.  Internal \050L1\051 cache pr) 72 191 T
(operties) 218.44 191 T
1 10 Q
1 (The PowerPC architecture de\336nes a Harvard-style cache architecture; however) 72 174.33 P
1 (, uni\336ed caches are an) 395.05 174.33 P
1 (implementation option. All of the PowerPC cache instructions act upon a cache "block" \050also referred to as a) 72 162.33 P
1 (cache "line"\051. The internal \050also referred to as "L1"\051 caches of PowerPC processors are represented in the Open) 72 150.33 P
1 (Firmware device tree by the following properties contained under) 72 138.33 P
4 F
2.4 ("cpu") 346.22 138.33 P
1 F
1 ( nodes.) 376.22 138.33 P
5 F
("cache-unif) 72 119.33 T
(ied") 138 119.33 T
1 F
1 (This property) 90 104.33 P
1 (, if present, indicates that the internal cache has a uni\336ed or) 144.51 104.33 P
1 (ganization. Absence of this) 392.78 104.33 P
1 (property indicates that the internal caches are implemented as separate instruction and data caches.) 90 94.33 P
5 F
("i-cache-size") 72 76.33 T
52 710 54 720 R
V
FMENDPAGE
%%EndPage: "15" 15
%%Page: "16" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(16) 531 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
1 (Standard property) 90 713.33 P
1 (, encoded as with) 162.28 713.33 P
5 F
2.4 (encode-int) 238.21 713.33 P
1 F
1 (, that represents the total size \050in bytes\051 of the internal) 298.21 713.33 P
1 (instruction cache.) 90 703.33 P
5 F
("i-cache-sets") 72 685.33 T
1 F
1 (Standard property) 90 670.33 P
1 (, encoded as with) 162.28 670.33 P
5 F
2.4 (encode-int) 238.21 670.33 P
1 F
1 (, that represents number of associativity sets of the) 298.21 670.33 P
1 (internal instruction cache. A value of 1 signi\336es that the instruction cache is fully associative.) 90 660.33 P
5 F
("i-cache-block-size") 72 642.33 T
1 F
0.86 (Standard property) 90 627.33 P
0.86 (, encoded as with) 162.14 627.33 P
5 F
2.05 (encode-int) 237.49 627.33 P
1 F
0.86 (, that represents the internal instruction cache's block size,) 297.49 627.33 P
1 (in bytes.) 90 617.33 P
5 F
("d-cache-size") 72 599.33 T
1 F
1 (Standard property) 90 584.33 P
1 (, encoded as with) 162.28 584.33 P
5 F
2.4 (encode-int) 238.21 584.33 P
1 F
1 (, that represents the total size \050in bytes\051 of the internal) 298.21 584.33 P
1 (data cache.) 90 574.33 P
5 F
("d-cache-sets") 72 556.33 T
1 F
1 (Standard property) 90 541.33 P
1 (, encoded as with) 162.28 541.33 P
5 F
2.4 (encode-int) 238.21 541.33 P
1 F
1 (, that represents number of associativity sets of the) 298.21 541.33 P
1 (internal data cache. A value of 1 signi\336es that the data cache is fully associative.) 90 531.33 P
5 F
("d-cache-block-size") 72 513.33 T
1 F
1 (Standard property) 90 498.33 P
1 (, encoded as with) 162.28 498.33 P
5 F
2.4 (encode-int) 238.21 498.33 P
1 F
1 (, that represents the internal \050L1\051 data cache's block size,) 298.21 498.33 P
1 (in bytes.) 90 488.33 P
5 F
("l2-cache") 72 470.33 T
1 F
1 (Standard property) 90 455.33 P
1 (, encoded as with) 162.28 455.33 P
5 F
2.4 (encode-int) 238.21 455.33 P
1 F
1 (, that represents another level of cache in the memory) 298.21 455.33 P
(hierarchy) 90 445.33 T
(.) 127.11 445.33 T
1 (Absence of this property indicates that no further levels of cache are present. If present, its value is the) 90 427.33 P
3 F
1 (phandle) 90 417.33 P
1 F
1 ( of the device node that represents the L2 cache.) 122.22 417.33 P
2 12 Q
(6.2.7.  Memory Management Unit pr) 72 394 T
(operties) 259.75 394 T
1 10 Q
1.51 (T) 72 377.33 P
1.51 (o aid a client in "taking over" the translation mechanism and still interact with Open Firmware \050via the clie) 77.41 377.33 P
3 F
1.51 (nt) 532.22 377.33 P
1.78 (interface) 72 365.33 P
1 F
1.78 (\051, the client needs to know what translations have been established by Open Firmware. The following) 107.55 365.33 P
1 (standard property shall exist within the package to which the "mmu" property of the /chosen package refers.) 72 353.33 P
5 F
("translations") 72 336.33 T
1 F
1 (This property) 90 321.33 P
1 (, consisting of sets of translations, de\336nes the currently active translations that have been) 144.51 321.33 P
1 (established by Open Firmware \050e.g., using map\051. Each set has the following format:) 90 311.33 P
4 F
2.4 (\050virt size phys mode \051) 126 293.33 P
1 F
1 (Each value is encoded as with) 90 275.33 P
5 F
2.4 (encode-int) 218.75 275.33 P
1 F
1 (.) 278.75 275.33 P
2 14 Q
(6.3.  External \050L2,L3...\051 cache node pr) 72 246.67 T
(operties) 298.07 246.67 T
1 10 Q
1 (Some systems might include external \050L2\051 cache\050s\051. As with the internal caches, they can be implemented as) 72 229.33 P
1 (either Harvard-style or uni\336ed. Unlike the L1 properties, that are contained within the) 72 217.33 P
4 F
2.4 ("cpu") 430.77 217.33 P
1 F
1 ( nodes, L2 caches) 460.77 217.33 P
1 (are contained within other device tree nodes.) 72 205.33 P
1 (The following properties de\336ne the characteristics of such L2 caches. These properties) 72 186.33 P
3 F
1 (shall) 433.08 186.33 P
1 F
1 ( be contained as a) 452.53 186.33 P
0.99 (child node of one of the CPU nodes; this is to allow path-name access to the node. All) 72 174.33 P
4 F
2.36 ("cpu") 436.63 174.33 P
1 F
0.99 ( nodes that share) 466.63 174.33 P
1 (the same L2 cache \050including the cpu node under which the L2 cache node is contained\051) 72 162.33 P
3 F
1 (shall) 443.47 162.33 P
1 F
1 ( contain an) 462.92 162.33 P
4 F
2.4 ("l2-) 512.3 162.33 P
2.4 (cache") 72 150.33 P
1 F
1 ( property whose value is the) 108 150.33 P
6 F
2.4 (phandle) 228.98 150.33 P
1 F
1 ( of that L2 cache node.) 270.98 150.33 P
2 9 Q
0.9 (Note: it is possible to extend this scheme to arbitrary levels of secondary) 108 132 P
0.9 (, tertiary) 394.27 132 P
0.9 (, etc.) 428.66 132 P
0.9 (caches. The) 108 122 P
4 F
2.16 ("l2-cache") 156.55 122 P
2 F
0.9 ( pr) 210.55 122 P
0.9 (operty shall be used in one level of the cache hierar) 222.53 122 P
0.9 (chy to) 426.86 122 P
0.9 (r) 108 112 P
0.9 (epr) 111.83 112 P
0.9 (esent the next level. The device node for a subsequent level shall appear as a child of) 124.67 112 P
0.9 (one of the caches in the hierar) 108 102 P
0.9 (chy to allow path-name traversal.) 228.22 102 P
5 10 Q
("device-type") 72 87.33 T
FMENDPAGE
%%EndPage: "16" 16
%%Page: "17" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(17) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
1 (Open Firmware Standard property; the device-type of L2-cache nodes) 90 713.33 P
3 F
1 (shall) 381.98 713.33 P
1 F
1 ( be) 401.43 713.33 P
4 F
2.4 ("cache") 417.87 713.33 P
1 F
1 (.) 459.87 713.33 P
5 F
("cache-unif) 72 695.33 T
(ied") 138 695.33 T
1 F
1 (This property) 90 680.33 P
1 (, if present, indicates that the L2 cache has a uni\336ed or) 144.51 680.33 P
1 (ganization. Absence of this property) 373.34 680.33 P
1 (indicates that the L2 caches are implemented as separate instruction and data caches.) 90 670.33 P
5 F
("i-cache-size") 72 652.33 T
1 F
1 (Standard property) 90 637.33 P
1 (, encoded as with) 162.28 637.33 P
5 F
2.4 (encode-int) 238.21 637.33 P
1 F
1 (, that represents the total size \050in bytes\051 of the L2) 298.21 637.33 P
1 (instruction cache.) 90 627.33 P
5 F
("i-cache-sets") 72 609.33 T
1 F
1 (Standard property) 90 594.33 P
1 (, encoded as with) 162.28 594.33 P
5 F
2.4 (encode-int) 238.21 594.33 P
1 F
1 (, that represents number of associativity sets of the L2) 298.21 594.33 P
1 (instruction cache. A value of 1 signi\336es that the instruction cache is fully associative.) 90 584.33 P
5 F
("d-cache-size") 72 566.33 T
1 F
1 (Standard property) 90 551.33 P
1 (, encoded as with) 162.28 551.33 P
5 F
2.4 (encode-int) 238.21 551.33 P
1 F
1 (, that represents the total size \050in bytes\051 of the L2 data) 298.21 551.33 P
(cache.) 90 541.33 T
5 F
("d-cache-sets") 72 523.33 T
1 F
1 (Standard property) 90 508.33 P
1 (, encoded as with) 162.28 508.33 P
5 F
2.4 (encode-int) 238.21 508.33 P
1 F
1 (, that represents number of associativity sets of the L2) 298.21 508.33 P
1 (instruction cache. A value of 1 signi\336es that the instruction cache is fully associative.) 90 498.33 P
5 F
("l2-cache") 72 480.33 T
1 F
1 (Standard property) 90 465.33 P
1 (, encoded as with) 162.28 465.33 P
5 F
2.4 (encode-int) 238.21 465.33 P
1 F
1 (, that represents another level of cache in the memory) 298.21 465.33 P
(hierarchy) 90 455.33 T
(.) 127.11 455.33 T
1 (Absence of this property indicates that no further levels of cache are present. If present, its value is the) 90 437.33 P
3 F
1 (phandle) 90 427.33 P
1 F
1 ( of the device node that represents the cache at the next level.) 122.22 427.33 P
2 14 Q
(7.  Methods) 72 398.67 T
1 10 Q
1 (This section describes the additional standard methods required of a PowerPC Open Firmware implementation.) 72 381.33 P
2 14 Q
(7.1.  MMU r) 72 350.67 T
(elated methods) 146 350.67 T
1 10 Q
1 (The MMU methods de\336ned by section 3.6.5. of [1]) 72 333.33 P
3 F
1 (shall) 288.2 333.33 P
1 F
1 ( be implemented by CPU nodes. The value of the) 307.65 333.33 P
6 F
2.4 (mode) 72 321.33 P
1 F
1 ( parameter for the relevant methods \050e.g.,) 96 321.33 P
5 F
2.4 (map) 270.73 321.33 P
1 F
1 (\051) 288.73 321.33 P
3 F
1 (shall) 295.56 321.33 P
1 F
1 ( be the value that is contained within PTEs that) 315.01 321.33 P
1 (control W) 72 309.33 P
1 (rite-through, Cache-Inhibit, Memory-coherent, Guarded and the 2 protection bits; thus, its format is:) 112.87 309.33 P
5 F
2.4 (WIMGxPP) 72 297.33 P
1 F
1 (, where x is a reserved bit that) 112.89 297.33 P
3 F
1 (shall) 243.36 297.33 P
1 F
1 ( be 0. In order for I/O accesses to be properly performed in a) 262.81 297.33 P
1 (PowerPC system, address ranges that are mapped by) 72 285.33 P
5 F
2.4 (map-in) 293.02 285.33 P
3 F
1 (shall) 332.52 285.33 P
1 F
1 ( be marked as Cache-Inhibited, Guarded.) 351.97 285.33 P
1 (The default mode \050i.e., the mode speci\336ed when the value of the) 72 266.33 P
3 F
1 (mode) 343.67 266.33 P
1 F
1 ( ar) 365.33 266.33 P
1 (gument is -1\051 for the) 376.42 266.33 P
5 F
2.4 (map-in) 466.13 266.33 P
1 F
1 ( and) 502.13 266.33 P
5 F
2.4 (modify) 72 254.33 P
1 F
1 ( MMU methods of CPU nodes is de\336ned as follows:) 108 254.33 P
1 (If the beginning of the physical address range af) 72 235.33 P
1 (fected by the operation refers to system memory) 272.55 235.33 P
1 (, the values for) 472.47 235.33 P
5 F
2.4 (WIMGxPP) 72 223.33 P
3 F
1 (shall) 117.5 223.33 P
1 F
1 ( be  W=0, I=0, M=0, G=1, PP=10.) 136.95 223.33 P
1 (If the beginning of the physical address range af) 72 204.33 P
1 (fected by the operation refers to an I/O address, the values for) 272.55 204.33 P
1 (WIMGxPP) 72 192.33 P
3 F
1 (shall) 120.5 192.33 P
1 F
1 ( be W=1, I=1, M=0, G=1, PP=10.) 139.95 192.33 P
2 14 Q
(8.  Client Interface Requir) 72 161.67 T
(ements) 229.22 161.67 T
1 10 Q
1 (A PowerPC Open Firmware implementation) 72 144.33 P
3 F
1 (shall) 257.82 144.33 P
1 F
1 ( implement a client interface \050as de\336ned in chapter 6 of [1]\051) 277.27 144.33 P
1 (according to the speci\336cations contained within this section.) 72 132.33 P
2 14 Q
(8.1.) 72 101.67 T
(Calling Conventions) 100 101.67 T
52 330 54 340 R
V
52 189 54 273 R
V
FMENDPAGE
%%EndPage: "17" 17
%%Page: "18" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(18) 531 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Notes) 72 457.83 T
1 (1.) 108 442.83 P
1 F
1 (Only the non-volatile \336elds \050) 119 442.83 P
4 F
2.4 (cr2-cr4) 238.55 442.83 P
1 F
1 (\051 need to be preserved.) 280.55 442.83 P
2 F
1 (2.) 108 426.83 P
1 F
1 (As de\336ned by section 6.3.1. of [1].) 119 426.83 P
2 F
1 (3.) 108 410.83 P
1 F
1 ( Other special purpose registers) 115.5 410.83 P
0.98 (T) 72 394.83 P
0.98 (o invoke a client interface service, a) 77.41 394.83 P
3 F
0.98 (client pr) 230.87 394.83 P
0.98 (ogram) 265.09 394.83 P
1 F
0.98 (constructs a client interface) 294.67 394.83 P
3 F
0.98 (ar) 410.77 394.83 P
0.98 (gument array) 419.29 394.83 P
1 F
0.98 ( as speci\336ed in) 474.43 394.83 P
1 (the core Open Firmware document, places its address in) 72 382.83 P
5 F
2.4 (%r3) 307.62 382.83 P
1 F
1 ( and transfers to the) 325.62 382.83 P
3 F
1 (client interface handler) 411.99 382.83 P
1 F
1 (, with) 507.47 382.83 P
1 (the return address in) 72 370.83 P
5 F
2.4 (%lr) 159.87 370.83 P
1 F
1 (. \050A typical way of accomplishing this is to copy the) 177.32 370.83 P
3 F
1 (client interface handler) 399.97 370.83 P
1 F
1 ('s address) 495.85 370.83 P
1 (into) 72 358.83 P
5 F
2.4 (%ctr) 91.06 358.83 P
1 F
1 (and executing a) 123.46 358.83 P
5 F
2.4 (bctrl) 191.72 358.83 P
1 F
1 (.\051) 221.72 358.83 P
0.86 (The) 72 339.83 P
3 F
0.86 (client interface handler) 90.91 339.83 P
0.86 (shall) 189.87 339.83 P
1 F
0.86 ( perform the service speci\336ed by the contents of the ar) 209.32 339.83 P
0.86 (gument array that begins) 434.91 339.83 P
1 (at the address in) 72 327.83 P
5 F
2.4 (%r3) 143.21 327.83 P
1 F
1 (, place the return value \050indicating success or failure of the attempt to invoke the client) 161.21 327.83 P
1 (interface service\051 back into) 72 315.83 P
5 F
2.4 (%r3) 187.07 315.83 P
1 F
1 (, and return to the) 205.07 315.83 P
3 F
1 (client pr) 283.39 315.83 P
1 (ogram) 317.63 315.83 P
1 F
1 (. This is typically done by a Branch to Link) 343.74 315.83 P
1 (Register \050) 72 303.83 P
5 F
2.4 (blr) 112.16 303.83 P
1 F
1 (\051.) 130.16 303.83 P
1 (The) 72 284.83 P
3 F
1 (client interface handler) 91.05 284.83 P
1 (shall) 190.43 284.83 P
1 F
1 ( preserve the contents of the Stack Pointer \050) 209.88 284.83 P
5 F
2.4 (%r) 392.29 284.83 P
2 F
1 (1) 404.29 284.83 P
1 F
1 (\051, T) 409.29 284.83 P
1 (OC Pointer \050) 424.55 284.83 P
5 F
2.4 (%r2) 477.66 284.83 P
1 F
1 (\051,) 495.66 284.83 P
1 (Condition Register \050) 72 272.83 P
5 F
2.4 (%cr) 155.67 272.83 P
1 F
1 (\051 all non-volatile registers \050) 173.67 272.83 P
5 F
2.4 (%r13) 286.54 272.83 P
4 F
2.4 (-) 310.54 272.83 P
5 F
2.4 (%r31) 316.54 272.83 P
1 F
1 (\051 and all special purpose registers except) 340.54 272.83 P
5 F
2.4 (%lr) 512.22 272.83 P
1 F
1 (,) 529.82 272.83 P
5 F
2.4 (%ctr) 72 260.83 P
1 F
1 (and) 99.5 260.83 P
5 F
2.4 (%xer) 117.44 260.83 P
1 F
1 (.) 140.89 260.83 P
1 (The preservation of) 72 241.83 P
5 F
2.4 (%r2) 155.81 241.83 P
1 F
1 ( allows T) 173.81 241.83 P
1 (OC-based client programs to function correctly) 212.85 241.83 P
1 (. Open Firmware) 406.33 241.83 P
3 F
1 (shall not) 479.87 241.83 P
1 F
1 (depend upon whether its client is T) 72 229.83 P
1 (OC-based or not. If the client interface handler) 218.36 229.83 P
1 (, itself, is T) 412.13 229.83 P
1 (OC-based, it must) 460.23 229.83 P
1 (provide for the appropriate initialization of its) 72 217.83 P
5 F
2.4 (%r2) 264.81 217.83 P
1 F
1 (.) 282.81 217.83 P
2 14 Q
(9.  Client Pr) 72 187.17 T
(ogram Requir) 144.07 187.17 T
(ements) 228.2 187.17 T
(9.1.  Client Pr) 72 155.17 T
(ogram Format) 154.57 155.17 T
1 10 Q
1 (The data format of a client program compliant with this speci\336cation) 72 137.83 P
3 F
1 (shall) 361.02 137.83 P
1 F
1 ( be either ELF \050Executable and) 380.47 137.83 P
0.88 (Linkage Format\051 as de\336ned by [3][5], and extended by section) 72 125.83 P
0.88 (9.1.1. , or PE \050Portable Executable\051 as de\336ned by) 332.38 125.83 P
1 ([4]. The standard ELF format contains explicit indication as to the program's execution modes \050e.g., 32- or 64-) 72 113.83 P
1 (bit, Big- or Little-Endian\051; this version of the speci\336cation only deals with the 32-bit version \050i.e.,) 72 101.83 P
4 F
(ELFCLASS32) 72 89.83 T
1 F
(\051.) 132 89.83 T
109 701.5 179.5 719 R
6 X
V
2 12 Q
0 X
(Register\050s\051) 114 705 T
180.5 701.5 467.5 719 R
6 X
V
0 X
(      V) 186 705 T
(alue) 211.56 705 T
468.5 701.5 512 719 R
6 X
V
0 X
(Notes) 474 705 T
5 10 Q
(%msr) 114 689.33 T
2 F
(pr) 186 689.33 T
(eserved by client interface) 195.82 689.33 T
5 F
(%cr) 114 674.33 T
2 F
(pr) 186 674.33 T
(eserved by client interface) 195.82 674.33 T
(1) 481.5 674.33 T
5 F
(%r1-%r2) 114 659.33 T
2 F
(pr) 186 659.33 T
(eserved by client interface) 195.82 659.33 T
5 F
(%r3) 114 644.33 T
2 F
(argument array addr) 186 644.33 T
(ess on client interface entry) 276.92 644.33 T
(2) 481.5 644.33 T
(r) 186 629.33 T
(esult value \050) 190.26 629.33 T
5 F
(true) 241.37 629.33 T
2 F
( or) 265.37 629.33 T
5 F
(false) 279.81 629.33 T
2 F
(\051 on client interface r) 309.81 629.33 T
(eturn) 399.05 629.33 T
(2) 481.5 629.33 T
5 F
(%r13-%r31) 114 614.33 T
2 F
(pr) 186 614.33 T
(eserved by client interface) 195.82 614.33 T
5 F
(%sprg0-) 114 597.33 T
(%sprg3) 114 585.33 T
2 F
(pr) 186 597.33 T
(eserved by client interface) 195.82 597.33 T
5 F
(%fpscr) 114 570.33 T
2 F
(pr) 186 570.33 T
(eserved by client interface) 195.82 570.33 T
5 F
(%f0-%f31) 114 553.33 T
2 F
(pr) 186 553.33 T
(eserved by client interface) 195.82 553.33 T
5 F
(%lr) 114 536.33 T
1 F
(,) 131.6 536.33 T
5 F
(%ctr) 114 524.33 T
1 F
(,) 137.6 524.33 T
5 F
(%xer) 114 512.33 T
2 F
(unde\336ned) 186 536.33 T
(Other SPRs) 114 497.33 T
(pr) 186 497.33 T
(eserved by client interface) 195.82 497.33 T
1 F
(3) 474 497.33 T
1 7.5 Q
(T) 252.75 480 T
(able 1.) 256.81 480 T
( Register usage conventions) 284.3 480 T
108 719 108 494 2 L
V
2 H
0 Z
N
180 721 180 492 2 L
V
1 H
N
468 721 468 492 2 L
V
N
513 719 513 494 2 L
V
2 H
N
107 720 514 720 2 L
V
N
109 701.25 512 701.25 2 L
V
0.5 H
N
109 698.75 512 698.75 2 L
V
N
107 685 514 685 2 L
V
1 H
N
107 670 514 670 2 L
V
N
107 655 514 655 2 L
V
N
179.5 640 514 640 2 L
4 X
V
N
107 625 514 625 2 L
0 X
V
N
107 608 514 608 2 L
V
N
107 581 514 581 2 L
V
N
107 564 514 564 2 L
V
N
107 547 514 547 2 L
V
N
107 508 514 508 2 L
V
N
107 493 514 493 2 L
V
2 H
N
FMENDPAGE
%%EndPage: "18" 18
%%Page: "19" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(19) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
2 9 Q
0 X
0 0 0 1 0 0 0 K
0.9 (Note: other client pr) 108 714 P
0.9 (ogram formats) 188.77 714 P
0 F
0.9 (may) 250.05 714 P
2 F
0.9 ( be supported, in an implementation speci\336c man-) 265.55 714 P
0.9 (ner) 108 704 P
0.9 (, by an Open Firmwar) 120.17 704 P
0.9 (e implementation.) 209.36 704 P
1 10 Q
1 (A standard) 72 689.33 P
3 F
1 (client pr) 120.1 689.33 P
1 (ogram) 154.34 689.33 P
1 F
1 ( shall be statically linked, requiring no relocation of the image. The program's entry) 180.45 689.33 P
1 (point \050) 72 677.33 P
4 F
2.4 (e_entry) 99.39 677.33 P
1 F
1 (\051) 141.39 677.33 P
3 F
1 (shall) 148.22 677.33 P
1 F
1 ( contain the address of the \336rst PowerPC instruction of the client program. It is the) 167.67 677.33 P
1 (responsibility of the client program to establish the appropriate value of the T) 72 665.33 P
1 (OC \050) 393.78 665.33 P
5 F
2.4 (%r2) 414.5 665.33 P
1 F
1 (\051, if necessary) 432.5 665.33 P
1 (.) 489.66 665.33 P
2 9 Q
0.9 (Note: the entry point is the addr) 108 647 P
0.9 (ess of the \336rst instruction of the client pr) 236.73 647 P
0.9 (ogram, not that) 399.25 647 P
0.9 (of a pr) 108 637 P
0.9 (ocedur) 135.13 637 P
0.9 (e descriptor) 161.47 637 P
0 F
0.9 (.) 207.61 637 P
2 12 Q
(9.1.1.  ELF Note Section) 72 613 T
1 10 Q
1.65 (Part of the process of loading a client program involves verifying its environmental requirements \050e.g., endian-) 72 596.33 P
1.99 (ness and address translation mode\051 against the current \336rmware con\336guration. The client\325) 72 584.33 P
1.99 (s endian-ness can be) 452.12 584.33 P
2.79 (directly determined by examining the ELF EI-DA) 72 572.33 P
2.79 (T) 287.62 572.33 P
2.79 (A value; ELFDA) 292.93 572.33 P
2.79 (T) 366.29 572.33 P
2.79 (A2LSB \0501\051 implies Little-Endian while) 371.6 572.33 P
1.21 (ELFDA) 72 560.33 P
1.21 (T) 103.11 560.33 P
1.21 (A2MSB \0502\051 implies Big-Endian. However) 108.42 560.33 P
1.21 (, the other client requirements \050e.g., address translation mode\051) 282.58 560.33 P
1.95 (are de\336ned by means of an ELF Note Section \050SHT_NOTE\051. The following describes the format of the Note) 72 548.33 P
1 (Section for a client program \336le.) 72 536.33 P
0.99 (As de\336ned by [3], an ELF \336le can be "annotated" by means of Note Sections within the executable \336le. A Note) 72 519.33 P
1 (Section contains a "header" followed by a \050possibly null\051 "descriptor", as follows:) 72 507.33 P
2 9 Q
0.9 (Note: the endian format of the values corr) 108 333 P
0.9 (esponds to the endianness speci\336ed by the) 275.36 333 P
4 10 Q
2.4 (EIDATA) 108 323 P
2 9 Q
0.9 ( \336eld of the \336le.) 144 323 P
1 10 Q
1 (The format of a Note Section header can be described by an Open Firmware) 72 308.33 P
4 F
2.4 (struct) 393.69 308.33 P
1 F
1 ( as:) 429.69 308.33 P
4 F
(struct) 90 289.33 T
(\134 Note Section header for Open Firmware) 144 289.33 T
(/L) 90 278.33 T
(field) 117 278.33 T
(ns.namesz) 171 278.33 T
(\134 length of ns.name, including NULL) 252 278.33 T
(/L) 90 267.33 T
(field) 117 267.33 T
(ns.descrsz) 171 267.33 T
(/L) 90 256.33 T
(field) 117 256.33 T
(ns.type) 171 256.33 T
(0) 90 245.33 T
(field) 117 245.33 T
(ns.name) 171 245.33 T
(\134 NULL-terminated, /L padded) 252 245.33 T
1 F
1 (The) 72 220.33 P
4 F
2.4 (ns.name) 91.05 220.33 P
1 F
1 ( \336eld of the PowerPC Open Firmware Note Section) 133.05 220.33 P
3 F
1 (shall) 350.64 220.33 P
1 F
1 ( be) 370.09 220.33 P
4 F
2.4 ("PowerPC") 386.53 220.33 P
1 F
1 (; the) 440.53 220.33 P
4 F
2.4 (ns.type) 462.53 220.33 P
1 F
1 ( \336eld) 504.53 220.33 P
3 F
1 (shall) 72 208.33 P
1 F
1 ( be) 91.45 208.33 P
4 F
2.4 ( 0x1275.) 104.39 208.33 P
1 F
1 (Following the Note Section header is a descriptor \050) 72 189.33 P
4 F
2.4 (desc) 283.86 189.33 P
1 F
1 (\051; the length \050in bytes\051 of the descriptor is speci\336ed by) 307.86 189.33 P
1 (a word in the Note Section\325) 72 177.33 P
1 (s header \050) 186.71 177.33 P
4 F
2.4 (descsz) 227.58 177.33 P
1 F
1 (\051. The interpretation of the descriptor depends upon the kind of) 263.58 177.33 P
1 (Note Section in which it is contained. For Open Firmware, the format of the Note Section\325) 72 165.33 P
1 (s descriptor can be) 448.35 165.33 P
1 (described by an Open Firmware) 72 153.33 P
4 F
2.4 (struct) 207.8 153.33 P
1 F
1 (, as follows:) 243.8 153.33 P
4 F
(struct) 90 134.33 T
(\134 Note Section descriptor) 144 134.33 T
(/L) 90 123.33 T
(field) 117 123.33 T
(ns.real-mode) 171 123.33 T
(/L) 90 112.33 T
(field) 117 112.33 T
(ns.real-base) 171 112.33 T
(/L) 90 101.33 T
(field) 117 101.33 T
(ns.real-size) 171 101.33 T
(/L) 90 90.33 T
(field) 117 90.33 T
(ns.virt-base) 171 90.33 T
(/L) 90 79.33 T
(field) 117 79.33 T
(ns.virt-size) 171 79.33 T
72 72 540 720 C
97.91 348 514.09 485 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
260.19 359 341.19 485 R
7 X
0 0 0 1 0 0 0 K
V
0.5 H
0 Z
0 X
N
260.19 467 341.19 467 2 L
7 X
V
2 Z
0 X
N
260.19 449 341.19 449 2 L
7 X
V
0 X
N
260.19 431 341.19 431 2 L
7 X
V
0 X
N
260.19 395 341.19 395 2 L
7 X
V
0 X
N
4 10 Q
(namesz) 286.19 473.17 T
(descsz) 287.19 455 T
(type) 292.19 438 T
(name) 291.19 417 T
(. . .) 287.19 406 T
(desc) 292.19 383 T
(. . .) 285.19 376 T
340.91 485 358.91 440 2 L
7 X
V
0 X
N
340.91 395 358.91 440 2 L
7 X
V
0 X
N
(header) 365.91 438 T
340.91 395 358.91 377 2 L
7 X
V
0 X
N
358.91 377 340.91 359 2 L
7 X
V
0 X
N
(descriptor) 365.91 375 T
72 72 540 720 C
0 0 612 792 C
52 320 54 339 R
0 X
0 0 0 1 0 0 0 K
V
FMENDPAGE
%%EndPage: "19" 19
%%Page: "20" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(20) 531 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(9.1.2.   Handling ELF-format Client Pr) 72 689 T
(ograms) 271.45 689 T
(9.1.2.1.   Recognizing ELF-format Pr) 72 663 T
(ograms) 260.76 663 T
2 10 Q
1 (Init-pr) 72 646.33 P
1 (ogram) 100.71 646.33 P
1 F
1 ( shall recognize client program images that conform to all the requirements listed below as "ELF-) 128.48 646.33 P
1 (format" programs.) 72 634.33 P
0.89 ( In the description below) 72 615.33 P
0.89 (, \336eld names refer to \336elds within the ELF "\336le  header" structure, which is assumed to) 174.32 615.33 P
1 (begin at load-base, and of) 72 603.33 P
1 (fsets are relative to the beginning of that structure. Multi-byte numerical \336elds are) 178.85 603.33 P
1 (interpreted according to the endianness speci\336ed by the "data" \336eld at of) 72 591.33 P
1 (fset 5.) 372.87 591.33 P
5 11 Q
(a\051) 108 572.33 T
1 10 Q
(The "ident" \336eld \050at of) 126 572.33 T
(fset 0\051 contains the string "\1347fELF", where '\1347f' is a byte whose value is) 216.19 572.33 T
(\050hex\051 7f. This indicates the beginning of an ELF \336le header) 126 560.33 T
(.) 362.91 560.33 T
5 11 Q
(b\051) 108 545.33 T
1 10 Q
-0.01 (The "class" \336eld \050at of) 126 545.33 P
-0.01 (fset 4\051 contains the value 1. This indicates the 32-bit variant of the ELF for-) 215.58 545.33 P
(mat.) 126 533.33 T
5 11 Q
(c\051) 108 518.33 T
1 10 Q
(The "type" \336eld \050at of) 126 518.33 T
(fset 16\051 contains the value 2. This indicates that the ELF image is execut-) 213.41 518.33 T
(able.) 126 506.33 T
5 11 Q
(d\051) 108 491.33 T
1 10 Q
(The "machine" \336eld \050at of) 126 491.33 T
(fset 18\051 contains the value 20. This indicates that the ELF image is for) 230.07 491.33 T
(the PowerPC instruction set.) 126 479.33 T
2 12 Q
(9.1.2.2.   Pr) 72 454 T
(eparing ELF-format pr) 129.44 454 T
(ograms for execution) 249.22 454 T
1 10 Q
1 (Upon recognition of the client program image at) 72 437.33 P
2 F
1 (load-base) 276.08 437.33 P
1 F
1 ( as an ELF-format program,) 316.64 437.33 P
2 F
1 (init-pr) 436.06 437.33 P
1 (ogram) 463.66 437.33 P
1 F
1 ( shall) 491.43 437.33 P
1 (prepare the program for execution by performing the following sequence of steps.) 72 425.33 P
1 ( In the description below) 72 406.33 P
1 (, the \336elds mentioned by name are within ELF "program header" structures, unless) 174.78 406.33 P
1 (speci\336ed otherwise.) 72 394.33 P
5 11 Q
(a\051) 108 375.33 T
1 10 Q
(Search for an ELF "note" section of type "1275" as de\336ned in Section) 126 375.33 T
(9.1.1. on page) 407.56 375.33 T
(19. If one is) 466.44 375.33 T
(found, and the values speci\336ed by its descriptor do not match the \336rmware's current operating) 126 363.33 T
(mode, set the appropriate con\336guration variables to the values speci\336ed in the note section) 126 351.33 T
-0.22 (descriptor) 126 339.33 P
-0.22 (, and restart the \336rmware so that it will re-execute the) 165.59 339.33 P
2 F
-0.22 (boot) 379.75 339.33 P
1 F
-0.22 ( command that resulted in the) 398.64 339.33 P
(execution of) 126 327.33 T
2 F
(init-pr) 178.21 327.33 T
(ogram) 205.81 327.33 T
5 11 Q
(b\051) 108 312.33 T
1 10 Q
(Allocate and map suf) 126 312.33 T
(\336cient physical memory for all the program sections of type) 211.08 312.33 T
3 F
(PT_LOAD) 453.27 312.33 T
1 F
( \050i.e.) 496.05 312.33 T
(whose "p_type" \336eld contains the value 1\051 listed in the ELF image's program headers.) 126 300.33 T
5 11 Q
(c\051) 108 285.33 T
1 10 Q
(Copy the program headers to a "safe" location to guard against the possibility of them being over-) 126 285.33 T
(written by the following steps.) 126 273.33 T
5 11 Q
(d\051) 108 258.33 T
1 10 Q
(For each program section of type) 126 258.33 T
3 F
(PT_LOAD) 260.97 258.33 T
1 F
(:) 303.75 258.33 T
5 11 Q
(1.) 126 243.33 T
1 10 Q
(Copy the initialized portion of the program section from its current location in the loaded) 144 243.33 T
(image to the location given by the section's "p_vaddr" \336eld.) 144 231.33 T
5 11 Q
(2.) 126 216.33 T
1 10 Q
-0.3 (Fill the rest of the copied section with zero bytes \050i.e. \336ll "p_\336lez - p_memsz" bytes beginning) 144 216.33 P
(at the address "p_vaddr + p_\336lesz"\051.) 144 204.33 T
5 11 Q
(e\051) 108 189.33 T
1 10 Q
(Set the saved program state so that subsequent execution of) 126 189.33 T
2 F
(go) 366.52 189.33 T
1 F
( will begin execution at the virtual) 376.52 189.33 T
(address given by the "e_entry"\336eld in the ELF \336le header) 126 177.33 T
(.) 355.52 177.33 T
1 (The implementation need not take precautions to ensure that the process of copying and zeroing program) 72 162.33 P
1 (sections does not overwrite the portions of the load image that have not yet been copied. In order to guarantee) 72 150.33 P
1 (correct copying, the value of the "load-base" con\336guration variable and the destination addresses of the various) 72 138.33 P
1 (sections must be such that such overwriting does not occur) 72 126.33 P
1 (.) 315.7 126.33 P
1 (One suf) 72 107.33 P
1 (\336cient condition is that the region of memory beginning at load-base, of size equal to the size of the) 104.2 107.33 P
1 (loaded image, be disjoint from the regions of memory to which the program sections are copied and zero-\336lled.) 72 95.33 P
52 643 54 653 R
V
52 434 54 444 R
V
52 309 54 358 R
V
52 255 54 265 R
V
52 186 54 196 R
V
52 147 54 169 R
V
52 92 54 133 R
V
FMENDPAGE
%%EndPage: "20" 20
%%Page: "21" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(21) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
1 (There are other less-stringent suf) 72 713.33 P
1 (\336cient conditions, especially for simple ELF images with a small number of) 207.45 713.33 P
1 (program sections that are to be copied to contiguous regions.) 72 701.33 P
1 (An example of another suf) 72 682.33 P
1 (\336cient condition is as follows:) 182.46 682.33 P
0.93 (An ELF client program consists of two segments: a text segment \050read/execute\051 and a data) 108 663.33 P
1 (segment \050read/write/execute\051. Only the data segment may have a memory size greater) 108 653.33 P
1 (than the \336le size \050implied "bss"\051. Further) 108 643.33 P
1 (, to ease the problem of mapping the image for) 276.47 643.33 P
1 (V) 108 633.33 P
1 (irtual mode, the page of) 114.62 633.33 P
1 (fsets within memory must equal the page of) 213.7 633.33 P
1 (fsets within the \336le.) 395.78 633.33 P
1 (The de\336nition of "page of) 108 623.33 P
1 (fset" is those bits of an address which are below the granularity) 215.33 623.33 P
1 (of memory allocation or mapping. \050i.e. page size of 4K implies page of) 108 613.33 P
1 (fset mask of 4K -) 403.94 613.33 P
(1\051) 108 603.33 T
1 (An implementation shall permit the ELF image to contain other sections in addition to those described above,) 72 587.33 P
1 (but need not take any action beyond that de\336ned above as a result of the presence of such other sections.) 72 575.33 P
2 14 Q
(9.2.  Load Addr) 72 544.67 T
(ess) 166.26 544.67 T
1 10 Q
1 (The load address is speci\336ed by the value of the) 72 527.33 P
5 F
2.4 (load-base) 276.41 527.33 P
1 F
1 ( Con\336guration V) 330.41 527.33 P
1 (ariable. The value of) 399.08 527.33 P
2 F
1 (load-base) 488.33 527.33 P
1 F
1 (shall be a real address in real mode or a virtual address in virtual mode. At least 4 MB of memory) 72 515.33 P
3 F
1 (shall) 486.27 515.33 P
1 F
1 ( be) 505.72 515.33 P
1 (available for loading at that address. It is strongly recommended that as much memory as is practical for the) 72 503.33 P
1 (particular system be available there, thus allow the loading of lar) 72 491.33 P
1 (ge client programs. Note that this address) 340.94 491.33 P
1 (represents the area into which the client program \336le will be read by) 72 479.33 P
2 F
1 (load) 360.22 479.33 P
1 F
1 (; it does not correspond to the) 378.56 479.33 P
1 (addresses at which the program will be executed.) 72 467.33 P
2 14 Q
(9.3.  Initial Pr) 72 436.67 T
(ogram State) 154.59 436.67 T
1 10 Q
1 (This section de\336nes the "initial program state", the execution environment that exists when the \336rst machine) 72 419.33 P
1 (instruction of a) 72 407.33 P
3 F
1 (client pr) 138.05 407.33 P
1 (ogram) 172.29 407.33 P
1 F
1 ( of the format speci\336ed above begins execution. Many aspects of the "initial) 198.4 407.33 P
1 (program state" are established by) 72 395.33 P
5 F
2.4 (init-program) 212.44 395.33 P
1 F
1 (, which sets the) 284.44 395.33 P
3 F
1 (saved pr) 352.6 395.33 P
1 (ogram state) 387.39 395.33 P
1 F
1 ( so that subsequent) 435.89 395.33 P
1 (execution of) 72 383.33 P
2 F
1 (go) 126.21 383.33 P
1 F
1 ( will begin execution of the) 136.21 383.33 P
3 F
1 (client pr) 254.42 383.33 P
1 (ogram) 288.66 383.33 P
1 F
1 ( with the speci\336ed environment.) 314.77 383.33 P
2 12 Q
(9.3.1.  Initial Register V) 72 358 T
(alues) 192.55 358 T
1 10 Q
1 (Upon entry to the client program, the following registers shall contain the following values:) 72 341.33 P
151.66 313.5 208.84 327 R
6 X
V
2 F
0 X
(Register\050s\051) 156.66 316.33 T
209.84 313.5 460.84 327 R
6 X
V
0 X
(         V) 215.34 316.33 T
(alue) 244.14 316.33 T
461.84 313.5 496.34 327 R
6 X
V
0 X
(Notes) 467.34 316.33 T
(%msr) 156.66 303.33 T
(EE=0, interrupts disabled) 215.34 303.33 T
(  1) 467.34 303.33 T
(PR=0, supervisor state) 215.34 290.33 T
(FP=1, \337oating point enabled) 215.34 275.33 T
(ME=1, machine checks enabled) 215.34 260.33 T
(FE0,FE1=0, \337oating point exceptions disabled) 215.34 245.33 T
(IP) 215.34 230.33 T
(, see section) 224.42 230.33 T
(9.5.) 276.63 230.33 T
(IR,DR, see section) 215.34 215.33 T
(5.2.1.) 295.6 215.33 T
(SF=0, 32-bit mode) 215.34 200.33 T
(ILE,LE, see section) 215.34 185.33 T
(3.1.) 300.62 185.33 T
( 2) 467.34 185.33 T
(%r1) 156.66 172.33 T
(see section) 215.34 172.33 T
(9.3.2.) 262.55 172.33 T
(%r2) 156.66 157.33 T
(0) 215.34 157.33 T
( 3) 467.34 157.33 T
(%r3) 156.66 144.33 T
(r) 215.34 144.33 T
(eserved) 219.6 144.33 T
( 4) 467.34 144.33 T
(%r4) 156.66 131.33 T
(r) 215.34 131.33 T
(eserved) 219.6 131.33 T
(4) 470.34 130 T
(%r5) 156.66 116.33 T
(see section) 215.34 116.33 T
(9.3.3.) 262.55 116.33 T
1 7.5 Q
(T) 273.96 97 T
(able 2.) 278.01 97 T
( Initial Register V) 305.51 97 T
(alues) 358.63 97 T
150.66 327 150.66 110.5 2 L
V
2 H
0 Z
N
209.34 329 209.34 109.5 2 L
V
1 H
N
461.34 329 461.34 109.5 2 L
V
N
497.34 327 497.34 110.5 2 L
V
2 H
N
149.66 328 498.34 328 2 L
V
N
151.66 313.25 496.34 313.25 2 L
V
0.5 H
N
151.66 310.75 496.34 310.75 2 L
V
N
208.84 299 498.34 299 2 L
4 X
V
1 H
N
208.84 284 498.34 284 2 L
V
N
208.84 269 498.34 269 2 L
V
N
208.84 254 498.34 254 2 L
V
N
208.84 239 498.34 239 2 L
V
N
208.84 224 498.34 224 2 L
V
N
208.84 209 498.34 209 2 L
V
N
208.84 194 498.34 194 2 L
V
N
149.66 181 498.34 181 2 L
0 X
V
N
149.66 166 498.34 166 2 L
V
N
149.66 153 498.34 153 2 L
V
N
149.66 140 498.34 140 2 L
V
N
149.66 125 498.34 125 2 L
V
N
149.66 110 498.34 110 2 L
V
N
52 710 54 720 R
V
52 679 54 689 R
V
FMENDPAGE
%%EndPage: "21" 21
%%Page: "22" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(22) 531 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Notes:) 72 641.83 T
0.85 (1) 108 626.83 P
1 F
0.85 (. Open Firmware will typically require the use of external interrupts for its) 113 626.83 P
3 F
0.85 (user interface) 424.03 626.83 P
1 F
0.85 (.) 480.15 626.83 P
1 (However) 108 616.83 P
1 (, when a) 144.25 616.83 P
3 F
1 (client pr) 183.35 616.83 P
1 (ogram) 217.59 616.83 P
1 F
1 ( is invoked, external interrupts) 243.7 616.83 P
3 F
1 (shall) 373.13 616.83 P
1 F
1 ( be disabled. If a) 392.58 616.83 P
3 F
1 (cli-) 466.45 616.83 P
1 (ent pr) 108 606.83 P
1 (ogram) 132.24 606.83 P
1 F
1 ( causes the invocation of the user interface, external interrupts) 158.35 606.83 P
3 F
1 (may) 419.12 606.83 P
1 F
1 ( be re-) 435.78 606.83 P
(enabled.) 108 596.83 T
2 F
1 (2) 108 580.83 P
1 F
1 (. The 601 processor uses a dif) 113 580.83 P
1 (ferent mechanism for controlling the endian-mode of the) 237.96 580.83 P
1 (processor) 108 570.83 P
1 (. On the 601, the LE bit is contained in the HID0 register; this bit controls the) 145.77 570.83 P
1 (endian-mode of both program and privileged states.) 108 560.83 P
2 F
1 (3) 108 544.83 P
1 F
1 (. Open Firmware does not make any assumptions about whether a client program is) 113 544.83 P
1 (T) 108 534.83 P
1 (OC-based or not. It is the responsibility of the client program to set) 113.93 534.83 P
5 F
2.4 (%r2) 398.02 534.83 P
1 F
1 ( to its T) 416.02 534.83 P
1 (OC, if) 449.68 534.83 P
(necessary) 108 524.83 T
(.) 146.22 524.83 T
2 F
1 (4) 108 508.83 P
1 F
1 (. As de\336ned in the Section 5.6 of the PR*P speci\336cation.) 113 508.83 P
2 12 Q
(9.3.2.  Initial Stack) 72 485.5 T
1 10 Q
1 (Client programs) 72 468.83 P
3 F
1 (shall) 141.22 468.83 P
1 F
1 ( be invoked with a valid stack pointer \050) 160.67 468.83 P
5 F
2.4 (%r1) 324.76 468.83 P
1 F
1 (\051 with at least 32K bytes of memory available) 342.76 468.83 P
1 (for stack growth. The stack pointer) 72 457.83 P
3 F
1 (shall) 220.47 457.83 P
1 F
1 ( be 16-byte aligned, reserving suf) 239.92 457.83 P
1 (\336cient room for a linkage area \05032) 378.6 457.83 P
0.93 (bytes above the address in) 72 446.83 P
5 F
2.24 (%r1) 184.14 446.83 P
1 F
0.93 (\051. If the system is executing in Real-Mode, the value in) 202.14 446.83 P
5 F
2.24 (%r1) 434.88 446.83 P
1 F
0.93 ( is a real \050hardware\051) 452.88 446.83 P
1 (address; if in V) 72 435.83 P
1 (irtual-Mode, the address in) 135.78 435.83 P
5 F
2.4 (%r1) 250.04 435.83 P
1 F
1 ( is a mapped virtual address.) 268.04 435.83 P
2 12 Q
(9.3.3.  Client Interface Handler Addr) 72 411.5 T
(ess) 261.77 411.5 T
1 10 Q
1 (When client programs are invoked,) 72 394.83 P
5 F
2.4 (%r5) 220.3 394.83 P
3 F
1 (shall) 241.8 394.83 P
1 F
1 ( contain the address of the entry point of the) 261.25 394.83 P
3 F
1 (client interface) 450.11 394.83 P
1 (handler) 72 382.83 P
1 F
1 (. If the system is executing in Real-Mode, the value in) 102.56 382.83 P
5 F
2.4 (%r5) 332.7 382.83 P
1 F
1 ( is a real \050hardware\051 address; if in V) 350.7 382.83 P
1 (irtual-) 501.94 382.83 P
1 (Mode, the address in) 72 370.83 P
5 F
2.4 (%r5) 161.82 370.83 P
1 F
1 ( is a mapped virtual address.) 179.82 370.83 P
2 9 Q
0.9 (Note: this addr) 108 352.5 P
0.9 (ess points to the \336rst instruction of the) 167.63 352.5 P
0 F
0.9 (client interface handler) 323.83 352.5 P
2 F
0.9 (, not to a pr) 411.8 352.5 P
0.9 (o-) 459.99 352.5 P
0.9 (cedur) 108 342.5 P
0.9 (e descriptor) 129.83 342.5 P
0.9 (.) 175.64 342.5 P
2 12 Q
(9.3.4.  Client Pr) 72 318.5 T
(ogram Arguments) 151.78 318.5 T
1 10 Q
1 (The calling program) 72 301.83 P
3 F
1 (may) 159.15 301.83 P
1 F
1 (pass to the client an array of bytes of arbitrary content; if this array is present, its) 179.31 301.83 P
1 (address and length) 72 289.83 P
3 F
1 (shall) 151.93 289.83 P
1 F
1 ( be passed in registers) 171.38 289.83 P
5 F
2.4 (%r6) 266.64 289.83 P
1 F
1 ( and) 284.64 289.83 P
5 F
2.4 (%r7) 306.08 289.83 P
1 F
1 (, respectively) 324.08 289.83 P
1 (. For programs booted directly by) 377.75 289.83 P
1 (Open Firmware, the length of this array is zero. Secondary boot programs may use this ar) 72 277.83 P
1 (gument array to pass) 444.81 277.83 P
1 (information to the programs that they boot.) 72 265.83 P
2 9 Q
0.71 (Note: The Open Firmwar) 108 247.5 P
0.71 (e standard makes no pr) 208.19 247.5 P
0.71 (ovision for specifying such an array or its) 301.35 247.5 P
0.9 (contents. Ther) 108 237.5 P
0.9 (efor) 164.23 237.5 P
0.9 (e, in the absence of implementation-dependent extensions, a client pr) 179.56 237.5 P
0.9 (o-) 450.74 237.5 P
0.9 (gram executed dir) 108 227.5 P
0.9 (ectly fr) 179.62 227.5 P
0.9 (om an Open Firmwar) 207.59 227.5 P
0.9 (e implementation will not be passed such) 293.88 227.5 P
0.9 (an array) 108 217.5 P
0.9 (. However) 141.65 217.5 P
0.9 (, intermediate boot pr) 180.71 217.5 P
0.9 (ograms that simulate or pr) 267.24 217.5 P
0.9 (opagate the Open) 373.66 217.5 P
0.9 (Firmwar) 108 207.5 P
0.9 (e client interface to the pr) 142.33 207.5 P
0.9 (ograms that they load can pr) 245.38 207.5 P
0.9 (ovide such an array for) 360.47 207.5 P
0.9 (their clients.) 108 197.5 P
0.9 (Note:) 108 180.5 P
5 F
2.16 (boot) 132.14 180.5 P
2 F
0.9 ( command line arguments, typically consisting of the name of a \336le to be) 153.74 180.5 P
0.9 (loaded by a secondary boot pr) 108 170.5 P
0.9 (ogram followed by \337ags selecting various secondary boot) 228.1 170.5 P
0.9 (and operating system options, ar) 108 160.5 P
0.9 (e pr) 236.69 160.5 P
0.9 (ovided to client pr) 252.68 160.5 P
0.9 (ograms via the) 324.96 160.5 P
4 F
2.16 ("bootargs") 386.41 160.5 P
2 F
0.9 ( and) 440.4 160.5 P
4 F
2.16 ("bootpath") 108 150.5 P
2 F
0.9 ( pr) 162 150.5 P
0.9 (operties of the) 173.99 150.5 P
4 F
2.16 ("/chosen") 233.42 150.5 P
2 F
0.9 ( node.) 282.02 150.5 P
2 14 Q
(9.4.  Caching) 72 121.17 T
1 10 Q
1 (The caches of the processor) 72 103.83 P
3 F
1 (shall) 190.57 103.83 P
1 F
1 ( be enabled when the client program is called. Memory areas allocated on) 210.02 103.83 P
1 (behalf of the client program) 72 91.83 P
3 F
1 (shall) 191.14 91.83 P
1 F
1 ( be marked as cacheable. Accesses to "I/O" devices \050especially) 210.59 91.83 P
1 (, to devices) 470.35 91.83 P
1 (across "bridges"\051) 72 79.83 P
3 F
1 (shall) 144.92 79.83 P
1 F
1 ( be made with the register access words \050e.g.,) 164.37 79.83 P
5 F
2.4 (rl@) 357.21 79.83 P
1 F
1 (\051.) 375.21 79.83 P
2 F
(%r6,%r7) 156.66 695.33 T
(see section) 215.34 695.33 T
(9.3.4.) 262.55 695.33 T
(Others) 156.66 680.33 T
(0) 215.34 680.33 T
151.66 705.5 208.84 719 R
6 X
V
0 X
(Register\050s\051) 156.66 708.33 T
209.84 705.5 460.84 719 R
6 X
V
0 X
(         V) 215.34 708.33 T
(alue) 244.14 708.33 T
461.84 705.5 496.34 719 R
6 X
V
0 X
(Notes) 467.34 708.33 T
1 7.5 Q
(T) 273.96 661 T
(able 2.) 278.01 661 T
( Initial Register V) 305.51 661 T
(alues) 358.63 661 T
150.66 719 150.66 675 2 L
V
2 H
0 Z
N
209.34 721 209.34 673 2 L
V
1 H
N
461.34 721 461.34 673 2 L
V
N
497.34 719 497.34 675 2 L
V
2 H
N
149.66 720 498.34 720 2 L
V
N
149.66 704 498.34 704 2 L
V
1 H
N
149.66 689 498.34 689 2 L
V
N
149.66 674 498.34 674 2 L
V
2 H
N
FMENDPAGE
%%EndPage: "22" 22
%%Page: "23" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(23) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(9.5.  Interrupts) 72 710.67 T
1 10 Q
1 (Open Firmware requires that interrupts be "vectored" to its handlers when it is in control of the processor; this) 72 693.33 P
1 (will occur when the User Interface is running. Client Interface calls are considered to execute in the) 72 681.33 P
1 (environment of the client, and hence, do not assume ownership of interrupts.) 72 669.33 P
1 (In order for Open Firmware to process interrupts in an ef) 72 650.33 P
1 (\336cient manner) 309.54 650.33 P
1 (, an area of memory for the exclusive) 367.63 650.33 P
1 (use by Open Firmware) 72 638.33 P
3 F
1 (shall) 169.87 638.33 P
1 F
1 ( be reserved by the client program at \050real\051 memory locations 0x1E0\3110x1FF) 189.32 638.33 P
1 (.) 509.19 638.33 P
1 (Open Firmware) 72 619.33 P
3 F
1 (shall) 139.54 619.33 P
1 F
1 ( save and restore the \336rst location of each interrupt that it wants to "take over". I.e.,) 158.99 619.33 P
1 (whenever Open Firmware needs the use of an interrupt, it) 72 607.33 P
3 F
1 (shall) 315 607.33 P
1 F
1 ( save the current contents of the corresponding) 334.45 607.33 P
1 (entry point and replace that location with a branch to its entry point. When Open Firmware returns control, it) 72 595.33 P
3 F
1 (shall) 72 583.33 P
1 F
1 ( restore the RAM location to its original contents.) 91.45 583.33 P
2 14 Q
(9.6.  Client callbacks) 72 552.67 T
1 10 Q
1 (This section de\336nes the callback mechanism that allows Open Firmware to access services exported to it by the) 72 535.33 P
1 (client program. As described in section 6.3.2.6 and the glossary entries for) 72 523.33 P
4 F
2.4 (callback) 383.95 523.33 P
1 F
1 ( and) 431.95 523.33 P
4 F
2.4 ($callback) 453.39 523.33 P
1 F
1 ( in [1],) 507.39 523.33 P
1 (the callback mechanism follows the same rules as those of Client interface calls. I.e., an) 72 511.33 P
3 F
1 (ar) 440.54 511.33 P
1 (gument array) 449.06 511.33 P
1 F
1 ( is) 504.22 511.33 P
1 (constructed by Open Firmware and the address of that array is passed \050via) 72 499.33 P
5 F
2.4 (%r3) 383.54 499.33 P
1 F
1 (\051 to the client\325) 401.54 499.33 P
1 (s callback routine;) 460.37 499.33 P
1 (the address of the callback routine is supplied to Open Firmware by means of the) 72 487.33 P
4 F
2.4 (set-callback) 413.89 487.33 P
1 F
1 ( client call.) 485.89 487.33 P
1 (If the system is running in Real-Mode, the address of the client callback routine) 72 468.33 P
3 F
1 (shall) 407.34 468.33 P
1 F
1 ( be a real \050hardware\051) 426.79 468.33 P
1 (address; if it is running in V) 72 456.33 P
1 (irtual-Mode, the client callback routine address) 189.62 456.33 P
3 F
1 (shall) 386.97 456.33 P
1 F
1 ( be a mapped virtual address.) 406.42 456.33 P
2 12 Q
(9.6.1.  Real-Mode physical memory management assist callback) 72 431 T
1 10 Q
(Once the control of physical memory is transferred to the client program, Open Firmware which is running in real-) 72 414.33 T
(mode must use the callback service provided by the client program to allocate physical memory) 72 402.33 T
(. Client programs) 454.62 402.33 T
(which expect Open Firmware to operate in read-mode must implement the following physical memory management) 72 390.33 T
(routine for Open Firmware:) 72 378.33 T
4 F
(alloc-real-mem) 72 362.33 T
(IN:) 108 350.33 T
([address] min_addr, [address] max_addr, size, mode) 144 350.33 T
(OUT:) 108 340.33 T
(error,) 144 340.33 T
([address] real_addr) 180 340.33 T
1 F
-0.67 (This routine allocates a contiguous physical memory of) 108 326.33 P
3 F
-0.67 (size) 327.06 326.33 P
1 F
-0.67 ( bytes within the address range between) 342.06 326.33 P
3 F
-0.67 (min_addr) 499.28 326.33 P
1 F
(and) 108 314.33 T
3 F
( max_addr) 122.44 314.33 T
1 F
(. The) 165.49 314.33 T
3 F
(mode) 188.54 314.33 T
1 F
( parameter contains the WIMGxPP bits as defined in section) 210.2 314.33 T
(7.  A non-zero error) 454.61 314.33 T
-0.38 (code) 108 302.33 P
3 F
-0.38 (shall) 129 302.33 P
1 F
-0.38 ( be returned if the mapping can not be performed. If error code is zero \050i.e. allocation is succeeded\051) 148.45 302.33 P
(the routine returns the base address of the physical memory allocated for Open Firmware.) 108 290.33 T
2 12 Q
(9.6.2.  V) 72 265 T
(irtual addr) 113.22 265 T
(ess translation assist callbacks) 169.34 265 T
1 10 Q
1 (As mentioned in section) 72 248.33 P
1 (5.2.6. , when Open Firmware is in V) 174.44 248.33 P
1 (irtual-Mode, client programs that take over control) 327.21 248.33 P
1 (of the system\325) 72 236.33 P
1 (s memory management must provide a set of callbacks that implement MMU functions. This) 130.11 236.33 P
1 (section de\336nes the input ar) 72 224.33 P
1 (guments and return values for these callbacks. The notation follows the style used in) 183.03 224.33 P
1 (chapter 6 of the Open Firmware speci\336cation [1].) 72 212.33 P
4 F
(map) 72 193.33 T
(IN:) 108 181.33 T
([address] phys, [address] virt, size, mode) 144 181.33 T
(OUT:) 108 171.33 T
(throw-code,) 144 171.33 T
(error) 216 171.33 T
1 F
-0.05 (This routine creates system-specific translation information; this will typically include the addition of PTEs) 108 157.33 P
-0.41 (to the HTAB. If the mapping is successfully performed, a value of zero) 108 145.33 P
3 F
-0.41 (shall) 390.1 145.33 P
1 F
-0.41 ( be placed in the) 409.55 145.33 P
3 F
-0.41 (error) 475.54 145.33 P
1 F
-0.41 ( cell of the) 496.65 145.33 P
(argument array; a non-zero error code) 108 133.33 T
3 F
(shall) 262.38 133.33 T
1 F
( be returned in) 281.83 133.33 T
3 F
(error) 342.37 133.33 T
1 F
( if the mapping can not be performed.) 363.48 133.33 T
4 F
(unmap) 72 117.33 T
(IN:) 108 105.33 T
([address] virt, size) 144 105.33 T
(OUT:) 108 95.33 T
(throw-code) 144 95.33 T
1 F
(The system removes any data structures \050e.g., PTEs\051 for the virtual address range.) 108 81.33 T
52 130 54 152 R
V
FMENDPAGE
%%EndPage: "23" 23
%%Page: "24" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(24) 531 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
4 10 Q
0 X
0 0 0 1 0 0 0 K
(translate) 72 713.33 T
(IN: [address] virt) 108 701.33 T
(OUT: throw-code, error, [address] real, mode) 108 691.33 T
1 F
(The system attempts to compute the real address \050) 108 677.33 T
3 F
(real) 307.97 677.33 T
1 F
(\051 to which the virtual address \050) 324.08 677.33 T
3 F
(virt) 446.28 677.33 T
1 F
(\051 is mapped. If the) 460.17 677.33 T
-0.23 (translation is successful, a PTE) 108 665.33 P
3 F
-0.23 (shall) 234.07 665.33 P
1 F
-0.23 ( be placed into the HTAB for this translation, the number of return cells) 253.52 665.33 P
-0.06 (shall be four with the resulting real address returned in) 108 653.33 P
3 F
-0.06 (real) 328.47 653.33 P
1 F
-0.06 ( and) 344.58 653.33 P
3 F
-0.06 (error) 363.9 653.33 P
1 F
-0.06 ( shall be set to) 385.01 653.33 P
5 F
-0.14 (false) 444.43 653.33 P
1 F
-0.06 ( \0500\051. If the trans-) 474.43 653.33 P
-0.36 (lation is not successful, the number of return cells) 108 641.33 P
3 F
-0.36 (shall) 306.36 641.33 P
1 F
-0.36 (be two and) 327.95 641.33 P
3 F
-0.36 (error shall) 373.23 641.33 P
1 F
-0.36 ( be set to a non-zero error code.) 415.93 641.33 P
-0.49 (This call) 108 625.33 P
3 F
-0.49 (shall) 144.25 625.33 P
1 F
-0.49 ( be made when Open Firmware handles a DSI/ISI within the User interface. A successful result) 163.7 625.33 P
-0.38 (of the translate call indicates that Open Firmware can complete the interrupted access; a failure indicates that) 108 613.33 P
(an access was made to an invalid address.) 108 601.33 T
2 14 Q
(10.  User Interface Requir) 72 570.67 T
(ements) 227.65 570.67 T
1 10 Q
1 (An implementation of Open Firmware for PowerPC) 72 553.33 P
3 F
1 (shall) 289.81 553.33 P
1 F
1 ( conform to the core requirements as speci\336ed in [1]) 309.26 553.33 P
1 (and the following PowerPC-speci\336c extensions.) 72 541.33 P
2 14 Q
(10.1.  Machine Register Access) 72 510.67 T
1 10 Q
1 (The following) 72 493.33 P
3 F
1 (user interface) 133.44 493.33 P
1 F
1 ( commands represent PowerPC registers within the) 189.71 493.33 P
3 F
1 (saved pr) 403.63 493.33 P
1 (ogram state) 438.42 493.33 P
1 F
1 (. Executing) 486.92 493.33 P
1 (the command returns the saved value of the corresponding register) 72 481.33 P
1 (. The saved value may be set by preceding) 346.78 481.33 P
1 (the command with) 72 469.33 P
2 F
1 (to) 151.94 469.33 P
1 F
1 (; the actual registers are restored to the saved values when) 160.27 469.33 P
2 F
1 (go) 405.93 469.33 P
1 F
1 ( is executed.) 415.93 469.33 P
2 12 Q
(10.1.1.  Branch Unit Registers) 72 444 T
5 10 Q
(%cr) 72 427.33 T
1 F
1 (Access saved copy of Condition Register) 90 412.33 P
1 (.) 259.15 412.33 P
5 F
(%ctr) 72 394.33 T
1 F
1 (Access saved copy of Count Register) 90 379.33 P
1 (.) 243.59 379.33 P
5 F
(%lr) 72 361.33 T
1 F
1 (Access saved copy of Link Register) 90 346.33 P
1 (.) 238.03 346.33 P
5 F
(%msr) 72 328.33 T
1 F
1 (Access saved copy of the low order 16 bits of SRR1 register) 90 313.33 P
1 (.) 341.8 313.33 P
5 F
2.4 (%srr0) 72 295.33 P
1 F
1 (and) 110.4 295.33 P
5 F
2.4 ( %srr1) 124.84 295.33 P
1 F
1 (Access saved copy of Save/Restore Registers.) 90 280.33 P
5 F
(%pc) 72 262.33 T
1 F
1 (An alias of ") 90 247.33 P
2 F
1 (%srr0) 143.46 247.33 P
1 F
1 (") 171.23 247.33 P
2 12 Q
(10.1.2.  Fixed-Point Registers) 72 224 T
5 10 Q
2.4 (%r0) 72 207.33 P
1 F
1 (through) 98.4 207.33 P
5 F
2.4 ( %r31) 129.51 207.33 P
1 F
1 (Access saved copies of \336xed-point registers.) 90 192.33 P
5 F
(%xer) 72 174.33 T
1 F
1 (Access saved copy of XER register) 90 159.33 P
1 (.) 235.8 159.33 P
5 F
2.4 (%sprg0) 72 141.33 P
1 F
1 (through) 116.4 141.33 P
5 F
2.4 ( %sprg3) 147.51 141.33 P
1 F
1 (Access saved copies of SPRG registers.) 90 126.33 P
52 638 54 684 R
V
FMENDPAGE
%%EndPage: "24" 24
%%Page: "25" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(25) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(10.1.3.  Floating-Point Registers) 72 712 T
1 10 Q
1 (Unlike the other registers, the \337oating point unit registers are not normally saved, since they are not used by) 72 695.33 P
1 (Open Firmware. The following access words, therefore, access the registers directly) 72 683.33 P
1 (.) 417.09 683.33 P
5 F
2.4 (%f0) 72 664.33 P
1 F
1 (through) 98.4 664.33 P
5 F
2.4 ( %f31) 129.51 664.33 P
1 F
1 (Access \337oating point registers.) 90 649.33 P
5 F
(%fpscr) 72 631.33 T
1 F
1 (Access Floating Point Status and Control Register) 90 616.33 P
1 (.) 296.01 616.33 P
1 (The following command displays the PowerPC CPU's) 72 598.33 P
3 F
1 (saved pr) 298.3 598.33 P
1 (ogram state) 333.09 598.33 P
1 F
1 (.) 381.59 598.33 P
5 F
(.registers) 72 579.33 T
2 14 Q
(1) 72 548.67 T
(1.  Con\336guration V) 78.23 548.67 T
(ariables) 192.06 548.67 T
1 10 Q
1 (In addition to the standard Con\336guration V) 72 531.33 P
1 (ariables de\336ned by the core Open Firmware document [1], the) 249.66 531.33 P
1 (following Con\336guration V) 72 519.33 P
1 (ariables) 179.56 519.33 P
3 F
1 (shall) 214.16 519.33 P
1 F
1 ( be implemented for PowerPC:) 233.61 519.33 P
5 F
("little-endian?") 72 500.33 T
1 F
1 (This boolean variable controls the endian-mode of Open Firmware. If) 90 485.33 P
5 F
2.4 (true) 381.33 485.33 P
1 F
1 ( \050-1\051, the endian-mode is Little-) 405.33 485.33 P
1 (Endian; if) 90 475.33 P
5 F
2.4 (false) 134.22 475.33 P
1 F
1 ( \0500\051, the endian-mode is Big-Endian. The default value is implementation dependent.) 164.22 475.33 P
5 F
("real-mode?") 72 457.33 T
1 F
0.94 (This boolean variable controls the address translation mode of Open Firmware. If) 90 442.33 P
5 F
2.25 (true) 429.78 442.33 P
1 F
0.94 ( \050-1\051, the addressing) 453.78 442.33 P
1 (mode is Real-Mode; if) 90 432.33 P
5 F
2.4 (false) 186.77 432.33 P
1 F
1 ( \0500\051, the addressing mode is V) 216.77 432.33 P
1 (irtual-Mode. The default value is) 342.43 432.33 P
1 (implementation dependent.) 90 422.33 P
5 F
("real-base") 72 404.33 T
1 F
1 (This integer variable de\336nes the starting physical address to be used by Open Firmware.) 90 389.33 P
5 F
("real-size") 72 371.33 T
1 F
1 (This integer variable de\336nes the size of the physical address space which can be used by Open Firmware.) 90 356.33 P
5 F
("virt-base") 72 338.33 T
1 F
1 (This integer variable de\336nes the starting virtual memory address which can be used by Open Firmware.) 90 323.33 P
5 F
("virt-size") 72 305.33 T
1 F
1 (This integer variable de\336nes the size of the virtual address space which can be used by Open Firmware.) 90 290.33 P
5 F
2.4 ("load-base") 75.5 275.33 P
1 F
0.84 (This integer variable de\336nes the default load address for) 90 260.33 P
3 F
0.84 (client pr) 324.97 260.33 P
0.84 (ogram) 359.05 260.33 P
1 F
0.84 (s when using the) 385.16 260.33 P
5 F
2.01 (load) 457.94 260.33 P
1 F
0.84 ( method. The) 481.94 260.33 P
1 (default value is implementation dependent.) 90 250.33 P
2 14 Q
(12.  MP Extensions) 72 221.67 T
1 10 Q
1 (This section speci\336es the application of Open Firmware to PowerPC multiprocessor \050MP\051 systems. An Open) 72 204.33 P
1 (Firmware implementation for an MP PowerPC system shall implement the extensions described in this section) 72 192.33 P
1 (as well as the requirements described in previous sections of this binding.) 72 180.33 P
2 14 Q
(12.1.  The Device T) 72 149.67 T
(r) 185.29 149.67 T
(ee) 191.25 149.67 T
1 10 Q
1.09 (This section de\336nes an additional property under the "/chosen" Node for a MP extension. Refer to Section 6.2.1.) 72 132.33 P
1 (for more details about the device tree structure for a MP Con\336guration.) 72 120.33 P
2 12 Q
(12.1.1.  Additional Pr) 72 95 T
(operties) 181.13 95 T
1 10 Q
1 ("/chosen" Node Properties) 72 78.33 P
FMENDPAGE
%%EndPage: "25" 25
%%Page: "26" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(26) 531 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
5 10 Q
0 X
0 0 0 1 0 0 0 K
("cpu") 63 713.33 T
3 F
1 (pr) 81 698.33 P
1 (op-name) 89.52 698.33 P
1 F
1 (, identi\336es the running CPU.) 124.51 698.33 P
3 F
1 (pr) 81 680.33 P
1 (op-encode-array) 89.52 680.33 P
1 F
1 (: An integer) 156.72 680.33 P
1 (, encoded as with) 206.09 680.33 P
2 F
1 (encode-int,) 282.02 680.33 P
1 F
1 (which contains the i-handle of the CPU node) 332.46 680.33 P
1 (that is associated with the "running" CPU.) 81 670.33 P
2 14 Q
(12.2.  Initialization) 63 641.67 T
1 10 Q
1 (Open Firmware shall select one processor) 63 624.33 P
1 (, using an algorithm of its choice, to be the \322master\323 processor) 235.06 624.33 P
1 (, which) 495.34 624.33 P
1 (performs the role of the single processor on a uniprocessor system, either booting the client or providing the) 63 612.33 P
1 (user interface. Open Firmware shall place all the remaining processors into stopped state, a state in which the) 63 600.33 P
1 (processor does not perform Open Firmware or client functions and does not interfere with the operation of the) 63 588.33 P
1 (master processor) 63 576.33 P
1 (. A processor in stopped state remains in that state unless and until an executing client starts it) 130.93 576.33 P
1 (using the ST) 63 564.33 P
1 (AR) 114.76 564.33 P
1 (T) 128.05 564.33 P
1 (-CPU client service de\336ned below) 133.24 564.33 P
1 (.) 273.79 564.33 P
1 (Client programs shall use the Open \336rmware) 63 545.33 P
4 F
2.4 (start-cpu) 251.92 545.33 P
1 F
1 ( client interface service to start all processors before) 305.92 545.33 P
1 (it reclaims the Open Firmware memory) 63 533.33 P
1 (On machines in which a machine check on one processor is broadcast to all processors, the processors which) 63 514.33 P
1 (are either in the idle or stopped state shall not change their states due to a machine check on another processor:) 63 502.33 P
1 (Open Firmware shall not depend on the contents of the low vector \050IP=0\051 in the event of a machine check.) 63 490.33 P
1.89 (The following State Diagram depicts the relationship of the) 63 471.33 P
2 F
1.89 (Running) 320.26 471.33 P
1 F
1.89 (,) 357.5 471.33 P
2 F
1.89 (Stopped) 364.39 471.33 P
1 F
1.89 ( and) 399.4 471.33 P
2 F
1.89 (Idle States) 422.62 471.33 P
1 F
1.89 ( to each other) 469.23 471.33 P
1.89 (.) 528.5 471.33 P
1 (The) 63 459.33 P
3 F
1 (Client Interface Service) 82.05 459.33 P
1 F
1 ( Calls are shown as how to move between the states.) 179.03 459.33 P
2 9 Q
(FIGURE  1) 63 437.33 T
2 10 Q
(State Diagram) 117 437.33 T
63 72 531 720 C
99 112 495 434 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
7 X
0 0 0 1 0 0 0 K
90 450 49.5 51.75 177.26 346.25 G
0.5 H
2 Z
0 X
90 450 49.5 51.75 177.26 346.25 A
7 X
90 450 49.5 49.5 375.27 348.5 G
0 X
90 450 49.5 49.5 375.27 348.5 A
7 X
90 450 49.5 50 375.27 169 G
0 X
90 450 49.5 50 375.27 169 A
314.23 365.31 325.77 362 314.23 358.69 315.43 362 4 Y
V
226.76 362 315.43 362 2 L
N
238.3 331.69 226.76 335 238.3 338.31 237.1 335 4 Y
V
325.77 335 237.1 335 2 L
N
365.07 229.53 361.77 218 358.46 229.53 361.77 228.33 4 Y
V
361.77 299 361.77 228.33 2 L
N
385.46 287.46 388.77 299 392.07 287.46 388.77 288.67 4 Y
V
388.77 218 388.77 288.67 2 L
N
4 10 Q
(start-cpu) 253.76 380 T
(stop-self) 253.76 317 T
(idle-self) 307.77 256.16 T
(resume-cpu) 395.66 256.16 T
1 F
(Stopped State) 145.76 346.16 T
(Running State) 349.85 346.16 T
(Idle State) 352.77 164 T
63 72 531 720 C
0 0 612 792 C
43 434 45 571 R
0 X
0 0 0 1 0 0 0 K
V
FMENDPAGE
%%EndPage: "26" 26
%%Page: "27" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(27) 72 750 T
(PowerPC Processor binding) 435.49 750 T
-0.45 (February 7, 1996 Revision 1.8) 427.99 38 P
72 738 540 738 2 L
1 H
2 Z
N
72 54 540 54 2 L
N
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
27 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 36 711 T
(2) 36 699 T
(3) 36 687 T
(4) 36 675 T
(5) 36 663 T
(6) 36 651 T
(7) 36 639 T
(8) 36 627 T
(9) 36 615 T
(10) 36 603 T
(11) 36 591 T
(12) 36 579 T
(13) 36 567 T
(14) 36 555 T
(15) 36 543 T
(16) 36 531 T
(17) 36 519 T
(18) 36 507 T
(19) 36 495 T
(20) 36 483 T
(21) 36 471 T
(22) 36 459 T
(23) 36 447 T
(24) 36 435 T
(25) 36 423 T
(26) 36 411 T
(27) 36 399 T
(28) 36 387 T
(29) 36 375 T
(30) 36 363 T
(31) 36 351 T
(32) 36 339 T
(33) 36 327 T
(34) 36 315 T
(35) 36 303 T
(36) 36 291 T
(37) 36 279 T
(38) 36 267 T
(39) 36 255 T
(40) 36 243 T
(41) 36 231 T
(42) 36 219 T
(43) 36 207 T
(44) 36 195 T
(45) 36 183 T
(46) 36 171 T
(47) 36 159 T
(48) 36 147 T
(49) 36 135 T
(50) 36 123 T
(51) 36 111 T
(52) 36 99 T
(53) 36 87 T
(54) 36 75 T
(55) 36 63 T
27 72 54 720 C
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(12.3.   Client Interface Services) 72 710.67 T
1 10 Q
1.63 (The following client services are added for MP support on PowerPC systems. These interfaces make the client) 72 693.33 P
1.89 (program responsible for any Inter) 72 681.33 P
1.89 (-CPU communication needed for these interfaces. The rationale for this is to) 213.75 681.33 P
1.9 (architecturally separate the Inter) 72 669.33 P
1.9 (-CPU communication mechanism of the \336rmware from the client program and) 206.62 669.33 P
1 (vice versa.) 72 657.33 P
1 (The following four services are required: \0501\051 start-cpu, \0502\051 stop-self, \0503\051 idle-self, and \0504\051 resume-cpu.) 72 640.33 P
4 F
(start-cpu) 72 621.33 T
(IN:) 108 609.33 T
(nodeid, pc, arg) 144 609.33 T
(OUT:) 108 599.33 T
(none) 144 599.33 T
1 F
(This client interface service starts the CPU) 108 585.33 T
(The) 108 569.33 T
3 F
(nodeid) 126.05 569.33 T
1 F
( is the phandle of a node whose device-type is \322cpu\323.) 153.27 569.33 T
4 F
-0.48 (Start-cpu) 108 553.33 P
1 F
-0.2 ( arranges for the CPU identified by phandle in) 162 553.33 P
3 F
-0.2 (nodeid) 347.67 553.33 P
1 F
-0.2 ( to begin executing client code at the real) 374.89 553.33 P
-0.46 (address given by the) 108 541.33 P
3 F
-0.46 (pc) 190.58 541.33 P
1 F
-0.46 (input with an argument,) 202.06 541.33 P
3 F
-0.46 (arg,) 298.27 541.33 P
1 F
-0.46 ( passed in register r3. When it begins execution, the start-) 314.66 541.33 P
-0.14 (ed processor shall be in the endian mode of the client program, and in real \050not translated\051 addressing mode.) 108 529.33 P
(The contents of registers other than r3 are indeterminate.) 108 517.33 T
-0.08 ( A client should not call) 108 501.33 P
4 F
-0.18 (start-cpu) 205.87 501.33 P
1 F
-0.08 (for the processor on which it is running, effectively restarting with a) 265.69 501.33 P
-0.1 (new pc and abandoning the only client thread. A jump or branch instruction shall be used instead to achieve) 108 489.33 P
(the objective.) 108 477.33 T
4 F
-0.58 (start-cpu) 108 461.33 P
1 F
-0.24 ( permits more than one processor to run at the same time, enabling multi-threaded client execu-) 162 461.33 P
(tion. In general, an Open Firmware client shall avoid multi-threaded operation within Open Firmware. Usu-) 108 449.33 T
-0.55 (ally, this means that client threads running on different CPUs must use mutual exclusion to prevent more than) 108 437.33 P
-0.62 (one processor from making client service requests at any one time. The exceptions are that a client thread may) 108 425.33 P
(invoke either the) 108 413.33 T
4 F
(stop-self) 177.71 413.33 T
1 F
( or) 231.71 413.33 T
4 F
(idle-self) 245.04 413.33 T
1 F
( client services defined below at any time.) 299.04 413.33 T
2 9 Q
0.9 (Note: The r) 108 395 P
0.9 (esults ar) 154.12 395 P
0.9 (e unde\336ned if the CPU identi\336ed by *phandle* has alr) 187.11 395 P
0.9 (eady been) 402.83 395 P
0.9 (started \050e.g it is alr) 108 385 P
0.9 (eady running and has not exited\051 or *phandle* is not a valid package) 183.67 385 P
0.9 (handle of a CPU device node.) 108 375 P
4 10 Q
(stop-self) 72 360.33 T
(IN:) 108 348.33 T
(none) 144 348.33 T
(OUT:) 108 338.33 T
(none) 144 338.33 T
1 F
-0.18 (Open Firmware places the processor on which the caller was running into the stopped state. Control will not) 108 324.33 P
(be passed back to the client program..) 108 312.33 T
2 9 Q
0.9 (Note: When an MP client pr) 108 294 P
0.9 (ogram exits, one CPU invokes the) 221.08 294 P
4 10 Q
2.4 (exit) 357.71 294 P
2 9 Q
0.9 ( client interface ser-) 381.71 294 P
0.9 (vice, the others invoke the) 108 284 P
4 10 Q
2.4 (stop-self) 214.49 284 P
2 9 Q
0.9 ( service.) 268.49 284 P
4 10 Q
(idle-self) 72 269.33 T
(IN:) 108 257.33 T
(none) 144 257.33 T
(OUT:) 108 247.33 T
(none) 144 247.33 T
1 F
(Open Firmware places the CPU on which this service was invoked into an 'idle' state, saving the *current) 108 233.33 T
(state* of the client program, so that the client program may be resumed.) 108 221.33 T
(A processor in idle state can be resumed using) 108 205.33 T
4 F
(resume-cpu) 296.02 205.33 T
1 F
( service defined below or restarted using) 356.02 205.33 T
4 F
(start-cpu) 108 193.33 T
1 F
(. If the processor is resumed, it executes a normal return to the client, as if its call to) 162 193.33 T
4 F
(idle-) 499.72 193.33 T
(self) 108 181.33 T
1 F
( had just completed.) 132 181.33 T
2 9 Q
0.79 (Note: When a client pr) 108 163 P
0.79 (ogram wants to enter the \336rmwar) 198.5 163 P
0.79 (e user interface, one CPU invokes) 332.02 163 P
0.9 (the) 108 153 P
4 10 Q
2.4 (enter) 123.15 153 P
2 9 Q
0.9 ( client interface service, the others invoke the) 153.15 153 P
4 10 Q
2.4 (idle-self) 335.56 153 P
2 9 Q
0.9 ( service. The ratio-) 389.56 153 P
0.9 (nal is that the user interface may affect the machine state in any way that it desir) 108 143 P
0.9 (es, ther) 431.69 143 P
0.9 (e-) 460.42 143 P
0.9 (for) 108 133 P
0.9 (e the client shall not depend on it.) 119.33 133 P
4 10 Q
(resume-cpu) 72 118.33 T
(IN:) 108 106.33 T
(nodeid) 144 106.33 T
(OUT:) 108 96.33 T
(none) 144 96.33 T
1 F
(This client interface service is used to resume an *idled* CPU.) 108 82.33 T
52 637 54 664 R
V
52 550 54 576 R
V
52 498 54 508 R
V
52 458 54 468 R
V
FMENDPAGE
%%EndPage: "27" 27
%%Page: "28" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(PowerPC Processor binding) 72 750 T
(28) 531 750 T
(February 7, 1996 Revision 1.8) 72 38 T
540 738 72 738 2 L
1 H
2 Z
N
540 54 72 54 2 L
N
558 72 585 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
558 72 585 720 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
18 72 54 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
18 72 54 720 R
7 X
0 0 0 1 0 0 0 K
V
1 12 Q
0 X
(1) 27 711 T
(2) 27 699 T
(3) 27 687 T
(4) 27 675 T
(5) 27 663 T
(6) 27 651 T
(7) 27 639 T
(8) 27 627 T
(9) 27 615 T
(10) 27 603 T
(11) 27 591 T
(12) 27 579 T
(13) 27 567 T
(14) 27 555 T
(15) 27 543 T
(16) 27 531 T
(17) 27 519 T
(18) 27 507 T
(19) 27 495 T
(20) 27 483 T
(21) 27 471 T
(22) 27 459 T
(23) 27 447 T
(24) 27 435 T
(25) 27 423 T
(26) 27 411 T
(27) 27 399 T
(28) 27 387 T
(29) 27 375 T
(30) 27 363 T
(31) 27 351 T
(32) 27 339 T
(33) 27 327 T
(34) 27 315 T
(35) 27 303 T
(36) 27 291 T
(37) 27 279 T
(38) 27 267 T
(39) 27 255 T
(40) 27 243 T
(41) 27 231 T
(42) 27 219 T
(43) 27 207 T
(44) 27 195 T
(45) 27 183 T
(46) 27 171 T
(47) 27 159 T
(48) 27 147 T
(49) 27 135 T
(50) 27 123 T
(51) 27 111 T
(52) 27 99 T
(53) 27 87 T
(54) 27 75 T
(55) 27 63 T
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The) 108 713.33 T
3 F
(nodeid) 126.05 713.33 T
1 F
( is the phandle of a CPU node in idle state.) 153.27 713.33 T
4 F
(resume-cpu) 108 697.33 T
1 F
( arranges for that CPU to restore the CPU\325s state as saved by) 168 697.33 T
4 F
(idle-self) 413.79 697.33 T
1 F
( and begin return) 467.79 697.33 T
(to the client, completing the idle-self client service call that placed the CPU into idle state.) 108 685.33 T
-0.36 (The results are undefined if the CPU identified by *phandle* is not in an *idle* state by a previous call to the) 108 669.33 P
4 F
(idle-self) 108 657.33 T
1 F
( client interface service.) 162 657.33 T
2 9 Q
0.9 (Note: When the client pr) 108 639 P
0.9 (ogram is r) 206.42 639 P
0.9 (esumed via the GO \050or similar\051 user interface com-) 247.55 639 P
0.9 (mand, the client pr) 108 629 P
0.9 (ogram is r) 183.54 629 P
0.9 (esumed on the CPU which called the) 224.67 629 P
4 10 Q
2.4 (enter) 373.21 629 P
2 9 Q
0.9 ( service; the cli-) 403.21 629 P
0.9 (ent pr) 108 619 P
0.9 (ogram is r) 131.99 619 P
0.9 (esponsible for calling the) 173.12 619 P
4 10 Q
2.4 (resume-cpu) 274.22 619 P
2 9 Q
0.9 ( service to r) 334.22 619 P
0.9 (esume other idled) 381.49 619 P
0.9 (CPU's, if that is the desir) 108 609 P
0.9 (ed client pr) 208.33 609 P
0.9 (ogram behavior) 253.47 609 P
0.9 (.) 314.78 609 P
2 14 Q
(12.4.  Br) 72 579.67 T
(eakpoints) 122.3 579.67 T
1 10 Q
1 (If the breakpoint is taken by the \336rmware, without the client program's assistance, the other CPUs will continue) 72 562.33 P
1 (to run in the client program. The client program may \336eld the breakpoint 'trap' or 'vector' and idle the other) 72 550.33 P
1 (CPUs before entering the PROM. The platform binding document has to specify how this is done to avoid loss) 72 538.33 P
1 (of state at breakpoint time.) 72 526.33 P
2 14 Q
(12.5.  Serialization) 72 495.67 T
1 10 Q
1 (The \336rmware is a single threaded program, from the client program's point of view) 72 478.33 P
1 (. Only the IDLE-SELF) 416.09 478.33 P
1 (,) 509.95 478.33 P
1 (ST) 72 466.33 P
1 (OP-SELF) 83.49 466.33 P
1 (, ENTER and EXIT client interfaces may be invoked simultaneously on dif) 122.14 466.33 P
1 (ferent CPUs.) 434.03 466.33 P
1 (Furthermore, only a single CPU may invoke the ENTER or EXIT client interface at any one time. The other) 72 454.33 P
1 (CPUs must use the IDLE-SELF or ST) 72 442.33 P
1 (OP-SELF client interface service.) 230.6 442.33 P
2 9 Q
0.9 (Note:  The r) 108 424 P
0.9 (esults ar) 157.27 424 P
0.9 (e unde\336ned if the client pr) 190.26 424 P
0.9 (ogram invokes client interface services) 295.35 424 P
0.9 (including br) 108 414 P
0.9 (eakpoint traps \050other than the ENTER/EXIT ST) 156.01 414 P
0.9 (OP-SELF/IDLE-SELF case) 347.76 414 P
0.9 (listed above\051 simultaneously on mor) 108 404 P
0.9 (e than a single CPU.) 249.44 404 P
0.88 (Note: Since locking mechanisms ar) 108 387 P
0.88 (e subject to client pr) 245.34 387 P
0.88 (ogram policy) 326.66 387 P
0.88 (, the client pr) 377.29 387 P
0.88 (ogram is) 430.75 387 P
0.9 (r) 108 377 P
0.9 (esponsible for implementing any necessary mechanism to insur) 111.83 377 P
0.9 (e that it adher) 359.72 377 P
0.9 (es to this) 416.5 377 P
0.9 (policy) 108 367 P
0.9 (. Further) 130.51 367 P
0.9 (, the client pr) 165.57 367 P
0.9 (ogram should disable any pr) 219.1 367 P
0.9 (e-emption mechanism befor) 332.06 367 P
0.9 (e call-) 440.68 367 P
0.9 (ing a client interface service to avoid r) 108 357 P
0.9 (escheduling a thr) 260.36 357 P
0.9 (ead of execution in the \336rmwar) 328.01 357 P
0.9 (e) 452.08 357 P
0.9 (on a differ) 108 347 P
0.9 (ent CPU if such a mechanism exists in the client pr) 149.63 347 P
0.9 (ogram.) 352.96 347 P
52 710 54 720 R
V
FMENDPAGE
%%EndPage: "28" 28
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 28
%%DocumentFonts: Times-BoldItalic
%%+ Times-Roman
%%+ Times-Bold
%%+ Times-Italic
%%+ Courier
%%+ Courier-Bold
%%+ Courier-Oblique
%%EOF
