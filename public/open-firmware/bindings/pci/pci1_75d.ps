%!PS-Adobe-3.0
%%Title: (PCI_1.75_Book)
%%Creator: (FrameMaker5 PPC\244: LaserWriter 8 8.3.3)
%%CreationDate: (12:56 Monday, June 17, 1996)
%%For: (Ron Hochsprung)
%%Pages: 27
%%DocumentFonts: Times-Bold Times-BoldItalic Times-Roman Times-Italic Courier Courier-Bold Courier-BoldOblique Courier-Oblique
%%DocumentNeededFonts: Times-Bold Times-BoldItalic Times-Roman Times-Italic Courier Courier-Bold Courier-BoldOblique Courier-Oblique
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%ADO_ImageableArea: 18 8 594 784
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(PCI_1.75_Book)def
/Creator(FrameMaker5 PPC\244: LaserWriter 8 8.3.3)def
/CreationDate(12:56 Monday, June 17, 1996)def
/For(Ron Hochsprung)def
/Pages 27 def
end def end
/md 209 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 83 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/:rg{/DeviceRGB :ss}bd
/:sc{$cs :ss}bd
/:dc{/$cs xdf}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
/$cs Z
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
$cs
}bd
/popstatic
{
/$cs xs
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div setgray 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *PageRegion Letter
level2 { 
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/letter where {pop letter}{letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
(Ron Hochsprung)setjob
/mT[1 0 0 -1 18 784]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Bold
%%IncludeFont: Times-BoldItalic
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Italic
%%IncludeFont: Courier
%%IncludeFont: Courier-Bold
%%IncludeFont: Courier-BoldOblique
%%IncludeFont: Courier-Oblique
/f0_1/Times-Bold
:mre
/f0_24 f0_1 24 scf
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f0_9 f0_1 9 scf
/f1_1/Times-BoldItalic
:mre
/f1_24 f1_1 24 scf
/f1_12 f1_1 12 scf
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f2_1/Times-Roman
:mre
/f2_12 f2_1 12 scf
/f2_10 f2_1 10 scf
/f2_9 f2_1 9 scf
/f2_8 f2_1 8 scf
/f3_1/Times-Italic
:mre
/f3_10 f3_1 10 scf
/f3_9 f3_1 9 scf
/f4_1/Courier
:mre
/f4_12 f4_1 12 scf
/f4_10 f4_1 10 scf
/f4_9 f4_1 9 scf
/f5_1/Courier-Bold
:mre
/f5_12 f5_1 12 scf
/f5_10 f5_1 10 scf
/f5_9 f5_1 9 scf
/f6_1/Courier-BoldOblique
:mre
/f7_1 f6_1
def
/f7_10 f7_1 10 scf
/f7_9 f7_1 9 scf
/f8_1/Courier-Oblique
:mre
/f9_1 f8_1
def
/f9_10 f9_1 10 scf
/f9_9 f9_1 9 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
% Frame PostScript Prolog for use with Macintosh Frame Products 5.0.1
% Copyright (c) 1986-95 Frame Technology Corp.  All rights reserved.
%%BeginProcSet: "FrameMacDict" 501 1
userdict/FrameMacDict 250 dict put FrameMacDict begin systemdict/setpacking
known{/fMSP currentpacking def true setpacking}if[/fM1/fM18/fM2/fM3/fM4/fMAB
/fM5/fM6/fM8/fM9/fMBC/fMBM/fMC/fMCD/fMCG/fMCK/fMCM/fMCl/fMCO/fMef/fMet/fMeh
/fMew/fMey/fMex/fMei/fMej/fMek/fMel/fMFl/fMGC/fMGL/fMGM/fMIx/fMJB/fMJC/fMJG
/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMN/fMNC/fMNg/fMND/fMOx/fMPC/fMPH/fMPt/fMRC
/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMdm/fM2x/fMa2/fMi/fMk/fms/fmBS/fMdp/freq/sangle
/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/fM1B/fM0B/fMdc/fMds]{0 def}
forall/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCl fML1{
/statusdict where{pop statusdict/processcolors known{statusdict/processcolors
get exec 1 gt}{F}ifelse}{F}ifelse}{T}ifelse def/fMXN/statusdict where{pop
statusdict/product known{statusdict/product get}{(Unknown)}ifelse}{(Unknown)}
ifelse def/fMHq fMXN(LaserWriter-Sim)eq def/FmBD{bind def}bind def/fmBx{[exch{
dup/FrameMacDict eq{pop FrameMacDict}{dup type dup/arraytype eq exch
/packedarraytype eq or{dup xcheck{fmBi}if}if}ifelse}forall]cvx}FmBD/fmBi{bind
fmBx}FmBD fML1{userdict/FrMacBegin{FrameMacDict begin}fmBi put/FmE{end}FmBD}{
/fMdc 6 array def userdict/FrMacBegin{FrameMacDict begin/fMds currentcolorspace
store mark 0 0 0 0 0 currentcolor fMdc astore pop cleartomark}fmBi put/FmE{fMds
setcolorspace mark fMdc aload pop setcolor cleartomark end}FmBD}ifelse/fMEd 35
dict def/fmPE{fMEd 3 1 roll fmBi put}bind def/T true def/F false def userdict
/FrameSuccessfull F put userdict/FrameEndPictSave F put userdict
/FrameEndPictStopped F put userdict/fM7 known not{userdict/fM7 0 put}if/fmXD{
exch def}FmBD/FmG/gsave load def/FmR/grestore load def/fm_l/grestoreall load
def/fm_v/save load def/fm_g/setgray load def/fm_r/setrgbcolor load def/fm_h
/sethsbcolor load def/fm_f/fill load def/fm_e/eofill load def/fm_t/stroke load
def/fm_m/imagemask load def/fm_i/image load def/fm_s/show load def/fm_a/ashow
load def/fm_w/widthshow load def/fm_y/awidthshow load def/RealKshow/kshow load
def/fMdm matrix defaultmatrix def/fM2x matrix def/fMa2 matrix def/fmSM{fM2x
currentmatrix pop}FmBD/fmRM{fM2x setmatrix}FmBD/FmRF{currentpoint 2 copy
translate 4 2 roll{-1 1 scale}if rotate neg exch neg exch translate}FmBD/fmax{2
copy lt{exch}if pop}FmBD/fmin{2 copy gt{exch}if pop}FmBD systemdict/pdfmark
known{/fMAB true def/FmPD/pdfmark load def/FmPT/fm_s load def
currentdistillerparams/CoreDistVersion get 2000 ge{/FmPD2/pdfmark load def/FmPA
{mark exch/Dest exch 5 3 roll/View[/XYZ null 6 -2 roll FmDC exch pop null]/DEST
FmPD}FmBD}{/FmPD2/cleartomark load def/FmPA{pop pop pop}FmBD}ifelse}{/fMAB
false def/FmPD/cleartomark load def/FmPD2/cleartomark load def/FmPT/pop load
def/FmPA{pop pop pop}FmBD}ifelse/FmDC{transform fMdm itransform cvi exch cvi
exch}FmBD/FmBx{dup 3 index lt{3 1 roll exch}if 1 index 4 index lt{4 -1 roll 3 1
roll exch 4 1 roll}if}FmBD/fmgS 32 array def/fMgt 0 def/fMtp 0 def/fmSG{fmgS
fMgt get dup null eq{pop fmgS fMgt 10 dict dup 4 1 roll put}if 3 1 roll put}
FmBD/fmGG{fMgt -1 -1{fmgS exch get dup null ne{2 copy exch known{2 copy exch
get/_notdef ne{exch get dup exit}if}if}if pop}for pop}FmBD/gsave{FrameMacDict
begin FmG/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{dup dup{pop
/_notdef put dup}forall pop pop}ifelse end}fmPE/grestore{FrameMacDict begin
fMgt fMtp gt{/fMgt fMgt 1 sub def}if FmR null fmCN end}fmPE/grestoreall{
FrameMacDict begin/fMgt fMtp def fm_l null fmCN end}fmPE/save{FrameMacDict/fm_v
get exec FrameMacDict begin/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{
dup dup{pop/_notdef put dup}forall pop pop}ifelse/fMtp fMgt def end}fmPE/fMND F
def/fMCC null fmSG/fMOP F fmSG/fMKO F fmSG/fmRY{1 exch sub 3 1 roll 1 exch sub
3 1 roll 1 exch sub 3 1 roll 3 copy 2 copy le{pop}{exch pop}ifelse 2 copy le{
pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1 roll 7 1 roll sub 6 1 roll sub 5
1 roll sub 4 1 roll}fmSG/fmkn{2 copy known{get T}{pop pop false}ifelse}FmBD
/fmfp{exch currentfont dup/FontMatrix get exch/FontInfo fmkn{T}{currentfont/df
fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix get mtx concatmatrix exch T}{pop pop
pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1 roll fmkn{exch 0 3 1 roll dtransform
neg exch pop exch pop}{pop exec}ifelse}{exec}ifelse}FmBD/fmdl{3 index 16 and 0
ne{FmG currentlinewidth 2. div dup rmoveto currentpoint newpath moveto 2 index
0 rlineto fm_t FmR}if 3 index 24 and 0 ne{FmG currentrgbcolor dup 4 1 roll eq 3
1 roll eq and{1 currentgray sub setgray}{1 setgray}ifelse 2 index 0 rlineto
fm_t FmR FmG 2 index 0 rlineto strokepath .24 setlinewidth fm_t FmR}{2 index 0
rlineto fm_t 0 0 moveto}ifelse}FmBD/FmUl{FmG/fM2 fmXD currentpoint
/UnderlineThickness{fM2 15 div}fmfp abs dup setlinewidth/fM1 fmXD 4 index 1 and
0 ne{newpath 2 copy moveto 0/UnderlinePosition{fM2 10 div neg}fmfp neg rmoveto
fmdl}if 4 index 2 and 0 ne{newpath 2 copy moveto 0/XHeight{FmG newpath 0 0
moveto(x)F charpath flattenpath pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop
fM2 2. mul 3. div neg}if}fmfp 2. div rmoveto fmdl}if 4 index 4 and 0 ne{newpath
2 copy moveto 0/CapHeight{FmG newpath 0 0 moveto(H)F charpath flattenpath
pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop fM2 3. mul 4. div neg}if}fmfp
fM1 sub rmoveto fmdl}if pop pop pop pop pop FmR}FmBD/FmTx{/fM3 fmXD/fM2 fmXD
/fM1 fmXD 0 32 fM1 fM3 stringwidth pop fM2 sub fM3 length div sub 0 fM3 fm_y}
FmBD/fMN 0 def/fMC 1 def/fMM 2 def/fMY 3 def/fMK 4 def/fMS 5 def/fMNg 0
currenttransfer exec .5 gt def/fMCM fMN def/fMJK 0 def/fMJY 0 def/fMJM 0 def
/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1 def/fMCG 1 def/fMPt null def/fMCK[0 0
0 1 0 0 0]def/fmCH{fML1{14 dict dup begin fMCl{/HalftoneType 2 def
currentcolorscreen[/GraySpotFunction/GrayAngle/GrayFrequency/BlueSpotFunction
/BlueAngle/BlueFrequency/GreenSpotFunction/GreenAngle/GreenFrequency
/RedSpotFunction/RedAngle/RedFrequency]{exch def}forall}{/HalftoneType 1 def
currentscreen[/SpotFunction/Angle/Frequency]{exch def}forall}ifelse statusdict
/checkscreen known{statusdict/accuratescreens get exec}{F}ifelse
/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{fML1{begin
statusdict/checkscreen known{currentdict/AccurateScreens known{AccurateScreens}
{F}ifelse statusdict/setaccuratescreens get exec}if HalftoneType 1 eq{Frequency
Angle currentdict/SpotFunction get setscreen}{HalftoneType 2 eq{fMCl{
RedFrequency RedAngle currentdict/RedSpotFunction get GreenFrequency GreenAngle
currentdict/GreenSpotFunction get BlueFrequency BlueAngle currentdict
/BlueSpotFunction get GrayFrequency GrayAngle currentdict/GraySpotFunction get
setcolorscreen}{GrayFrequency GrayAngle currentdict/GraySpotFunction get
setscreen}ifelse}if}ifelse end}{sethalftone}ifelse}FmBD/FmCS{14 dict begin
/HalftoneType 2 def/AccurateScreens exch def/GraySpotFunction exch def
/GrayAngle exch def/GrayFrequency exch def/BlueSpotFunction exch def/BlueAngle
exch def/BlueFrequency exch def/GreenSpotFunction exch def/GreenAngle exch def
/GreenFrequency exch def/RedSpotFunction exch def/RedAngle exch def
/RedFrequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/FmSS{5 dict
begin/HalftoneType 1 def/AccurateScreens exch def/SpotFunction exch def/Angle
exch def/Frequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/fMPH
fmCH def/fmcp{/FmPr2 exch cvlit def/FmPr1 exch cvlit def/FmPrn FmPr1 length
FmPr2 length add array def FmPrn 0 FmPr1 putinterval FmPrn FmPr1 length FmPr2
putinterval FmPrn cvx}FmBD/fmEp{sub dup 0 lt{neg}if .001 le}FmBD/fmQC{2 copy 0
get exch 0 get fmEp{2 copy 1 get exch 1 get fmEp{2 copy 2 get exch 2 get fmEp{3
get exch 3 get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD
/fmQR{2 copy 4 get exch 0 get fmEp{2 copy 5 get exch 1 get fmEp{6 get exch 2
get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/FmSC{/fMCM fmXD/fMJB fmXD
/fMJG fmXD/fMJR fmXD/fMJK fmXD/fMJY fmXD/fMJM fmXD/fMJC fmXD fmCC}FmBD/FmSP{
/fMCM fmXD fmCC}FmBD/FrameSetSepColors{FrameMacDict begin[exch 1 add 1 roll]
/fMSC exch def end}fmBi def/fmLC{fMSC{exch dup 3 -1 roll fmQC{pop T exit}if}
forall dup T ne{pop F}if}FmBD/fmLR{fMSC{exch dup 3 -1 roll fmQR{pop T exit}if}
forall dup T ne{pop F}if}FmBD/fmLM{fMSC{exch dup 3 -1 roll dup 7 get 3 -1 roll
eq{exch pop T exit}{pop}ifelse}forall dup T ne{pop F}if}FmBD/fmCN{fMND F fMCM
fMN ne{/fMOP fmGG{/fMKO fmGG{pop T}if}if}if dup/fMND exch def{pop pop}{exch dup
null ne{exch pop dup type dup/integertype eq exch/realtype eq or{fm_g}{setcolor
}ifelse}{pop{1 fm_g}if}ifelse}ifelse}FmBD/fill{FrameMacDict begin fMND{newpath}
{fm_f}ifelse end}fmPE/eofill{FrameMacDict begin fMND{newpath}{fm_e}ifelse end}
fmPE/stroke{FrameMacDict begin fMND{newpath}{fm_t}ifelse end}fmPE/imagemask{
FrameMacDict begin fMND{FmG nulldevive fm_m FmR}{fm_m}ifelse end}fmPE/fmNX{load
fMND{FmG fMa2 currentmatrix end nulldevice setmatrix exec currentpoint
FrameMacDict/FmR get exec moveto}{end exec}ifelse}fmBi def/show{FrameMacDict
begin/fm_s fmNX}fmPE/ashow{FrameMacDict begin/fm_a fmNX}fmPE/widthshow{
FrameMacDict begin/fm_w fmNX}fmPE/awidthshow{FrameMacDict begin/fm_y fmNX}fmPE
/kshow{FrameMacDict begin/RealKshow fmNX}fmPE/image{FrameMacDict begin fMCM fMN
ne fMCM fMK ne and{FmG/fMOP fmGG{nulldevice}{fMNg{{pop 0}}{{pop 1}}ifelse
settransfer}ifelse/fm_i load end exec FmR}{/fm_i load end exec}ifelse}fmPE/fMGM
T def/fMBM F def/findcmykcustomcolor{0 0 0 4 -1 roll 8 array astore}fmPE
/findrgbcustomcolor{FrameMacDict begin 4 1 roll 3 copy/fmRY fmGG exec 8 4 roll
4 -1 roll 8 array astore end}fmPE/findgraycustomcolor{0 0 0 exch 1 exch sub
exch findcmykcustomcolor}fmPE/findhsbcustomcolor{FrameMacDict begin 4 1 roll
gsave fm_h currentrgbcolor grestore 4 -1 roll findrgbcustomcolor end}fmPE
/setcustomcolor{FrameMacDict begin dup type dup/integertype eq exch/realtype eq
or not{1.0}if exch dup/fMCC exch fmSG/fMBM F def fMCM fMN eq{0 4 getinterval
aload pop 4{4 index mul 4 1 roll}repeat fmSK pop}{dup{7 get}stopped{pop 4 get}
if fmLM{exch pop 0 4 getinterval aload pop fMCM fMS eq{fMJK eq exch fMJY eq and
exch fMJM eq and exch fMJC eq and{1 exch sub F}{pop 1 T}ifelse}{5{pop}repeat 1
T}ifelse}{fMCM fMK eq{3 get F}{fMCM fMY eq{2 get F}{fMCM fMM eq{1 get F}{fMCM
fMC eq{0 get F}{pop 0 T}ifelse}ifelse}ifelse}ifelse 3 1 roll mul 1 exch sub
exch}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/setoverprint{FrameMacDict begin
/fMOP exch fmSG null fmCN end}fmPE/currentoverprint{FrameMacDict begin/fMOP
fmGG end}fmPE/fmCC{fMCM fMN eq{fMGM fML1 or not{[/Pattern[/DeviceCMYK]]
setcolorspace fMCK 0 4 getinterval aload pop fMPt setcolor}{fMCK 3 get 1.0 ge{
fMCG fm_g}{fMAB not fMCl fMGM and and{0 1 3{fMCK exch get 1 fMCG sub mul}for
fmSK}{4 1 6{fMCK exch get fMGM{1 exch sub 1 fMCG sub mul 1 exch sub}{1.0 lt{
fMCG}{1}ifelse}ifelse}for fm_r}ifelse}ifelse}ifelse null/fMKO F fmSG}{fMBM{fMCG
F}{fMCK 0 4 getinterval aload fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch
fMJM eq and exch fMJC eq and{fMCG F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{
fMCM fMK eq{fMCG 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY
eq{pop fMCG 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop
pop fMCG 1.0 exch sub mul 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop fMCG
1.0 exch sub mul 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse}ifelse/fMKO exch fmSG fMGM fML1 or not{[/Pattern[/DeviceGray]]
setcolorspace fMPt}{fMGM not fML1 and{dup 1 lt{pop fMCG}if}if}ifelse}ifelse
fmCN}FmBD/setgray{FrameMacDict begin fMCM fMN eq{F}{fMCM fMK eq{F}{fMCM fMS eq
fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{F}{pop 1 T}ifelse}ifelse}ifelse/fMKO
exch fmSG fmCN end}fmPE/setrgbcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{
fm_r}{3 copy[4 1 roll]fmLR{fMCM fMS eq{fMJB eq exch fMJG eq and exch fMJR eq
and{0 F}{1 T}ifelse}{pop pop pop 1 T}ifelse}{/fmRY fmGG exec fMCM fMK eq{1.0
exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop
F}{fMCM fMM eq{pop pop 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop 1.0
exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch
fmSG fmCN}ifelse end}fmPE/sethsbcolor{FrameMacDict begin fMCM fMN eq{fm_h}{fm_h
currentrgbcolor setrgbcolor}ifelse end}fmPE/setcmykcolor where{pop/fmSK
/setcmykcolor load def}{/fmSK{4 1 roll 3{3 index add 0 fmax 1 fmin 1 exch sub 3
1 roll}repeat fm_r pop}FmBD}ifelse/currentcmykcolor where{pop}{
/currentcmykcolor{FrameMacDict begin currentrgbcolor/fmRY fmGG exec end}fmPE}
ifelse/setcmykcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{fmSK}{4 copy[5 1
roll]fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and exch fMJC eq
and{0 F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{fMCM fMK eq{1.0 exch sub 4 1
roll pop pop pop dup 1.0 ge}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop dup
1.0 ge}{fMCM fMM eq{pop pop 1.0 exch sub exch pop dup 1.0 ge}{fMCM fMC eq{pop
pop pop 1.0 exch sub dup 1.0 ge}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/fMFl[0 .1 .3 .5 .7 .9 .97 1<
0f1e3c78f0e1c387><0f87c3e1f0783c1e><cccccccccccccccc><ffff0000ffff0000><814224
1818244281><0102040810204080><8040201008040201>]def fML1{/patScreenDict 7 dict
dup begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c1e>[
135{pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff0000
ffff0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}dup
.75 2 sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<8040201008
040201>[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/fMPP 5 dict dup begin<0f87
c3e1f0783c1e>{3 setlinewidth -1 -1 moveto 9 9 lineto fm_t 4 -4 moveto 12 4
lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0f1e3c78f0e1c387>{3 setlinewidth
-1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12 moveto 12 4
lineto fm_t}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t
-1 -1 moveto 9 9 lineto fm_t}FmBD<8040201008040201>{1 setlinewidth -1 -1 moveto
9 9 lineto fm_t 4 -4 moveto 12 4 lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<
0102040810204080>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4
lineto fm_t 4 12 moveto 12 4 lineto fm_t}FmBD end def/fMPD 15 dict dup begin
/PatternType 1 def/PaintType 2 def/TilingType 3 def/BBox[0 0 8 8]def/XStep 8
def/YStep 8 def/PaintProc{begin fMPP fmBS known{fMPP fmBS get exec}{8 8 T[1 0 0
-1 0 8]fmBS fm_m}ifelse end}FmBD end def}ifelse/fMdp 72 0 fMdm dtransform dup
mul exch dup mul add sqrt def/freq fMdp dup 72 div round dup 0 eq{pop 1}if 8
mul div def/sangle 1 0 fMdm dtransform exch atan def sangle fMa2 rotate fMdm
fMa2 concatmatrix dup 0 get/sflipx exch def 3 get/sflipy exch def fML1{/fmgF{
fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPM fML1{{dup patScreenDict exch
known{patScreenDict exch get aload pop freq mul 5 2 roll fMa2 currentmatrix 1
get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgF sflipy 2 fmgF mul}{sflipx 0
fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{pop}ifelse fMNg{{neg}fmcp}if
bind systemdict/setscreen get exec}{/fmBS fmXD/fM1B 0 def/fM0B 0 def freq 0
fMa2 currentmatrix 1 get 0 ne{90 add/pflipx sflipx 1 fmgF def/pflipy sflipy 2
fmgF def}{/pflipx sflipx 0 fmgF def/pflipy sflipy 3 fmgF neg def}ifelse{pflipy
mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1 add 2 div 8 mul cvi def/yindex yy 1
add 2 div 8 mul cvi def fmBS yindex xindex 8 idiv add get 1 7 xindex 8 mod sub
bitshift and 0 ne fMNg{not}if{/fM1B fM1B 1 add def 1}{/fM0B fM0B 1 add def 0}
ifelse}setscreen fM0B fM0B fM1B add div fMNg{1.0 exch sub}if}ifelse/fMCG exch
def/fMGM F def fmCC}}{/fMPC 8 dict def{dup fMPC exch known{fMPC exch get}{dup
fMPD/fmBS 3 -1 roll put fMPD matrix makepattern dup fMPC 4 -1 roll 3 -1 roll
put}ifelse/fMCG 0 def/fMPt exch def/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{
/fMGM T def fML1{fMPH fmSH}if}if/fMCG exch def fmCC}FmBD/FmP{fMFl exch get dup
type/stringtype eq{fmPM}{fmgr}ifelse}FmBD/FmK{fMCK astore pop/fMBM F def fmCC}
FmBD/FmFB{0 0 0 1 0 0 0 fMCK astore pop/fMCG 0 def/fMBM T def fmCC}FmBD/fMOx
matrix def fMOx currentmatrix pop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD
/FmIO{fmRM}FmBD/FmEO{FmOs restore}FmBD/fm3R[{.3 mul add 1}bind{.59 mul add 2}
bind{.11 mul add round cvi fMs exch fMi exch put/fMi fMi 1 add def 0 0}bind]def
/fm31{/fMi 0 def 0 exch 0 exch{exch fm3R exch get exec}forall pop pop fMs}FmBD
/fm41{0 exch 4 exch{exch 1 sub dup 0 eq{pop 4 1 roll 3 index add 255 fmin 255
exch sub .11 mul 3 1 roll 3 index add 255 fmin 255 exch sub .59 mul 3 1 roll 3
index add 255 fmin 255 exch sub .3 mul add add 255 fmin round cvi fMs exch 3
index exch put pop 1 add 4}if}forall pop pop fMs}FmBD fML1{/Fmi{save userdict
/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD
/fMRC fmXD/fMGC fMGL 1 add array def/setcolortransfer where{pop
currentcolortransfer/gryt fmXD/blut fmXD/grnt fmXD/redt fmXD 0 1 fMGL{/fMIx
fmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNC fMIx get sub def/fMUY 1 fMBC fMIx
get sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU fMk currentundercolorremoval
exec def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt exec put fMNC fMIx 1 0 fMUM
FmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY FmU sub fmax sub blut exec
put fMGC fMIx 1 fMk currentblackgeneration exec sub gryt exec put}for{fMGL mul
cvi fMRC exch get}{fMGL mul cvi fMNC exch get}{fMGL mul cvi fMBC exch get}{fMGL
mul cvi fMGC exch get}setcolortransfer{pop 0}setundercolorremoval{}
setblackgeneration/fM9 T def}{0 1 fMGL{fMGC exch dup dup fMRC exch get .3 mul
exch dup fMNC exch get .59 mul exch fMBC exch get .11 mul add add put}for{fMGL
mul cvi fMGC exch get}currenttransfer fmcp settransfer}ifelse}{dup length 1 sub
/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}currenttransfer fmcp
settransfer}ifelse}{{{1 exch sub}currenttransfer fmcp settransfer}if}ifelse/fM5
fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if
/fM18 fM8 string def fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]{currentfile
fM18 fM5{readstring}{readhexstring}ifelse pop}fM9{{fM18}{fM18}T 3 colorimage}{
fm_i}ifelse fM7 restore}FmBD}{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{
dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD[/Indexed/DeviceRGB
fMGL{dup fMRC exch get exch dup fMNC exch get exch fMBC exch get}]setcolorspace
}{dup length 1 sub/fMGL fmXD/fMGC fmXD[/Indexed/DeviceGray fMGL{fMGC exch get}]
setcolorspace}ifelse}{1 4 index bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGray
fMGL 5 -1 roll{{fMGL div 1 exch sub}}{{fMGL div}}ifelse]setcolorspace}ifelse
/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale
}if/fM18 fM8 string def 7 dict begin/ImageType 1 def/Width fM4 def/Height fM3
def/ImageMatrix[fM4 0 0 fM3 fM4 2 div fM3 2 div]def/DataSource{currentfile fM18
fM5{readstring}{readhexstring}ifelse pop}def/BitsPerComponent fM6 def/Decode[0
fMGL]def currentdict end fm_i fM7 restore}FmBD}ifelse/Fmci{save userdict/fM7 3
-1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD/fM18 fM8 string def
/fMs fM18 0 fM18 length 3 idiv getinterval def translate rotate scale{-1 1
scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{currentfile fM18 fM5
{readstring}{readhexstring}ifelse pop}F 3 colorimage}{{currentfile fM18 fM5{
readstring}{readhexstring}ifelse pop fm31}fm_i}ifelse fM7 restore}FmBD/Fmc4{
save userdict/fM7 3 -1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD
/fM18 fM8 string def/fMs fM18 0 fM18 length 4 idiv getinterval def translate
rotate scale{-1 1 scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop}F 4 colorimage}{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop fm41}fm_i}ifelse fM7
restore}FmBD fML1{/fmAn{transform round .5 sub exch round .5 sub exch
itransform}FmBD/fmAc{transform round 1.5 sub exch round 1.5 sub exch itransform
}FmBD/fmDn{dtransform round exch round exch idtransform}FmBD/fmLn{0 dtransform
exch cvi 2 idiv 2 mul .1 add exch idtransform pop}FmBD/FmCv{fmDn 6 2 roll fmDn
6 2 roll fmDn 6 2 roll rcurveto}FmBD}{T setstrokeadjust/fmAn{}FmBD/fmAc{}FmBD
/fmDn{}FmBD/fmLn{}FmBD/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn moveto}FmBD/M{moveto}
FmBD/N{0 rmoveto}FmBD/S{fm_s}FmBD/A{0 exch fm_a}FmBD/W{0 exch 32 exch fm_w}FmBD
/X{0 exch 0 32 5 2 roll fm_y}FmBD/fmQP{fML1 fMGM or not{FmG dup 1 fm_g exec FmR
}if exec}FmBD/FmB{newpath fmAn moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}
FmBD/FmSo{fmLn setlinewidth setlinecap{fm_t}fmQP 0 0 moveto}FmBD/FmS{fmLn
setlinewidth closepath{fm_t}fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth
setlinecap{closepath}if setdash{fm_t}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{FmG{
fm_e}fmQP FmR}FmBD/fmq{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{fm_t}fmQP
0 0 moveto}FmBD/FmqF{fmq FmG{fm_f}fmQP FmR}FmBD/FmKp{{currentpoint}stopped{F 5
1 roll}{T 7 3 roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{
currentpoint}stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{FmG
newpath fmAn translate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3
roll arc closepath{fm_f}fmQP FmR}FmBD/FmAP{FmG{setdash}if fmLn setlinewidth
setlinecap fmSM newpath 2 index 2 div add exch 3 index 2 div sub exch fmAn 2
index 2 div sub exch 3 index 2 div add exch translate rotate scale 0.0 0.0 1.0
5 3 roll exch arcn{closepath}if fmRM{fm_t}fmQP FmR}FmBD/FmST{FmG fmAn translate
.3 fmLn setlinewidth 0 setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc
fm_f 0 fm_g 0 0 10 0 360 arc fm_t 36{1 0 moveto 0 0 10 -2.5 2.5 arc fm_f 10
rotate}repeat FmR}FmBD/FmSL{FmG fmAn translate .25 fmLn setlinewidth 0
setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0 fm_g 10 .5 fmLn
neg .1{0 0 3 -1 roll 0 360 arc fm_t}for FmR}FmBD/FrameEr where{pop}{userdict
/FrameEr(\000)put}ifelse/fMSJ 100 string def/fmXC{userdict/FrameEndPictSave 2
index put FmE{countdictstack userdict begin/showpage{}def/FrameDictStackDepth
exch def count/FrameStackDepth exch def}if userdict/FrameSuccessfull false put
FrameMacDict/fMHq get/$brkpage where dup{exch pop}if or{userdict
/FrameEndPictStopped false put}{userdict/FrameEndPictStopped true put
currentfile cvx stopped pop FrameSuccessfull not{systemdict/clear get exec
userdict/FrameEr get 0 1 put FrameMacDict begin FmG systemdict/initmatrix get
exec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}if
exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefont
setfont FrameEr1 fm_s( \()fm_s $error begin errorname 20 string cvs fm_s(, )
fm_s/command load 128 string cvs fm_s end(\))fm_s FrameEr2 print flush
FrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}if
not{exit}if(EndFrame5Picture)eq{exit}if}loop grestore end}if userdict
/FrameSuccessfull false put userdict/FrameEndPictStopped false put FrameMacDict
/fmIR get exec}ifelse}fmBi def/FmEP{save userdict/fM7 3 -1 roll put fMEd{
userdict 3 1 roll put}forall setoverprint{fMN FmSP}if[/fMef/fMet/fMeh/fMew/fMey
/fMex/fMei/fMej/fMek/fMel]{fmXD}forall fMex fMey translate fMet rotate fMew
fMeh scale fMef{-1 1 scale}if 1 fMej fMel sub div 1 fMek fMei sub div scale
fMej fMel add 2 div neg fMei fMek add 2 div neg translate 0 setgray 0
setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit[]0 setdash newpath
fML1 not{F setstrokeadjust}if T fmXC}FmBD/FmPI{newpath 0 0 moveto F fmXC}FmBD
/FmPc{save userdict/fM7 3 -1 roll put newpath 3 index neg 3 index neg translate
1 -1 scale 0.0 0.0 moveto T fmXC}FmBD/fmIR{FrameEndPictSave{fM7 type/savetype
eq{end/FrameDictStackDepth where{pop countdictstack FrameDictStackDepth sub dup
0 gt{{end}repeat}{pop}ifelse count FrameStackDepth sub dup 0 gt{{pop}repeat}{
pop}ifelse}if fM7 restore}if}if FrMacBegin}FmBD userdict/EndFrame5Picture{
userdict/FrameEndPictSave 3 -1 roll put userdict/FrameEndPictStopped get{
userdict/FrameSuccessfull true put stop}{FrameMacDict/fmIR get exec}ifelse}fmBi
put/alphaimage where{pop}{/alphaimage{1 ne{limitcheck}if not{limitcheck}if pop
image}fmPE}ifelse/fmDE{systemdict/initgraphics get exec clippath{pathbbox}
stopped{100 100 512 692}if exch pop add 2. div newpath moveto
(Courier-BoldOblique)findfont 18 scalefont setfont currentpoint 2 copy FrameEr3
fm_s 20 sub 2 copy moveto FrameEr4 fm_s 20 sub 2 copy moveto(\()fm_s statusdict
/jobname get fm_s(\))fm_s 20 sub moveto FrameEr5 fm_s showpage}FmBD/cd where{
dup/cd get/fmRC fmXD/cd{FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if/fmRC load
end exec}fmBi put}{/endp where{dup/endp get/fMRE fmXD/endp{FrameMacDict/fMRE
get exec FrameEr 0 get 0 ne{FrameMacDict begin currentfile fMSJ{readline}
stopped{pop exch pop true}if pop(%%Trailer)eq{fmDE}if end}if}fmBi put}if}ifelse
systemdict/setpacking known{fMSP setpacking}if end
%%EndProcSet
%%FRMSetup
FrameMacDict begin
/FrameEr1(PostScript error)def
/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def
/FrameEr3(FrameMaker has detected one or more)def
/FrameEr4(PostScript errors in this document.)def
/FrameEr5(Please check your output.)def
end
%%FRMEndSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 1 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
0 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
0 0 :M
f0_24 sf
( )S
6 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
193.327 62 M (PCI Bus Binding to:)S
192.993 149 M (IEEE Std 1275-1994)S
203.681 178 M (Standard for Boot)S
147.366 207 M (\(Initialization Configuration\))S
245.701 236 M (Firmware)S
229.005 352 M (Revision 1.75)S
FmE
6 0 :M
f1_24 sf
( )S
12 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
193.342 410 M (Unapproved )S
(DRAF)S
(T)S
FmE
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 2 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
12 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
12 0 :M
f0_12 sf
( )S
15 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
15 0 :M
f1_12 sf
( )S
18 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
18 0 :M
f2_12 sf
( )S
21 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (iii)S
FmE
21 0 :M
f4_12 sf
( )S
28 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
28 0 :M
f0_10 sf
( )S
30 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.655 52.667 M (Foreword by the Chairman of the IEEE 1275 Working Group)S
FmE
31 0 :M
f2_10 sf
( )S
33 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.851 64.667 M (\(This foreword is not a part of the Specification.\))S
FmE
33 0 :M
f0_10 sf
( )S
35 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 94.667 M (Introduction)S
FmE
36 0 :M
f2_10 sf
( )S
38 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 110.667 M 0.228(Firmware is the ROM-based software that controls a computer between the time it is turned on and the time the)W
72 122.667 M -0.341(primary operating system takes control of the machine. Firmware\'s responsibilities include testing and initializing)W
72 134.667 M 0.184(the hardware, determining the hardware configuration, loading \(or booting\) the operating system, and providing)W
72 146.667 M (interactive debugging facilities in case of faulty hardware or software.)S
FmE
38 0 :M
f0_10 sf
( )S
40 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 176.667 M (Historical Perspective)S
FmE
41 0 :M
f2_10 sf
( )S
43 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 192.667 M -0.281(Historically, firmware designs have been proprietary and often specific to a particular bus or instruction set archi-)W
72 204.667 M -0.429(tecture \(ISA\). This need not be the case. Firmware can be designed to be machine-independent and easily portable)W
72 216.667 M 0.112(to different hardware. There is a strong analogy with operating systems in this respect. Prior to the advent of the)W
72 228.666 M -0.139(portable UNIX operating system in the mid-seventies, the prevailing wisdom was that operating systems must be)W
72 240.666 M -0.349(heavily tuned to a particular computer system design and thus effectively proprietary to the vendor of that system.)W
72 258.666 M -0.37(The )W
FmE
43 0 :M
f3_10 sf
( )S
45 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
89.677 258.666 M -0.37(IEEE Std 1275-1994 Standard for Boot \(Initialization Configuration\), Core Requirements and Practices)W
FmE
46 0 :M
f2_10 sf
( )S
48 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
503.318 258.666 M -0.37(  \(re-)W
72 270.666 M -0.471(ferred to in the remainder of this document as Open Firmware\) specification is based on Sun Microsystem\'s Open-)W
72 282.666 M 0.738(Boot firmware. The OpenBoot design effort began in 1988, when Sun was building computers based on three)W
72 294.666 M -0.206(different processor families, thus OpenBoot was designed from the outset to be ISA-independent \(independent of)W
72 306.666 M 0.296(the Instruction Set Architecture\). The first version of OpenBoot was introduced on Sun\'s SPARCstation 1 com-)W
72 318.666 M 0.27(puters. Based on experience with those machines, OpenBoot version 2 was developed, and was first shipped on)W
72 330.666 M (SPARCstation 2 computers. This standard is based on OpenBoot version 2.)S
FmE
48 0 :M
f0_10 sf
( )S
50 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 360.666 M (Purpose and Features of the Open Firmware Specification)S
FmE
51 0 :M
f2_10 sf
( )S
53 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 376.666 M (Open Firmware has the following features:)S
90 392.666 M -0.361(Mechanism for loading and executing programs \(such as operating systems\) from disks, tapes, network inter-)W
90 404.666 M (faces, and other devices.)S
90 420.666 M (ISA-independent method for identifying devices \"plugged-in\" to expansion buses, and for providing firm-)S
90 432.666 M (ware and diagnostics drivers for these devices.)S
90 448.666 M (An extensible and programmable command language based on the Forth programming language.)S
90 464.666 M (Methods for managing user-configurable options stored in non-volatile memory.)S
90 480.666 M (A \"call back\" interface allowing other programs to make use of Open Firmware services.)S
90 496.666 M (Debugging tools for hardware, firmware, firmware drivers, and system software.)S
FmE
53 0 :M
f0_10 sf
( )S
55 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 526.666 M (Purpose of this Bus Binding)S
FmE
56 0 :M
f2_10 sf
( )S
58 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 542.666 M -0.063(This document specifies the application of Open Firmware to the PCI Local Bus, including PCI-specific require-)W
72 554.666 M (ments and practices for address format, interrupts, probing, and related properties and methods.)S
72 572.666 M -0.222(The core requirements and practices specified by Open Firmware must be augmented by system-specific require-)W
72 584.666 M 0.168(ments to form a complete specification for the firmware for a particular system. This document establishes such)W
72 596.666 M (additional requirements pertaining to PCI.)S
FmE
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 3 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
58 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
58 0 :M
f0_12 sf
( )S
61 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
61 0 :M
f2_12 sf
( )S
64 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (iv)S
FmE
64 0 :M
f1_12 sf
( )S
67 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
67 0 :M
f4_12 sf
( )S
74 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
74 0 :M
f0_10 sf
( )S
76 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 52.667 M (Task Group Members)S
FmE
77 0 :M
f2_10 sf
( )S
79 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 68.667 M (The following individuals were members of the Task Group that produced this document:)S
54 84.667 M (Ron Hochsprung, Apple Computer, Inc.)S
54 100.667 M (Mitch Bradley, FirmWorks \(Chair, IEEE P1275 Working Group\))S
54 116.667 M (David Kahn, Sun Microsystems, Inc. \(Vice Chair, IEEE P1275 Working Group\))S
54 148.667 M (TRADEMARKS)S
FmE
79 0 :M
f0_10 sf
( )S
81 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 164.667 M (Sun Microsystems)S
FmE
82 0 :M
f2_10 sf
( )S
84 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.032 164.667 M ( is a registered trademark of Sun Microsystems, Inc. in the United States and other countries.)S
FmE
84 0 :M
f0_10 sf
( )S
86 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 180.667 M (OpenBoot)S
FmE
87 0 :M
f2_10 sf
( )S
89 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.333 180.667 M ( is a trademark of Sun Microsystems, Inc.)S
FmE
89 0 :M
f0_10 sf
( )S
91 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 196.667 M (UNIX)S
FmE
92 0 :M
f2_10 sf
( )S
94 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.547 196.667 M ( is a registered trademark of UNIX System Laboratories, Inc.)S
FmE
94 0 :M
f0_10 sf
( )S
96 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 212.667 M (SPARC)S
FmE
97 0 :M
f2_10 sf
( )S
99 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
87.325 212.667 M -0.34( is a registered trademark of SPARC International, Inc. Products bearing the SPARC trademark are based)W
54 224.666 M (on an architecture developed by Sun Microsystems, Inc.)S
FmE
99 0 :M
f0_10 sf
( )S
101 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 240.666 M (SPARCstation)S
FmE
102 0 :M
f2_10 sf
( )S
104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
116.207 240.666 M ( is a trademark of SPARC International, Inc., licensed exclusively to Sun Microsystems, Inc.)S
54 256.666 M -0.561(All other products or services mentioned in this document are identified by the trademarks, service marks, or prod-)W
54 268.666 M 1.103(uct names as designated by the companies who market those products. Inquiries concerning such trademarks)W
54 280.666 M (should be made directly to those companies.)S
54 296.666 M (The latest version of this binding may be found in the Bus Supplements area of the Web page at:)S
FmE
104 0 :M
f4_10 sf
( )S
110 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 312.666 M 0 0 150(http://playground.sun.com)FmTx
0 0 6(/)FmTx
0 0 24(1275)FmTx
FmE
110 0 :M
f2_10 sf
( )S
112 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 333.666 M -0.226(Membership in the Open Firmware Working Group is open to all interested parties.  The working group meets at )W
54 344.666 M (regular intervals at various locations.  For more information send email to:)S
FmE
113 0 :M
f4_10 sf
( )S
119 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 365.666 M 0 0 150(p1275-wg@risc.sps.mot.com)FmTx
FmE
119 0 :M
f0_10 sf
( )S
121 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 402.666 M (Revision History)S
54 418.666 M (Revision 0.1)S
20.337 N (Oct. 7, 1993)S
FmE
121 0 :M
f2_10 sf
( )S
123 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 418.666 M 0.367(First revision distributed outside of task group \(the number 0.1 did)W
234 428.666 M (not appear on  the cover\).)S
FmE
124 0 :M
f0_10 sf
( )S
126 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 442.666 M (Revision 0.2)S
20.337 N (Oct. 28, 1993)S
FmE
126 0 :M
f2_10 sf
( )S
128 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 442.666 M 0.46(Changed the designator for 64-bit memory space from \"M\" to \"x\".)W
234 452.666 M -0.143(Changed the parts of the specification related to )W
-0.143(PCI-to-PCI b)W
(ridges)S
234 462.666 M (to reflect the 0.4 bridge architecture spec.)S
FmE
129 0 :M
f0_10 sf
( )S
131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 476.666 M (Revision 1.0)S
20.337 N (April 14, 1994)S
FmE
131 0 :M
f2_10 sf
( )S
133 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 476.666 M 0.445(Changed references from P1275 to Open Firmware.  Changed size)W
234 486.666 M (of fields for I/O address representations to reflect PCI architecture.)S
FmE
134 0 :M
f0_10 sf
( )S
136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 500.666 M (Revision 1.1 )S
17.837 N (June 28, 1994)S
FmE
136 0 :M
f2_10 sf
( )S
138 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 500.666 M (Added \'t\'-bit for aliasing, and discussion of \"hard-decode\" cases.)S
FmE
139 0 :M
f0_10 sf
( )S
141 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 514.666 M (Revision 1.2)S
20.337 N (August 7, 1994)S
FmE
141 0 :M
f2_10 sf
( )S
143 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 514.666 M -0.351(Added note about DD encoding.  Added new standard properties for)W
234 524.666 M -0.269(those of draft Rev 2.1 PCI spec.  Deleted enabling of Memory space)W
234 534.666 M (at post-probe.  Added driver encapsulation description.)S
FmE
144 0 :M
f0_10 sf
( )S
146 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 548.666 M (Revision 1.3)S
20.337 N (September 27, 1994)S
FmE
146 0 :M
f2_10 sf
( )S
148 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 548.666 M 0.011(Changed generated name for Subsystem, if present.  Added rule for)W
234 558.666 M (I/O assignment.  Added discussion of )S
(PCI-to-PCI b)S
(ridge probing.)S
FmE
149 0 :M
f0_10 sf
( )S
151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 572.666 M (Revision 1.4)S
20.337 N (December 16, 1994)S
FmE
151 0 :M
f2_10 sf
( )S
153 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 572.666 M 1.45(Added Expansion ROM address assignment, \')W
FmE
154 0 :M
f4_10 sf
( )S
160 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
424.673 572.666 M 0 0 6(t)FmTx
FmE
160 0 :M
f2_10 sf
( )S
162 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
430.673 572.666 M 1.45(\' bit for \"below 1)W
234 582.666 M (MB\".)S
FmE
162 0 :M
f0_10 sf
( )S
164 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 596.666 M (Revision 1.5)S
20.337 N (March 20, 1995)S
FmE
165 0 :M
f2_10 sf
( )S
167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 596.666 M 0.09(Applied proposals 241, 242, 249, 264, 273.  Added Legacy devices)W
234 606.666 M 1.283(section, \"clock-frequenc)W
(y)S
1.283(\" property, clarified address assignment,)W
234 616.666 M (added \'t\' bit for relocatable I/O space.)S
FmE
167 0 :M
f0_10 sf
( )S
169 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 630.666 M (Revision 1.6)S
20.337 N (October 12, 1995)S
FmE
170 0 :M
f2_10 sf
( )S
172 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 630.666 M (Applied proposal)S
(s)S
( 274)S
(,286, 287 and 290)S
(.)S
FmE
172 0 :M
f0_10 sf
( )S
174 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 644.666 M (Revision 1.65)S
15.337 N (March 4, 1995)S
FmE
175 0 :M
f2_10 sf
( )S
177 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
187.375 644.666 M (\324)S
43.298 N (Applied proposals 251, 293, 303; fixed 287 changes.)S
FmE
177 0 :M
f0_10 sf
( )S
179 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 658.666 M (Revision 1.7)S
20.337 N (April 22, 1996)S
FmE
180 0 :M
f2_10 sf
( )S
182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 658.666 M -0.389(Applied proposals 308, 311, 314)W
-0.389(, 323a)W
-0.389(; added )W
FmE
182 0 :M
f4_10 sf
( )S
188 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
417.906 658.666 M 0 0 48(\"ranges\")FmTx
FmE
188 0 :M
f2_10 sf
( )S
190 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
465.906 658.666 M -0.389( usage in-)W
234 668.666 M (formation.  Added )S
FmE
191 0 :M
f5_10 sf
( )S
197 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
310.086 668.666 M 0 0 24(open)FmTx
FmE
197 0 :M
f2_10 sf
( )S
199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.086 668.666 M ( and )S
FmE
199 0 :M
f5_10 sf
( )S
205 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.525 668.666 M 0 0 30(close)FmTx
FmE
205 0 :M
f2_10 sf
( )S
207 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.525 668.666 M ( notes to child nodes.)S
FmE
208 0 :M
f0_10 sf
( )S
210 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 682.666 M (Revision 1.75)S
15.337 N (June 17, 1996)S
FmE
210 0 :M
f2_10 sf
( )S
212 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 682.666 M (Applied changes from 4/30/96 meeting.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
34 306 2 84 FmqF
34 599.999 2 10 FmqF
34 651.999 2 10 FmqF
34 675.999 2 10 FmqF
FmE
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 4 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
0 0 .5 :F
213 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
213 0 :M
0 G
f0_12 sf
( )S
216 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
216 0 :M
f1_12 sf
( )S
219 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
219 0 :M
f2_12 sf
( )S
222 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (5)S
FmE
222 0 :M
f4_12 sf
( )S
229 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
229 0 :M
f2_12 sf
( )S
232 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 54 M (1. )S
(Overview and References)S
2.08 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(7)S
72 68 M (  1.1. )S
(References)S
0.712 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(7)S
72 82 M (  1.2. )S
(Definitions of Terms)S
1.371 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(7)S
72 96 M (2. )S
(Bus Characteristics)S
0.038 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(7)S
72 110 M (  2.1. )S
(Address Spaces)S
2.367 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(7)S
72 124 M (    2.1.1. )S
(Memory Space)S
2.03 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(7)S
72 138 M (    2.1.2. )S
(I/O Space)S
0.36 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(8)S
72 152 M (    2.1.3. )S
(Hard-decoded Spaces)S
0.729 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(8)S
72 166 M (    2.1.4. )S
(Configuration Space)S
0.032 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(8)S
72 180 M (      2.1.4.1. )S
(Bus Number:  8 bits.)S
2.344 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(9)S
72 194 M (      2.1.4.2. )S
(Device Number:  5 bits)S
2.039 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(9)S
72 208 M (      2.1.4.3. )S
(Function Number:  3 bits)S
2.35 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(9)S
72 222 M (      2.1.4.4. )S
(Register Number:  8 bits)S
2.03 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(9)S
72 236 M (      2.1.4.5. )S
(\"Address-less\" Cycles)S
1.248 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
72 250 M (      2.1.4.6. )S
(Low-order Address Bits)S
1.046 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
72 264 M (  2.2. )S
(Address Formats and Representations)S
1.395 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
72 278 M (    2.2.1. )S
(Physical Address Formats)S
0.7 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
72 292 M (      2.2.1.1. )S
(Numerical Representation)S
0.393 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
72 306 M (        2.2.1.1. )S
(Encoding of type code \"ss\":)S
(11)S
72 320 M (      2.2.1.2. )S
(Text Representation)S
2.039 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(12)S
72 334 M (      2.2.1.3. )S
(Unit Address Representation)S
2.382 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(13)S
72 348 M (  2.3. )S
(Bus-specific Configuration Variables)S
0.741 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(14)S
72 362 M (  2.4. )S
(Format of a Probe List)S
2.367 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(14)S
72 376 M (  2.5. )S
(FCode Evaluation Semantics)S
1.696 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(14)S
72 390 M (3. )S
(Bus Nodes)S
( Properties and Methods)S
1.708 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(14)S
72 404 M (  3.1. )S
(Bus Node )S
(Properties)S
2.695 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(14)S
72 418 M (    3.1.1. )S
( Open Firmware-defined Properties for Bus Nodes)S
0.439 N ( . . . . . . . . . . . . . . . . . . . . . . )S
(14)S
72 432 M (    3.1.2. )S
(B)S
(us-specific Properties for Bus Nodes)S
2.071 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(15)S
72 446 M (  3.2. )S
(Bus Node )S
(Methods)S
0.346 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(15)S
72 460 M (    3.2.1. )S
(Open Firmware-defined Methods for Bus Nodes)S
1.09 N (. . . . . . . . . . . . . . . . . . . . . . . . )S
(15)S
72 474 M (    3.2.2. )S
(Bus-specific Methods for Bus Nodes)S
2.722 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(16)S
72 488 M (    3.2.3. )S
(Configuration Access Words)S
1.72 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(16)S
72 502 M (      3.2.3.1. )S
(Address-less Access Words)S
1.734 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(17)S
72 516 M (4. )S
(Child Node)S
( Properties and Methods)S
1.374 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(17)S
72 530 M (  4.1. )S
(Child Node P)S
(roperties)S
0.694 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(17)S
72 544 M (    4.1.1. )S
(Open Firmware-defined Properties for Child Nodes)S
1.438 N ( . . . . . . . . . . . . . . . . . . . . . )S
(17)S
72 558 M (    4.1.2. )S
(Bus-specific Properties for Child Nodes)S
0.07 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(18)S
72 572 M (      4.1.2.1. )S
(Standard PCI Configuration Properties)S
2.719 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(19)S
72 586 M (  4.2. )S
(Child Node M)S
(ethods)S
1.345 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(20)S
72 600 M (5. )S
(Bus-specific User Interface Commands)S
0.097 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(20)S
72 614 M (6. )S
(Probing PCI-)S
(to-)S
(PCI bridges)S
1.025 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(22)S
72 628 M (7. )S
(Legacy devices)S
0.712 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(22)S
72 642 M (8. )S
(Relationship between PCI Base Registers and Open Firmware Properties)S
1.122 N ( . . . . . . . . . )S
(22)S
72 656 M (9. )S
(R)S
(OM Image Format for FCode:)S
2.707 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(22)S
72 670 M (10. )S
(Encapsulated Drivers)S
2.054 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(23)S
72 684 M (  10.1. )S
(Naming conventions)S
2.355 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(23)S
72 698 M (11. )S
(Examples of )S
(\"reg\")S
( and )S
(\"assigned-addresses\" )S
(properties)S
0.202 N (. . . . . . . . . . . . . . . . . . . . . . . )S
(24)S
72 712 M (  11.1. )S
(Creation of )S
(\"reg\")S
( and )S
(\"assigned-address\")S
( properties)S
1.195 N (. . . . . . . . . . . . . . . . . . . . . . . )S
(24)S
72 726 M (    11.1.1. )S
(A single 256-byte address base register, without FCode.)S
1.084 N (. . . . . . . . . . . . . . . . . )S
(24)S
FmE
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 5 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
232 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
232 0 :M
f0_12 sf
( )S
235 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
235 0 :M
f2_12 sf
( )S
238 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (6)S
FmE
238 0 :M
f1_12 sf
( )S
241 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
241 0 :M
f4_12 sf
( )S
248 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
248 0 :M
f2_12 sf
( )S
251 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 54 M (    11.1.2. )S
(A simple VGA device, without FCode.)S
1.374 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(24)S
54 68 M (    11.1.3. )S
(A single 256 resource, Memory and I/O accessible, without FCode)S
0.108 N ( . . . . . . . . )S
(25)S
54 82 M (    11.1.4. )S
(A single 256 resource, Memory and I/O accessible, with FCode.)S
0.442 N ( . . . . . . . . . . )S
(25)S
54 96 M (  11.2. )S
(Computing PCI addresses from )S
(\"reg\")S
( and )S
(\"assigned-addresses\")S
2.52 N ( . . . . . . . . . . . . . )S
(26)S
54 110 M (    11.2.1. )S
(Determining the address of a register of example in Section 11.1.4.)S
2.458 N (. . . . . . . . )S
(26)S
54 124 M (    11.2.2. )S
(Determining the address of a register of example in Section 11.1.2.)S
2.458 N (. . . . . . . . )S
(27)S
54 138 M (12. )S
(Use of the )S
FmE
251 0 :M
f5_10 sf
( )S
257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.31 138 M 0 0 48(\"ranges\")FmTx
FmE
257 0 :M
f2_12 sf
( )S
260 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
172.31 138 M ( property)S
0.044 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(27)S
54 152 M (13. )S
(Example of use of add-ranges check)S
2.76 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(27)S
FmE
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 6 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
260 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
260 0 :M
f0_12 sf
( )S
263 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
263 0 :M
f1_12 sf
( )S
266 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
266 0 :M
f2_12 sf
( )S
269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (7)S
FmE
269 0 :M
f4_12 sf
( )S
276 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
276 0 :M
f0_12 sf
( )S
279 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 54 M (1. Overview and References)S
FmE
279 0 :M
f2_10 sf
( )S
281 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 70.667 M -0.137(This specification describes the application of Open Firmware to computer systems that use the PCI Local bus as)W
72 82.667 M (defined in)S
( [1] and [2].)S
FmE
282 0 :M
f0_12 sf
( )S
285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 117 M (1.1. )S
(References)S
FmE
285 0 :M
f2_10 sf
( )S
287 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 133.667 M ([1] )S
FmE
287 0 :M
f3_10 sf
( )S
289 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
86.155 133.667 M ( P)S
(CI Local Bus Specification, Revision 2.1, June 1, 199)S
(5)S
FmE
290 0 :M
f2_10 sf
( )S
292 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.05 133.667 M (, published by the PCI Special Interest Group.)S
72 149.667 M 0.122([2]  )W
FmE
292 0 :M
f3_10 sf
( )S
294 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88.899 149.667 M (P)S
0.122(CI-to-PCI Bridge Architecture Specification, Revision 1.0 April 5, 199)W
(4)S
FmE
295 0 :M
f2_10 sf
( )S
297 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.402 149.667 M 0.122( , published by the PCI Special In-)W
72 161.667 M (terest Group.)S
72 177.667 M -0.229([3]  )W
FmE
297 0 :M
f3_10 sf
( )S
299 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88.197 177.667 M -0.229(Open Firmware Recommended Practice:  Generic Names)W
FmE
300 0 :M
f2_10 sf
( )S
302 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
318.388 177.667 M -0.229(, published by the Open Firmware Working Group.)W
FmE
302 0 :M
f0_12 sf
( )S
305 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 212 M (1.2. Definitions of Terms)S
FmE
305 0 :M
f0_10 sf
( )S
307 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 228.667 M (bus controller:)S
FmE
308 0 :M
f2_10 sf
( )S
310 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.032 228.667 M (  a hardware device that implements a PCI bus.)S
FmE
310 0 :M
f0_10 sf
( )S
312 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 244.667 M (hard decode:)S
FmE
313 0 :M
f2_10 sf
( )S
315 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.818 244.667 M (  a decoding which is not based upon a base register, but, rather, is fixed.)S
FmE
315 0 :M
f0_10 sf
( )S
317 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 260.667 M (PCI device:)S
FmE
318 0 :M
f2_10 sf
( )S
320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121.697 260.667 M (  a hardware device that connects to or \"plugs in\" to a PCI bus)S
(.)S
FmE
320 0 :M
f0_10 sf
( )S
322 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 276.667 M (P)S
-0.167(CI function:)W
FmE
323 0 :M
f2_10 sf
( )S
325 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.427 276.667 M -0.167(  one of a number of logically-independent parts of a PCI device. Many PCI devices have only one)W
72 288.667 M (function per device; in such cases, the terms \"PCI function\" and \"PCI device\" can be used interchangeably.)S
FmE
325 0 :M
f0_10 sf
( )S
327 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 306 M 0.257(PCI-to-PCI b)W
(ridge:)S
FmE
328 0 :M
f2_12 sf
( )S
331 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
155.275 306 M 0.309(  )W
FmE
331 0 :M
f2_10 sf
( )S
333 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
161.892 306 M 0.257(a hardware device that is, from an electrical standpoint, a single PCI function on one PCI)W
72 318.666 M (bus \(the \"parent\" bus\) and the bus controller of a secondary PCI bus \(the \"child\" bus\).)S
FmE
333 0 :M
f0_10 sf
( )S
335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 334.666 M (PCI domain:)S
FmE
336 0 :M
f2_10 sf
( )S
338 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.269 334.666 M (  a group of PCI buses connected together in a tree topology by )S
(PCI-to-PCI b)S
(ridges.)S
FmE
338 0 :M
f0_10 sf
( )S
340 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 350.666 M -0.237(relocatable region:)W
FmE
341 0 :M
f2_10 sf
( )S
343 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
152.002 350.666 M -0.237(  a range of PCI address space whose base address is established by a single base address reg-)W
72 362.666 M (ister.)S
FmE
343 0 :M
f0_10 sf
( )S
345 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 378.666 M (Master PCI bus:)S
FmE
346 0 :M
f2_10 sf
( )S
348 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.084 378.666 M (  within a PCI domain, the PCI bus that forms the root of the tree structure.)S
FmE
348 0 :M
f0_10 sf
( )S
350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 394.666 M -0.004(bus node:)W
FmE
351 0 :M
f2_10 sf
( )S
353 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
113.388 394.666 M -0.004(  an Open Firmware device node that represents a bus controller.  In cases where a node represents the)W
72 406.666 M -0.262(interface, or \"bridge\", between one bus and another, the node is both a bus node relative to the bus it controls, and)W
72 418.666 M -0.408(a child node of its parent bus.  Note that an Open Firmware device node is not in itself a physical hardware device;)W
72 430.666 M (rather, it is a software abstraction that describes a hardware device.)S
FmE
353 0 :M
f0_10 sf
( )S
355 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 446.666 M -0.227(child node:)W
FmE
356 0 :M
f2_10 sf
( )S
358 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
119.27 446.666 M -0.227(  an Open Firmware device node that represents a PCI function.  Such a node can correspond to either)W
72 458.666 M 0.162(a device that is \"hardwired\" to a planar PCI bus, or to an \"add in\" expansion card that is plugged into a standard)W
72 470.666 M (PCI Expansion Connector.)S
FmE
358 0 :M
f0_12 sf
( )S
361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 512 M (2. Bus Characteristics)S
72 547 M (2.1. Address Spaces)S
FmE
361 0 :M
f2_10 sf
( )S
363 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 563.666 M (PCI has several address spaces \(Memory, I/O, Configuration\), with different addressing characteristics.)S
FmE
364 0 :M
f0_12 sf
( )S
367 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 598 M (2.1.1. Memory Space)S
FmE
367 0 :M
f2_10 sf
( )S
369 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 614.666 M -0.144(Memory Space is the primary address space of PCI; it corresponds to traditional memory and \"memory-mapped\")W
72 626.666 M 0.314(I/O.  PCI allows for a full 64-bit address range in Memory Space; however, most devices will not require a full)W
72 638.666 M 0.01(64-bit range.  In order to provide compatibility between devices designed for 64-bit addressing and those for 32-)W
72 650.666 M 0.024(bit addressing, the 32-bit address space appears as the first 4 GB region of the 64-bit space; i.e., 64-bit addresses)W
72 662.666 M -0.006(with the 32 most-significant bits equal to 0 are used to access 32-bit devices.  64-bit initiators are required to use)W
72 674.666 M (the 32-bit address protocol for any 64-bit address in which the upper 32 bits are all 0.)S
72 692.666 M -0.388(The PCI specification requires that all of a device\'s relocatable resources must be mappable in Memory Space, i.e.)W
72 704.666 M (it is not permissible for a resource to be mappable only in I/O Space \(described below\).)S
72 722.666 M -0.233(The regions of Memory Space to which a PCI device responds are assigned dynamically during system initializa-)W
0.502 0.502 0 0.498 0 0 0.502 FmK
52 76 2 105 FmqF
FmE
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 7 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
0 0 .5 :F
369 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
369 0 :M
0 G
f0_12 sf
( )S
372 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
372 0 :M
f2_12 sf
( )S
375 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (8)S
FmE
375 0 :M
f1_12 sf
( )S
378 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
378 0 :M
f4_12 sf
( )S
385 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
385 0 :M
f2_10 sf
( )S
387 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 52.667 M 0.381(tion, by setting device base address registers in Configuration Space \(see below\).  The size of each such region)W
54 64.667 M 0.008(must be a power of two, and the assigned base address must be aligned on a boundary equal to the size of the re-)W
54 76.667 M (gion.)S
54 94.667 M -0.461(The encoding of the base address registers for Memory Space allows a resource to require address allocation with-)W
54 106.667 M 0.114(in the first 1 MB.  This requirement is reflected in the )W
FmE
388 0 :M
f5_10 sf
( )S
394 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.231 106.667 M 0 0 30(\"reg\")FmTx
FmE
394 0 :M
f2_10 sf
( )S
396 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.231 106.667 M 0.114( property entry for that base register by having the)W
FmE
396 0 :M
f4_10 sf
( )S
402 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 118.667 M 0 0 18(\'t\')FmTx
FmE
402 0 :M
f2_10 sf
( )S
404 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 118.667 M ( bit set.)S
54 136.667 M -0.058(Memory Space addressing is \"flat\" across a PCI domain, in that addresses are not transformed as they cross )W
(PCI-)S
54 148.667 M -0.081(to-PCI b)W
-0.081(ridges.  The flat address space is not necessarily limited to a single PCI domain; the PCI design attempts)W
54 160.667 M 0.154(to make it possible to have a flat address across multiple PCI domains that are peers of one another on a higher-)W
54 172.667 M (level host address bus.)S
54 190.667 M -0.237(An early revision of the PCI specification admitted the possibility that some devices might respond to fixed \(non-)W
54 202.666 M -0.495(relocatable\) address ranges. The current revision permits this behavior for VGA and IDE devices, but it is possible)W
54 214.666 M 0.519(that some other devices still behave that way.  The current specification allows devices to respond to fixed ad-)W
54 226.666 M 0.135(dresses after a system reset, but provides a standard way to disable such response, which devices are required to)W
54 238.666 M (implement.)S
FmE
405 0 :M
f0_12 sf
( )S
408 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 273 M (2.1.2. I/O Space)S
FmE
408 0 :M
f2_10 sf
( )S
410 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 289.666 M -0.46(I/O Space is similar to Memory Space, except that it is intended as to be used with the special \"I/O access\" instruc-)W
54 301.666 M 0.4(tions that some processors have. As with Memory Space, I/O Space addresses are assigned dynamically during)W
54 313.666 M (system initialization, and the addressing is \"flat\" across a PCI domain.)S
54 329.666 M 19.012(Relocatable I/O Space )W
FmE
410 0 :M
f3_10 sf
( )S
412 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.934 329.666 M (shall)S
FmE
413 0 :M
f2_10 sf
( )S
415 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222.38 329.666 M 19.012( be allocated at addresses of the form)W
FmE
415 0 :M
f4_9 sf
( )S
420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 341.666 M 0 0 195(aaaa.aaaa.aaaa.aaaa.aaaa.aa00.aaaa.aaaa)FmTx
FmE
420 0 :M
f2_10 sf
( )S
422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249 341.666 M -0.238(.  This guarantees that relocatable I/O addresses will not conflict)W
54 353.666 M -0.283(with hard-decoded address that have non-zero bits in AD[9\3118].  Because )W
-0.283(PCI-to-PCI b)W
-0.283(ridges restrict I/O address)W
54 365.666 M 7.728(space to 16 bits, relocatable I/O Space across )W
7.728(PCI-to-PCI b)W
7.728(ridges )W
FmE
423 0 :M
f3_10 sf
( )S
425 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
394.226 365.666 M (shall)S
FmE
425 0 :M
f2_10 sf
( )S
427 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.671 365.666 M 7.728( be of the form)W
FmE
428 0 :M
f4_9 sf
( )S
433 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 377 M 0 0 200(0000.0000.0000.0000.aaaa.aa00.aaaa.aaaa.)FmTx
FmE
433 0 :M
f3_10 sf
( )S
435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 392.666 M -0.386(Note:  although the PCI specification allows 32-bit I/O Space addresses, many of the processors that have special)W
54 404.666 M -0.028(I/O access instructions present only a 16-bit I/O address.  However, Open Firmware allows for the specification)W
54 416.666 M (of the full 32-bit range.)S
FmE
435 0 :M
f2_10 sf
( )S
437 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 432.666 M 0.608(PCI also allows devices to have I/O base address registers that implement only the low-order 16 bits.  I.e., the)W
54 444.666 M -0.156(upper 16 bits are assumed to be 0.  When probing, after writing all 1s, the data read back will have the high-order)W
54 456.666 M -0.046(16 bits equal to 0, while the low-order 16 bits will reflect the address space requirement.  Address space for such)W
54 468.666 M -0.15(a base register must be allocated within the first 64 KB of I/O Space.  This requirement is reflected in the )W
FmE
438 0 :M
f5_10 sf
( )S
444 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
474 468.666 M 0 0 30(\"reg\")FmTx
FmE
444 0 :M
f2_10 sf
( )S
446 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 480.666 M 0.528(property for that base register by having the )W
FmE
446 0 :M
f4_10 sf
( )S
452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
235.921 480.666 M 0 0 18(\'t\')FmTx
FmE
452 0 :M
f2_10 sf
( )S
454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.921 480.666 M 0.528(-bit set.  This is interpretation of the )W
FmE
455 0 :M
f4_10 sf
( )S
461 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
404.482 480.666 M 0 0 18(\'t\')FmTx
FmE
461 0 :M
f2_10 sf
( )S
463 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
422.482 480.666 M 0.528(-bit for I/O Space is)W
54 492.666 M -0.31(distinquished from the \"alias\" case by having the )W
FmE
463 0 :M
f4_10 sf
( )S
469 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.624 492.666 M 0 0 18(\'n\')FmTx
FmE
469 0 :M
f2_10 sf
( )S
471 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.624 492.666 M -0.31(-bit equal to 0 in its )W
FmE
472 0 :M
f5_10 sf
( )S
478 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
346.308 492.666 M 0 0 30(\"reg\")FmTx
FmE
478 0 :M
f2_10 sf
( )S
480 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
376.308 492.666 M -0.31( entry;  the corresponding )W
FmE
480 0 :M
f5_10 sf
( )S
486 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
479.999 492.666 M 0 0 24(\"as-)FmTx
54 504.666 M 0 0 102(signed-addresses\")FmTx
FmE
486 0 :M
f2_10 sf
( )S
488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156 504.666 M ( entry )S
FmE
489 0 :M
f3_10 sf
( )S
491 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.544 504.666 M (shall)S
FmE
491 0 :M
f2_10 sf
( )S
493 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.99 504.666 M ( have the )S
FmE
494 0 :M
f4_10 sf
( )S
500 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.584 504.666 M 0 0 18(\'t\')FmTx
FmE
500 0 :M
f2_10 sf
( )S
502 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
257.584 504.666 M (-bit equal to 0.)S
FmE
502 0 :M
f0_12 sf
( )S
505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 539 M (2.1.3. Hard-decoded Spaces)S
FmE
505 0 :M
f2_10 sf
( )S
507 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 555.666 M 0.054(PCI allows devices to \"hard-decode\" Memory and I/O addresses;  i.e., the addresses are not subject to relocation)W
54 567.666 M -0.145(via a base register.  These address ranges are represented by having the non-relocatable bit \()W
FmE
508 0 :M
f4_10 sf
( )S
514 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.952 567.666 M 0 0 18(\'n\')FmTx
FmE
514 0 :M
f2_10 sf
( )S
516 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
437.952 567.666 M -0.145(\) set in their cor-)W
54 579.666 M -0.246(responding )W
FmE
516 0 :M
f5_10 sf
( )S
522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100.687 579.666 M 0 0 30(\"reg\")FmTx
FmE
522 0 :M
f2_10 sf
( )S
524 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.687 579.666 M -0.246( and )W
FmE
525 0 :M
f5_10 sf
( )S
531 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.633 579.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
531 0 :M
f2_10 sf
( )S
533 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.633 579.666 M -0.246( properties, where the base-register field of the )W
FmE
533 0 :M
f3_10 sf
( )S
535 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
456.719 579.666 M (phys.hi)S
FmE
536 0 :M
f2_10 sf
( )S
538 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
485.325 579.666 M -0.246( is 0.)W
54 595.666 M 0.318(Furthermore, such devices are allowed to \"alias\" their hard-decoded I/O addresses by ignoring all but the lower)W
54 607.666 M 0.341(10 bits of an I/O address.  To conserve )W
FmE
538 0 :M
f5_10 sf
( )S
544 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214.229 607.666 M 0 0 30(\"reg\")FmTx
FmE
544 0 :M
f2_10 sf
( )S
546 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
244.229 607.666 M 0.341( property space, a bit \(the )W
FmE
547 0 :M
f4_10 sf
( )S
553 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.39 607.666 M 0 0 18(\'t\')FmTx
FmE
553 0 :M
f2_10 sf
( )S
555 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
368.39 607.666 M 0.341(-bit, for ten-bit\) is included in the)W
54 619.666 M 0.136(encoding of hard-decoded \(non-relocatable, )W
FmE
555 0 :M
f4_10 sf
( )S
561 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.948 619.666 M 0 0 18(\'n\')FmTx
FmE
561 0 :M
f2_10 sf
( )S
563 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.948 619.666 M 0.136(-bit = 1\) I/O address )W
FmE
564 0 :M
f5_10 sf
( )S
570 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.289 619.666 M 0 0 30(\"reg\")FmTx
FmE
570 0 :M
f2_10 sf
( )S
572 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
364.289 619.666 M 0.136( and )W
FmE
572 0 :M
f5_10 sf
( )S
578 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
384 619.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
578 0 :M
f2_10 sf
( )S
580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 631.666 M (entries to indicated that the address range includes all such aliases.)S
FmE
581 0 :M
f0_12 sf
( )S
584 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 665.999 M (2.1.4. Configuration Space)S
FmE
584 0 :M
f2_10 sf
( )S
586 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 682.666 M 0.381(Configuration Space is used primarily during device initialization.  Each device contains a set of Configuration)W
54 694.666 M -0.222(Registers which are used to identify and configure the device.  Configuration Cycles access a device\'s Configura-)W
54 706.666 M 0.177(tion Registers, including the \"address base registers\" which must be initialized before the device will respond to)W
54 718.666 M (Memory and I/O Space accesses.)S
FmE
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 8 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
586 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
586 0 :M
f0_12 sf
( )S
589 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
589 0 :M
f1_12 sf
( )S
592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
592 0 :M
f2_12 sf
( )S
595 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (9)S
FmE
595 0 :M
f4_12 sf
( )S
602 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
602 0 :M
f2_10 sf
( )S
604 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 52.667 M 0.305(In contrast to Memory and I/O Space addressing, Configuration Space addressing is effectively \"geographical\",)W
72 64.667 M -0.006(in that the Configuration Space address of a particular device is determined by its physical location on a PCI bus)W
72 76.667 M -0.348(\(i.e. the slot in which it is installed\), or more generally, its physical location within a \"tree\" of interconnected )W
(PCI-)S
72 88.667 M (to-PCI b)S
(ridges.)S
72 106.667 M -0.489(The method for generating Configuration Cycles is system-dependent.  In some systems, special registers are used)W
72 118.667 M -0.303(to generate Configuration Space cycles. In other systems, Configuration Space might be memory-mapped as a re-)W
72 130.667 M -0.421(gion within a large physical address space.  In particular, the hardware method for specifying the Bus Number and)W
72 142.667 M 0.203(Device Number is system-dependent.  Bus Number and Device Number are described below as though they are)W
72 154.667 M 0.078(binary-encoded fields within an address; in practice, that is not necessarily true at the hardware level.  However,)W
72 166.667 M -0.28(the representation described below is adequate as an internal software representation, because it is capable of rep-)W
72 178.667 M (resenting the entire possible space of PCI Configuration Space addresses.)S
72 196.666 M (A Configuration Space address consists of several fields:)S
FmE
605 0 :M
f0_10 sf
( )S
607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 226.666 M (2.1.4.1. Bus Number:  8 bits.)S
FmE
607 0 :M
f2_10 sf
( )S
609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 242.666 M 0.497(Each PCI bus within a PCI domain is assigned a unique identifying number, known as the \"bus number\".  The)W
72 254.666 M -0.218(assignments occur during system initialization, when the bus controllers for the PCI buses within the PCI domain)W
72 266.666 M (are located. The bus number for a particular bus is written into a register in that bus\'s bus controller.)S
72 284.666 M 0.369(During a Configuration Cycle, each bus controller compares the bus number field of the address to its assigned)W
72 296.666 M -0.005(bus number.  If they match, the bus controller selects one of the devices on its PCI bus, according to the value of)W
72 308.666 M -0.126(the Device Number field.  Otherwise, the bus controller either forwards the configuration cycle to its subordinate)W
72 320.666 M (PCI-to-PCI b)S
(ridges \(if the bus number is for one of its subordinate bridges\) or ignores the cycle.)S
FmE
610 0 :M
f0_10 sf
( )S
612 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 350.666 M (2.1.4.2. Device Number:  5 bits)S
FmE
612 0 :M
f2_10 sf
( )S
614 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 366.666 M 0.479(During a Configuration Cycle, the bus controller selected by the bus number field decodes the Device Number)W
72 378.666 M -0.259(field, activating the single corresponding \"IDSEL\" device select line to enable one of the PCI devices on that bus.)W
72 390.666 M 0.158(For PCI buses with plug-in slots, the Device Number field effectively selects a particular slot.  Electrical limita-)W
72 402.666 M -0.27(tions restrict the number of devices on an individual PCI bus to fewer than the 32 that could otherwise be selected)W
72 414.666 M (by this 5-bit field.)S
72 432.666 M 0.514(Some PCI bus controllers use the same physical wires for the IDSEL lines and higher-numbered address lines,)W
72 444.666 M 0.179(thus, on the bus that is selected by the bus number field, the Device Number does not appear on the address bus)W
72 456.666 M 0.136(in its 5-bit binary-encoded form.  Rather, the 5-bit field is decoded to a \"one of n\" select that asserts exactly one)W
72 468.666 M 0.391(upper address line.  This fact does not affect the logical representation of the Device Number as a 5-bit binary-)W
72 480.666 M (encoded field.)S
FmE
615 0 :M
f3_10 sf
( )S
617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 496.666 M -0.392(Note:  the decoding mechanism \(e.g., the address bit selected\) from the Device Number is system dependent.  Fur-)W
72 508.666 M 0.359(thermore, the implementation of the Open Firmware )W
FmE
617 0 :M
f7_10 sf
( )S
623 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.233 508.666 M 0 0 54(config-xx)FmTx
FmE
623 0 :M
f3_10 sf
( )S
625 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
341.233 508.666 M 0.359( words can \"hide\" this detail.  However, it is)W
72 520.666 M (recommended that an Open Firmware implementation choose a numbering which is meaningful to the user.)S
FmE
626 0 :M
f0_10 sf
( )S
628 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 550.666 M (2.1.4.3. Function Number:  3 bits)S
FmE
628 0 :M
f2_10 sf
( )S
630 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 566.666 M 0.271(Each PCI device can have from one to eight logically-independent functions, each with its own independent set)W
72 578.666 M -0.416(of configuration registers.  A PCI device that is selected during a Configuration Cycle decodes the Function Num-)W
72 590.666 M -0.545(ber field to select the appropriate set of configuration registers for that function. The assignment of Function Num-)W
72 602.666 M -0.341(bers to particular functions is a hard-wired characteristic of the individual PCI device.  For a PCI device with only)W
72 614.666 M (one function, the Function Number must be zero.)S
FmE
631 0 :M
f0_10 sf
( )S
633 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 644.666 M (2.1.4.4. Register Number:  8 bits)S
FmE
633 0 :M
f2_10 sf
( )S
635 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 660.666 M 0.028(The register number field, decoded by the PCI device, selects a particular register within the set of configuration)W
72 672.666 M -0.316(registers corresponding to the selected function.  The layout \(locations and meanings of particular bits\) of the first)W
72 684.666 M -0.197(few configuration registers \(i.e. those with small register numbers\) is specified by the PCI standard; other config-)W
72 696.666 M 0.7(uration registers are device-specific.  The standard configuration registers perform such functions as assigning)W
72 708.666 M (Memory Space and I/O Space base addresses for the device\'s addressable regions.)S
72 726.666 M 0.332(In many PCI hardware implementations, Configuration Space does not appear as a direct subset of the system\'s)W
FmE
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 9 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
636 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
636 0 :M
f0_12 sf
( )S
639 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
639 0 :M
f2_12 sf
( )S
642 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (10)S
FmE
642 0 :M
f1_12 sf
( )S
645 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
645 0 :M
f4_12 sf
( )S
652 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
652 0 :M
f2_10 sf
( )S
654 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 52.667 M 0.136(physical address space; instead, Configuration Space accesses are performed by a sequence of reads or writes to)W
54 64.667 M (special system registers.)S
FmE
655 0 :M
f0_10 sf
( )S
657 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 94.667 M (2.1.4.5. \"Address-less\" Cycles)S
FmE
657 0 :M
f2_10 sf
( )S
659 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 110.667 M -0.456(In addition to these address spaces, PCI has two types of transactions in which the address bus is not used.  Special)W
54 122.667 M 0.215(Cycles \(writes\) are \"broadcast\" cycles in which the data conveys all of the information.  Interrupt Acknowledge)W
54 134.667 M 0.169(Cycles \(reads\) are intended to support interrupt control hardware associated with PCI devices.  The PCI specifi-)W
54 146.667 M (cation does not specify the details of such interrupt control hardware.)S
FmE
660 0 :M
f0_10 sf
( )S
662 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 176.667 M (2.1.4.6. Low-order Address Bits)S
FmE
662 0 :M
f2_10 sf
( )S
664 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 192.667 M 0.134(The address characteristics described above do not take into account the way that the PCI bus uses the least-sig-)W
54 204.667 M -0.005(nificant two address bits.  In general, at the hardware level, the PCI bus uses the two low address bits \(AD[1::0]\))W
54 216.667 M -0.438(not to identify the particular byte to be accessed, but instead to convey additional information about the data trans-)W
54 228.666 M -0.389(fer, such as the type of address incrementing for burst transfers.  The bytes are selected with \"byte enable\" signals.)W
54 246.666 M -0.11(That hardware subtlety is irrelevant for the purposes of this specification; within the Open Firmware domain, ad-)W
54 258.666 M 0.399(dresses identify individual 8-bit, 16-bit, and 32-bit registers or memory locations in the usual way.  Within this)W
54 270.666 M -0.037(document, \"address\" refers to that software view of an address, which in the case of the two lower address bits is)W
54 282.666 M (not necessarily the same as what is on the PCI address wires.)S
FmE
665 0 :M
f0_12 sf
( )S
668 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 317 M (2.2. Address Formats and Representations)S
54 352 M (2.2.1. Physical Address Formats)S
FmE
668 0 :M
f0_10 sf
( )S
670 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 382.666 M (2.2.1.1. Numerical Representation)S
FmE
670 0 :M
f2_10 sf
( )S
672 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 398.666 M -0.234(\(The Numerical Representation of an address is the format that Open Firmware uses for storing an address within)W
54 410.666 M 0.317(a property value and on the stack, as an argument to a package method.\) The numerical representation of a PCI)W
54 422.666 M -0.145(address consists of three cells, encoded as follows.  For this purpose, the least-significant 32 bits of a cell is used;)W
54 434.666 M -0.56(if the cell size is larger than 32 bits, any additional high-order bits are zero.  Bit# 0 refers to the least-significant bit.)W
FmE
673 0 :M
f4_10 sf
( )S
679 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 450.666 M 0 0 126(                 Bit#)FmTx
27 N 0 0 210(33222222 22221111 11111100 00000000)FmTx
169.2 462.666 M 0 0 24(    )FmTx
13.8 N 0 0 210(10987654 32109876 54321098 76543210)FmTx
111.6 480.666 M 0 0 78(phys.hi cell:)FmTx
17.4 N 0 0 210(npt000ss bbbbbbbb dddddfff rrrrrrrr)FmTx
111.6 492.666 M 0 0 84(phys.mid cell:)FmTx
11.4 N 0 0 210(hhhhhhhh hhhhhhhh hhhhhhhh hhhhhhhh)FmTx
111.6 504.666 M 0 0 78(phys.lo cell:)FmTx
17.4 N 0 0 210(llllllll llllllll llllllll llllllll)FmTx
FmE
679 0 :M
f2_10 sf
( )S
681 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 528.666 M (where:)S
FmE
681 0 :M
f4_10 sf
( )S
687 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 552.666 M 0 0 6(n)FmTx
FmE
687 0 :M
f2_10 sf
( )S
689 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.2 552.666 M (is 0 if the address is relocatable, 1 otherwise)S
FmE
690 0 :M
f4_10 sf
( )S
696 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 564.666 M 0 0 6(p)FmTx
FmE
696 0 :M
f2_10 sf
( )S
698 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.2 564.666 M (is 1 if the addressable region is \"prefetchable\", 0 otherwise)S
FmE
698 0 :M
f4_10 sf
( )S
704 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 576.666 M 0 0 6(t)FmTx
FmE
704 0 :M
f2_10 sf
( )S
706 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.2 576.666 M 0.117(is 1 if the address is aliased \(for non-relocatable I/O\), below 1 MB \(for Memory\),)W
171 588.666 M (or below 64 KB \(for relocatable I/O\).)S
FmE
707 0 :M
f4_10 sf
( )S
713 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 600.666 M 0 0 12(ss)FmTx
FmE
713 0 :M
f2_10 sf
( )S
715 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.2 600.666 M (is the space code, denoting the address space)S
FmE
715 0 :M
f4_10 sf
( )S
721 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 612.666 M 0 0 48(bbbbbbbb)FmTx
FmE
721 0 :M
f2_10 sf
( )S
723 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.2 612.666 M (is the 8-bit Bus Number)S
FmE
724 0 :M
f4_10 sf
( )S
730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 624.666 M 0 0 30(ddddd)FmTx
FmE
730 0 :M
f2_10 sf
( )S
732 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.2 624.666 M (is the 5-bit Device Number)S
FmE
732 0 :M
f4_10 sf
( )S
738 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 636.666 M 0 0 18(fff)FmTx
FmE
738 0 :M
f2_10 sf
( )S
740 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.2 636.666 M (is the 3-bit Function Number)S
FmE
741 0 :M
f4_10 sf
( )S
747 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 648.666 M 0 0 48(rrrrrrrr)FmTx
FmE
747 0 :M
f2_10 sf
( )S
749 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.2 648.666 M (is the 8-bit Register Number)S
FmE
749 0 :M
f4_10 sf
( )S
755 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 660.666 M 0 0 30(hh\311hh)FmTx
FmE
755 0 :M
f2_10 sf
( )S
757 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.2 660.666 M (is a 32-bit unsigned number)S
FmE
758 0 :M
f4_10 sf
( )S
764 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.6 672.666 M 0 0 30(ll\311ll)FmTx
FmE
764 0 :M
f2_10 sf
( )S
766 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.2 672.666 M (is a 32-bit unsigned number)S
54 696.666 M -0.407(When the )W
FmE
766 0 :M
f4_10 sf
( )S
772 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94.279 696.666 M 0 0 30(hh\311hh)FmTx
FmE
772 0 :M
f2_10 sf
( )S
774 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.279 696.666 M -0.407( and )W
FmE
775 0 :M
f4_10 sf
( )S
781 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
142.902 696.666 M 0 0 30(ll\311ll)FmTx
FmE
781 0 :M
f2_10 sf
( )S
783 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
172.902 696.666 M -0.407( fields are concatenated to form a larger number, )W
FmE
783 0 :M
f4_10 sf
( )S
789 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
366.345 696.666 M 0 0 30(hh\311hh)FmTx
FmE
789 0 :M
f2_10 sf
( )S
791 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
396.345 696.666 M -0.407( is the most significant por-)W
54 708.666 M (tion and )S
FmE
792 0 :M
f4_10 sf
( )S
798 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88.995 708.666 M 0 0 30(ll\311ll)FmTx
FmE
798 0 :M
f2_10 sf
( )S
800 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118.995 708.666 M ( is the least significant portion.)S
54 724.666 M (The \')S
FmE
800 0 :M
f4_10 sf
( )S
806 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
73.846 724.666 M 0 0 6(p)FmTx
FmE
806 0 :M
f2_10 sf
( )S
808 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.846 724.666 M (\' bit reflects the state of the \"P\" bit in the corresponding hardware Base Address register.)S
FmE
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 10 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
809 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
809 0 :M
f0_12 sf
( )S
812 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
812 0 :M
f1_12 sf
( )S
815 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
815 0 :M
f2_12 sf
( )S
818 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (11)S
FmE
818 0 :M
f4_12 sf
( )S
825 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
825 0 :M
f0_10 sf
( )S
827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 52.667 M (Encoding of type code \"ss\":)S
FmE
828 0 :M
f4_10 sf
( )S
834 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 70.667 M 0 0 12(00)FmTx
FmE
834 0 :M
f2_10 sf
( )S
836 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84 70.667 M ( denotes  Configuration Space, in which case:)S
FmE
836 0 :M
f4_10 sf
( )S
842 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 82.667 M 0 0 6(n)FmTx
FmE
842 0 :M
f2_10 sf
( )S
844 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 82.667 M (must be zero)S
FmE
845 0 :M
f4_10 sf
( )S
851 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 94.667 M 0 0 6(p)FmTx
FmE
851 0 :M
f2_10 sf
( )S
853 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 94.667 M (must be zero)S
FmE
853 0 :M
f4_10 sf
( )S
859 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 106.667 M 0 0 6(t)FmTx
FmE
859 0 :M
f2_10 sf
( )S
861 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 106.667 M (must be zero)S
FmE
862 0 :M
f4_10 sf
( )S
868 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 118.667 M 0 0 48(bbbbbbbb)FmTx
FmE
868 0 :M
f2_10 sf
( )S
870 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345 118.667 M (,)S
FmE
870 0 :M
f4_10 sf
( )S
876 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
347.5 118.667 M 0 0 30(ddddd)FmTx
FmE
876 0 :M
f2_10 sf
( )S
878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
377.5 118.667 M (,)S
FmE
879 0 :M
f4_10 sf
( )S
885 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
380 118.667 M 0 0 18(fff)FmTx
FmE
885 0 :M
f2_10 sf
( )S
887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
398 118.667 M (,)S
FmE
887 0 :M
f4_10 sf
( )S
893 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.5 118.667 M 0 0 54(rrrrrrrrr)FmTx
FmE
893 0 :M
f2_10 sf
( )S
895 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
454.5 118.667 M -0.127(is the Configura-)W
297 130.667 M (tion Space address)S
FmE
896 0 :M
f4_10 sf
( )S
902 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 142.667 M 0 0 30(hh\311hh)FmTx
FmE
902 0 :M
f2_10 sf
( )S
904 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
327 142.667 M (,)S
FmE
904 0 :M
f4_10 sf
( )S
910 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
329.5 142.667 M 0 0 30(ll\311ll)FmTx
FmE
910 0 :M
f2_10 sf
( )S
912 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
359.5 142.667 M (must be zero)S
FmE
913 0 :M
f4_10 sf
( )S
919 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 166.667 M 0 0 12(01)FmTx
FmE
919 0 :M
f2_10 sf
( )S
921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84 166.667 M ( denotes  I/O Space, in which case:)S
FmE
921 0 :M
f4_10 sf
( )S
927 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 178.667 M 0 0 6(p)FmTx
FmE
927 0 :M
f2_10 sf
( )S
929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 178.667 M (must be zero)S
FmE
930 0 :M
f4_10 sf
( )S
936 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 190.666 M 0 0 6(t)FmTx
FmE
936 0 :M
f2_10 sf
( )S
938 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 190.666 M (is set if 10-bit aliasing is present \(for non-relocatable\),)S
297 202.666 M (or below 64 KB required \(for relocatable\).)S
FmE
938 0 :M
f4_10 sf
( )S
944 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 214.666 M 0 0 48(bbbbbbbb)FmTx
FmE
944 0 :M
f2_10 sf
( )S
946 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.6 214.666 M (,)S
FmE
947 0 :M
f4_10 sf
( )S
953 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.1 214.666 M 0 0 30(ddddd)FmTx
FmE
953 0 :M
f2_10 sf
( )S
955 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.1 214.666 M (,)S
FmE
955 0 :M
f4_10 sf
( )S
961 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
212.6 214.666 M 0 0 18(fff)FmTx
FmE
961 0 :M
f2_10 sf
( )S
963 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
230.6 214.666 M (,)S
FmE
964 0 :M
f4_10 sf
( )S
970 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.1 214.666 M 0 0 48(rrrrrrrr)FmTx
FmE
970 0 :M
f2_10 sf
( )S
972 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 214.666 M (identifies the region\'s Base Address Register )S
FmE
972 0 :M
f4_10 sf
( )S
978 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 226.666 M 0 0 48(rrrrrrrr)FmTx
FmE
978 0 :M
f2_10 sf
( )S
980 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345 226.666 M ( can be 0x10, 0x14, 0x18, 0x1c, 0x20 or )S
297 238.666 M (0x24 \(for relocatable\).)S
FmE
981 0 :M
f4_10 sf
( )S
987 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 250.666 M 0 0 48(rrrrrrrr)FmTx
FmE
987 0 :M
f2_10 sf
( )S
989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345 250.666 M (is 0x00 for non-relocatable)S
FmE
989 0 :M
f4_10 sf
( )S
995 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 262.666 M 0 0 30(hh\311hh)FmTx
FmE
995 0 :M
f2_10 sf
( )S
997 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 262.666 M (must be zero)S
72 274.666 M (    If )S
FmE
998 0 :M
f4_10 sf
( )S
1004 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
91.155 274.666 M 0 0 6(n)FmTx
FmE
1004 0 :M
f2_10 sf
( )S
1006 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 274.666 M ( is 0:)S
FmE
1006 0 :M
f4_10 sf
( )S
1012 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 274.666 M 0 0 30(ll\311ll)FmTx
FmE
1012 0 :M
f2_10 sf
( )S
1014 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.6 274.666 M ( )S
134.9 N -0.621(is the 32-bit offset from the start of the relocatable region )W
297 286.666 M (of I/O Space)S
72 298.666 M (    If )S
FmE
1015 0 :M
f4_10 sf
( )S
1021 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
91.155 298.666 M 0 0 6(n)FmTx
FmE
1021 0 :M
f2_10 sf
( )S
1023 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 298.666 M ( is 1:)S
FmE
1023 0 :M
f4_10 sf
( )S
1029 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 298.666 M 0 0 30(ll\311ll)FmTx
FmE
1029 0 :M
f2_10 sf
( )S
1031 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.6 298.666 M ( )S
134.9 N (is the 32-bit I/O Space address)S
FmE
1032 0 :M
f4_10 sf
( )S
1038 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 322.666 M 0 0 12(10)FmTx
FmE
1038 0 :M
f2_10 sf
( )S
1040 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84 322.666 M ( denotes  32-bit-address Memory Space, in which case:)S
FmE
1040 0 :M
f4_10 sf
( )S
1046 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 334.666 M 0 0 6(p)FmTx
FmE
1046 0 :M
f2_10 sf
( )S
1048 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 334.666 M ( may be either 0 or 1)S
FmE
1049 0 :M
f4_10 sf
( )S
1055 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 346.666 M 0 0 6(t)FmTx
FmE
1055 0 :M
f2_10 sf
( )S
1057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 346.666 M (is set if an address below 1 MB is required)S
FmE
1057 0 :M
f4_10 sf
( )S
1063 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 358.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1063 0 :M
f2_10 sf
( )S
1065 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.6 358.666 M (,)S
FmE
1066 0 :M
f4_10 sf
( )S
1072 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.1 358.666 M 0 0 30(ddddd)FmTx
FmE
1072 0 :M
f2_10 sf
( )S
1074 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.1 358.666 M (,)S
FmE
1074 0 :M
f4_10 sf
( )S
1080 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
212.6 358.666 M 0 0 18(fff)FmTx
FmE
1080 0 :M
f2_10 sf
( )S
1082 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
230.6 358.666 M (,)S
FmE
1083 0 :M
f4_10 sf
( )S
1089 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.1 358.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1089 0 :M
f2_10 sf
( )S
1091 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
281.1 358.666 M ( )S
13.4 N -0.005(identifies the relocatable region\'s Base Address Register)W
FmE
1091 0 :M
f4_10 sf
( )S
1097 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 370.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1097 0 :M
f2_10 sf
( )S
1099 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345 370.666 M -0.362( can be 0x10, 0x14, 0x18, 0x1c, 0x20, 0x24, )W
297 382.666 M (0x30 \(relocatable\))S
FmE
1100 0 :M
f4_10 sf
( )S
1106 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 394.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1106 0 :M
f2_10 sf
( )S
1108 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345 394.666 M ( is 0x00 for non-relocatable)S
FmE
1108 0 :M
f4_10 sf
( )S
1114 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 406.666 M 0 0 30(hh\311hh)FmTx
FmE
1114 0 :M
f2_10 sf
( )S
1116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.6 406.666 M ( )S
134.9 N (must be zero)S
72 418.666 M (    If )S
FmE
1117 0 :M
f4_10 sf
( )S
1123 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
91.155 418.666 M 0 0 6(n)FmTx
FmE
1123 0 :M
f2_10 sf
( )S
1125 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 418.666 M ( is 0:)S
FmE
1125 0 :M
f4_10 sf
( )S
1131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 418.666 M 0 0 30(ll\311ll)FmTx
FmE
1131 0 :M
f2_10 sf
( )S
1133 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 418.666 M -0.621(is the 32-bit offset from the start of the relocatable region )W
297 430.666 M (of 32-bit address Memory Space)S
72 442.666 M (    If )S
FmE
1134 0 :M
f4_10 sf
( )S
1140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
91.155 442.666 M 0 0 6(n)FmTx
FmE
1140 0 :M
f2_10 sf
( )S
1142 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 442.666 M ( is 1:)S
FmE
1142 0 :M
f4_10 sf
( )S
1148 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 442.666 M 0 0 30(ll\311ll)FmTx
FmE
1148 0 :M
f2_10 sf
( )S
1150 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 442.666 M (is the 32-bit Memory Space address)S
FmE
1151 0 :M
f4_10 sf
( )S
1157 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 466.666 M 0 0 12(11)FmTx
FmE
1157 0 :M
f2_10 sf
( )S
1159 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84 466.666 M ( denotes  64-bit-address Memory Space, in which case:)S
FmE
1159 0 :M
f4_10 sf
( )S
1165 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 478.666 M 0 0 6(p)FmTx
FmE
1165 0 :M
f2_10 sf
( )S
1167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 478.666 M (may be either 0 or 1)S
FmE
1168 0 :M
f4_10 sf
( )S
1174 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 490.666 M 0 0 6(t)FmTx
FmE
1174 0 :M
f2_10 sf
( )S
1176 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 490.666 M (must be 0)S
FmE
1176 0 :M
f4_10 sf
( )S
1182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 502.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1182 0 :M
f2_10 sf
( )S
1184 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.6 502.666 M (,)S
FmE
1185 0 :M
f4_10 sf
( )S
1191 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.1 502.666 M 0 0 30(ddddd)FmTx
FmE
1191 0 :M
f2_10 sf
( )S
1193 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.1 502.666 M (,)S
FmE
1193 0 :M
f4_10 sf
( )S
1199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
212.6 502.666 M 0 0 18(fff)FmTx
FmE
1199 0 :M
f2_10 sf
( )S
1201 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
230.6 502.666 M (,)S
FmE
1202 0 :M
f4_10 sf
( )S
1208 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.1 502.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1208 0 :M
f2_10 sf
( )S
1210 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 502.666 M (identifies the first register of the relocatable region\'s )S
297 514.666 M (Base Address )S
(Register pair.  )S
FmE
1210 0 :M
f4_10 sf
( )S
1216 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.064 514.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1216 0 :M
f2_10 sf
( )S
1218 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
461.064 514.666 M ( can be 0x10, )S
297 526.666 M (0x14, 0x18, 0x1c, or 0x20)S
72 538.666 M (    If )S
FmE
1219 0 :M
f4_10 sf
( )S
1225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
91.155 538.666 M 0 0 6(n)FmTx
FmE
1225 0 :M
f2_10 sf
( )S
1227 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 538.666 M ( is 0:)S
FmE
1227 0 :M
f4_10 sf
( )S
1233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 538.666 M 0 0 30(hh\311hh)FmTx
FmE
1233 0 :M
f2_10 sf
( )S
1235 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.6 538.666 M (,)S
FmE
1236 0 :M
f4_10 sf
( )S
1242 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.1 538.666 M 0 0 30(ll\311ll)FmTx
FmE
1242 0 :M
f2_10 sf
( )S
1244 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 538.666 M -0.621(is the 64-bit offset from the start of the relocatable region )W
297 550.666 M -0.324(of 64-bit address Memory Space to the start of the subre-)W
297 562.666 M (gion)S
72 574.666 M (    If )S
FmE
1244 0 :M
f4_10 sf
( )S
1250 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
91.155 574.666 M 0 0 6(n)FmTx
FmE
1250 0 :M
f2_10 sf
( )S
1252 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 574.666 M ( is 1:)S
FmE
1253 0 :M
f4_10 sf
( )S
1259 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 574.666 M 0 0 30(hh\311hh)FmTx
FmE
1259 0 :M
f2_10 sf
( )S
1261 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.6 574.666 M (,)S
FmE
1261 0 :M
f4_10 sf
( )S
1267 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.1 574.666 M 0 0 30(ll\311ll)FmTx
FmE
1267 0 :M
f2_10 sf
( )S
1269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 574.666 M (is the 64-bit Memory Space address)S
FmE
1270 0 :M
f3_10 sf
( )S
1272 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 590.666 M -0.155(Note:  Although the bit format of the phys.hi cell is generally consistent with the bit format of a particular kind of)W
72 602.666 M 0.301(hardware mechanism for Configuration Space access that is recommended by the PCI standard, the use of that)W
72 614.666 M -0.358(format does not imply that the hardware must use the same format. The numerical representation specified herein)W
72 626.666 M -0.358(contains the information needed to select a particular hardware device, specifying the format by which that infor-)W
72 638.666 M 0.202(mation is communicated among elements of Open Firmware firmware and client programs.  A driver for a par-)W
72 650.666 M 0.596(ticular PCI bus hardware implementation is free to extract that information and reformat as necessary for the)W
72 662.666 M (hardware.)S
72 680.666 M 0.159(Note:  Although the )W
FmE
1272 0 :M
f2_10 sf
( )S
1274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.732 680.666 M 0.159(PCI Local Bus Specification)W
FmE
1275 0 :M
f3_10 sf
( )S
1277 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.343 680.666 M 0.159( defines both prefetchable and non-prefetchable 64-bit-address)W
72 692.666 M -0.605(Memory Space, the )W
FmE
1277 0 :M
f2_10 sf
( )S
1279 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.592 692.666 M -0.605(PCI-to-PCI B)W
-0.605(ridge Architecture Specification)W
FmE
1280 0 :M
f3_10 sf
( )S
1282 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
330.755 692.666 M -0.605( does not specify a standard means of supporting)W
72 704.666 M (non-prefetchable 64-bit-address Memory Space across )S
(PCI-to-PCI b)S
(ridges. )S
FmE
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 11 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
1282 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1282 0 :M
f0_12 sf
( )S
1285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
1285 0 :M
f2_12 sf
( )S
1288 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (12)S
FmE
1288 0 :M
f1_12 sf
( )S
1291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
1291 0 :M
f4_12 sf
( )S
1298 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
1298 0 :M
f0_10 sf
( )S
1300 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 52.667 M (2.2.1.2. Text Representation)S
FmE
1301 0 :M
f2_10 sf
( )S
1303 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 68.667 M (The text representation of a PCI address is one of the following forms:)S
90 80.667 M (DD)S
FmE
1303 0 :M
f4_10 sf
( )S
1309 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 92.667 M 0 0 24(DD,F)FmTx
90 104.667 M 0 0 138([n]i[t]DD,F,RR,NNNNNNNN)FmTx
90 116.667 M 0 0 156([n]m[t][p]DD,F,RR,NNNNNNNN)FmTx
90 128.667 M 0 0 186([n]x[p]DD,F,RR,NNNNNNNNNNNNNNNN)FmTx
FmE
1309 0 :M
f2_10 sf
( )S
1311 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 144.667 M (where:)S
FmE
1312 0 :M
f4_10 sf
( )S
1318 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 156.667 M 0 0 12(DD)FmTx
FmE
1318 0 :M
f2_10 sf
( )S
1320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 156.667 M (is an ASCII hexadecimal number in the range )S
FmE
1320 0 :M
f4_10 sf
( )S
1326 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.481 156.667 M 0 0 24(0\3111F)FmTx
90 168.667 M 0 0 6(F)FmTx
FmE
1326 0 :M
f2_10 sf
( )S
1328 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 168.667 M (is an ASCII numeral in the range )S
FmE
1329 0 :M
f4_10 sf
( )S
1335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
332.67 168.667 M 0 0 18(0\3117)FmTx
90 180.667 M 0 0 12(RR)FmTx
FmE
1335 0 :M
f2_10 sf
( )S
1337 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 180.667 M (is an ASCII hexadecimal number in the range )S
FmE
1337 0 :M
f4_10 sf
( )S
1343 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.481 180.667 M 0 0 24(0\311FF)FmTx
90 192.666 M 0 0 48(NNNNNNNN)FmTx
FmE
1343 0 :M
f2_10 sf
( )S
1345 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 192.666 M (is an ASCII hexadecimal number in the range )S
FmE
1346 0 :M
f4_10 sf
( )S
1352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.481 192.666 M 0 0 60(0\311FFFFFFFF)FmTx
90 204.666 M 0 0 96(NNNNNNNNNNNNNNNN)FmTx
FmE
1352 0 :M
f2_10 sf
( )S
1354 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 204.666 M (is )S
(an )S
(ASCII )S
(hexadecimal )S
(number )S
(in )S
(the )S
(range )S
FmE
1354 0 :M
f4_10 sf
( )S
1360 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.481 204.666 M 0 0 108(0\311FFFFFFFFFFFFFFFF)FmTx
90 216.666 M 0 0 18([n])FmTx
FmE
1360 0 :M
f2_10 sf
( )S
1362 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 216.666 M (is the letter \')S
FmE
1363 0 :M
f4_10 sf
( )S
1369 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.723 216.666 M 0 0 6(n)FmTx
FmE
1369 0 :M
f2_10 sf
( )S
1371 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 216.666 M (\', whose presence is optional)S
FmE
1371 0 :M
f4_10 sf
( )S
1377 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 228.666 M 0 0 18([t])FmTx
FmE
1377 0 :M
f2_10 sf
( )S
1379 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 228.666 M (is the letter \')S
FmE
1380 0 :M
f4_10 sf
( )S
1386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.723 228.666 M 0 0 6(t)FmTx
FmE
1386 0 :M
f2_10 sf
( )S
1388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 228.666 M (\', whose presence is optional)S
FmE
1388 0 :M
f4_10 sf
( )S
1394 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 240.666 M 0 0 18([p])FmTx
FmE
1394 0 :M
f2_10 sf
( )S
1396 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 240.666 M (is the letter \')S
FmE
1397 0 :M
f4_10 sf
( )S
1403 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.723 240.666 M 0 0 6(p)FmTx
FmE
1403 0 :M
f2_10 sf
( )S
1405 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 240.666 M (\', whose presence is optional)S
FmE
1405 0 :M
f4_10 sf
( )S
1411 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 252.666 M 0 0 6(i)FmTx
FmE
1411 0 :M
f2_10 sf
( )S
1413 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 252.666 M (is the letter \')S
FmE
1414 0 :M
f4_10 sf
( )S
1420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.723 252.666 M 0 0 6(i)FmTx
FmE
1420 0 :M
f2_10 sf
( )S
1422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 252.666 M (\')S
FmE
1422 0 :M
f4_10 sf
( )S
1428 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 264.666 M 0 0 6(m)FmTx
FmE
1428 0 :M
f2_10 sf
( )S
1430 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 264.666 M (is the letter \')S
FmE
1431 0 :M
f4_10 sf
( )S
1437 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.723 264.666 M 0 0 6(m)FmTx
FmE
1437 0 :M
f2_10 sf
( )S
1439 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 264.666 M (\')S
FmE
1439 0 :M
f4_10 sf
( )S
1445 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 276.666 M 0 0 6(x)FmTx
FmE
1445 0 :M
f2_10 sf
( )S
1447 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 276.666 M (is the letter \')S
FmE
1448 0 :M
f4_10 sf
( )S
1454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.723 276.666 M 0 0 6(x)FmTx
FmE
1454 0 :M
f2_10 sf
( )S
1456 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 276.666 M (\')S
FmE
1456 0 :M
f4_10 sf
( )S
1462 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 288.666 M 0 0 6(,)FmTx
FmE
1462 0 :M
f2_10 sf
( )S
1464 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 288.666 M (is the character \')S
FmE
1465 0 :M
f4_10 sf
( )S
1471 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.81 288.666 M 0 0 6(,)FmTx
FmE
1471 0 :M
f2_10 sf
( )S
1473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.81 288.666 M (\' \(comma\))S
54 304.666 M (The correspondence between the text representations and numerical representation is as follows:)S
FmE
1473 0 :M
f4_10 sf
( )S
1479 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 320.666 M 0 0 12(DD)FmTx
FmE
1479 0 :M
f2_10 sf
( )S
1481 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 336.666 M (corresponds to a Configuration Space address with the numerical value:)S
FmE
1482 0 :M
f4_10 sf
( )S
1488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 348.666 M 0 0 12(ss)FmTx
FmE
1488 0 :M
f2_10 sf
( )S
1490 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156 348.666 M ( )S
(is 00)S
FmE
1490 0 :M
f4_10 sf
( )S
1496 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 360.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1496 0 :M
f2_10 sf
( )S
1498 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 360.666 M ( )S
(is the parent\'s bus number)S
FmE
1499 0 :M
f4_10 sf
( )S
1505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 372.666 M 0 0 30(ddddd)FmTx
FmE
1505 0 :M
f2_10 sf
( )S
1507 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 372.666 M ( )S
(is the binary encoding of )S
FmE
1507 0 :M
f4_10 sf
( )S
1513 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.412 372.666 M 0 0 12(DD)FmTx
144 384.666 M 0 0 18(fff)FmTx
FmE
1513 0 :M
f2_10 sf
( )S
1515 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 384.666 M (is zero)S
FmE
1516 0 :M
f4_10 sf
( )S
1522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 396.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1522 0 :M
f2_10 sf
( )S
1524 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 396.666 M ( )S
(is zero)S
FmE
1524 0 :M
f4_10 sf
( )S
1530 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 408.666 M 0 0 36(hh\311hh )FmTx
FmE
1530 0 :M
f2_10 sf
( )S
1532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 408.666 M (is zero)S
FmE
1533 0 :M
f4_10 sf
( )S
1539 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 420.666 M 0 0 30(ll\311ll)FmTx
FmE
1539 0 :M
f2_10 sf
( )S
1541 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 420.666 M ( )S
(is zero)S
FmE
1541 0 :M
f4_10 sf
( )S
1547 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.32 438.666 M 0 0 24(DD,F)FmTx
FmE
1547 0 :M
f2_10 sf
( )S
1549 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 454.666 M (corresponds to a Configuration Space address with the numerical value:)S
FmE
1550 0 :M
f4_10 sf
( )S
1556 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 466.666 M 0 0 12(ss)FmTx
FmE
1556 0 :M
f2_10 sf
( )S
1558 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156 466.666 M ( )S
(is 00)S
FmE
1558 0 :M
f4_10 sf
( )S
1564 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 478.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1564 0 :M
f2_10 sf
( )S
1566 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 478.666 M ( )S
(is the parent\'s bus number)S
FmE
1567 0 :M
f4_10 sf
( )S
1573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 490.666 M 0 0 30(ddddd)FmTx
FmE
1573 0 :M
f2_10 sf
( )S
1575 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 490.666 M ( )S
(is the binary encoding of )S
FmE
1575 0 :M
f4_10 sf
( )S
1581 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.412 490.666 M 0 0 12(DD)FmTx
144 502.666 M 0 0 18(fff)FmTx
FmE
1581 0 :M
f2_10 sf
( )S
1583 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 502.666 M (is the binary encoding of )S
FmE
1584 0 :M
f4_10 sf
( )S
1590 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.912 502.666 M 0 0 6(F)FmTx
144 514.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1590 0 :M
f2_10 sf
( )S
1592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 514.666 M (is zero)S
FmE
1592 0 :M
f4_10 sf
( )S
1598 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 526.666 M 0 0 30(hh\311hh)FmTx
FmE
1598 0 :M
f2_10 sf
( )S
1600 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 526.666 M ( )S
(is zero)S
FmE
1601 0 :M
f4_10 sf
( )S
1607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 538.666 M 0 0 36(ll\311ll )FmTx
FmE
1607 0 :M
f2_10 sf
( )S
1609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 538.666 M (is zero)S
FmE
1609 0 :M
f4_10 sf
( )S
1615 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 562.666 M 0 0 138([n]i[t]DD,F,RR,NNNNNNNN)FmTx
FmE
1615 0 :M
f2_10 sf
( )S
1617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 586.666 M -0.068(corresponds to a relocatable \(if \')W
FmE
1618 0 :M
f4_10 sf
( )S
1624 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.775 586.666 M 0 0 6(n)FmTx
FmE
1624 0 :M
f2_10 sf
( )S
1626 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.775 586.666 M -0.068(\' is not present\) or a non-relocatable \(if \')W
FmE
1626 0 :M
f4_10 sf
( )S
1632 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
418.857 586.666 M 0 0 6(n)FmTx
FmE
1632 0 :M
f2_10 sf
( )S
1634 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
424.857 586.666 M -0.068(\' is present\) 32-bit   )W
126 598.666 M -0.082(I/O Space address with the numerical value.  If \')W
FmE
1635 0 :M
f4_10 sf
( )S
1641 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
317.522 598.666 M 0 0 6(t)FmTx
FmE
1641 0 :M
f2_10 sf
( )S
1643 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
323.522 598.666 M -0.082(\' is present, only the low-order 10 bits of an   )W
126 610.666 M (I/O address range is indicated;  aliases are assumed to for all high-order bits.  The numerical )S
126 622.666 M (value is:)S
FmE
1643 0 :M
f4_10 sf
( )S
1649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 634.666 M 0 0 12(ss)FmTx
FmE
1649 0 :M
f2_10 sf
( )S
1651 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156 634.666 M ( is )S
FmE
1652 0 :M
f4_10 sf
( )S
1658 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.667 634.666 M 0 0 12(01)FmTx
144 646.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1658 0 :M
f2_10 sf
( )S
1660 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 646.666 M ( )S
(is the parent\'s bus number)S
FmE
1660 0 :M
f4_10 sf
( )S
1666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 658.666 M 0 0 30(ddddd)FmTx
FmE
1666 0 :M
f2_10 sf
( )S
1668 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 658.666 M ( is the binary encoding of )S
FmE
1669 0 :M
f4_10 sf
( )S
1675 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.412 658.666 M 0 0 12(DD)FmTx
144 670.666 M 0 0 18(fff)FmTx
FmE
1675 0 :M
f2_10 sf
( )S
1677 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 670.666 M (is the binary encoding of )S
FmE
1677 0 :M
f4_10 sf
( )S
1683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.912 670.666 M 0 0 6(F)FmTx
144 682.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1683 0 :M
f2_10 sf
( )S
1685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 682.666 M ( is the binary encoding of )S
FmE
1686 0 :M
f4_10 sf
( )S
1692 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
296.412 682.666 M 0 0 12(RR)FmTx
144 694.666 M 0 0 30(hh\311hh)FmTx
FmE
1692 0 :M
f2_10 sf
( )S
1694 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 694.666 M ( )S
(is zero)S
FmE
1694 0 :M
f4_10 sf
( )S
1700 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 706.666 M 0 0 30(ll\311ll)FmTx
FmE
1700 0 :M
f2_10 sf
( )S
1702 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 706.666 M ( )S
(is the binary encoding of )S
FmE
1703 0 :M
f4_10 sf
( )S
1709 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.412 706.666 M 0 0 48(NNNNNNNN)FmTx
FmE
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 12 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
1709 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1709 0 :M
f0_12 sf
( )S
1712 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
1712 0 :M
f1_12 sf
( )S
1715 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
1715 0 :M
f2_12 sf
( )S
1718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (13)S
FmE
1718 0 :M
f4_12 sf
( )S
1725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
1725 0 :M
f4_10 sf
( )S
1731 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.6 52.667 M 0 0 156([n]m[t][p]DD,F,RR,NNNNNNNN)FmTx
FmE
1731 0 :M
f2_10 sf
( )S
1733 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 68.667 M 0.45(corresponds to a relocatable \(if \')W
FmE
1734 0 :M
f4_10 sf
( )S
1740 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274.367 68.667 M 0 0 6(n)FmTx
FmE
1740 0 :M
f2_10 sf
( )S
1742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
280.367 68.667 M 0.45(\' is not present\) or a non-relocatable \(if \'n\' is present\) 32-bit)W
144 80.667 M -0.39(Memory Space address.  If \')W
FmE
1742 0 :M
f4_10 sf
( )S
1748 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.797 80.667 M 0 0 6(t)FmTx
FmE
1748 0 :M
f2_10 sf
( )S
1750 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.797 80.667 M -0.39(\' is present, the address is within the first 1 MB of memory address)W
144 92.667 M (space.   The the numerical value is:)S
FmE
1751 0 :M
f4_10 sf
( )S
1757 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 104.667 M 0 0 12(ss)FmTx
FmE
1757 0 :M
f2_10 sf
( )S
1759 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 104.667 M ( )S
(is )S
FmE
1759 0 :M
f4_10 sf
( )S
1765 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
185.667 104.667 M 0 0 12(10)FmTx
162 116.667 M 0 0 48(bbbbbbbb)FmTx
FmE
1765 0 :M
f2_10 sf
( )S
1767 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210 116.667 M ( )S
(is the parent\'s bus number)S
FmE
1768 0 :M
f4_10 sf
( )S
1774 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 128.667 M 0 0 30(ddddd)FmTx
FmE
1774 0 :M
f2_10 sf
( )S
1776 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 128.667 M ( )S
(is the binary encoding of )S
FmE
1776 0 :M
f4_10 sf
( )S
1782 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
296.412 128.667 M 0 0 12(DD)FmTx
162 140.667 M 0 0 18(fff)FmTx
FmE
1782 0 :M
f2_10 sf
( )S
1784 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 140.667 M (is the binary encoding of )S
FmE
1785 0 :M
f4_10 sf
( )S
1791 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
281.912 140.667 M 0 0 6(F)FmTx
162 152.667 M 0 0 48(rrrrrrrr)FmTx
FmE
1791 0 :M
f2_10 sf
( )S
1793 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210 152.667 M (is the binary encoding of )S
FmE
1793 0 :M
f4_10 sf
( )S
1799 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
311.912 152.667 M 0 0 12(RR)FmTx
162 164.667 M 0 0 30(hh\311hh)FmTx
FmE
1799 0 :M
f2_10 sf
( )S
1801 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 164.667 M ( is zero)S
FmE
1802 0 :M
f4_10 sf
( )S
1808 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 176.667 M 0 0 36(ll\311ll )FmTx
FmE
1808 0 :M
f2_10 sf
( )S
1810 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 176.667 M (is the binary encoding of )S
FmE
1810 0 :M
f4_10 sf
( )S
1816 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.912 176.667 M 0 0 48(NNNNNNNN)FmTx
129.6 200.666 M 0 0 186([n]x[p]DD,F,RR,NNNNNNNNNNNNNNNN)FmTx
FmE
1816 0 :M
f2_10 sf
( )S
1818 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 216.666 M (corresponds to a relocatable \(if \')S
FmE
1819 0 :M
f4_10 sf
( )S
1825 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.115 216.666 M 0 0 6(n)FmTx
FmE
1825 0 :M
f2_10 sf
( )S
1827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.115 216.666 M (\' is not present\) or a non-relocatable \(if \')S
FmE
1827 0 :M
f4_10 sf
( )S
1833 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
437.742 216.666 M 0 0 6(n)FmTx
FmE
1833 0 :M
f2_10 sf
( )S
1835 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
443.742 216.666 M (\' is present\) 64-bit )S
144 228.666 M (Memory Space address with the numerical value:)S
FmE
1836 0 :M
f4_10 sf
( )S
1842 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 240.666 M 0 0 12(ss)FmTx
FmE
1842 0 :M
f2_10 sf
( )S
1844 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 240.666 M ( )S
(is )S
FmE
1844 0 :M
f4_10 sf
( )S
1850 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
185.667 240.666 M 0 0 12(10)FmTx
162 252.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1850 0 :M
f2_10 sf
( )S
1852 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210 252.666 M ( )S
(is the parent\'s bus number)S
FmE
1853 0 :M
f4_10 sf
( )S
1859 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 264.666 M 0 0 30(ddddd)FmTx
FmE
1859 0 :M
f2_10 sf
( )S
1861 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 264.666 M ( )S
(is the binary encoding of )S
FmE
1861 0 :M
f4_10 sf
( )S
1867 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
296.412 264.666 M 0 0 12(DD)FmTx
162 276.666 M 0 0 18(fff)FmTx
FmE
1867 0 :M
f2_10 sf
( )S
1869 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 276.666 M (is the binary encoding of )S
FmE
1870 0 :M
f4_10 sf
( )S
1876 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
281.912 276.666 M 0 0 6(F)FmTx
162 288.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1876 0 :M
f2_10 sf
( )S
1878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210 288.666 M ( is the binary encoding of )S
FmE
1878 0 :M
f4_10 sf
( )S
1884 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
314.412 288.666 M 0 0 12(RR)FmTx
162 300.666 M 0 0 30(hh\311hh)FmTx
FmE
1884 0 :M
f2_10 sf
( )S
1886 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 300.666 M (,)S
FmE
1887 0 :M
f4_10 sf
( )S
1893 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.5 300.666 M 0 0 30(ll\311ll)FmTx
FmE
1893 0 :M
f2_10 sf
( )S
1895 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
224.5 300.666 M ( is the binary encoding of )S
FmE
1895 0 :M
f4_10 sf
( )S
1901 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.912 300.666 M 0 0 96(NNNNNNNNNNNNNNNN)FmTx
FmE
1901 0 :M
f2_10 sf
( )S
1903 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 324.666 M -0.146(Conversion of hexadecimal numbers from text representation to numeric representation shall be case-insensitive,)W
72 336.666 M (and leading zeros shall be permitted but not required.)S
72 354.666 M -0.042(Conversion from numeric representation to text representation shall use the lower case forms of the hexadecimal)W
72 366.666 M 0.348(digits in the range )W
FmE
1904 0 :M
f4_10 sf
( )S
1910 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.816 366.666 M 0 0 18(a\311f)FmTx
FmE
1910 0 :M
f2_10 sf
( )S
1912 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.816 366.666 M 0.348(, suppressing leading zeroes, and the )W
FmE
1912 0 :M
f4_10 sf
( )S
1918 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
316.737 366.666 M 0 0 12(DD)FmTx
FmE
1918 0 :M
f2_10 sf
( )S
1920 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.737 366.666 M 0.348( form shall be used for Configuration Space ad-)W
72 378.666 M (dresses where )S
FmE
1921 0 :M
f4_10 sf
( )S
1927 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.296 378.666 M 0 0 18(fff)FmTx
FmE
1927 0 :M
f2_10 sf
( )S
1929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.296 378.666 M ( is zero.)S
FmE
1929 0 :M
f0_10 sf
( )S
1931 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 408.666 M (2.2.1.3. Unit Address Representation)S
FmE
1932 0 :M
f2_10 sf
( )S
1934 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 424.666 M -0.43(As required by this specification\'s definition of the )W
FmE
1934 0 :M
f5_10 sf
( )S
1940 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.622 424.666 M 0 0 30(\"reg\")FmTx
FmE
1940 0 :M
f2_10 sf
( )S
1942 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303.622 424.666 M -0.43( property, a function\'s \"unit-number\" \(i.e. the first com-)W
72 436.666 M -0.07(ponent of its \")W
FmE
1943 0 :M
f5_10 sf
( )S
1949 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.361 436.666 M 0 0 24(reg\")FmTx
FmE
1949 0 :M
f2_10 sf
( )S
1951 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
152.361 436.666 M -0.07( value\) is the Configuration Space address of the function\'s configuration registers. Since the)W
72 448.666 M 1.049(\"unit-number\" is the address that appears in an Open Firmware \'device path\', it follows that only the )W
FmE
1951 0 :M
f4_10 sf
( )S
1957 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
492.012 448.666 M 0 0 12(DD)FmTx
FmE
1957 0 :M
f2_10 sf
( )S
1959 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
504.012 448.666 M 1.049( and)W
FmE
1960 0 :M
f4_10 sf
( )S
1966 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 460.666 M 0 0 30(DD,FF)FmTx
FmE
1966 0 :M
f2_10 sf
( )S
1968 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
102 460.666 M ( forms of the text representation can appear in a \'device path\'.)S
FmE
1968 0 :M
f3_10 sf
( )S
1970 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 476.666 M -0.37(Note:  Since the predominant use of the text representation is within \'device paths\', text representations of I/O and)W
72 488.666 M (Memory Space addresses are rarely seen by casual users.)S
72 504.666 M -0.167(Note:  The bus number does not appear in the text representation.  If the bus number were present, then the path-)W
72 516.666 M -0.104(name of a particular device would depend on the particular assignment of bus numbers to bus controllers, so the)W
72 528.666 M -0.025(pathname could change if )W
-0.025(PCI-to-PCI b)W
-0.025(ridges were added or removed from other slots.  \(It is generally undesir-)W
72 540.666 M 0.257(able for the pathname of a particular device to depend on the presence or absence of other devices that are not)W
72 552.666 M -0.432(its ancestors in the device tree.\)  The combination of a device node\'s position in the device tree, its Device Number)W
72 564.666 M 0.266(and its Function Number uniquely select an individual function based on physical characteristics of the system,)W
72 576.666 M (so the function\'s pathname does not change unless the device is physically moved.)S
72 592.666 M 0.154(Note:  The bus number appears in the numerical representation because that makes it easier to implement Con-)W
72 604.666 M 0.309(figuration Space access methods.  The )W
FmE
1971 0 :M
f7_10 sf
( )S
1977 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
229.653 604.666 M 0 0 66(decode-unit)FmTx
FmE
1977 0 :M
f3_10 sf
( )S
1979 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
295.653 604.666 M 0.309( method automatically inserts the bus number in the nu-)W
72 616.666 M (merical representation; it can do so because each bus node knows the bus number of the bus it represents.)S
FmE
1979 0 :M
f2_10 sf
( )S
1981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 634.666 M (Open Firmware implications:)S
72 652.666 M -0.085(Since some processors cannot generate I/O cycles directly, I/O Space accesses must be done with the register ac-)W
72 664.666 M (cess words \(e.g.,)S
FmE
1982 0 :M
f5_9 sf
( )S
1987 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
138.357 664.666 M 0 0 20( rb@)FmTx
FmE
1987 0 :M
f2_10 sf
( )S
1989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
158.357 664.666 M (, )S
FmE
1989 0 :M
f5_9 sf
( )S
1994 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.357 664.666 M 0 0 15(rw!)FmTx
FmE
1994 0 :M
f2_10 sf
( )S
1996 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.357 664.666 M (\).)S
72 682.666 M -0.269(It is recommended that a range of virtual addresses be set aside for use by )W
FmE
1997 0 :M
f5_9 sf
( )S
2002 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.322 682.666 M 0 0 30(map-in)FmTx
FmE
2002 0 :M
f2_10 sf
( )S
2004 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
395.322 682.666 M -0.269( to I/O Space devices so that the)W
72 694.666 M (register access words can determine when an I/O cycle needs to be generated.)S
72 712.666 M -0.226(Since Configuration Space often does not appear as a subset of the system\'s physical address space, this firmware)W
72 724.666 M 0.718(specification provides bus-specific methods to access Configuration Space.  Likewise, it provides methods for)W
FmE
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 13 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
2004 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2004 0 :M
f0_12 sf
( )S
2007 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
2007 0 :M
f2_12 sf
( )S
2010 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (14)S
FmE
2010 0 :M
f1_12 sf
( )S
2013 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
2013 0 :M
f4_12 sf
( )S
2020 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
2020 0 :M
f2_10 sf
( )S
2022 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 52.667 M (Special Cycles and Interrupt Acknowledge Cycles.)S
FmE
2023 0 :M
f0_12 sf
( )S
2026 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 87 M (2.3. Bus-specific Configuration Variables)S
FmE
2026 0 :M
f2_10 sf
( )S
2028 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 103.667 M -0.056(An Open Firmware-compliant User Interface on a system with a single built-in PCI bus )W
FmE
2028 0 :M
f3_10 sf
( )S
2030 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
405.868 103.667 M (may)S
FmE
2031 0 :M
f2_10 sf
( )S
2033 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
422.526 103.667 M -0.056( implement the)W
54 115.667 M (following PCI-specific Configuration Variable.)S
FmE
2033 0 :M
f5_9 sf
( )S
2038 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 129.667 M 0 0 70(pci-probe-list)FmTx
FmE
2038 0 :M
f2_10 sf
( )S
2040 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.687 129.667 M (\( -- list-str list-len \))S
116.468 N (N)S
FmE
2041 0 :M
f2_9 sf
( )S
2043 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 141 M (Holds list of slots to probe with )S
FmE
2043 0 :M
f5_9 sf
( )S
2048 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
187.734 141 M 0 0 45(probe-pci)FmTx
FmE
2048 0 :M
f2_9 sf
( )S
2050 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
232.734 141 M ( .)S
72 156 M (A configuration variable containing a string, formatted as described in the following section, indicating the set of slots )S
72 165 M -0.137(that will be probed when )W
FmE
2050 0 :M
f5_9 sf
( )S
2055 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.033 165 M 0 0 45(probe-pci)FmTx
FmE
2055 0 :M
f2_9 sf
( )S
2057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208.033 165 M -0.137( is executed.  The maximum length shall be sufficient to contain a string listing all )W
72 174 M (of the PCI bus\'s implemented slots.)S
FmE
2057 0 :M
f0_9 sf
( )S
2059 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 186 M (Configuration Variable Type)S
FmE
2060 0 :M
f2_9 sf
( )S
2062 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.984 186 M (: string)S
FmE
2062 0 :M
f0_9 sf
( )S
2064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 198 M (Default value)S
FmE
2064 0 :M
f2_9 sf
( )S
2066 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123.234 198 M (: a system-dependent value that includes all available slots, in numerically-ascending order.)S
FmE
2066 0 :M
f3_9 sf
( )S
2068 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 210 M (Note: )S
FmE
2069 0 :M
f5_9 sf
( )S
2074 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94.243 210 M 0 0 70(pci-probe-list)FmTx
FmE
2074 0 :M
f3_9 sf
( )S
2076 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.243 210 M ( is intended for the common case of a system with a single built-in PCI bus.  On systems with )S
72 219 M -0.598(multiple PCI buses, fine-grained control over the probe order can be achieved by repeated execution of the  )W
FmE
2076 0 :M
f5_9 sf
( )S
2081 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
452.348 219 M 0 0 50(probe-self)FmTx
FmE
2081 0 :M
f3_9 sf
( )S
2083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
502.348 219 M -0.598( )W
72 228 M -0.079(method within individual bus nodes.  In any case, the ability to control the probe order is primarily intended as a conve-)W
72 237 M (nience when debugging faulty expansion cards.  Normally, the default probe order \(all available slots\) is used.)S
FmE
2083 0 :M
f0_12 sf
( )S
2086 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 269 M (2.4. Format of a Probe List)S
FmE
2086 0 :M
f2_10 sf
( )S
2088 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 285.667 M 0.118(A PCI probe list is a text string consisting of a series of lower-case hexadecimal numbers separated by commas.)W
54 297.667 M -0.197(Each number is in the range )W
FmE
2089 0 :M
f4_10 sf
( )S
2095 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.214 297.667 M 0 0 24(0\3111F)FmTx
FmE
2095 0 :M
f2_10 sf
( )S
2097 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
191.214 297.667 M -0.197(, corresponding to the slot with the same Device Number.  For a given PCI bus)W
54 309.667 M (implementation, only the numbers corresponding to existing slots are valid.)S
54 327.667 M (The first number in the series specifies the first slot to be probed, and so on.)S
FmE
2097 0 :M
f0_12 sf
( )S
2100 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 362 M (2.5. FCode Evaluation Semantics)S
FmE
2100 0 :M
f2_10 sf
( )S
2102 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 378.667 M (See the description of )S
FmE
2103 0 :M
f5_10 sf
( )S
2109 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.409 378.667 M 0 0 54(probe-pci)FmTx
FmE
2109 0 :M
f2_10 sf
( )S
2111 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.409 378.667 M ( for the precise specification of the FCode evaluation semantics.)S
FmE
2111 0 :M
f0_12 sf
( )S
2114 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 420 M (3. Bus Nodes)S
( Properties and Methods)S
FmE
2114 0 :M
f3_10 sf
( )S
2116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 436.667 M 0.461(Note: A )W
0.461(PCI-to-PCI b)W
0.461(ridge is a parent of one PCI bus and a child of another. Consequently, a device node)W
54 448.667 M (representing a PCI bridge is both a Bus Node and a Child Node, with both sets of properties and methods.)S
FmE
2117 0 :M
f0_12 sf
( )S
2120 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 483 M (3.1. )S
(Bus Node )S
(Properties)S
54 518 M (3.1.1.  Open Firmware-defined Properties for Bus Nodes)S
FmE
2120 0 :M
f2_10 sf
( )S
2122 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 534.666 M -0.543(The following standard properties, as defined in Open Firmware, have special meanings or interpretations for PCI.)W
FmE
2122 0 :M
f5_9 sf
( )S
2127 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 560.666 M 0 0 65(\"device_type\")FmTx
FmE
2127 0 :M
f2_10 sf
( )S
2129 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.441 560.666 M (S)S
FmE
2130 0 :M
f2_9 sf
( )S
2132 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 575 M -0.488(Standard )W
FmE
2132 0 :M
f3_9 sf
( )S
2134 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
105.75 575 M (prop-name)S
FmE
2134 0 :M
f2_9 sf
( )S
2136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145.237 575 M -0.488(  to specify the implemented interface. prop-encoded-array:  a string encoded with )W
FmE
2136 0 :M
f5_9 sf
( )S
2141 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
436.75 575 M 0 0 65(encode-string)FmTx
FmE
2141 0 :M
f2_9 sf
( )S
2143 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
501.75 575 M (.)S
72 587 M -0.13(The meaning of this property is as defined in Open Firmware.  A Standard Package conforming to this specification and )W
72 596 M (corresponding to a device that implements a PCI bus shall implement this property with the string value \")S
FmE
2144 0 :M
f4_9 sf
( )S
2149 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
451.817 596 M 0 0 15(pci)FmTx
FmE
2149 0 :M
f2_9 sf
( )S
2151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.817 596 M (\".)S
FmE
2151 0 :M
f5_9 sf
( )S
2156 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 609.666 M 0 0 80(\"#address-cells\")FmTx
FmE
2156 0 :M
f2_10 sf
( )S
2158 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.441 609.666 M (S)S
FmE
2158 0 :M
f2_9 sf
( )S
2160 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 624 M (Standard )S
FmE
2161 0 :M
f3_9 sf
( )S
2163 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106.238 624 M (prop-name)S
FmE
2163 0 :M
f2_9 sf
( )S
2165 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145.725 624 M ( to define the number of cells necessary to represent a physical address.)S
FmE
2165 0 :M
f3_9 sf
( )S
2167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 636 M (prop-encoded-array)S
FmE
2167 0 :M
f2_9 sf
( )S
2169 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.969 636 M (:  Integer constant 3, encoded with )S
FmE
2170 0 :M
f5_9 sf
( )S
2175 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.422 636 M 0 0 50(encode-int)FmTx
FmE
2175 0 :M
f2_9 sf
( )S
2177 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
321.422 636 M (.)S
72 648 M (The value of )S
FmE
2177 0 :M
f5_9 sf
( )S
2182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
119.727 648 M 0 0 80(\"#address-cells\")FmTx
FmE
2182 0 :M
f2_9 sf
( )S
2184 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
199.727 648 M ( for PCI Bus Nodes is 3.)S
FmE
2184 0 :M
f5_9 sf
( )S
2189 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 661.666 M 0 0 65(\"#size-cells\")FmTx
FmE
2189 0 :M
f2_10 sf
( )S
2191 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.441 661.666 M (S)S
FmE
2192 0 :M
f2_9 sf
( )S
2194 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 676 M (Standard )S
FmE
2194 0 :M
f3_9 sf
( )S
2196 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106.238 676 M (prop-name)S
FmE
2196 0 :M
f2_9 sf
( )S
2198 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145.725 676 M ( to define the number of cells necessary to represent the length of a physical address range.)S
FmE
2198 0 :M
f3_9 sf
( )S
2200 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 688 M (prop-encoded-array)S
FmE
2201 0 :M
f2_9 sf
( )S
2203 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.969 688 M (:  Integer constant 2, encoded as with)S
FmE
2203 0 :M
f5_9 sf
( )S
2208 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.917 688 M 0 0 55( encode-int)FmTx
FmE
2208 0 :M
f2_9 sf
( )S
2210 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333.917 688 M (.)S
72 700 M (The value of )S
FmE
2210 0 :M
f5_9 sf
( )S
2215 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
119.727 700 M 0 0 65(\"#size-cells\")FmTx
FmE
2215 0 :M
f2_9 sf
( )S
2217 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.727 700 M ( for PCI Bus Nodes is 2, reflecting PCI\'s 64-bit address space.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
34 412 2 12 FmqF
34 475 2 12 FmqF
FmE
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 14 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
0 0 .5 :F
2217 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2217 0 :M
0 G
f0_12 sf
( )S
2220 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
2220 0 :M
f1_12 sf
( )S
2223 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
2223 0 :M
f2_12 sf
( )S
2226 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (15)S
FmE
2226 0 :M
f4_12 sf
( )S
2233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
2233 0 :M
f5_9 sf
( )S
2238 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 52.667 M 0 0 25(\"reg\")FmTx
FmE
2238 0 :M
f2_10 sf
( )S
2240 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 52.667 M (S)S
FmE
2241 0 :M
f2_9 sf
( )S
2243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 67 M (Standard )S
FmE
2243 0 :M
f3_9 sf
( )S
2245 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.238 67 M (prop-name)S
FmE
2245 0 :M
f2_9 sf
( )S
2247 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.725 67 M (  to define the package\'s unit-address.)S
90 79 M (For nodes representing PCI)S
(-t)S
(o)S
(-P)S
(CI bridges, the )S
FmE
2247 0 :M
f5_9 sf
( )S
2252 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.195 79 M 0 0 25(\"reg\")FmTx
FmE
2252 0 :M
f2_9 sf
( )S
2254 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.195 79 M ( property is as defined for PCI Child Nodes.  The value denotes )S
90 88 M (the Configuration Space address of the bridge\'s configuration registers.)S
90 100 M (For bridges from some other bus to PCI bus, the )S
FmE
2255 0 :M
f5_9 sf
( )S
2260 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
265.711 100 M 0 0 25(\"reg\")FmTx
FmE
2260 0 :M
f2_9 sf
( )S
2262 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
290.711 100 M ( property is as defined for that other bus)S
(.)S
FmE
2262 0 :M
f5_9 sf
( )S
2267 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 111.667 M 0 0 40(\"ranges\")FmTx
FmE
2267 0 :M
f2_10 sf
( )S
2269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 111.667 M (S)S
FmE
2269 0 :M
f2_9 sf
( )S
2271 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 126 M (Standard )S
FmE
2272 0 :M
f3_9 sf
( )S
2274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.238 126 M (prop-name)S
FmE
2274 0 :M
f2_9 sf
( )S
2276 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.725 126 M (  to define the mapping of parent address to child address spaces.)S
90 138 M -0.005(This property )W
FmE
2276 0 :M
f3_9 sf
( )S
2278 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.973 138 M (shall)S
FmE
2278 0 :M
f2_9 sf
( )S
2280 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
158.474 138 M -0.005( be present for all PCI bus bridges.  In particular, for PCI-to-PCI bridges, this property )W
FmE
2281 0 :M
f3_9 sf
( )S
2283 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
471.524 138 M (shall)S
FmE
2283 0 :M
f2_9 sf
( )S
2285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
489.025 138 M -0.005( indicate )W
90 147 M (the settings of the mapping registers, thus representing the addresses to which the bridge will respond.  For PCI-to-PCI )S
90 156 M -0.372(bridges, there shall be an entry in the )W
FmE
2285 0 :M
f5_9 sf
( )S
2290 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222.223 156 M 0 0 40(\"ranges\")FmTx
FmE
2290 0 :M
f2_9 sf
( )S
2292 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.223 156 M -0.372( property for each of the Memory, Prefetchable Memory and/or I/O spac-)W
90 165 M (es if that address space is mapped through the bridge.)S
FmE
2292 0 :M
f0_12 sf
( )S
2295 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 197 M (3.1.2. )S
(B)S
(us-specific Properties for Bus Nodes)S
FmE
2295 0 :M
f5_9 sf
( )S
2300 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 211.667 M 0 0 85(\322clock-frequency\323)FmTx
FmE
2300 0 :M
f2_10 sf
( )S
2302 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 211.667 M (S)S
FmE
2303 0 :M
f3_9 sf
( )S
2305 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 226 M (prop-name)S
FmE
2305 0 :M
f2_9 sf
( )S
2307 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.487 226 M (, denotes frequency of PCI clock.)S
FmE
2307 0 :M
f3_9 sf
( )S
2309 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 238 M (prop-encoded-array)S
FmE
2310 0 :M
f2_9 sf
( )S
2312 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.969 238 M -0.352(:  An integer, encoded as with )W
FmE
2312 0 :M
f5_9 sf
( )S
2317 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270.466 238 M 0 0 50(encode-int)FmTx
FmE
2317 0 :M
f2_9 sf
( )S
2319 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.466 238 M -0.352(, that represents the clock frequency, in hertz, of the PCI )W
90 247 M (bus for which this node is the parent.)S
FmE
2319 0 :M
f5_9 sf
( )S
2324 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 260.667 M 0 0 55(\"bus-range\")FmTx
FmE
2324 0 :M
f2_10 sf
( )S
2326 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 260.667 M (S)S
FmE
2327 0 :M
f3_9 sf
( )S
2329 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 275 M (prop-name)S
FmE
2329 0 :M
f2_9 sf
( )S
2331 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.487 275 M (, denotes range of bus numbers controlled by this PCI bus.)S
FmE
2331 0 :M
f3_9 sf
( )S
2333 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 287 M (prop-encoded-array)S
FmE
2333 0 :M
f2_9 sf
( )S
2335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.969 287 M -0.38(:  Two integers, each encoded as with )W
FmE
2336 0 :M
f5_9 sf
( )S
2341 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297.617 287 M 0 0 50(encode-int)FmTx
FmE
2341 0 :M
f2_9 sf
( )S
2343 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
347.617 287 M -0.38(, the first representing the bus number of the PCI )W
90 296 M -0.213(bus implemented by the bus controller represented by this node \(the )W
FmE
2343 0 :M
f3_9 sf
( )S
2345 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.328 296 M -0.213(secondary bus)W
FmE
2345 0 :M
f2_9 sf
( )S
2347 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.85 296 M -0.213( number in )W
-0.213(PCI-to-PCI b)W
-0.213(ridge nomen-)W
90 305 M -0.05(clature\), and the second representing the largest bus number of any PCI bus in the portion of the PCI domain that is sub-)W
90 314 M (ordinate to this node \(the )S
FmE
2347 0 :M
f3_9 sf
( )S
2349 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.221 314 M (subordinate bus)S
FmE
2350 0 :M
f2_9 sf
( )S
2352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.968 314 M ( number in )S
(PCI-to-PCI b)S
(ridge nomenclature\).)S
FmE
2352 0 :M
f5_9 sf
( )S
2357 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 325.667 M 0 0 60(\"slot-names\")FmTx
FmE
2357 0 :M
f2_10 sf
( )S
2359 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 325.667 M (S)S
FmE
2359 0 :M
f3_9 sf
( )S
2361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 340 M (prop-name)S
FmE
2362 0 :M
f2_9 sf
( )S
2364 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.487 340 M (, describes external labeling of add-in slots.)S
FmE
2364 0 :M
f3_9 sf
( )S
2366 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 352 M (prop-encoded-array)S
FmE
2366 0 :M
f2_9 sf
( )S
2368 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.969 352 M -0.145(:  An integer, encoded as with )W
FmE
2368 0 :M
f5_9 sf
( )S
2373 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.912 352 M 0 0 50(encode-int)FmTx
FmE
2373 0 :M
f2_9 sf
( )S
2375 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
321.912 352 M -0.145(, followed by a list of strings, each encoded as with )W
FmE
2376 0 :M
f5_9 sf
( )S
2381 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
507 352 M 0 0 15(en-)FmTx
90 361 M 0 0 55(code-string)FmTx
FmE
2381 0 :M
f2_9 sf
( )S
2383 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145 361 M (.)S
90 373 M -0.436(The integer portion of the property value is a bitmask of available slots; for each add-in slot on the bus, the bit correspond-)W
90 382 M -0.534(ing to that slot\'s Device Number is set.  The least-significant bit corresponds to Device Number 0, the next bit corresponds )W
90 391 M (to Device Number 1, etc.  The number of following strings is the same as the number of slots; the first string gives the )S
90 400 M (label that is printed on the chassis for the slot with the smallest Device Number, and so on)S
(.)S
FmE
2383 0 :M
f5_9 sf
( )S
2388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 411.667 M 0 0 100(\"bus-master-capable\")FmTx
FmE
2388 0 :M
f2_10 sf
( )S
2390 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 411.667 M (S)S
FmE
2390 0 :M
f3_9 sf
( )S
2392 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 426 M (prop-name)S
FmE
2393 0 :M
f2_9 sf
( )S
2395 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.487 426 M (, describes whether the device is wired to be PCI bus master capable.)S
FmE
2395 0 :M
f3_9 sf
( )S
2397 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 438 M (prop-encoded-array)S
FmE
2397 0 :M
f2_9 sf
( )S
2399 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.969 438 M (:  An integer, encoded as with )S
FmE
2399 0 :M
f5_9 sf
( )S
2404 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.929 438 M 0 0 50(encode-int)FmTx
FmE
2404 0 :M
f2_9 sf
( )S
2406 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.929 438 M (.)S
90 450 M -0.428(The property value is a bitmask indicating whether the device is wired to be bus master capable.  The bit being set implies )W
90 459 M (that the device is so wired and the bit being reset implies that the device is not so wired.  The least significant bit corre-)S
90 468 M (sponds to Device Number 0, the next bit corresponds to Device Number 1, etc.)S
FmE
2407 0 :M
f0_12 sf
( )S
2410 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 512 M (3.2. )S
(Bus Node )S
(Methods)S
72 547 M (3.2.1. Open Firmware-defined Methods for Bus Nodes)S
FmE
2410 0 :M
f2_10 sf
( )S
2412 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 563.667 M -0.417(A Standard Package implementing the )W
FmE
2412 0 :M
f4_10 sf
( )S
2418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.254 563.667 M 0 0 30(\"pci\")FmTx
FmE
2418 0 :M
f2_10 sf
( )S
2420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.254 563.667 M -0.417( device type shall implement the following standard methods as de-)W
72 575.667 M -0.251(fined in Open Firmware, with the physical address representations as specified in section 2.1 of this standard, and)W
72 587.667 M (with additional PCI-specific semantics)S
FmE
2421 0 :M
f2_8 sf
( )S
2423 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.668 583.667 M (1)S
FmE
2423 0 :M
f2_10 sf
( )S
2425 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
230.668 587.667 M (:)S
FmE
2425 0 :M
f5_9 sf
( )S
2430 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 599 M 0 0 20(open)FmTx
FmE
2430 0 :M
f2_9 sf
( )S
2432 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.766 599 M ( \( -- okay? \))S
68.766 N (Prepare this device for subsequent use)S
FmE
72 607 450 16 rC
2432 0 :M
FrMacBegin
72 607.6 450 14.4 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
72 607.6 450 14.4 FmqF
0 FmP
81 611.416 FmB
144 0 FmL
2 0.5 FmSo
FmE
gR
gS 0 0 576 776 rC
2432 0 :M
f2_8 sf
( )S
2434 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 624.667 M (1.)S
FmE
2434 0 :M
f2_10 sf
( )S
2436 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 628.667 M 0.72(The method )W
FmE
2437 0 :M
f5_10 sf
( )S
2443 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.982 628.667 M 0 0 54(add-range)FmTx
FmE
2443 0 :M
f2_10 sf
( )S
2445 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
201.982 628.667 M 0.72( is reserved and shall not be implemented in future releases of OFW. The)W
90 640.667 M 0.326(presence of this method in the PCI node indicates to child nodes both that the )W
FmE
2445 0 :M
f5_10 sf
( )S
2451 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406.753 640.667 M 0 0 36(map-in)FmTx
FmE
2451 0 :M
f2_10 sf
( )S
2453 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
442.753 640.667 M 0.326( method of this)W
90 652.667 M 0.232(bus node requires that the )W
FmE
2454 0 :M
f3_10 sf
( )S
2456 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196.397 652.667 M (phys.lo)S
FmE
2456 0 :M
f2_10 sf
( )S
2458 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
225.003 652.667 M 0.232( address to be extracted from the )W
FmE
2459 0 :M
f4_10 sf
( )S
2465 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
359.613 652.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
2465 0 :M
f2_10 sf
( )S
2467 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
479.613 652.667 M 0.232( prop-)W
90 664.667 M 1.061(erty  and that the )W
FmE
2467 0 :M
f5_10 sf
( )S
2473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165 664.667 M 0 0 6(g)FmTx
0 0 126(et-inherited-property)FmTx
FmE
2473 0 :M
f2_10 sf
( )S
2475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297 664.667 M 1.061( method does not return the )W
FmE
2476 0 :M
f4_10 sf
( )S
2482 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
415.555 664.667 M 0 0 48(prop-len)FmTx
FmE
2482 0 :M
f2_10 sf
( )S
2484 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
463.555 664.667 M 1.061( \(only the)W
FmE
2484 0 :M
f4_10 sf
( )S
2490 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 676.667 M 0 0 6(p)FmTx
0 0 48(rop-addr)FmTx
FmE
2490 0 :M
f2_10 sf
( )S
2492 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 676.667 M 0.024( and )W
FmE
2493 0 :M
f4_10 sf
( )S
2499 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.487 676.667 M 0 0 30(false)FmTx
FmE
2499 0 :M
f2_10 sf
( )S
2501 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
193.487 676.667 M 0.024(\) if the property is found.  The non-existence of this method indicates to child)W
90 688.667 M -0.506(nodes that the )W
FmE
2501 0 :M
f3_10 sf
( )S
2503 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.521 688.667 M (phys.lo)S
FmE
2504 0 :M
f2_10 sf
( )S
2506 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.127 688.667 M -0.506( address is an offset relative to the base address \(when )W
FmE
2506 0 :M
f4_10 sf
( )S
2512 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
388.617 688.667 M 0 0 6(n)FmTx
FmE
2512 0 :M
f2_10 sf
( )S
2514 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
394.617 688.667 M -0.506(=0\) and that )W
FmE
2515 0 :M
f5_10 sf
( )S
2521 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
444 688.667 M 0 0 60(get-inher-)FmTx
90 700.667 M 0 0 78(ited-property)FmTx
FmE
2521 0 :M
f2_10 sf
( )S
2523 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 700.667 M 1.054( returns three stack items \()W
FmE
2523 0 :M
f4_10 sf
( )S
2529 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.048 700.667 M 0 0 54(prop-addr)FmTx
FmE
2529 0 :M
f2_10 sf
( )S
2531 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333.048 700.667 M 1.054( )W
FmE
2532 0 :M
f4_10 sf
( )S
2538 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.602 700.667 M 0 0 48(prop-len)FmTx
FmE
2538 0 :M
f2_10 sf
( )S
2540 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
384.602 700.667 M 1.054( and )W
FmE
2540 0 :M
f4_10 sf
( )S
2546 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406.148 700.667 M 0 0 30(false)FmTx
FmE
2546 0 :M
f2_10 sf
( )S
2548 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
436.148 700.667 M 1.054(\) if the inherited)W
90 712.667 M (property is found.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
52 504 2 12 FmqF
FmE
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 15 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
0 0 .5 :F
2549 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2549 0 :M
0 G
f0_12 sf
( )S
2552 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
2552 0 :M
f2_12 sf
( )S
2555 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (16)S
FmE
2555 0 :M
f1_12 sf
( )S
2558 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
2558 0 :M
f4_12 sf
( )S
2565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
2565 0 :M
f5_9 sf
( )S
2570 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 52 M 0 0 25(close)FmTx
FmE
2570 0 :M
f2_9 sf
( )S
2572 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
189.76 52 M (\( -- \))S
81.76 N (Close this previously-open device)S
FmE
2572 0 :M
f5_9 sf
( )S
2577 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 64 M 0 0 30(map-in)FmTx
FmE
2577 0 :M
f2_9 sf
( )S
2579 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.767 64 M (\( phys.low phys.mid phys.hi size -- virt \))S
16.767 N (Map the specified subregion.)S
72 79 M (PCI-to-PCI b)S
(ridges pass through addresses unchanged.  Consequently, a )S
(PCI-to-PCI b)S
(ridge node\'s implementation of )S
FmE
2580 0 :M
f5_9 sf
( )S
2585 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 88 M 0 0 30(map-in)FmTx
FmE
2585 0 :M
f2_9 sf
( )S
2587 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
102 88 M ( typically just forwards the request to its parent.)S
72 100 M -0.28(For a master PCI bus node in \"probe state\", if the physical address is relocatable, the )W
FmE
2587 0 :M
f5_9 sf
( )S
2592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.742 100 M 0 0 30(map-in)FmTx
FmE
2592 0 :M
f2_9 sf
( )S
2594 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
403.742 100 M -0.28(  method shall assign a base )W
72 109 M (address and set the appropriate base address register to that address.  Such \"probe state\" assignments are temporary and )S
72 118 M (are not necessarily valid after the corresponding )S
FmE
2594 0 :M
f5_9 sf
( )S
2599 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.159 118 M 0 0 35(map-out)FmTx
FmE
2599 0 :M
f2_9 sf
( )S
2601 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.159 118 M (.)S
FmE
2601 0 :M
f5_9 sf
( )S
2606 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 127 M 0 0 35(map-out)FmTx
FmE
2606 0 :M
f2_9 sf
( )S
2608 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174.267 127 M (\( virt size -- \))S
66.267 N (Destroy mapping from previous map-in)S
72 142 M (PCI-to-PCI b)S
(ridges pass through addresses unchanged.  Consequently, a )S
(PCI-to-PCI b)S
(ridge node\'s implementation of )S
FmE
2609 0 :M
f5_9 sf
( )S
2614 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 151 M 0 0 35(map-out)FmTx
FmE
2614 0 :M
f2_9 sf
( )S
2616 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107 151 M ( typically just forwards the request to its parent.)S
72 163 M -0.019(For a master PCI bus node in \"probe state\", if the physical address is relocatable and there are no other active mappings )W
72 172 M -0.27(within the relocatable region containing that address, the )W
FmE
2616 0 :M
f5_9 sf
( )S
2621 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276.011 172 M 0 0 35(map-out)FmTx
FmE
2621 0 :M
f2_9 sf
( )S
2623 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
311.011 172 M -0.27( method shall unassign the base address of the region, )W
72 181 M -0.053(freeing the corresponding range of PCI address space for later re-use.  A Standard FCode program shall unmap \(as with )W
FmE
2623 0 :M
f5_9 sf
( )S
2628 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 190 M 0 0 35(map-out)FmTx
FmE
2628 0 :M
f2_9 sf
( )S
2630 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107 190 M (\) all base addresses that it mapped and shall )S
(disable m)S
(emory or I/O space access in the Command Register.)S
FmE
2630 0 :M
f5_9 sf
( )S
2635 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 199 M 0 0 45(dma-alloc)FmTx
FmE
2635 0 :M
f2_9 sf
( )S
2637 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174.267 199 M (\( size -- virt \))S
66.267 N (Allocate a memory region for later use)S
FmE
2638 0 :M
f5_9 sf
( )S
2643 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 211 M 0 0 40(dma-free)FmTx
FmE
2643 0 :M
f2_9 sf
( )S
2645 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174.267 211 M (\( virt size -- \))S
66.267 N (Free memory allocated with dma-alloc)S
FmE
2645 0 :M
f5_9 sf
( )S
2650 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 223 M 0 0 50(dma-map-in)FmTx
FmE
2650 0 :M
f2_9 sf
( )S
2652 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
134.419 223 M (\( .. virt size cacheable? -- devaddr \))S
26.419 N (Convert virtual address to device bus DMA address.)S
FmE
2652 0 :M
f5_9 sf
( )S
2657 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 235 M 0 0 55(dma-map-out)FmTx
FmE
2657 0 :M
f2_9 sf
( )S
2659 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
158.65 235 M (\( virt devaddr size -- \))S
50.65 N (Free DMA mapping set up with dma-map-in)S
FmE
2659 0 :M
f5_9 sf
( )S
2664 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 247 M 0 0 40(dma-sync)FmTx
FmE
2664 0 :M
f2_9 sf
( )S
2666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
158.65 247 M (\( virt devaddr size -- \))S
50.65 N (Synchronize \(flush\) DMA memory caches)S
FmE
2667 0 :M
f5_9 sf
( )S
2672 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 259 M 0 0 50(probe-self)FmTx
0 0 5( )FmTx
FmE
2672 0 :M
f2_9 sf
( )S
2674 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109 259 M (\( arg-str arg-len reg-str reg-len fcode-str fcode-len -- \))S
(Interpret FCode, as a child of this node)S
FmE
2674 0 :M
f5_9 sf
( )S
2679 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 271 M 0 0 55(decode-unit)FmTx
FmE
2679 0 :M
f2_9 sf
( )S
2681 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.767 271 M (\( addr len -- phys.lo phys.mid phys.hi \))S
19.767 N (Convert text representation of address to numerical repre-)S
288 281 M (sentation)S
FmE
2681 0 :M
f5_9 sf
( )S
2686 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 291 M 0 0 55(encode-unit)FmTx
FmE
2686 0 :M
f2_9 sf
( )S
2688 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.767 291 M (\( phys.lo phys.mid phys.hi -- addr len \))S
19.767 N (Convert numerical representation of address to text repre-)S
288 301 M (sentation)S
FmE
2688 0 :M
f3_10 sf
( )S
2690 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 315.667 M -0.051(Note:  The PCI bus is little-endian; i.e. a byte address whose least-significant two bits are both zero uses the bus)W
54 327.667 M 0.054(byte lane containing the least-significant portion of a 32-bit quantity.  Typically, a bridge from a big-endian bus)W
54 339.667 M 0.065(to a PCI bus will swap the byte lanes so that the order of a sequence of bytes is preserved when that sequence is)W
54 351.667 M -0.45(transferred across the bridge.  As a result, the hardware changes the position of bytes within a 32-bit quantity that)W
54 363.667 M -0.096(is viewed as a 32-bit unit, rather than as a sequence of individually-addressed bytes.  In order to properly imple-)W
54 375.667 M -0.501(ment the semantics of the Open Firmware register access words \(e.g.  )W
FmE
2691 0 :M
f1_10 sf
( )S
2693 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
330.121 375.667 M (rl!\))S
FmE
2693 0 :M
f3_10 sf
( )S
2695 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
344.006 375.667 M -0.501(, the device node for such byte-swapping)W
54 387.667 M (bridges must substitute versions of those words that \"undo\" the hardware byte-swapping.)S
FmE
2696 0 :M
f0_12 sf
( )S
2699 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 422 M (3.2.2. Bus-specific Methods for Bus Nodes)S
54 457 M (3.2.3. Configuration Access Words)S
FmE
2699 0 :M
f2_10 sf
( )S
2701 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 473.667 M -0.028(The methods described below have execution semantics similar \(especially with respect to write-buffer flushing,)W
54 485.667 M 0.285(atomicity, etc.\)  to those of the register access words \(e.g., )W
FmE
2701 0 :M
f5_10 sf
( )S
2707 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
292.032 485.667 M 0 0 6(r)FmTx
FmE
2707 0 :M
f0_10 sf
( )S
2709 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.032 485.667 M (b@)S
FmE
2710 0 :M
f2_10 sf
( )S
2712 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
312.89 485.667 M 0.285(, )W
FmE
2712 0 :M
f0_10 sf
( )S
2714 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
318.175 485.667 M (rw!)S
FmE
2715 0 :M
f2_10 sf
( )S
2717 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333.161 485.667 M 0.285(\); in most implementations, these methods)W
54 497.667 M (will be implemented via the register access words.)S
54 513.667 M -0.28(The data type \'config-addr\' refers to the \'phys.hi\' cell of the numerical representation of a Configuration Space ad-)W
54 524.666 M (dress.  The \'config-addr\' shall be aligned to the data type of the access. )S
FmE
2717 0 :M
f5_9 sf
( )S
2722 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 537.666 M 0 0 45(config-l@)FmTx
FmE
2722 0 :M
f2_9 sf
( )S
2724 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.028 537.666 M (\( config-addr -- data \))S
90 549 M (Performs a 32-bit Configuration Read.)S
FmE
2725 0 :M
f5_9 sf
( )S
2730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 568.666 M 0 0 45(config-l!)FmTx
FmE
2730 0 :M
f2_9 sf
( )S
2732 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.028 568.666 M (\( data config-addr -- \))S
90 580 M (Performs a 32-bit Configuration Write.)S
FmE
2732 0 :M
f5_9 sf
( )S
2737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 599.666 M 0 0 45(config-w@)FmTx
FmE
2737 0 :M
f2_9 sf
( )S
2739 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.028 599.666 M (\( config-addr -- data \))S
90 611 M (Performs a 16-bit Configuration Read.)S
FmE
2739 0 :M
f5_9 sf
( )S
2744 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 630.666 M 0 0 45(config-w!)FmTx
FmE
2744 0 :M
f2_9 sf
( )S
2746 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.028 630.666 M (\( data config-addr -- \))S
90 642 M (Performs a 16-bit Configuration Write.)S
FmE
2746 0 :M
f5_9 sf
( )S
2751 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 661.666 M 0 0 45(config-b@)FmTx
FmE
2751 0 :M
f2_9 sf
( )S
2753 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.028 661.666 M (\( config-addr -- data \))S
90 673 M (Performs an 8-bit Configuration Read.)S
FmE
2754 0 :M
f5_9 sf
( )S
2759 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 692.666 M 0 0 45(config-b!)FmTx
FmE
2759 0 :M
f2_9 sf
( )S
2761 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.028 692.666 M (\( data config-addr -- \))S
90 704 M (Performs an 8-bit Configuration Write.)S
FmE
2761 0 :M
f5_9 sf
( )S
2766 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 719.666 M 0 0 120(assign-package-addresses)FmTx
FmE
2766 0 :M
f2_9 sf
( )S
2768 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.39 719.666 M (\( phandle -- \))S
FmE
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 16 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
2768 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2768 0 :M
f0_12 sf
( )S
2771 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
2771 0 :M
f1_12 sf
( )S
2774 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
2774 0 :M
f2_12 sf
( )S
2777 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (17)S
FmE
2777 0 :M
f4_12 sf
( )S
2784 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
2784 0 :M
f2_9 sf
( )S
2786 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 52 M (Assigns addresses \(i.e., creates )S
FmE
2786 0 :M
f4_9 sf
( )S
2791 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
221.192 52 M 0 0 100(\"assigned-addresses\")FmTx
FmE
2791 0 :M
f2_9 sf
( )S
2793 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
321.192 52 M ( property\) for the child node denoted by )S
FmE
2794 0 :M
f3_9 sf
( )S
2796 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
467.137 52 M (phandle)S
FmE
2796 0 :M
f2_9 sf
( )S
2798 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
496.132 52 M (.)S
FmE
2798 0 :M
f0_10 sf
( )S
2800 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 87.667 M (3.2.3.1. Address-less Access Words)S
FmE
2801 0 :M
f5_9 sf
( )S
2806 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 101.667 M 0 0 40(intr-ack)FmTx
FmE
2806 0 :M
f5_10 sf
( )S
2812 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 101.667 M 0 0 6( )FmTx
FmE
2812 0 :M
f2_10 sf
( )S
2814 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118 101.667 M (      )S
FmE
2814 0 :M
f4_9 sf
( )S
2819 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133 101.667 M 0 0 35( \( -- \))FmTx
FmE
2819 0 :M
f2_9 sf
( )S
2821 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 113 M (Performs a PCI Interrupt Acknowledge Cycle.)S
FmE
2821 0 :M
f5_9 sf
( )S
2826 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 132.667 M 0 0 45(special-!)FmTx
FmE
2826 0 :M
f2_10 sf
( )S
2828 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117 132.667 M (       )S
FmE
2829 0 :M
f4_9 sf
( )S
2834 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
134.5 132.667 M 0 0 80(\( data bus# -- \))FmTx
FmE
2834 0 :M
f2_9 sf
( )S
2836 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 144 M (Performs a PCI Special Cycle on the indicated )S
FmE
2836 0 :M
f4_9 sf
( )S
2841 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.44 144 M 0 0 20(bus#)FmTx
FmE
2841 0 :M
f2_9 sf
( )S
2843 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.44 144 M (.)S
FmE
2843 0 :M
f3_9 sf
( )S
2845 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 159 M -0.387(Note: Standard )W
-0.387(PCI-to-PCI b)W
-0.387(ridges provide a mechanism for converting Configuration Cycles with particular addresses )W
90 168 M -0.477(to Special Cycles. Consequently, for a )W
-0.477(PCI-to-PCI b)W
-0.477(ridge, the likely implementation of )W
FmE
2846 0 :M
f5_9 sf
( )S
2851 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
398.437 168 M 0 0 45(special-!)FmTx
FmE
2851 0 :M
f3_9 sf
( )S
2853 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
443.437 168 M -0.477( involves invoking the )W
90 177 M (parent node\'s )S
FmE
2853 0 :M
f5_9 sf
( )S
2858 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.915 177 M 0 0 45(config-l!)FmTx
FmE
2858 0 :M
f3_9 sf
( )S
2860 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
185.915 177 M ( method.)S
FmE
2860 0 :M
f0_12 sf
( )S
2863 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 218 M (4. Child Node)S
( Properties and Methods)S
FmE
2863 0 :M
f3_10 sf
( )S
2865 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 234.667 M 0.2(Note: A )W
0.2(PCI-to-PCI b)W
0.2(ridge is a parent of one PCI bus and a child of another. Consequently, a device node rep-)W
72 246.667 M (resenting a PCI bridge is both a Bus Node and a Child Node, with both sets of properties and methods.)S
FmE
2866 0 :M
f0_12 sf
( )S
2869 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 281 M (4.1. )S
(Child Node P)S
(roperties)S
72 316 M (4.1.1. Open Firmware-defined Properties for Child Nodes)S
FmE
2869 0 :M
f2_10 sf
( )S
2871 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 332.667 M (The following properties, as defined in Open Firmware, have special meanings or interpretations for PCI.)S
FmE
2871 0 :M
f5_9 sf
( )S
2876 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 346.667 M 0 0 30(\"name\")FmTx
FmE
2876 0 :M
f2_10 sf
( )S
2878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 346.667 M (S)S
FmE
2879 0 :M
f2_9 sf
( )S
2881 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 361 M (Standard )S
FmE
2881 0 :M
f3_9 sf
( )S
2883 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.238 361 M (prop-name)S
FmE
2883 0 :M
f2_9 sf
( )S
2885 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.725 361 M (, defines device\325s name.)S
FmE
2885 0 :M
f3_9 sf
( )S
2887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 373 M (prop-encoded-array)S
FmE
2888 0 :M
f2_9 sf
( )S
2890 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.969 373 M (:  device name, encoded as with )S
FmE
2890 0 :M
f5_9 sf
( )S
2895 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.921 373 M 0 0 65(encode-string)FmTx
FmE
2895 0 :M
f2_9 sf
( )S
2897 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
344.921 373 M (.)S
90 385 M -0.316(Instead of creating their childrens devices name properties from the vendor and device IDs)W
-0.316( \(as was defined by earlier ver-)W
90 394 M -0.43(sions of this binding\),)W
-0.43( PCI bus device nodes should create them from the class code)W
-0.43( as described in [3].  If a device\325s class )W
90 403 M (code is not one of those covered by [3],  )S
-0.373(the name is of the form )W
FmE
2897 0 :M
f5_9 sf
( )S
2902 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.42 403 M 0 0 60(pciVVVV,DDDD)FmTx
FmE
2902 0 :M
f2_9 sf
( )S
2904 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
380.42 403 M -0.373(, as described in section )W
-0.373(5. Bus-specific )W
90 412 M (User Interface Commands)S
(.)S
90 424 M (The )S
FmE
2904 0 :M
f5_9 sf
( )S
2909 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106.242 424 M 0 0 55(\"vendor-id\")FmTx
FmE
2909 0 :M
f2_9 sf
( )S
2911 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
161.242 424 M ( and )S
FmE
2912 0 :M
f5_9 sf
( )S
2917 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.737 424 M 0 0 55(\"device-id\")FmTx
FmE
2917 0 :M
f2_9 sf
( )S
2919 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.737 424 M ( properties should continue to reflect the same explicit information as before.)S
90 436 M -0.258(For PCI devices without FCode drviers, the PCI bus node should automatically create a )W
FmE
2919 0 :M
f5_9 sf
( )S
2924 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
403.552 436 M 0 0 60(\"compatible\")FmTx
FmE
2924 0 :M
f2_9 sf
( )S
2926 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
463.552 436 M -0.258( property with a )W
90 445 M (single entry whose value reflects the vendor and device IDs, as previously specified for the name property.)S
90 457 M (For devices with FCode drivers, that FCode device driver shall create a)S
FmE
2926 0 :M
f5_9 sf
( )S
2931 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
346.397 457 M 0 0 5(\")FmTx
0 0 55(compatible\")FmTx
FmE
2931 0 :M
f2_9 sf
( )S
2933 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406.397 457 M ( property whose first entry )S
90 466 M (uniquely identifies the function\'s programming model, as previously defined for FCode-generated )S
FmE
2933 0 :M
f5_9 sf
( )S
2938 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
444.498 466 M 0 0 30(\"name\")FmTx
FmE
2938 0 :M
f2_9 sf
( )S
2940 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
474.498 466 M ( properties.  )S
90 475 M (That )S
FmE
2941 0 :M
f5_9 sf
( )S
2946 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108.743 475 M 0 0 60(\"compatible\")FmTx
FmE
2946 0 :M
f2_9 sf
( )S
2948 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.743 475 M ( property may have additional entries as appropriate.)S
FmE
2948 0 :M
f3_9 sf
( )S
2950 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 487 M -0.259(Note: It is better to identify the function as a whole, instead of identifying only the \"chip\" that is directly connected to the )W
90 496 M (PCI bus \(e.g.: use \"IBM,v915\" instead of \"S3,928\", because there may be numerous other display adapters that use the )S
90 505 M (same graphics chip, but which are not entirely compatible due to the presence of different support chips like DACs and )S
90 514 M (programmable clock generators.)S
FmE
2950 0 :M
f5_9 sf
( )S
2955 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 537.667 M 0 0 25(\"reg\")FmTx
FmE
2955 0 :M
f2_10 sf
( )S
2957 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 537.667 M (S)S
FmE
2958 0 :M
f2_9 sf
( )S
2960 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 552 M (S)S
(tandard )S
FmE
2960 0 :M
f3_9 sf
( )S
2962 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.238 552 M (prop-name)S
FmE
2962 0 :M
f2_9 sf
( )S
2964 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.725 552 M (, defines device\'s addressable regions.)S
FmE
2964 0 :M
f3_9 sf
( )S
2966 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 564 M (prop-encoded-array)S
FmE
2967 0 :M
f2_9 sf
( )S
2969 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.969 564 M (:  Arbitrary number of \()S
FmE
2969 0 :M
f3_9 sf
( )S
2971 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
248.177 564 M (phys-addr size)S
FmE
2971 0 :M
f2_9 sf
( )S
2973 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.412 564 M (\) pairs.)S
FmE
2973 0 :M
f3_9 sf
( )S
2975 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 576 M (phys-addr)S
FmE
2976 0 :M
f2_9 sf
( )S
2978 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126.49 576 M -0.085( is \()W
FmE
2978 0 :M
f3_9 sf
( )S
2980 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
139.816 576 M -0.085(phys.lo phys.mid phys.hi)W
FmE
2980 0 :M
f2_9 sf
( )S
2982 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
227.879 576 M -0.085(\), encoded as with )W
FmE
2982 0 :M
f5_9 sf
( )S
2987 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
295.262 576 M 0 0 55(encode-phys)FmTx
FmE
2987 0 :M
f2_9 sf
( )S
2989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.262 576 M -0.085(. )W
FmE
2990 0 :M
f3_9 sf
( )S
2992 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
354.677 576 M (size)S
FmE
2992 0 :M
f2_9 sf
( )S
2994 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
368.172 576 M -0.085( is a pair of integers, each encoded as with )W
FmE
2994 0 :M
f5_9 sf
( )S
2999 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 585 M 0 0 50(encode-int)FmTx
FmE
2999 0 :M
f2_9 sf
( )S
3001 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140 585 M ( .)S
90 597 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least )S
90 606 M (significant 32 bits thereof.)S
90 618 M -0.623(This property is mandatory for PCI Child Nodes, as defined by Open Firmware.  The property value consists of a sequence )W
90 627 M -0.373(of \()W
FmE
3001 0 :M
f3_9 sf
( )S
3003 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
102.367 627 M -0.373(phys-addr, size)W
FmE
3004 0 :M
f2_9 sf
( )S
3006 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156.479 627 M -0.373(\) pairs.  In the first such pair, the )W
FmE
3006 0 :M
f3_9 sf
( )S
3008 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.816 627 M (phys-addr)S
FmE
3008 0 :M
f2_9 sf
( )S
3010 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
309.306 627 M -0.373( component shall be the Configuration Space address of the )W
90 636 M (beginning of the function\'s set of configuration registers \(i.e.  the )S
FmE
3010 0 :M
f4_9 sf
( )S
3015 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.782 636 M 0 0 40(rrrrrrrr)FmTx
FmE
3015 0 :M
f2_9 sf
( )S
3017 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.782 636 M ( field is zero\) and the )S
FmE
3018 0 :M
f3_9 sf
( )S
3020 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
444.242 636 M (size)S
FmE
3020 0 :M
f2_9 sf
( )S
3022 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
457.738 636 M ( component shall )S
90 645 M -0.015(be zero.  Each additional \()W
FmE
3022 0 :M
f3_9 sf
( )S
3024 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.377 645 M -0.015(phys-addr, size)W
FmE
3024 0 :M
f2_9 sf
( )S
3026 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238.847 645 M -0.015(\) pair shall specify the address of an addressable region of Memory Space or I/)W
90 654 M (O Space associated with the function.  In these pairs, if the \")S
FmE
3027 0 :M
f4_9 sf
( )S
3032 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
307.085 654 M 0 0 5(n)FmTx
FmE
3032 0 :M
f2_9 sf
( )S
3034 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
312.085 654 M (\" bit of phys.hi is 0, reflecting a relocatable address, then )S
FmE
3034 0 :M
f3_9 sf
( )S
3036 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 663 M (phys.mid)S
FmE
3036 0 :M
f2_9 sf
( )S
3038 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
122.243 663 M -0.086( and )W
FmE
3038 0 :M
f3_9 sf
( )S
3040 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
139.565 663 M (phys.lo)S
FmE
3041 0 :M
f2_9 sf
( )S
3043 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.31 663 M -0.086( specify an address relative to the value of the associated base register. In general this value will be )W
90 672 M -0.192(zero, specifying an address range corresponding directly to the hardware\'s.  If the \")W
FmE
3043 0 :M
f4_9 sf
( )S
3048 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.899 672 M 0 0 5(n)FmTx
FmE
3048 0 :M
f2_9 sf
( )S
3050 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
390.899 672 M -0.192(\" bit of phys.hi is 1, reflecting a non-)W
90 681 M (relocatable address, then )S
FmE
3050 0 :M
f3_9 sf
( )S
3052 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.949 681 M (phys.mid)S
FmE
3052 0 :M
f2_9 sf
( )S
3054 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.192 681 M ( and )S
FmE
3055 0 :M
f3_9 sf
( )S
3057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
230.687 681 M (phys.hi)S
FmE
3057 0 :M
f2_9 sf
( )S
3059 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.432 681 M ( specify an absolute PCI address.)S
90 693 M -0.559(In the event that a function has an addressable region that can be accessed relative to more than one Base Address Register )W
90 702 M -0.078(\(for example, in Memory Space relative to one Base Register, and in I/O Space relative to another\), only the primary ac-)W
90 711 M -0.266(cess path \(typically, the one in Memory Space\) shall be listed in the )W
FmE
3059 0 :M
f5_9 sf
( )S
3064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
332.455 711 M 0 0 25(\"reg\")FmTx
FmE
3064 0 :M
f2_9 sf
( )S
3066 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
357.455 711 M -0.266( property, and the secondary access path shall )W
90 720 M (be listed in the )S
FmE
3066 0 :M
f5_9 sf
( )S
3071 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.987 720 M 0 0 75(\"alternate-reg\")FmTx
FmE
3071 0 :M
f2_9 sf
( )S
3073 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
219.987 720 M ( property.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
52 210 2 12 FmqF
52 273 2 12 FmqF
52 379 2 36 FmqF
FmE
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 17 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
0 0 .5 :F
3074 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3074 0 :M
0 G
f0_12 sf
( )S
3077 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
3077 0 :M
f2_12 sf
( )S
3080 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (18)S
FmE
3080 0 :M
f1_12 sf
( )S
3083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
3083 0 :M
f4_12 sf
( )S
3090 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
3090 0 :M
f3_9 sf
( )S
3092 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 52 M -0.12(Note:  The device FCode is free to construct the second and later pairs in any order, including or omitting references to )W
72 61 M (base address registers, hard-decoded registers, and so on.  However, for compatibility between FCode and earlier non-)S
72 70 M (FCode versions of a device and between Open Firmware and non-Open Firmware systems, it is recommended that the )S
72 79 M (device FCode construct the )S
FmE
3092 0 :M
f9_9 sf
( )S
3097 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
172.96 79 M 0 0 25(\"reg\")FmTx
FmE
3097 0 :M
f3_9 sf
( )S
3099 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.96 79 M (  property  )S
FmE
3100 0 :M
f2_9 sf
( )S
3102 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.95 79 M (exactly)S
FmE
3102 0 :M
f3_9 sf
( )S
3104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.935 79 M ( as the platform firmware would have in the absence of device )S
72 88 M (FCode, as described under )S
FmE
3104 0 :M
f7_9 sf
( )S
3109 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.725 88 M 0 0 45(probe-pci)FmTx
FmE
3109 0 :M
f3_9 sf
( )S
3111 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.725 88 M (.)S
FmE
3111 0 :M
f5_9 sf
( )S
3116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 101.667 M 0 0 60(\"interrupts\")FmTx
FmE
3116 0 :M
f2_10 sf
( )S
3118 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.441 101.667 M (S)S
FmE
3119 0 :M
f3_9 sf
( )S
3121 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 116 M (prop-name)S
FmE
3121 0 :M
f2_9 sf
( )S
3123 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.487 116 M (, the presence of which indicates that the function represented by this node is connected to a PCI expansion )S
72 125 M (connector\'s interrupt line.)S
FmE
3123 0 :M
f3_9 sf
( )S
3125 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 137 M (prop-encoded-array)S
FmE
3126 0 :M
f2_9 sf
( )S
3128 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.969 137 M -0.417(:  Integer, encoded as with )W
FmE
3128 0 :M
f5_9 sf
( )S
3133 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.676 137 M 0 0 50(encode-int)FmTx
FmE
3133 0 :M
f2_9 sf
( )S
3135 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
289.676 137 M -0.417(.  The integer represents the interrupt line to which this func-)W
72 146 M (tion\'s interrupt is connected; INTA=1, INTB=2, INTC=3, INTD=4.  This value is determined from the contents of the )S
72 155 M (device\'s Configuration Interrupt Pin Register. )S
FmE
3135 0 :M
f0_12 sf
( )S
3138 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 189 M (4.1.2. Bus-specific Properties for Child Nodes)S
FmE
3138 0 :M
f2_10 sf
( )S
3140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 205.667 M -0.093(Standard Packages corresponding to devices that are children of a PCI bus shall implement the following prop-)W
54 217.667 M (erties, if applicable.)S
FmE
3141 0 :M
f5_9 sf
( )S
3146 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 247.667 M 0 0 75(\"alternate-reg\")FmTx
FmE
3146 0 :M
f2_10 sf
( )S
3148 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.441 247.667 M (S)S
FmE
3148 0 :M
f3_9 sf
( )S
3150 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 262 M (prop-name)S
FmE
3150 0 :M
f2_9 sf
( )S
3152 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.487 262 M (, defines alternate access paths for addressable regions.)S
FmE
3153 0 :M
f3_9 sf
( )S
3155 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 274 M (prop-encoded-array)S
FmE
3155 0 :M
f2_9 sf
( )S
3157 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.969 274 M (: Arbitrary number of \()S
FmE
3157 0 :M
f3_9 sf
( )S
3159 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
227.927 274 M (phys-addr size)S
FmE
3159 0 :M
f2_9 sf
( )S
3161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
280.162 274 M (\) pairs.)S
FmE
3162 0 :M
f3_9 sf
( )S
3164 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 286 M -0.23(phys-addr )W
FmE
3164 0 :M
f2_9 sf
( )S
3166 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
110.51 286 M -0.23(is \()W
FmE
3166 0 :M
f3_9 sf
( )S
3168 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121.526 286 M -0.23(phys.lo phys.mid phys.hi)W
FmE
3168 0 :M
f2_9 sf
( )S
3170 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
209.3 286 M -0.23(\), encoded as with )W
FmE
3171 0 :M
f5_9 sf
( )S
3176 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276.104 286 M 0 0 60(encode-phys.)FmTx
FmE
3176 0 :M
f2_9 sf
( )S
3178 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.104 286 M -0.23( )W
FmE
3178 0 :M
f3_9 sf
( )S
3180 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.124 286 M (size)S
FmE
3180 0 :M
f2_9 sf
( )S
3182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351.62 286 M -0.23( is a pair of integers, each encoded as with )W
FmE
3182 0 :M
f5_9 sf
( )S
3187 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 295 M 0 0 50(encode-int)FmTx
FmE
3187 0 :M
f2_9 sf
( )S
3189 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
122 295 M ( .)S
72 307 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least )S
72 316 M (significant 32 bits thereof.)S
72 328 M -0.298(This property describes alternative access paths for the addressable regions described by the )W
FmE
3190 0 :M
f5_9 sf
( )S
3195 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
401.717 328 M 0 0 25(\"reg\")FmTx
FmE
3195 0 :M
f2_9 sf
( )S
3197 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
426.717 328 M -0.298( property.  Typically, )W
72 337 M (an alternative access path exists when a particular part of a device can be accessed either in Memory Space or in I/O )S
72 346 M -0.308(Space, with a separate Base Address register for each of the two access paths.  The primary access paths are described by )W
72 355 M (the )S
FmE
3197 0 :M
f5_9 sf
( )S
3202 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.245 355 M 0 0 25(\"reg\")FmTx
FmE
3202 0 :M
f2_9 sf
( )S
3204 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
110.245 355 M ( property, and the secondary access paths, if any, are described by the )S
FmE
3204 0 :M
f5_9 sf
( )S
3209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
363.122 355 M 0 0 75(\"alternate-reg\")FmTx
FmE
3209 0 :M
f2_9 sf
( )S
3211 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
438.122 355 M ( property.)S
72 367 M -0.317(If the function has no alternative access paths, the device node shall have no )W
FmE
3211 0 :M
f5_9 sf
( )S
3216 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
344.196 367 M 0 0 75(\"alternate-reg\")FmTx
FmE
3216 0 :M
f2_9 sf
( )S
3218 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.196 367 M -0.317( property.  If the device )W
72 376 M -0.401(has alternative access paths, each entry \(i.e. each )W
FmE
3219 0 :M
f3_9 sf
( )S
3221 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.438 376 M -0.401(phys-addr size)W
FmE
3221 0 :M
f2_9 sf
( )S
3223 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.273 376 M -0.401( pair\) of its value represents the secondary access path for )W
72 385 M -0.229(the addressable region whose primary access path is in the corresponding entry of the )W
FmE
3223 0 :M
f5_9 sf
( )S
3228 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
378.666 385 M 0 0 25(\"reg\")FmTx
FmE
3228 0 :M
f2_9 sf
( )S
3230 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
403.666 385 M -0.229( property value.  If the num-)W
72 394 M -0.056(ber of )W
FmE
3230 0 :M
f5_9 sf
( )S
3235 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.372 394 M 0 0 75(\"alternate-reg\")FmTx
FmE
3235 0 :M
f2_9 sf
( )S
3237 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
170.372 394 M -0.056( entries exceeds the number of )W
FmE
3238 0 :M
f5_9 sf
( )S
3243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
281.98 394 M 0 0 25(\"reg\")FmTx
FmE
3243 0 :M
f2_9 sf
( )S
3245 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306.98 394 M -0.056( property entries, the additional entries denote address-)W
72 403 M -0.349(able regions that are not represented by )W
FmE
3245 0 :M
f5_9 sf
( )S
3250 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.234 403 M 0 0 25(\"reg\")FmTx
FmE
3250 0 :M
f2_9 sf
( )S
3252 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238.234 403 M -0.349( property entries, and are thus not intended to be used in normal operation; )W
72 412 M (such regions might, for example, be used for diagnostic functions. If the number of )S
FmE
3252 0 :M
f5_9 sf
( )S
3257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.142 412 M 0 0 75(\"alternate-reg\")FmTx
FmE
3257 0 :M
f2_9 sf
( )S
3259 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
448.142 412 M ( entries is less )S
72 421 M -0.313(than the number of )W
FmE
3259 0 :M
f5_9 sf
( )S
3264 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.222 421 M 0 0 25(\"reg\")FmTx
FmE
3264 0 :M
f2_9 sf
( )S
3266 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.222 421 M -0.313( entries, the regions described by the extra )W
FmE
3267 0 :M
f5_9 sf
( )S
3272 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
317.895 421 M 0 0 25(\"reg\")FmTx
FmE
3272 0 :M
f2_9 sf
( )S
3274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
342.895 421 M -0.313( entries do not have alternative access paths.  )W
72 430 M -0.316(An )W
FmE
3274 0 :M
f5_9 sf
( )S
3279 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84.931 430 M 0 0 75(\"alternate-reg\")FmTx
FmE
3279 0 :M
f2_9 sf
( )S
3281 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.931 430 M -0.316( entry whose )W
FmE
3281 0 :M
f3_9 sf
( )S
3283 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
207.215 430 M -0.316(phys.hi )W
FmE
3283 0 :M
f2_9 sf
( )S
3285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.894 430 M -0.316(component is zero indicates that the corresponding region does not have an )W
72 439 M -0.029(alternative access path; such an entry can be used as a \"place holder\" to preserve the positions of later entries relative to )W
72 448 M -0.211(the corresponding )W
FmE
3286 0 :M
f5_9 sf
( )S
3291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
138.552 448 M 0 0 25(\"reg\")FmTx
FmE
3291 0 :M
f2_9 sf
( )S
3293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.552 448 M -0.211( entries.  The first )W
FmE
3293 0 :M
f5_9 sf
( )S
3298 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228.465 448 M 0 0 75(\"alternate-reg\")FmTx
FmE
3298 0 :M
f2_9 sf
( )S
3300 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303.465 448 M -0.211( entry, corresponding to the )W
FmE
3300 0 :M
f5_9 sf
( )S
3305 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
403.874 448 M 0 0 25(\"reg\")FmTx
FmE
3305 0 :M
f2_9 sf
( )S
3307 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
428.874 448 M -0.211( entry describing the )W
72 457 M (function\'s Configuration Space registers, shall have a )S
FmE
3307 0 :M
f3_9 sf
( )S
3309 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
265.546 457 M (phys.hi)S
FmE
3310 0 :M
f2_9 sf
( )S
3312 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.292 457 M ( component of zero.)S
FmE
3312 0 :M
f5_9 sf
( )S
3317 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 470.667 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
3317 0 :M
f2_10 sf
( )S
3319 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.441 470.667 M (S)S
FmE
3319 0 :M
f3_9 sf
( )S
3321 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 485 M (prop-name)S
FmE
3322 0 :M
f2_9 sf
( )S
3324 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.487 485 M (, denotes offset of FCode image within the device\'s Expansion ROM.)S
FmE
3324 0 :M
f3_9 sf
( )S
3326 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 497 M (prop-encode-)S
(array)S
FmE
3326 0 :M
f2_9 sf
( )S
3328 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.469 497 M (:)S
( one integer, encoded as with )S
FmE
3328 0 :M
f5_9 sf
( )S
3333 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.176 497 M 0 0 50(encode-int)FmTx
FmE
3333 0 :M
f2_9 sf
( )S
3335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.176 497 M (.)S
72 509 M (This property indicates the offset of the PCI Expansion ROM image within the device\'s Expansion ROM in which the )S
72 518 M -0.487(FCode image was found;  i.e., the offset of the 0xAA55 signature of that image\'s PCI Expansion ROM Header. This value )W
FmE
3336 0 :M
f3_9 sf
( )S
3338 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 527 M (shall)S
FmE
3338 0 :M
f2_9 sf
( )S
3340 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
89.501 527 M ( be generated before the FCode is evaluated.  Note that the absence of this property indicates that no FCode exists )S
72 536 M (for this device node.)S
FmE
3340 0 :M
f5_9 sf
( )S
3345 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 549.667 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3345 0 :M
f2_10 sf
( )S
3347 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.441 549.667 M (S)S
FmE
3348 0 :M
f3_9 sf
( )S
3350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 564 M (prop-name)S
FmE
3350 0 :M
f2_9 sf
( )S
3352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.487 564 M (, denotes assigned physical addresses)S
FmE
3352 0 :M
f3_9 sf
( )S
3354 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 576 M (prop-encoded-array)S
FmE
3354 0 :M
f2_9 sf
( )S
3356 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.969 576 M (:  Zero to six \()S
FmE
3357 0 :M
f3_9 sf
( )S
3359 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196.203 576 M (phys-addr size)S
FmE
3359 0 :M
f2_9 sf
( )S
3361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
248.438 576 M (\) pairs.)S
FmE
3361 0 :M
f3_9 sf
( )S
3363 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 588 M (phys-addr)S
FmE
3363 0 :M
f2_9 sf
( )S
3365 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108.49 588 M -0.085( is \()W
FmE
3366 0 :M
f3_9 sf
( )S
3368 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121.816 588 M -0.085(phys.lo phys.mid phys.hi)W
FmE
3368 0 :M
f2_9 sf
( )S
3370 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
209.879 588 M -0.085(\), encoded as with )W
FmE
3370 0 :M
f5_9 sf
( )S
3375 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
277.262 588 M 0 0 55(encode-phys)FmTx
FmE
3375 0 :M
f2_9 sf
( )S
3377 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
332.262 588 M -0.085(. )W
FmE
3377 0 :M
f3_9 sf
( )S
3379 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.677 588 M (size)S
FmE
3380 0 :M
f2_9 sf
( )S
3382 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.172 588 M -0.085( is a pair of integers, each encoded as with )W
FmE
3382 0 :M
f5_9 sf
( )S
3387 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 597 M 0 0 50(encode-int)FmTx
FmE
3387 0 :M
f2_9 sf
( )S
3389 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
122 597 M ( .)S
72 609 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least)S
( )S
72 618 M (significant 32 bits thereof.)S
72 630 M (Each entry \(i.e.  each )S
FmE
3389 0 :M
f3_9 sf
( )S
3391 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.201 630 M (phys-addr size)S
FmE
3391 0 :M
f2_9 sf
( )S
3393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.436 630 M ( pair\) in this property value corresponds to either one or two \(in the case 64-bit-ad-)S
72 639 M -0.178(dress Memory Space\) of the function\'s Configuration Space base address registers.  The entry indicates the physical PCI )W
72 648 M -0.253(domain address that has been assigned to that base address register \(or register pair\), and the size in bytes of the assigned )W
72 657 M -0.548(region.  The size shall be a power of two \(since the structure of PCI Base Address registers forces the decoding granularity )W
72 666 M (to powers of two\).  The \')S
FmE
3394 0 :M
f4_9 sf
( )S
3399 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.337 666 M 0 0 5(n)FmTx
FmE
3399 0 :M
f2_9 sf
( )S
3401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.337 666 M (\' bit of each )S
FmE
3401 0 :M
f3_9 sf
( )S
3403 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
209.436 666 M (phys-addr)S
FmE
3403 0 :M
f2_9 sf
( )S
3405 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
245.926 666 M ( shall be set to 1, indicating that the address is absolute \(within the PCI )S
72 675 M (domain\'s address space\), not relative to the start of a relocatable region.  The type code shall not be \'00\' \(Configuration )S
72 684.667 M (Space\).  The \')S
FmE
3405 0 :M
f2_10 sf
( )S
3407 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121.094 684.667 M (bbbbbbbb)S
FmE
3408 0 :M
f2_9 sf
( )S
3410 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
161.094 684.667 M (,)S
FmE
3410 0 :M
f2_10 sf
( )S
3412 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.344 684.667 M (ddddd)S
FmE
3413 0 :M
f2_9 sf
( )S
3415 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.344 684.667 M (,)S
FmE
3415 0 :M
f2_10 sf
( )S
3417 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
190.594 684.667 M (fff)S
FmE
3417 0 :M
f2_9 sf
( )S
3419 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.576 684.667 M (,)S
FmE
3420 0 :M
f2_10 sf
( )S
3422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.826 684.667 M (rrrrrrrr)S
FmE
3422 0 :M
f2_9 sf
( )S
3424 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
229.448 684.667 M (\' field indicates the base register to which the entry applies, and the )S
72 694 M (\')S
FmE
3424 0 :M
f4_9 sf
( )S
3429 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
73.619 694 M 0 0 55(hh\311hh,ll\311ll)FmTx
FmE
3429 0 :M
f2_9 sf
( )S
3431 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.619 694 M (\' field contains the assigned address.)S
72 706 M (If addresses have not yet been assigned to the function\'s relocatable regions, this property shall be absent.)S
FmE
endp
%%Page: 18 18
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 18 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
3432 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3432 0 :M
f0_12 sf
( )S
3435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
3435 0 :M
f1_12 sf
( )S
3438 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
3438 0 :M
f2_12 sf
( )S
3441 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (19)S
FmE
3441 0 :M
f4_12 sf
( )S
3448 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
3448 0 :M
f2_9 sf
( )S
3450 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 52 M (The values reported in )S
FmE
3450 0 :M
f5_9 sf
( )S
3455 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
172.962 52 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3455 0 :M
f2_9 sf
( )S
3457 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.962 52 M ( represent the physical addresses that have been assigned.  If Open )S
90 61 M -0.289(Firmware can not assign address space for a resource \(e.g., the address space has been exhausted\), that resources will not )W
90 70 M -0.397(have an entry in the )W
FmE
3458 0 :M
f5_9 sf
( )S
3463 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
161.234 70 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3463 0 :M
f2_9 sf
( )S
3465 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
261.234 70 M -0.397( property.  If no resources were assigned address space, the )W
FmE
3465 0 :M
f5_9 sf
( )S
3470 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
472 70 M 0 0 50(\"assigned-)FmTx
90 79 M 0 0 50(addresses\")FmTx
FmE
3470 0 :M
f2_9 sf
( )S
3472 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140 79 M ( property )S
FmE
3472 0 :M
f3_9 sf
( )S
3474 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174.985 79 M (shall)S
FmE
3474 0 :M
f2_9 sf
( )S
3476 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.486 79 M ( have a )S
FmE
3477 0 :M
f3_9 sf
( )S
3479 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220.22 79 M (prop-encoded-array)S
FmE
3479 0 :M
f2_9 sf
( )S
3481 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
293.189 79 M ( of zero length.)S
FmE
3481 0 :M
f3_9 sf
( )S
3483 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 91 M -0.194(Note: There is no implied correspondence between the order of entries in the )W
FmE
3483 0 :M
f7_9 sf
( )S
3488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
367.143 91 M 0 0 5(\")FmTx
FmE
3488 0 :M
f5_9 sf
( )S
3493 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
372.143 91 M 0 0 15(reg)FmTx
FmE
3493 0 :M
f7_9 sf
( )S
3498 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
387.143 91 M 0 0 5(\")FmTx
FmE
3498 0 :M
f3_9 sf
( )S
3500 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
392.143 91 M -0.194( property value and order of entries )W
90 100 M (in the )S
FmE
3501 0 :M
f7_9 sf
( )S
3506 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.496 100 M 0 0 5(\")FmTx
FmE
3506 0 :M
f5_9 sf
( )S
3511 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.496 100 M 0 0 90(assigned-addresses)FmTx
FmE
3511 0 :M
f7_9 sf
( )S
3516 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
207.496 100 M 0 0 5(\")FmTx
FmE
3516 0 :M
f3_9 sf
( )S
3518 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
212.496 100 M ( property value.  The correspondence between the )S
FmE
3518 0 :M
f7_9 sf
( )S
3523 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
394.68 100 M 0 0 5(\")FmTx
FmE
3523 0 :M
f5_9 sf
( )S
3528 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
399.68 100 M 0 0 15(reg)FmTx
FmE
3528 0 :M
f7_9 sf
( )S
3533 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
414.68 100 M 0 0 5(\")FmTx
FmE
3533 0 :M
f3_9 sf
( )S
3535 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.68 100 M ( entries and )S
FmE
3535 0 :M
f7_9 sf
( )S
3540 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
464.42 100 M 0 0 5(\")FmTx
FmE
3540 0 :M
f5_9 sf
( )S
3545 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
469.42 100 M 0 0 45(assigned-)FmTx
90 109 M 0 0 45(addresses)FmTx
FmE
3545 0 :M
f7_9 sf
( )S
3550 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135 109 M 0 0 5(\")FmTx
FmE
3550 0 :M
f3_9 sf
( )S
3552 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140 109 M ( entries is determined by matching the fields denoting the Base Address register.)S
FmE
3552 0 :M
f5_9 sf
( )S
3557 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 122.667 M 0 0 95(\"power-consumption\")FmTx
FmE
3557 0 :M
f2_10 sf
( )S
3559 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 122.667 M (S)S
FmE
3560 0 :M
f3_9 sf
( )S
3562 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 137 M (prop-name)S
FmE
3562 0 :M
f2_9 sf
( )S
3564 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.487 137 M (, describes function\'s power requirements)S
FmE
3564 0 :M
f3_9 sf
( )S
3566 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 149 M (prop-encoded-array)S
FmE
3567 0 :M
f2_9 sf
( )S
3569 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.969 149 M (: list of integers, encoded as with )S
FmE
3569 0 :M
f5_9 sf
( )S
3574 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.928 149 M 0 0 50(encode-int)FmTx
FmE
3574 0 :M
f2_9 sf
( )S
3576 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333.928 149 M (, describing the device\'s maximum power consump-)S
90 158 M -0.607(tion in microwatts, categorized by the various power rails and the device\'s power-management state \(standby or fully-on\).  )W
90 167 M (The ints are encoded in the following order:)S
108 179 M -0.513(unspecified standby, unspecified full-on, +5V standby, +5V full-on, +3.3V standby, +3.3V full-on, I/O pwr standby, )W
108 188 M (I/O pwr full-on, reserved standby, reserved full-on)S
90 200 M -0.321(The \"unspecified\" entries indicate that the power division among the various rails is unknown.  The \"unspecified\" entries )W
90 209 M (shall be zero if any of the other entries are non-zero.  The \"unspecified\" entries are provided so that the )S
FmE
3576 0 :M
f5_9 sf
( )S
3581 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.909 209 M 0 0 55(\"power-con-)FmTx
90 218 M 0 0 45(sumption\")FmTx
FmE
3581 0 :M
f2_9 sf
( )S
3583 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135 218 M ( property can be created for devices without FCode, from the information on the PRSNT1# and PRSNT2# )S
90 227 M (connector pins.)S
90 239 M (If the number of ints in the encoded property value is less than ten, the power consumption is zero for the cases corre-)S
90 248 M -0.27(sponding to the missing entries.  For example, if there are four ints, they correspond to the two \"unspecified\" and the two )W
90 257 M (\"+5\" numbers, and the others are zero.)S
FmE
3583 0 :M
f0_10 sf
( )S
3585 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 286.667 M (4.1.2.1. Standard PCI Configuration Properties)S
FmE
3586 0 :M
f2_10 sf
( )S
3588 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 302.667 M -0.46(The following properties are created during the probing process, after the device node has been created, but before)W
72 314.667 M 0.454(evaluating the device\'s FCode \(if any\).  They represent the values of standard PCI configuration registers. This)W
72 326.667 M (information is likely to be useful for Client and User interfaces.)S
72 342.667 M 0.013(Unless specified otherwise, each of the following properties has a )W
FmE
3588 0 :M
f3_10 sf
( )S
3590 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
337.289 342.667 M (prop-encoded-array)S
FmE
3591 0 :M
f2_10 sf
( )S
3593 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
418.365 342.667 M 0.013( whose value is an integer)W
72 354.667 M (taken directly from the corresponding hardware register, encoded as with )S
FmE
3593 0 :M
f5_10 sf
( )S
3599 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
367.132 354.667 M 0 0 60(encode-int)FmTx
FmE
3599 0 :M
f2_10 sf
( )S
3601 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
427.132 354.667 M (.)S
FmE
3602 0 :M
f5_9 sf
( )S
3607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 368.667 M 0 0 55(\"vendor-id\")FmTx
FmE
3607 0 :M
f2_10 sf
( )S
3609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 368.667 M (S)S
FmE
3609 0 :M
f5_9 sf
( )S
3614 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 382.667 M 0 0 55(\"device-id\")FmTx
FmE
3614 0 :M
f2_10 sf
( )S
3616 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 382.667 M (S)S
FmE
3617 0 :M
f5_9 sf
( )S
3622 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 396.667 M 0 0 65(\"revision-id\")FmTx
FmE
3622 0 :M
f2_10 sf
( )S
3624 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 396.667 M (S)S
FmE
3624 0 :M
f5_9 sf
( )S
3629 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 410.667 M 0 0 60(\"class-code\")FmTx
FmE
3629 0 :M
f2_10 sf
( )S
3631 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 410.667 M (S)S
FmE
3632 0 :M
f5_9 sf
( )S
3637 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 424.666 M 0 0 60(\"interrupts\")FmTx
FmE
3637 0 :M
f2_10 sf
( )S
3639 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 424.666 M (S)S
FmE
3639 0 :M
f2_9 sf
( )S
3641 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 439 M (This property shall be present if the Interrupt Pin register is non-zero)S
(,)S
90 448 M (a)S
(nd shall be absent otherwise.)S
FmE
3642 0 :M
f5_9 sf
( )S
3647 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 459.666 M 0 0 55(\"min-grant\")FmTx
FmE
3647 0 :M
f2_10 sf
( )S
3649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 459.666 M (S)S
FmE
3649 0 :M
f5_9 sf
( )S
3654 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 473.666 M 0 0 65(\"max-latency\")FmTx
FmE
3654 0 :M
f2_10 sf
( )S
3656 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 473.666 M (S)S
FmE
3657 0 :M
f5_9 sf
( )S
3662 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 487.666 M 0 0 70(\"devsel-speed\")FmTx
FmE
3662 0 :M
f2_10 sf
( )S
3664 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 487.666 M (S)S
FmE
3664 0 :M
f5_9 sf
( )S
3669 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 501.666 M 0 0 85(\"cache-line-size\")FmTx
FmE
3669 0 :M
f2_10 sf
( )S
3671 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 501.666 M (S)S
FmE
3672 0 :M
f2_9 sf
( )S
3674 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 513 M (This property shall be present if the function\'s cache line size register is set to a non-zero value,)S
90 523 M (and shall be absent otherwise.)S
FmE
3674 0 :M
f5_9 sf
( )S
3679 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 535.666 M 0 0 95(\"fast-back-to-back\")FmTx
FmE
3679 0 :M
f4_10 sf
( )S
3685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167 535.666 M 0 0 12(  )FmTx
FmE
3685 0 :M
f2_10 sf
( )S
3687 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 535.666 M (S)S
FmE
3687 0 :M
f3_9 sf
( )S
3689 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 547 M (prop-encoded-array)S
FmE
3690 0 :M
f2_9 sf
( )S
3692 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.969 547 M (: <none>)S
90 557 M (This property shall be present if the \"Fast Back-to-Back\" bit \(bit 7\) in the function\'s Status Registe)S
(r)S
90 567 M (i)S
(s set)S
(, a)S
(nd shall be absent otherwise.)S
FmE
3692 0 :M
f5_9 sf
( )S
3697 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 579.666 M 0 0 70(\"subsystem-id\")FmTx
FmE
3697 0 :M
f2_10 sf
( )S
3699 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 579.666 M (S)S
FmE
3699 0 :M
f2_9 sf
( )S
3701 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 591 M (This property shall be present if the \"Subsystem ID\" register is non-zero)S
(,)S
90 601 M (a)S
(nd shall be absent otherwise.)S
FmE
3702 0 :M
f5_9 sf
( )S
3707 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 613.666 M 0 0 105(\"subsystem-vendor-id\")FmTx
FmE
3707 0 :M
f2_10 sf
( )S
3709 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 613.666 M (S)S
FmE
3709 0 :M
f2_9 sf
( )S
3711 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 625 M (This property shall be present if the \"Subsystem Vendor ID\" register is non-zero)S
(,)S
90 635 M (a)S
(nd shall be absent otherwise.)S
FmE
3711 0 :M
f5_9 sf
( )S
3716 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 647.666 M 0 0 75(\"66mhz-capable\")FmTx
FmE
3716 0 :M
f2_10 sf
( )S
3718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 647.666 M (S)S
FmE
3719 0 :M
f3_9 sf
( )S
3721 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 659 M (prop-encoded-array)S
FmE
3721 0 :M
f2_9 sf
( )S
3723 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.969 659 M (: <none>)S
90 669 M (This property shall be present if the \"66 MHz Capable\" bit \(bit 6\) in the function\'s Status Registe)S
(r)S
90 679 M (i)S
(s set)S
(, a)S
(nd shall be absent otherwise.)S
FmE
3723 0 :M
f5_9 sf
( )S
3728 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 691.666 M 0 0 75(\"udf-supported\")FmTx
FmE
3728 0 :M
f2_10 sf
( )S
3730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.441 691.666 M (S)S
FmE
endp
%%Page: 19 19
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 19 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
3731 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3731 0 :M
f0_12 sf
( )S
3734 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
3734 0 :M
f2_12 sf
( )S
3737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (20)S
FmE
3737 0 :M
f1_12 sf
( )S
3740 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
3740 0 :M
f4_12 sf
( )S
3747 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
3747 0 :M
f3_9 sf
( )S
3749 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 52 M (prop-encoded-array)S
FmE
3749 0 :M
f2_9 sf
( )S
3751 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.969 52 M (: <none>)S
72 62 M -0.471(This property shall be present if the \"UDF Supported\" bit \(bit 5\) in the function\'s Status Register is set, and shall be absent )W
72 72 M (otherwise)S
(.)S
FmE
3752 0 :M
f0_12 sf
( )S
3755 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 105 M (4.2. )S
(Child Node M)S
(ethods)S
FmE
3755 0 :M
f2_10 sf
( )S
3757 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 121.667 M -0.276(The methods of a child node depend upon its device-type programming model.  However, the standard )W
FmE
3757 0 :M
f5_10 sf
( )S
3763 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
463.337 121.667 M 0 0 24(open)FmTx
FmE
3763 0 :M
f2_10 sf
( )S
3765 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
487.337 121.667 M -0.276( and)W
FmE
3766 0 :M
f5_10 sf
( )S
3772 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 133.667 M 0 0 30(close)FmTx
FmE
3772 0 :M
f2_10 sf
( )S
3774 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84 133.667 M ( methods for PCI devices have some PCI-specific details as described below.)S
FmE
3774 0 :M
f5_10 sf
( )S
3780 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 147.667 M 0 0 24(open)FmTx
FmE
3780 0 :M
f4_10 sf
( )S
3786 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249 147.667 M 0 0 114(\( -- true | false \))FmTx
FmE
3786 0 :M
f2_10 sf
( )S
3788 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.441 147.667 M (S)S
FmE
3789 0 :M
f2_9 sf
( )S
3791 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 162 M (Prepare the device for subsequent use.)S
72 174 M -0.279(Since the probing process leaves the decoding disabled for a PCI device, the device driver must explicitly enable the PCI )W
72 183 M -0.286(address spaces that it requires by setting the Memory Space and/or IO Space bits in the Command register;  If  the device )W
72 192 M -0.349(requires the use of bus mastering capabilities, it must also set the Bus Master bit.  The setting of these bits should be done )W
72 201 M (with read-modify-write accesses to the Command register.)S
FmE
3791 0 :M
f5_10 sf
( )S
3797 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 212.667 M 0 0 30(close)FmTx
FmE
3797 0 :M
f4_10 sf
( )S
3803 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288 212.667 M 0 0 36(\( -- \))FmTx
FmE
3803 0 :M
f2_10 sf
( )S
3805 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.441 212.667 M (S)S
FmE
3805 0 :M
f2_9 sf
( )S
3807 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 227.667 M (Close this previously)S
FmE
3808 0 :M
f5_9 sf
( )S
3813 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.99 227.667 M 0 0 5( )FmTx
FmE
3813 0 :M
f5_10 sf
( )S
3819 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
152.99 227.667 M 0 0 6(o)FmTx
0 0 18(pen)FmTx
FmE
3819 0 :M
f2_9 sf
( )S
3821 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
176.99 227.667 M (ed device.)S
72 240.667 M -0.112(The )W
FmE
3821 0 :M
f5_10 sf
( )S
3827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88.13 240.667 M 0 0 30(close)FmTx
FmE
3827 0 :M
f2_9 sf
( )S
3829 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118.13 240.667 M -0.112( method for a PCI device must clear the Bus Master, Memory Space and IO Space bits in its Command reg-)W
72 250 M (ister.  The clearing of these bits should be done by a read-modify-write sequence to the Command register.)S
FmE
3829 0 :M
f0_12 sf
( )S
3832 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 289 M (5. )S
(Bus-specific User Interface Commands)S
FmE
3832 0 :M
f2_10 sf
( )S
3834 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 305.667 M -0.107(An Open Firmware-compliant User Interface on a system with PCI )W
FmE
3835 0 :M
f3_10 sf
( )S
3837 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
323.922 305.667 M (should)S
FmE
3837 0 :M
f2_10 sf
( )S
3839 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.589 305.667 M -0.107( implement the following PCI-specific)W
54 317.667 M (user interface commands.)S
FmE
3840 0 :M
f5_9 sf
( )S
3845 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 331.667 M 0 0 45(probe-pci)FmTx
FmE
3845 0 :M
f2_10 sf
( )S
3847 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
286.845 331.667 M (        \( -- \))S
FmE
3847 0 :M
f2_9 sf
( )S
3849 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 346 M (Interprets FCode for all built-in PCI slots in numerical order.)S
72 358 M (Enter \"probe state\", thus affecting subsequent behavior of the )S
FmE
3849 0 :M
f5_9 sf
( )S
3854 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
295.251 358 M 0 0 30(map-in)FmTx
FmE
3854 0 :M
f2_9 sf
( )S
3856 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.251 358 M ( and )S
FmE
3857 0 :M
f5_9 sf
( )S
3862 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
342.746 358 M 0 0 35(map-out)FmTx
FmE
3862 0 :M
f2_9 sf
( )S
3864 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
377.746 358 M ( methods.)S
72 370 M (Scan all slots in numerical order.  For each slot, read the header type field in the configuration register set for function )S
72 379 M (number 0.  If the header type field indicates a )S
(PCI-to-PCI b)S
(ridge, perform the function described in the Probing )S
(PCI-to-)S
72 388 M -0.029(PCI b)W
-0.029(ridges section.  If the header type field indicates a multi-function device, perform the following sequence for each )W
72 397 M -0.128(of the functions that are present \(as determined by the presence of a non-FFFFh value in the Vendor ID field of the func-)W
72 406 M (tion\'s Configuration Space header\).  Otherwise, perform the following sequence for the card\'s function number 0. The )S
72 415 M -0.079(first attempted access to each function )W
FmE
3864 0 :M
f3_9 sf
( )S
3866 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
211.454 415 M (shall)S
FmE
3866 0 :M
f2_9 sf
( )S
3868 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228.955 415 M -0.079( use  )W
FmE
3868 0 :M
f5_9 sf
( )S
3873 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.462 415 M 0 0 25(lpeek)FmTx
FmE
3873 0 :M
f2_9 sf
( )S
3875 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.462 415 M -0.079(, because in some systems an attempted access to a non-existent )W
72 424 M (device might result in a processor exception \(e.g. a \"bus error\"\).)S
FmE
3876 0 :M
f3_9 sf
( )S
3878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 436 M (Note:  Although some PCI implementations will not generate processor exceptions for aborted cycles, that is not an in-)S
72 445 M -0.377(herent limitation of PCI itself, but instead an implementation choice that is appropriate for some system architectures.  A )W
72 454 M -0.126(PCI host bridge knows if it terminated a cycle with a master abort.  Since the PC system architecture lacks the notion of )W
72 463 M (a bus error, PC to PCI host bridges cannot report a bus error to the PC, so they have to complete the cycle and return )S
72 472 M (all ones to the x86 processor.  However, in a non-PC system, the PCI host bridge could terminate the processor cycle )S
72 481 M (with a bus error.  Open Firmware )S
FmE
3878 0 :M
f1_9 sf
( )S
3880 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196.985 481 M (peek)S
FmE
3880 0 :M
f3_9 sf
( )S
3882 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.974 481 M ( and )S
FmE
3882 0 :M
f1_9 sf
( )S
3884 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.974 481 M (poke)S
FmE
3885 0 :M
f3_9 sf
( )S
3887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.469 481 M ( can behave in their normal way; if the processor can get a bus error, )S
72 490 M -0.256(peek and poke can report it.  If not, )W
FmE
3887 0 :M
f1_9 sf
( )S
3889 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.911 490 M (peek)S
FmE
3889 0 :M
f3_9 sf
( )S
3891 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
215.9 490 M -0.256( and )W
FmE
3891 0 :M
f1_9 sf
( )S
3893 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.389 490 M (poke)S
FmE
3894 0 :M
f3_9 sf
( )S
3896 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.884 490 M -0.256( will never say they got a bus error, they will just return whatever data )W
72 499 M -0.18(the cycle yielded.  This is not a problem, because the probing process involves doing a )W
FmE
3896 0 :M
f1_9 sf
( )S
3898 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.03 499 M (peek)S
FmE
3898 0 :M
f3_9 sf
( )S
3900 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.019 499 M -0.18( and also looking at the data )W
72 508 M (to see if it is right.)S
FmE
3900 0 :M
f2_9 sf
( )S
3902 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 520 M (Create the following properties from the information given in the configuration space header.)S
FmE
3903 0 :M
f5_9 sf
( )S
3908 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 529 M 0 0 55(\"vendor-id\")FmTx
90 541 M 0 0 55(\"device-id\")FmTx
90 553 M 0 0 65(\"revision-id\")FmTx
90 565 M 0 0 60(\"class-code\")FmTx
90 577 M 0 0 60(\"interrupts\")FmTx
90 589 M 0 0 55(\"min-grant\")FmTx
FmE
3908 0 :M
f2_9 sf
( )S
3910 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 589 M (\(Unless Header Type is 01h\))S
FmE
3910 0 :M
f5_9 sf
( )S
3915 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 601 M 0 0 65(\"max-latency\")FmTx
FmE
3915 0 :M
f2_9 sf
( )S
3917 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 601 M (\(Unless Header Type is 01h\))S
FmE
3917 0 :M
f5_9 sf
( )S
3922 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 613 M 0 0 70(\"devsel-speed\")FmTx
90 625 M 0 0 95(\"fast-back-to-back\")FmTx
90 637 M 0 0 70(\"subsystem-id\")FmTx
90 649 M 0 0 85(\"cache-line-size\")FmTx
90 661 M 0 0 105(\"subsystem-vendor-id\")FmTx
90 673 M 0 0 75(\"66mhz-capable\")FmTx
90 685 M 0 0 75(\"udf-supported\")FmTx
FmE
3922 0 :M
f3_9 sf
( )S
3924 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 700 M (Note: The feasibility of automatically creating the above properties depends on the ability to recognize the config-)S
90 709 M -0.12(uration header format. At present, there are two such formats - the base format defined by the )W
FmE
3924 0 :M
f2_9 sf
( )S
3926 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
428.631 709 M -0.12(PCI Local Bus Spec-)W
90 718 M (ification)S
FmE
3927 0 :M
f3_9 sf
( )S
3929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
119.986 718 M -0.291( and the )W
-0.291(PCI-to-PCI b)W
-0.291(ridge format defined by the )W
FmE
3929 0 :M
f2_9 sf
( )S
3931 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297.565 718 M -0.291(PCI-to-PCI B)W
-0.291(ridge Architecture Specification)W
FmE
3931 0 :M
f3_9 sf
( )S
3933 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
461.372 718 M -0.291(. Those two )W
90 727 M -0.647(formats are almost, but not entirely, consistent with respect to the fields defined above \(in particular, the max-latency )W
0.502 0.502 0 0.498 0 0 0.502 FmK
34 97 2 12 FmqF
FmE
endp
%%Page: 20 20
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 20 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
0 0 .5 :F
3933 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3933 0 :M
0 G
f0_12 sf
( )S
3936 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
3936 0 :M
f1_12 sf
( )S
3939 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
3939 0 :M
f2_12 sf
( )S
3942 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (21)S
FmE
3942 0 :M
f4_12 sf
( )S
3949 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
3949 0 :M
f3_9 sf
( )S
3951 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 52 M -0.153(and min-grant fields have a different meaning in the bridge header format\). If additional formats are defined in the )W
108 61 M -0.096(future, then it is possible that firmware written before those formats are defined will not be able to recognize them. )W
108 70 M (The question arises: Should the firmware assume that, with respect to the above fields, new formats are consistent )S
108 79 M -0.272(with the existing ones, creating the properties without regard to header type, or should the firmware do nothing if it )W
108 88 M (sees an unrecognized header type. The latter is, in some sense, safer, but it also precludes forwards compatibility, )S
108 97 M (which is a serious deficiency.)S
FmE
3951 0 :M
f2_9 sf
( )S
3953 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 109 M (Then determine whether or not the function has a expansion ROM image containing an FCode Program.)S
FmE
3954 0 :M
f3_9 sf
( )S
3956 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 121 M -0.055(Note: The location of the Expansion ROM Base Address Register differs between the two currently-defined header )W
108 130 M -0.216(types. Where will it be in future header types? Furthermore, the details of Expansion ROMs on )W
-0.216(PCI-to-PCI b)W
-0.216(ridges )W
108 139 M (are not specified by the current revision of the )S
(PCI-to-PCI b)S
(ridge spec.)S
FmE
3956 0 :M
f2_9 sf
( )S
3958 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 151 M (If the function has an FCode Program, evaluate the FCode Program as follows:)S
108 163 M -0.682(Copy the FCode program from expansion ROM into a temporary buffer in RAM and evaluate it as with )W
FmE
3958 0 :M
f5_9 sf
( )S
3963 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
471.613 163 M 0 0 45(byte-load)FmTx
FmE
3963 0 :M
f2_9 sf
( )S
3965 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
516.613 163 M -0.682(.  )W
108 172 M -0.505(\(The temporary RAM buffer may be deallocated afterwards.\)  Set the )W
FmE
3965 0 :M
f5_9 sf
( )S
3970 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
354.31 172 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
3970 0 :M
f2_9 sf
( )S
3972 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
444.31 172 M -0.505( property to the offset )W
108 181 M (of the ROM image at which the FCode was found.)S
108 193 M -0.189(When the FCode Program begins execution, )W
FmE
3973 0 :M
f5_9 sf
( )S
3978 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.572 193 M 0 0 50(my-address)FmTx
FmE
3978 0 :M
f2_9 sf
( )S
3980 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
318.572 193 M -0.189( and )W
FmE
3980 0 :M
f5_9 sf
( )S
3985 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.69 193 M 0 0 40(my-space)FmTx
FmE
3985 0 :M
f2_9 sf
( )S
3987 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
375.69 193 M -0.189( together return the Configuration Space )W
108 202 M (address of the device\'s configuration register set.)S
FmE
3987 0 :M
f3_9 sf
( )S
3989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 214 M (Note: Since the phys.mid and phys.lo components of Configuration Spaces addresses must be zero, )S
FmE
3989 0 :M
f5_9 sf
( )S
3994 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.176 214 M 0 0 30(my-ad-)FmTx
126 223 M 0 0 25(dress)FmTx
FmE
3994 0 :M
f3_9 sf
( )S
3996 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151 223 M -0.276( returns a pair of zeros; the interesting phys.hi information, which is necessary for accessing the config-)W
126 232 M (uration registers via the )S
FmE
3997 0 :M
f5_9 sf
( )S
4002 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214.983 232 M 0 0 45(config-xx)FmTx
FmE
4002 0 :M
f3_9 sf
( )S
4004 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.983 232 M ( methods, is returned by )S
FmE
4004 0 :M
f5_9 sf
( )S
4009 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
348.961 232 M 0 0 40(my-space)FmTx
FmE
4009 0 :M
f3_9 sf
( )S
4011 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
388.961 232 M (.)S
FmE
4011 0 :M
f2_9 sf
( )S
4013 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 244 M (The FCode Program is responsible for creating the )S
FmE
4013 0 :M
f5_9 sf
( )S
4018 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
292.432 244 M 0 0 30(\"name\")FmTx
FmE
4018 0 :M
f2_9 sf
( )S
4020 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.432 244 M ( and )S
FmE
4021 0 :M
f5_9 sf
( )S
4026 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
339.927 244 M 0 0 25(\"reg\")FmTx
FmE
4026 0 :M
f2_9 sf
( )S
4028 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
364.927 244 M ( properties.)S
90 256 M (If the function does not have an FCode Program:)S
108 268 M (Create the following properties from information in the device\'s Configuration Space registers:)S
FmE
4028 0 :M
f5_9 sf
( )S
4033 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 280 M 0 0 25(\"reg\")FmTx
0 0 10(  )FmTx
FmE
4033 0 :M
f2_9 sf
( )S
4035 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143 280 M (Create the following entries, in the order shown:)S
108 292 M (\245)S
14.851 N (An entry describing the Configuration Space for the device.)S
108 304 M (\245)S
14.851 N -0.562(For each active base address register, in Configuration Space order, an entry describing the entire space mapped )W
144 313 M -0.267(by that base address register \(or, register pair\).  The )W
FmE
4035 0 :M
f3_9 sf
( )S
4037 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
329.222 313 M (phys-mid)S
FmE
4037 0 :M
f2_9 sf
( )S
4039 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
362.21 313 M -0.267( and )W
FmE
4040 0 :M
f3_9 sf
( )S
4042 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
379.169 313 M (phys-lo)S
FmE
4042 0 :M
f2_9 sf
( )S
4044 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
405.66 313 M -0.267( components of these entries are )W
144 322 M -0.398(to be zero, and the size components are to be derived by probing the base address register \(or register pair\).)W
108 334 M (\245)S
14.851 N -0.147(If the device supports an Expansion ROM, an entry describing the Expansion ROM base address register, con-)W
144 343 M (structed as for normal base address registers.)S
108 355 M (\245)S
14.851 N (If applicable, \"legacy\" entries described in section )S
(7.)S
(, in the order shown.)S
FmE
4044 0 :M
f3_9 sf
( )S
4046 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 367 M (Note: Without FCode, it is not possible to determine whether or not there are multiple base address registers )S
144 376.667 M (mapping the same resource, so it is not possible to create an )S
FmE
4046 0 :M
f9_9 sf
( )S
4051 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
364.203 376.667 M 0 0 70(\"alternate-reg)FmTx
FmE
4051 0 :M
f9_10 sf
( )S
4057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
434.203 376.667 M 0 0 6(\")FmTx
FmE
4057 0 :M
f3_9 sf
( )S
4059 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
440.203 376.667 M (  property.)S
108 389 M -0.022(Note: the number of active base address registers depends in part on the header type configuration field; in partic-)W
144 398 M (ular, header types 0x01and 0x81, denoting the standard )S
(PCI-to-PCI b)S
(ridge header format, have at most )S
144 407 M -0.009(two base address registers, whereas header types 0x00 and 0x80have up to seven base address registers )W
144 416 M (\(including the Expansion ROM\'s\).)S
FmE
4060 0 :M
f5_9 sf
( )S
4065 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 428 M 0 0 30(\"name\")FmTx
FmE
4065 0 :M
f2_9 sf
( )S
4067 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
138 428 M (   )S
(Construct a name derived from the class code, as defined in [3].  If a generic name is not defined for the )S
144 437 M (the device\325s class code, construct a name of the form )S
FmE
4067 0 :M
f5_9 sf
( )S
4072 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.654 437 M 0 0 60(pciVVVV,DDDD)FmTx
FmE
4072 0 :M
f2_9 sf
( )S
4074 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
396.654 437 M (. If the Subsystem ID field in the )S
144 446 M -0.107(configuration registers for this device is non-zero, VVVV,DDDD )W
FmE
4074 0 :M
f3_9 sf
( )S
4076 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
381.537 446 M (shall)S
FmE
4076 0 :M
f2_9 sf
( )S
4078 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
399.038 446 M -0.107( be the Subsystem Vendor ID and )W
144 455 M -0.069(Subsystem ID respectively; otherwise VVVV,DDDD )W
FmE
4079 0 :M
f3_9 sf
( )S
4081 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.586 455 M (shall)S
FmE
4081 0 :M
f2_9 sf
( )S
4083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.087 455 M -0.069( be the value of the Vendor ID and Device ID )W
144 464 M (fields.  VVVV and DDDD are ASCII hexadecimal numbers, lower case, without leading zeros. )S
108 476 M -0.207(Create the )W
FmE
4083 0 :M
f5_9 sf
( )S
4088 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.563 476 M 0 0 95(\"power-consumption\")FmTx
FmE
4088 0 :M
f2_9 sf
( )S
4090 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
241.563 476 M -0.207( property from the state of the PRSNT1# and PRSNT2# connector, if possible.)W
90 488 M -0.064(Disable fixed-address response by clearing the )W
-0.064(Bus Master, Memory Space and IO Space bits in the C)W
-0.064(ommand Register.)W
90 500 M -0.095(After all slots have been so probed, exit \"probe state\")W
-0.095( and a)W
-0.095(ssign base addresses \(by allocating the address space and set-)W
90 509 M -0.477(ting the base address register\) for each distinct base address register \(or register pair\))W
-0.477(.  )W
-0.477(For each child node, create an )W
FmE
4090 0 :M
f5_9 sf
( )S
4095 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
502 509 M 0 0 20(\"as-)FmTx
90 518 M 0 0 85(signed-addresses\")FmTx
FmE
4095 0 :M
f2_9 sf
( )S
4097 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175 518 M ( property, with entries for each address base register \(or register pair\) for which an address was )S
90 527 M (assigned.)S
90 539 M (On the host bus, set the Cache Line Size register for each master bridge to the system cache line size if that line size is )S
90 548 M -0.178(supported by the bridge or zero otherwise.  On subordinate buses, set the Cache Line Size to the value of the Cache Line )W
90 557 M (Size register of the bridge for that bus if that line size is supported by the bridge or zero otherwise.)S
90 569 M (On each PCI bus within the domain, set the Latency Timer registers for each master to values appropriate for the other )S
90 578 M (devices on that bus, according to the values of the other device\'s MIN_GNT and MAX_LAT registers.)S
90 590 M -0.433(On each PCI bus within the domain, if all target devices on that bus have \"fast back-to-back\" capability, set the \"fast back-)W
90 599 M (to-back\" enable bits in the Command registers of master devices.)S
FmE
4098 0 :M
f5_10 sf
( )S
4104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 610.667 M 0 0 90(make-properties)FmTx
FmE
4104 0 :M
f2_10 sf
( )S
4106 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
314.845 610.667 M (\( -- \))S
FmE
4106 0 :M
f2_9 sf
( )S
4108 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 625 M (Create the default PCI properties \(as described above for )S
FmE
4108 0 :M
f5_9 sf
( )S
4113 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
296.642 625 M 0 0 45(probe-pci)FmTx
FmE
4113 0 :M
f2_9 sf
( )S
4115 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
341.642 625 M (\) for the )S
FmE
4116 0 :M
f3_9 sf
( )S
4118 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
372.872 625 M (current instance)S
FmE
4118 0 :M
f2_9 sf
( )S
4120 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
431.602 625 M (.)S
90 637 M (This user interface word is intended to be used for debugging FCode within the context of )S
FmE
4120 0 :M
f5_9 sf
( )S
4125 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
416.395 637 M 0 0 65(begin-package)FmTx
FmE
4125 0 :M
f2_9 sf
( )S
4127 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
481.395 637 M ( \311 )S
FmE
4127 0 :M
f5_9 sf
( )S
4132 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
494.895 637 M 0 0 20(end-)FmTx
90 646 M 0 0 35(package)FmTx
FmE
4132 0 :M
f2_9 sf
( )S
4134 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125 646 M (.  This word )S
FmE
4135 0 :M
f3_9 sf
( )S
4137 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
170.74 646 M (should)S
FmE
4137 0 :M
f2_9 sf
( )S
4139 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.741 646 M ( be )S
(executed b)S
(efore evaluating the FCode for the node.)S
FmE
4139 0 :M
f5_10 sf
( )S
4145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 657.667 M 0 0 96(assign-addresses)FmTx
FmE
4145 0 :M
f2_10 sf
( )S
4147 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
314.845 657.667 M (\( -- )S
(\))S
FmE
4148 0 :M
f2_9 sf
( )S
4150 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 672 M (A)S
(ssign addresses for the )S
FmE
4150 0 :M
f3_9 sf
( )S
4152 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
179.963 672 M (current instance)S
FmE
4152 0 :M
f2_9 sf
( )S
4154 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238.693 672 M (.)S
90 684 M (This user interface word is intended to be used for debugging Fcode within the context of )S
FmE
4154 0 :M
f5_9 sf
( )S
4159 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
414.387 684 M 0 0 65(begin-package)FmTx
FmE
4159 0 :M
f2_9 sf
( )S
4161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
479.387 684 M ( \311 )S
FmE
4162 0 :M
f5_9 sf
( )S
4167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
492.887 684 M 0 0 20(end-)FmTx
90 693 M 0 0 35(package)FmTx
FmE
4167 0 :M
f2_9 sf
( )S
4169 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125 693 M (.)S
-0.468(  Executing this word causes addresses to be assigned to this node \(based on the current )W
FmE
4169 0 :M
f5_9 sf
( )S
4174 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
436.433 693 M 0 0 25(\"reg\")FmTx
FmE
4174 0 :M
f2_9 sf
( )S
4176 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
461.433 693 M -0.468( property value\), )W
90 702 M (creating an )S
FmE
4176 0 :M
f5_9 sf
( )S
4181 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131.974 702 M 0 0 100(\"assigned-addresses\")FmTx
FmE
4181 0 :M
f2_9 sf
( )S
4183 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.974 702 M ( )S
( )S
(property )S
(reflecting t)S
(hose addresses.  This word should be executed after evalu-)S
90 711 M (ating the FCode for  the node.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
52 422 2 45 FmqF
52 503 2 27 FmqF
FmE
endp
%%Page: 21 21
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 21 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
0 0 .5 :F
4183 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4183 0 :M
0 G
f0_12 sf
( )S
4186 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
4186 0 :M
f2_12 sf
( )S
4189 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (22)S
FmE
4189 0 :M
f1_12 sf
( )S
4192 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
4192 0 :M
f4_12 sf
( )S
4199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
4199 0 :M
f0_12 sf
( )S
4202 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 54 M (6. Probing PCI-)S
(to-)S
(PCI bridges)S
FmE
4202 0 :M
f2_10 sf
( )S
4204 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 70.667 M -0.424(The recursive algorithm described in this section allows bus number and address assignment to be done in a single)W
54 82.667 M -0.314(depth-first manner.  Bus numbers are assigned on the way down the PCI bus )W
-0.314(hierarchy a)W
-0.314(nd addresses are assigned)W
54 94.667 M (to on the way back up.  Another algorithm may be used.)S
FmE
4205 0 :M
f3_10 sf
( )S
4207 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 110.667 M 0.511(Note: while this is a simple algorithm \(e.g., it does not require a \"global\" address allocation pass\), it does not)W
54 122.667 M (provide the most optimal system-wide address assignment.)S
FmE
4207 0 :M
f2_10 sf
( )S
4209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 138.667 M 0.051(If the function is a standard )W
0.051(PCI-to-PCI b)W
0.051(ridge \(as indicated by the class code and the header type fields\), set the)W
54 150.667 M 0.5(bridge\'s Primary Bus # register to the bus number of the parent bus, assign the next bus number to that bridge,)W
54 162.667 M 0.243(setting its Secondary Bus # register to that number, set the bridge\'s Subordinate Bus # register to )W
FmE
4210 0 :M
f4_10 sf
( )S
4216 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
446.482 162.667 M 0 0 24(0xFF)FmTx
FmE
4216 0 :M
f2_10 sf
( )S
4218 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
470.482 162.667 M 0.243(, and re-)W
54 174.667 M (cursively scan the slots of that bridge\'s subordinate bus.)S
54 190.667 M -0.488(When that recursive scanning process returns, set the bridge\'s Subordinate Bus # register to the largest bus number)W
54 202.667 M 0.066(assigned during the recursive scan.   At this point, bus numbers have been assigned to all subordinate buses, and)W
54 214.666 M 0.842(addresses have been assigned for all devices on the )W
0.842(subordinate b)W
0.842(uses, for this bridge within the PCI domain.)W
54 226.666 M 0.27(Then, assign addresses to all devices on the Secondary Bus and set the Memory Base, Memory Limit, I/O Base)W
54 238.666 M -0.107(and I/O Limit registers of the bridge to their appropriate values and enable Memory and I/O transactions.  Due to)W
54 250.666 M -0.165(the mapping characteristics of )W
-0.165(PCI-to-PCI b)W
-0.165(ridges, the ranges of Memory addresses for subordinate devices )W
FmE
4218 0 :M
f3_10 sf
( )S
4220 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.554 250.666 M (shall)S
FmE
4221 0 :M
f2_10 sf
( )S
4223 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 262.666 M (be aligned to 1 MB boundaries, and the ranges of I/O addresses )S
FmE
4223 0 :M
f3_10 sf
( )S
4225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
310.294 262.666 M (shall)S
FmE
4226 0 :M
f2_10 sf
( )S
4228 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
329.74 262.666 M ( be aligned to 4 KB boundaries.)S
54 278.666 M -0.251(After setting the Memory Base, Memory Limit, I/O Base and I/O Limit registers, create a )W
FmE
4228 0 :M
f5_9 sf
( )S
4233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
410.636 278.666 M 0 0 40(\"ranges\")FmTx
FmE
4233 0 :M
f2_10 sf
( )S
4235 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.636 278.666 M -0.251( property that)W
54 290.666 M (represents the Memory and I/O mappings that have been established.)S
FmE
4236 0 :M
f0_12 sf
( )S
4239 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 332 M (7. )S
(Legacy devices)S
FmE
4239 0 :M
f2_10 sf
( )S
4241 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 348.666 M 0.45(\"Legacy\" VGA and IDE devices that are implemented on PCI will typically have the same \"hard-decoded\" ad-)W
54 360.666 M -0.518(dresses as they did on ISA.  Such devices that have FCode can use explicit indication of their address requirements)W
54 372.666 M 0.566(as described above.  However, for cards that have no FCode image, Open Firmware )W
FmE
4241 0 :M
f3_10 sf
( )S
4243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
399.833 372.666 M (shall)S
FmE
4244 0 :M
f2_10 sf
( )S
4246 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.279 372.666 M 0.566( assume the standard)W
54 384.666 M -0.022(address ranges and )W
FmE
4246 0 :M
f3_10 sf
( )S
4248 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131.949 384.666 M (shall)S
FmE
4249 0 :M
f2_10 sf
( )S
4251 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.395 384.666 M -0.022( create the )W
FmE
4251 0 :M
f5_10 sf
( )S
4257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.905 384.666 M 0 0 30(\"reg\")FmTx
FmE
4257 0 :M
f2_10 sf
( )S
4259 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
224.905 384.666 M -0.022( property with these ranges, in addition to any relocatable regions that)W
54 396.666 M (have base registers.)S
54 412.666 M (For VGA devices \(class-code = )S
FmE
4260 0 :M
f4_10 sf
( )S
4266 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.633 412.666 M 0 0 48(0x000100)FmTx
FmE
4266 0 :M
f2_10 sf
( )S
4268 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
230.633 412.666 M ( or )S
FmE
4268 0 :M
f4_10 sf
( )S
4274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
243.96 412.666 M 0 0 48(0x030000)FmTx
FmE
4274 0 :M
f2_10 sf
( )S
4276 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.96 412.666 M (\), the address ranges are:)S
FmE
4277 0 :M
f4_10 sf
( )S
4283 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 424.666 M 0 0 66(0x3B0-0x3BB)FmTx
FmE
4283 0 :M
f2_10 sf
( )S
4285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 424.666 M (\(I/O, aliased; )S
FmE
4285 0 :M
f4_10 sf
( )S
4291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.692 424.666 M 0 0 6(t)FmTx
FmE
4291 0 :M
f2_10 sf
( )S
4293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.692 424.666 M (=1\))S
FmE
4294 0 :M
f4_10 sf
( )S
4300 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 435.666 M 0 0 66(0x3C0-0x3DF)FmTx
FmE
4300 0 :M
f2_10 sf
( )S
4302 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 435.666 M (\(I/O, aliased; )S
FmE
4302 0 :M
f4_10 sf
( )S
4308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.692 435.666 M 0 0 6(t)FmTx
FmE
4308 0 :M
f2_10 sf
( )S
4310 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.692 435.666 M (=1\))S
FmE
4311 0 :M
f4_10 sf
( )S
4317 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 446.666 M 0 0 90(0xA0000-0xBFFFF)FmTx
FmE
4317 0 :M
f2_10 sf
( )S
4319 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 446.666 M (\(Memory, below 1MB, )S
FmE
4319 0 :M
f4_10 sf
( )S
4325 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
293.256 446.666 M 0 0 6(t)FmTx
FmE
4325 0 :M
f2_10 sf
( )S
4327 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.256 446.666 M (=1\))S
54 461.666 M (For IDE devices \(class-code = )S
FmE
4328 0 :M
f4_10 sf
( )S
4334 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.63 461.666 M 0 0 48(0x010100)FmTx
FmE
4334 0 :M
f2_10 sf
( )S
4336 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
225.63 461.666 M (\), the address ranges are:)S
FmE
4336 0 :M
f4_10 sf
( )S
4342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 473.666 M 0 0 66(0x1F0-0x1F7)FmTx
FmE
4342 0 :M
f2_10 sf
( )S
4344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 473.666 M (Primary Command Block \(I/O\))S
FmE
4345 0 :M
f4_10 sf
( )S
4351 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 484.666 M 0 0 30(0x3F6)FmTx
FmE
4351 0 :M
f2_10 sf
( )S
4353 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 484.666 M (Primary Control Block \(I/O\))S
FmE
4353 0 :M
f4_10 sf
( )S
4359 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 495.666 M 0 0 66(0x170-0x17F)FmTx
FmE
4359 0 :M
f2_10 sf
( )S
4361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 495.666 M (Secondary Command Block \(I/O\))S
FmE
4362 0 :M
f4_10 sf
( )S
4368 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 506.666 M 0 0 30(0x376)FmTx
FmE
4368 0 :M
f2_10 sf
( )S
4370 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 506.666 M (Secondary Control Block \(I/O\))S
FmE
4370 0 :M
f0_12 sf
( )S
4373 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 547 M (8. )S
(Relationship between PCI Base Registers and Open Firmware Properties)S
FmE
4373 0 :M
f2_10 sf
( )S
4375 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 563.666 M -0.5(Especially in the case of a PCI device with onboard FCode support, there is no particular relationship between PCI)W
54 575.666 M -0.552(base registers and the )W
FmE
4376 0 :M
f5_10 sf
( )S
4382 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.079 575.666 M 0 0 30(\"reg\")FmTx
FmE
4382 0 :M
f2_10 sf
( )S
4384 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
170.079 575.666 M -0.552( and )W
FmE
4384 0 :M
f5_10 sf
( )S
4390 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.413 575.666 M 0 0 114(\"assigned-addresses)FmTx
FmE
4390 0 :M
f0_10 sf
( )S
4392 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.413 575.666 M (\")S
FmE
4393 0 :M
f2_10 sf
( )S
4395 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
307.962 575.666 M -0.552( properties.  A particular base register may or may)W
54 587.666 M -0.568(not be represented in )W
FmE
4395 0 :M
f5_10 sf
( )S
4401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.801 587.666 M 0 0 24(\"reg)FmTx
FmE
4401 0 :M
f2_10 sf
( )S
4403 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
161.801 587.666 M -0.568(\" and )W
FmE
4404 0 :M
f5_10 sf
( )S
4410 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.184 587.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4410 0 :M
f2_10 sf
( )S
4412 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
304.184 587.666 M -0.568(, and those properties may contain entries referring)W
54 599.666 M -0.005(to addresses not controlled by any base register.  No particular ordering is required in either the )W
FmE
4412 0 :M
f5_10 sf
( )S
4418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
437.633 599.666 M 0 0 30(\"reg\")FmTx
FmE
4418 0 :M
f2_10 sf
( )S
4420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
467.633 599.666 M -0.005( property)W
54 611.666 M 0.304(or the )W
FmE
4421 0 :M
f5_10 sf
( )S
4427 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
80.152 611.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4427 0 :M
f2_10 sf
( )S
4429 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.152 611.666 M 0.304( property.  A client wishing to make use of the addressing information pro-)W
54 623.666 M -0.507(vided by Open Firmware must scan the )W
FmE
4429 0 :M
f5_10 sf
( )S
4435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.118 623.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4435 0 :M
f2_10 sf
( )S
4437 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
330.118 623.666 M -0.507( property looking for an entry specifying the)W
54 635.666 M (desired base-register field in its )S
FmE
4438 0 :M
f3_10 sf
( )S
4440 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.991 635.666 M (phys.hi)S
FmE
4440 0 :M
f2_10 sf
( )S
4442 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.597 635.666 M (.)S
FmE
4443 0 :M
f0_12 sf
( )S
4446 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 676.999 M (9. )S
(R)S
(OM Image Format for FCode:)S
FmE
4446 0 :M
f0_10 sf
( )S
4448 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99 693.666 M (Offset from start)S
99 705.666 M (of ROM Image)S
106.581 N (Data)S
FmE
4448 0 :M
f4_10 sf
( )S
4454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.032 721.666 M 0 0 54(00h - 01h)FmTx
FmE
4454 0 :M
f2_10 sf
( )S
4456 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 721.666 M (ROM signature field of ROM Header \(PCI spec 6.3.1.1\))S
FmE
endp
%%Page: 22 22
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 22 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
4457 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4457 0 :M
f0_12 sf
( )S
4460 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
4460 0 :M
f1_12 sf
( )S
4463 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
4463 0 :M
f2_12 sf
( )S
4466 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (23)S
FmE
4466 0 :M
f4_12 sf
( )S
4473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
4473 0 :M
f4_10 sf
( )S
4479 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121.536 52.667 M 0 0 54(02h - 03h)FmTx
FmE
4479 0 :M
f2_10 sf
( )S
4481 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 52.667 M -0.312(Pointer to FCode program.  This is a 16-bit field that is the offset from the start of )W
198 64.667 M -0.468(the ROM image and points to the FCode Program.  The field is in little-endian for-)W
198 76.667 M (mat.  \(This field is within the \"Reserved for processor-unique data\" field of the )S
198 88.667 M (ROM Header.\))S
FmE
4482 0 :M
f4_10 sf
( )S
4488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121.536 104.667 M 0 0 54(04h - 17h)FmTx
FmE
4488 0 :M
f2_10 sf
( )S
4490 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 104.667 M (Reserved \(remainder of \"Reserved for processor-unique data\" field of the ROM )S
198 116.667 M (Header\).)S
FmE
4490 0 :M
f4_10 sf
( )S
4496 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121.536 132.667 M 0 0 54(18h - 19h)FmTx
FmE
4496 0 :M
f2_10 sf
( )S
4498 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 132.667 M (\"Pointer to PCI Data Structure\" field of ROM Header)S
(.)S
FmE
4499 0 :M
f4_10 sf
( )S
4505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121.536 148.667 M 0 0 18(1Ah)FmTx
0 0 48( - FFFFh)FmTx
FmE
4505 0 :M
f2_10 sf
( )S
4507 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 148.667 M (The PCI Data Structure \(PCI spec 6.3.1.2\), Vital Product Data, and FCode Pro-)S
198 160.667 M -0.213(gram can each begin anywhere within this range, in any order.  The \"Code Type\" )W
198 172.667 M (field of the PCI Data Structure shall have the value \")S
FmE
4507 0 :M
f4_10 sf
( )S
4513 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
408.659 172.667 M 0 0 6(1)FmTx
FmE
4513 0 :M
f2_10 sf
( )S
4515 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
414.659 172.667 M (\".)S
198 188.667 M (The FCode Program is as described in Open Firmware; its size is given by the )S
198 200.666 M (standard Open Firmware FCode Program header.  FCode bytes shall appear at )S
198 212.666 M (consecutive byte addresses.)S
FmE
4516 0 :M
f0_12 sf
( )S
4519 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 254 M (10. Encapsulated Drivers)S
FmE
4519 0 :M
f2_10 sf
( )S
4521 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 270.666 M -0.155(This section describes a mechanism which allows the encapsulation of run-time drivers within the standard Open)W
72 282.666 M (Firmware expansion ROM.)S
72 298.666 M -0.322(The FCode contained within a PCI card\'s expansion ROM provides for Open Firmware drivers for the device.  To)W
72 310.666 M 0.216(enhance the \"plug-and-play\" of cards in common system platforms, it is desirable to be able to include run-time)W
72 322.666 M (drivers within this expansion ROM, thus eliminating the extra step of installing drivers onto the OS boot device.)S
72 338.666 M -0.283(The information about run-time drivers is encoded as additional standard properties within the device tree.  These)W
72 350.666 M -0.054(properties are created by the FCode probe code of the plug-in card, and are used by the OS to locate and load the)W
72 362.666 M 0.274(appropriate driver.  Two new properties are defined;  they differ as to how the location of the run-time driver is)W
72 374.666 M (defined.)S
FmE
4521 0 :M
f4_10 sf
( )S
4527 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 388.666 M 0 0 60(\"driver,\311\")FmTx
FmE
4527 0 :M
f2_10 sf
( )S
4529 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 388.666 M ( format)S
FmE
4530 0 :M
f2_9 sf
( )S
4532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 403 M (This property, encoded as with )S
FmE
4532 0 :M
f5_9 sf
( )S
4537 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
203.46 403 M 0 0 60(encode-bytes)FmTx
FmE
4537 0 :M
f2_9 sf
( )S
4539 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.46 403 M (, contains the run-time driver.)S
FmE
4539 0 :M
f2_10 sf
( )S
4541 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 416.666 M -0.02(This format is used when the run-time driver is contained within the FCode image, itself.  The value of the prop-)W
72 428.666 M -0.589(erty )W
(is)S
89.456 429.666 FmB
6.667 0 FmL
0 0.5 FmSo
96.123 428.666 M -0.589( the encapsulated driver;  the )W
FmE
4542 0 :M
f4_10 sf
( )S
4548 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.312 428.666 M 0 0 108(prop-addr,prop-len)FmTx
FmE
4548 0 :M
f2_10 sf
( )S
4550 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
318.312 428.666 M -0.589( reported by the various \"get-property\" FCodes and/)W
72 440.666 M -0.03(or )W
FmE
4550 0 :M
f4_10 sf
( )S
4556 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82.798 440.666 M 0 0 42(getprop)FmTx
FmE
4556 0 :M
f2_10 sf
( )S
4558 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.798 440.666 M -0.03( Client interface call represent the location and size of the driver within the device tree\'s data space.)W
72 452.666 M (I.e., )S
FmE
4559 0 :M
f5_10 sf
( )S
4565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
89.766 452.666 M 0 0 72(decode-bytes)FmTx
FmE
4565 0 :M
f2_10 sf
( )S
4567 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
161.766 452.666 M ( could be used to copy the driver into the desired run-time location.)S
FmE
4567 0 :M
f4_10 sf
( )S
4573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 466.666 M 0 0 84(\"driver-reg,\311\")FmTx
FmE
4573 0 :M
f2_10 sf
( )S
4575 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156 466.666 M ( format)S
FmE
4576 0 :M
f2_9 sf
( )S
4578 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 481 M (This property, encoded as with the )S
FmE
4578 0 :M
f5_9 sf
( )S
4583 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.705 481 M 0 0 25(\"reg\")FmTx
FmE
4583 0 :M
f0_9 sf
( )S
4585 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
241.705 481 M ( )S
FmE
4585 0 :M
f2_9 sf
( )S
4587 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
243.955 481 M (standard property , contains a relative pointer to the run-time driver.)S
FmE
4587 0 :M
f2_10 sf
( )S
4589 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 494.666 M -0.521(This format is used when the driver is not directly contained within the FCode image, but rather, is located in some)W
72 506.666 M -0.323(other portion of the Expansion ROM.  The value is encoded in a )W
FmE
4590 0 :M
f5_9 sf
( )S
4595 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
327.169 506.666 M 0 0 25(\"reg\")FmTx
FmE
4595 0 :M
f2_10 sf
( )S
4597 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.169 506.666 M -0.323( format, where the address is relative to the)W
72 518.666 M 0.623(expansion ROM\'s base address.  This format conserves device tree \(and, FCode\) space, but requires the OS to)W
72 530.666 M 0.235(perform the actions of mapping in the Expansion ROM, using the information supplied by this property and the)W
FmE
4597 0 :M
f5_9 sf
( )S
4602 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 542.666 M 0 0 100(\"assigned-addresses\")FmTx
FmE
4602 0 :M
f2_10 sf
( )S
4604 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
172 542.666 M ( for the Expansion ROM, and copying the driver, itself.)S
FmE
4605 0 :M
f3_10 sf
( )S
4607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 558.666 M 1.061(Note:  the )W
FmE
4607 0 :M
f7_9 sf
( )S
4612 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.114 558.666 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
4612 0 :M
f3_10 sf
( )S
4614 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
207.114 558.666 M 1.061( property facilitates the generation of this property within the context of the)W
72 570.666 M -0.351(FCode\'s image.  The driver can be located relative to the ROM image that contains the FCode \(but, does not have)W
72 582.666 M -0.371(to be within the FCode, itself\) without regard to the location of that ROM image relative to others within the same)W
72 594.666 M 0.061(Expansion ROM.  I.e., \"self-relocating\" images containing )W
0.061(encapsulated d)W
0.061(rivers can be created that can be )W
(con-)S
72 606.666 M 0.675(catenated w)W
0.675(ith other images without altering any data within an image \(except, of course, for the Indicator to)W
72 618.666 M (properly indicate the last image\).)S
FmE
4615 0 :M
f0_12 sf
( )S
4618 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 652.999 M (10.1. Naming conventions)S
FmE
4618 0 :M
f2_10 sf
( )S
4620 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 669.666 M 0.011(The complete property name for these encapsulated drivers is chosen to allow multiple drivers to co-exist within)W
72 681.666 M -0.257(the expansion ROM.  An OS will locate its desired driver by an exact match of its property name among any such)W
FmE
4620 0 :M
f4_10 sf
( )S
4626 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 693.666 M 0 0 54(\"driver,\")FmTx
FmE
4626 0 :M
f2_10 sf
( )S
4628 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 693.666 M -0.217( \(\")W
FmE
4629 0 :M
f4_10 sf
( )S
4635 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.69 693.666 M 0 0 72(driver-reg,\")FmTx
FmE
4635 0 :M
f2_10 sf
( )S
4637 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
207.69 693.666 M -0.217(\) properties contained within the device tree for this device.  The formats of the)W
72 705.666 M (complete names are:)S
FmE
4637 0 :M
f4_10 sf
( )S
4643 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 721.666 M 0 0 48(\"driver,)FmTx
FmE
4643 0 :M
f9_10 sf
( )S
4649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
120 721.666 M 0 0 54(OS-vendor)FmTx
FmE
4649 0 :M
f4_10 sf
( )S
4655 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 721.666 M 0 0 6(,)FmTx
FmE
4655 0 :M
f9_10 sf
( )S
4661 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 721.666 M 0 0 42(OS-type)FmTx
FmE
4661 0 :M
f4_10 sf
( )S
4667 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 721.666 M 0 0 6(,)FmTx
FmE
4667 0 :M
f9_10 sf
( )S
4673 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228 721.666 M 0 0 90(Instruction-set)FmTx
FmE
4673 0 :M
f4_10 sf
( )S
4679 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
318 721.666 M 0 0 6(\")FmTx
0.502 0.502 0 0.498 0 0 0.502 FmK
52 126 2 26 FmqF
FmE
endp
%%Page: 23 23
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 23 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
0 0 .5 :F
4679 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4679 0 :M
0 G
f0_12 sf
( )S
4682 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
4682 0 :M
f2_12 sf
( )S
4685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (24)S
FmE
4685 0 :M
f1_12 sf
( )S
4688 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
4688 0 :M
f4_12 sf
( )S
4695 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
4695 0 :M
f4_10 sf
( )S
4701 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 52.667 M 0 0 72(\"driver-reg,)FmTx
FmE
4701 0 :M
f9_10 sf
( )S
4707 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 52.667 M 0 0 54(OS-vendor)FmTx
FmE
4707 0 :M
f4_10 sf
( )S
4713 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 52.667 M 0 0 6(,)FmTx
FmE
4713 0 :M
f9_10 sf
( )S
4719 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 52.667 M 0 0 42(OS-type)FmTx
FmE
4719 0 :M
f4_10 sf
( )S
4725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228 52.667 M 0 0 6(,)FmTx
FmE
4725 0 :M
f9_10 sf
( )S
4731 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 52.667 M 0 0 90(Instruction-set)FmTx
FmE
4731 0 :M
f4_10 sf
( )S
4737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
324 52.667 M 0 0 6(\")FmTx
FmE
4737 0 :M
f2_10 sf
( )S
4739 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 68.667 M -0.191(The OS-vendor component is as defined for device-names;  i.e., organizational unique identifier \(e.g., stock sym-)W
54 80.667 M (bol\).  The OS-type & Instruction-set components are defined by the OS-vendor.  An example would be:)S
FmE
4740 0 :M
f4_10 sf
( )S
4746 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 96.667 M 0 0 186(\"driver-reg,AAPL,MacOS,PowerPC\")FmTx
FmE
4746 0 :M
f0_12 sf
( )S
4749 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 138 M (11. )S
(Examples of )S
FmE
4749 0 :M
f5_12 sf
( )S
4756 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.988 138 M 0 0 35(\"reg\")FmTx
FmE
4756 0 :M
f0_12 sf
( )S
4759 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
172.988 138 M ( and )S
FmE
4759 0 :M
f5_12 sf
( )S
4766 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.33 138 M 0 0 147(\"assigned-addresses\" )FmTx
FmE
4766 0 :M
f0_12 sf
( )S
4769 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345.33 138 M (properties)S
FmE
4769 0 :M
f2_10 sf
( )S
4771 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 154.667 M -0.205(The examples in these sections demonstrate the generation and use of the )W
FmE
4771 0 :M
f5_10 sf
( )S
4777 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
346.972 154.667 M 0 0 30(\"reg\")FmTx
FmE
4777 0 :M
f2_10 sf
( )S
4779 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
376.972 154.667 M -0.205( and )W
FmE
4780 0 :M
f5_10 sf
( )S
4786 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
395.999 154.667 M 0 0 108(\"assigned-address-)FmTx
54 166.667 M 0 0 18(es\")FmTx
FmE
4786 0 :M
f2_10 sf
( )S
4788 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 166.667 M 0.419( properties for PCI devices.  The first sections demonstrate how )W
FmE
4788 0 :M
f5_10 sf
( )S
4794 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333.724 166.667 M 0 0 30(\"reg\")FmTx
FmE
4794 0 :M
f2_10 sf
( )S
4796 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
363.724 166.667 M 0.419( and )W
FmE
4797 0 :M
f5_10 sf
( )S
4803 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
384 166.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4803 0 :M
f2_10 sf
( )S
4805 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 178.667 M -0.391(properties get created while the last sections show how a Client can use the information to determine PCI address-)W
54 190.667 M (es of device resources.)S
54 206.667 M (In the following examples:)S
FmE
4805 0 :M
f4_10 sf
( )S
4811 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
81 218.667 M 0 0 6(x)FmTx
0 0 18(xxx)FmTx
FmE
4811 0 :M
f2_10 sf
( )S
4813 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 218.667 M (represents the bus, device, function numbers as appropriate)S
FmE
4814 0 :M
f4_10 sf
( )S
4820 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
81 230.667 M 0 0 6(h)FmTx
0 0 42(hhhhhhh)FmTx
FmE
4820 0 :M
f2_10 sf
( )S
4822 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 230.667 M (represents the high 32 bits of a PCI domain address)S
FmE
4822 0 :M
f4_10 sf
( )S
4828 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
81 242.666 M 0 0 6(l)FmTx
0 0 42(lllllll)FmTx
FmE
4828 0 :M
f2_10 sf
( )S
4830 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 242.666 M (represents the low 32 bits of a PCI domain address)S
FmE
4831 0 :M
f0_12 sf
( )S
4834 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 277 M (11.1. )S
(Creation of )S
FmE
4834 0 :M
f5_12 sf
( )S
4841 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
142.307 277 M 0 0 35(\"reg\")FmTx
FmE
4841 0 :M
f0_12 sf
( )S
4844 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.307 277 M ( and )S
FmE
4844 0 :M
f5_12 sf
( )S
4851 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.648 277 M 0 0 126(\"assigned-address\")FmTx
FmE
4851 0 :M
f0_12 sf
( )S
4854 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.648 277 M ( properties)S
FmE
4854 0 :M
f2_10 sf
( )S
4856 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 293.666 M 0.643(The following sections describe several scenarios of how )W
FmE
4856 0 :M
f5_10 sf
( )S
4862 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
290.154 293.666 M 0 0 30(\"reg\")FmTx
FmE
4862 0 :M
f2_10 sf
( )S
4864 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.154 293.666 M 0.643( and )W
FmE
4865 0 :M
f5_10 sf
( )S
4871 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
340.879 293.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4871 0 :M
f2_10 sf
( )S
4873 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
460.879 293.666 M 0.643( properties)W
54 305.666 M (would get created in various situations.)S
FmE
4873 0 :M
f0_12 sf
( )S
4876 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 340 M (11.1.1. )S
(A single 256-byte address base register, without FCode.)S
FmE
4876 0 :M
f2_10 sf
( )S
4878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 356.666 M (This example device has a single a single 256-byte, non-prefetchable memory range and no Expansion ROM:)S
90 372.666 M (Base address register )S
FmE
4879 0 :M
f4_10 sf
( )S
4885 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
176.897 372.666 M 0 0 24(0x10)FmTx
FmE
4885 0 :M
f2_10 sf
( )S
4887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.897 372.666 M (:)S
126 388.666 M 1.057(Discovered to be present, and requiring )W
FmE
4887 0 :M
f4_10 sf
( )S
4893 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
292.552 388.666 M 0 0 30(0x100)FmTx
FmE
4893 0 :M
f2_10 sf
( )S
4895 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.552 388.666 M 1.057( bytes of address space, by reading)W
FmE
4896 0 :M
f4_10 sf
( )S
4902 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 400.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
4902 0 :M
f2_10 sf
( )S
4904 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 400.666 M ( after writing )S
FmE
4904 0 :M
f4_10 sf
( )S
4910 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.692 400.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4910 0 :M
f2_10 sf
( )S
4912 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.692 400.666 M (.)S
90 416.666 M (Base address register 0x14:)S
126 432.666 M 6.16(Not present, as discovered by reading back )W
FmE
4913 0 :M
f4_10 sf
( )S
4919 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
343.487 432.666 M 0 0 60(0x00000000)FmTx
FmE
4919 0 :M
f2_10 sf
( )S
4921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
403.487 432.666 M 6.16( after writing)W
FmE
4921 0 :M
f4_10 sf
( )S
4927 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 444.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4927 0 :M
f2_10 sf
( )S
4929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 444.666 M (.)S
90 460.666 M (\(same for 0x18, 0x1C, 0x20, 0x24, and 0x30\))S
FmE
4930 0 :M
f5_10 sf
( )S
4936 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 476.666 M 0 0 30(\"reg\")FmTx
FmE
4936 0 :M
f2_10 sf
( )S
4938 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84 476.666 M ( property \(created during probing\))S
FmE
4938 0 :M
f4_10 sf
( )S
4944 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 488.666 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
90 500.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
90 510.666 M 0 0 264(02xxxx10 00000000 00000000 00000000 00000100)FmTx
FmE
4944 0 :M
f5_10 sf
( )S
4950 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 524.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4950 0 :M
f2_10 sf
( )S
4952 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 524.666 M ( property \(created after probing, during address assignment\))S
FmE
4953 0 :M
f4_10 sf
( )S
4959 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 538.666 M 0 0 264(82xxxx10 00000000 llllll00 00000000 00000100)FmTx
FmE
4959 0 :M
f2_10 sf
( )S
4961 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 554.666 M (with the resulting base address registers contents:)S
FmE
4961 0 :M
f4_10 sf
( )S
4967 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 570.666 M 0 0 30(0x10:)FmTx
42 N 0 0 48(llllll00)FmTx
FmE
4967 0 :M
f0_12 sf
( )S
4970 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 605 M (11.1.2. )S
(A simple VGA device, without FCode.)S
FmE
4970 0 :M
f2_10 sf
( )S
4972 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 621.666 M -0.596(This example consists of a simple VGA device, with no relocatable regions and a 4K non-FCode Expansion ROM.)W
90 637.666 M (Base address register 0x10:)S
126 653.666 M 1.48(Discovered to be not implemented by reading back a )W
FmE
4973 0 :M
f4_10 sf
( )S
4979 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.848 653.666 M 0 0 60(0x00000000)FmTx
FmE
4979 0 :M
f2_10 sf
( )S
4981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
412.848 653.666 M 1.48( after writing)W
FmE
4981 0 :M
f4_10 sf
( )S
4987 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 665.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4987 0 :M
f2_10 sf
( )S
4989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 665.666 M (.)S
90 681.666 M (\(same for 0x14, 0x18, 0x1C, 0x20, 0x24\))S
90 697.666 M (Expansion ROM base address register \(0x30\):)S
126 713.666 M -0.034(Discovered to be present, and requiring 0x1000 bytes by reading back a 0xFFFFF000)W
126 725.666 M (after writing 0xFFFFFFFF.)S
FmE
endp
%%Page: 24 24
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 24 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
4990 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4990 0 :M
f0_12 sf
( )S
4993 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
4993 0 :M
f1_12 sf
( )S
4996 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
4996 0 :M
f2_12 sf
( )S
4999 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (25)S
FmE
4999 0 :M
f4_12 sf
( )S
5006 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
5006 0 :M
f5_10 sf
( )S
5012 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 52.667 M 0 0 30(\"reg\")FmTx
FmE
5012 0 :M
f2_10 sf
( )S
5014 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
102 52.667 M ( property \(created during probing\))S
FmE
5015 0 :M
f4_10 sf
( )S
5021 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 64.667 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
108 76.667 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
108 86.667 M 0 0 264(02xxxx30 00000000 00000000 00000000 00001000)FmTx
108 96.667 M 0 0 144(81xxxx00 00000000 000003)FmTx
0 0 12(B0)FmTx
0 0 102( 00000000 0000000)FmTx
0 0 6(C)FmTx
108 106.667 M 0 0 144(81xxxx00 00000000 000003)FmTx
0 0 12(C0)FmTx
0 0 108( 00000000 00000020)FmTx
108 116.667 M 0 0 126(82xxxx00 00000000 000)FmTx
0 0 12(A0)FmTx
0 0 126(000 00000000 00020000)FmTx
FmE
5021 0 :M
f5_10 sf
( )S
5027 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 130.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5027 0 :M
f2_10 sf
( )S
5029 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 130.667 M ( property \(created after probing, during address assignment\))S
FmE
5029 0 :M
f4_10 sf
( )S
5035 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 146.667 M 0 0 264(82xxxx30 00000000 lllll000 00000000 00001000)FmTx
FmE
5035 0 :M
f2_10 sf
( )S
5037 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 162.667 M (with the resulting base address registers:)S
FmE
5038 0 :M
f4_10 sf
( )S
5044 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 178.667 M 0 0 30(0x30:)FmTx
42 N 0 0 48(lllll000)FmTx
FmE
5044 0 :M
f0_12 sf
( )S
5047 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 213 M (11.1.3. )S
(A single 256 resource, Memory and I/O accessible, without FCode)S
FmE
5047 0 :M
f2_10 sf
( )S
5049 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 229.666 M 0.404(This example consists of a device that has a single resource, requiring 256 bytes of address space, but which is)W
72 241.666 M 0.346(accessible as either I/O or Memory mapping;  i.e., it contains two address base registers, one for I/O Space and)W
72 253.666 M -0.377(one for Memory Space.  For this example, no Expansion ROM base address register is implemented;  hence, there)W
72 265.666 M (is no FCode.)S
108 281.666 M (Base address register 0x10:)S
144 297.666 M -0.624(Discovered to be a Memory base address register, requiring 256 bytes of address space,)W
144 309.666 M (by reading back a )S
FmE
5049 0 :M
f4_10 sf
( )S
5055 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
217.298 309.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
5055 0 :M
f2_10 sf
( )S
5057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
277.298 309.666 M ( after writing )S
FmE
5058 0 :M
f4_10 sf
( )S
5064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
331.991 309.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5064 0 :M
f2_10 sf
( )S
5066 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
391.991 309.666 M (.)S
108 325.666 M (Base address register 0x14:)S
144 341.666 M 0.035(Discovered to be a I/O base address register, requiring 256 bytes of address space, by)W
144 353.666 M (reading back a )S
FmE
5066 0 :M
f4_10 sf
( )S
5072 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204.798 353.666 M 0 0 60(0xFFFFFF01)FmTx
FmE
5072 0 :M
f2_10 sf
( )S
5074 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
264.798 353.666 M ( after writing )S
FmE
5075 0 :M
f4_10 sf
( )S
5081 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
319.491 353.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5081 0 :M
f2_10 sf
( )S
5083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
379.491 353.666 M (.)S
108 369.666 M (Base address registers 0x18, 0x1C 0x20, 0x24 and 0x30:)S
144 385.666 M 1.48(Discovered to be not implemented by reading back a )W
FmE
5083 0 :M
f4_10 sf
( )S
5089 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
370.848 385.666 M 0 0 60(0x00000000)FmTx
FmE
5089 0 :M
f2_10 sf
( )S
5091 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
430.848 385.666 M 1.48( after writing)W
FmE
5092 0 :M
f4_10 sf
( )S
5098 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 397.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5098 0 :M
f2_10 sf
( )S
5100 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 397.666 M (.)S
FmE
5100 0 :M
f5_10 sf
( )S
5106 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 413.666 M 0 0 30(\"reg\")FmTx
FmE
5106 0 :M
f2_10 sf
( )S
5108 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
102 413.666 M ( property \(created during probing\))S
FmE
5109 0 :M
f4_10 sf
( )S
5115 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 429.666 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
108 441.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
108 451.666 M 0 0 264(02xxxx10 00000000 00000000 00000000 00000100)FmTx
108 461.666 M 0 0 264(01xxxx14 00000000 00000000 00000000 00000100)FmTx
FmE
5115 0 :M
f5_10 sf
( )S
5121 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 485.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5121 0 :M
f2_10 sf
( )S
5123 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 485.666 M ( property \(created after probing, during address assignment\))S
FmE
5123 0 :M
f4_10 sf
( )S
5129 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 497.666 M 0 0 264(81xxxx14 00000000 llllll00 00000000 00000100)FmTx
108 507.666 M 0 0 108(82xxxx10 00000000 )FmTx
0 0 42(mmmmmm0)FmTx
0 0 114(0 00000000 00000100)FmTx
FmE
5129 0 :M
f2_10 sf
( )S
5131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 521.666 M (with the resulting base registers:)S
FmE
5132 0 :M
f4_10 sf
( )S
5138 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 533.666 M 0 0 30(0x10:)FmTx
42 N 0 0 42(mmmmmm0)FmTx
0 0 6(0)FmTx
FmE
5138 0 :M
f2_10 sf
( )S
5140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252 533.666 M (\(a memory address\))S
FmE
5140 0 :M
f4_10 sf
( )S
5146 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 543.666 M 0 0 30(0x14:)FmTx
42 N 0 0 48(llllll01)FmTx
FmE
5146 0 :M
f2_10 sf
( )S
5148 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252 543.666 M (\(an I/O address\))S
FmE
5149 0 :M
f3_10 sf
( )S
5151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 557.666 M -0.081(Note that this platform appears to allocate I/O space first, yielding an assigned-addresses property in a different)W
72 569.666 M (order from the reg property.)S
FmE
5151 0 :M
f0_12 sf
( )S
5154 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 603.999 M (11.1.4. )S
(A single 256 resource, Memory and I/O accessible, with FCode.)S
FmE
5154 0 :M
f2_10 sf
( )S
5156 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 620.666 M -0.044(The same function as in 11.4, but with 4K of FCode that reveals that the first 32 bytes of the registers are unused)W
72 632.666 M (and the second 32 bytes are used only for diagnostic purposes:)S
108 664.666 M (Base address register 0x10:)S
144 680.666 M -0.624(Discovered to be a Memory base address register, requiring 256 bytes of address space,)W
144 692.666 M (by reading back a )S
FmE
5157 0 :M
f4_10 sf
( )S
5163 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
217.298 692.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
5163 0 :M
f2_10 sf
( )S
5165 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
277.298 692.666 M ( after writing )S
FmE
5165 0 :M
f4_10 sf
( )S
5171 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
331.991 692.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5171 0 :M
f2_10 sf
( )S
5173 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
391.991 692.666 M (.)S
108 708.666 M (Base address register 0x14:)S
144 724.666 M 0.035(Discovered to be a I/O base address register, requiring 256 bytes of address space, by)W
FmE
endp
%%Page: 25 25
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 25 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
5174 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
5174 0 :M
f0_12 sf
( )S
5177 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
5177 0 :M
f2_12 sf
( )S
5180 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (26)S
FmE
5180 0 :M
f1_12 sf
( )S
5183 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
5183 0 :M
f4_12 sf
( )S
5190 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
5190 0 :M
f2_10 sf
( )S
5192 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 52.667 M (reading back a )S
FmE
5193 0 :M
f4_10 sf
( )S
5199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.798 52.667 M 0 0 60(0xFFFFFF01)FmTx
FmE
5199 0 :M
f2_10 sf
( )S
5201 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.798 52.667 M ( after writing )S
FmE
5201 0 :M
f4_10 sf
( )S
5207 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301.491 52.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5207 0 :M
f2_10 sf
( )S
5209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
361.491 52.667 M (.)S
90 68.667 M (Base address registers 0x18, 0x1C 0x20, 0x24:)S
126 84.667 M 1.48(Discovered to be not implemented by reading back a )W
FmE
5210 0 :M
f4_10 sf
( )S
5216 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.848 84.667 M 0 0 60(0x00000000)FmTx
FmE
5216 0 :M
f2_10 sf
( )S
5218 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
412.848 84.667 M 1.48( after writing)W
FmE
5218 0 :M
f4_10 sf
( )S
5224 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 96.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5224 0 :M
f2_10 sf
( )S
5226 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 96.667 M (.)S
90 112.667 M (Expansion ROM base address register \(0x30\):)S
126 128.667 M 0.557(Discovered to be present, and requiring )W
FmE
5227 0 :M
f4_10 sf
( )S
5233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
289.552 128.667 M 0 0 36(0x1000)FmTx
FmE
5233 0 :M
f2_10 sf
( )S
5235 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.552 128.667 M 0.557( bytes of address space, by reading)W
FmE
5235 0 :M
f4_10 sf
( )S
5241 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 140.667 M 0 0 60(0xFFFFF000)FmTx
FmE
5241 0 :M
f2_10 sf
( )S
5243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 140.667 M ( after writing )S
FmE
5244 0 :M
f4_10 sf
( )S
5250 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.692 140.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5250 0 :M
f2_10 sf
( )S
5252 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.692 140.667 M (.)S
54 156.667 M 0.455(The Expansion ROM is discovered to contain a valid FCode image which is evaluated.  This FCode creates its)W
54 168.667 M (own )S
FmE
5252 0 :M
f5_9 sf
( )S
5257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
73.719 168.667 M 0 0 25(\"reg\")FmTx
FmE
5257 0 :M
f2_10 sf
( )S
5259 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.719 168.667 M ( property, reflecting knowledge of the intended usage of the addressable resource.)S
FmE
5260 0 :M
f5_10 sf
( )S
5266 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 184.667 M 0 0 30(\"reg\")FmTx
FmE
5266 0 :M
f2_10 sf
( )S
5268 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84 184.667 M ( property \(created during probing by the FCode program\))S
FmE
5268 0 :M
f4_10 sf
( )S
5274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 200.667 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
90 212.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
90 222.666 M 0 0 264(02xxxx10 00000000 00000040 00000000 000000C0)FmTx
FmE
5274 0 :M
f5_10 sf
( )S
5280 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 246.666 M 0 0 90(\"alternate-reg\")FmTx
FmE
5280 0 :M
f2_10 sf
( )S
5282 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 246.666 M ( property \(created during probing by the FCode program)S
(\))S
FmE
5283 0 :M
f4_10 sf
( )S
5289 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 262.666 M 0 0 264(00000000 00000000 00000000 00000000 00000000)FmTx
90 272.666 M 0 0 252(01xxxx14 00000000 00000040 00000000 000000)FmTx
0 0 12(C0)FmTx
0 0 18( *1)FmTx
90 282.666 M 0 0 282(02xxxx10 00000000 00000020 00000000 00000020 *2)FmTx
90 292.666 M 0 0 276(01xxxx14 00000000 00000020 00000000 00000020 *)FmTx
0 0 6(3)FmTx
FmE
5289 0 :M
f5_10 sf
( )S
5295 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 308.666 M 0 0 60(    Notes:)FmTx
FmE
5295 0 :M
f4_10 sf
( )S
5301 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 324.666 M 0 0 288(    *1 Secondary access to operational registers)FmTx
90 334.666 M 0 0 270(    *2 Primary access to diagnostic registers)FmTx
90 344.666 M 0 0 282(    *3 Secondary access to diagnostic registers)FmTx
FmE
5301 0 :M
f5_10 sf
( )S
5307 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 358.666 M 0 0 6(\")FmTx
0 0 120(assigned-addresses\" )FmTx
FmE
5307 0 :M
f2_10 sf
( )S
5309 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 358.666 M (property \(created after probing, during address assignment\))S
FmE
5309 0 :M
f4_10 sf
( )S
5315 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 370.666 M 0 0 264(81xxxx14 00000000 llllll00 00000000 00000100)FmTx
90 380.666 M 0 0 108(82xxxx10 00000000 )FmTx
0 0 42(mmmmmm0)FmTx
0 0 114(0 00000000 00000100)FmTx
FmE
5315 0 :M
f2_10 sf
( )S
5317 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 404.666 M (with the resulting base registers:)S
FmE
5318 0 :M
f4_10 sf
( )S
5324 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 416.666 M 0 0 30(0x10:)FmTx
42 N 0 0 42(mmmmmm0)FmTx
0 0 6(0)FmTx
FmE
5324 0 :M
f2_10 sf
( )S
5326 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 416.666 M (\(a memory address\))S
FmE
5326 0 :M
f4_10 sf
( )S
5332 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 426.666 M 0 0 30(0x14:)FmTx
42 N 0 0 48(llllll01)FmTx
FmE
5332 0 :M
f2_10 sf
( )S
5334 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 426.666 M (\(an I/O address)S
(\))S
FmE
5335 0 :M
f0_12 sf
( )S
5338 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 459 M (11.2. )S
(Computing PCI addresses from )S
FmE
5338 0 :M
f5_12 sf
( )S
5345 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.29 459 M 0 0 35(\"reg\")FmTx
FmE
5345 0 :M
f0_12 sf
( )S
5348 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
281.29 459 M ( and )S
FmE
5348 0 :M
f5_12 sf
( )S
5355 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306.632 459 M 0 0 140(\"assigned-addresses\")FmTx
FmE
5355 0 :M
f2_10 sf
( )S
5357 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 475.666 M 0.646(The following sections show how a device driver or Client program could use the information provided in the)W
FmE
5357 0 :M
f5_10 sf
( )S
5363 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 487.666 M 0 0 30(\"reg\")FmTx
FmE
5363 0 :M
f2_10 sf
( )S
5365 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84 487.666 M ( and )S
FmE
5366 0 :M
f5_10 sf
( )S
5372 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.438 487.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5372 0 :M
f2_10 sf
( )S
5374 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
223.438 487.666 M ( properties.)S
54 503.666 M 0.214(The phrases \"PCI address space\" or \"PCI domain\" indicate an address is the PCI physical address space as used)W
54 515.666 M 0.243(on the PCI bus in question.  This PCI physical address space is not necessarily the same as the physical address)W
54 527.666 M -0.56(space in which a processor would access the PCI resource.  Especially in the case of PCI I/O space, host PCI bridg-)W
54 539.666 M 0.405(es \(i.e., PCI bridges that are attached to the processor bus\) may perform an address translation function.  In the)W
54 551.666 M -0.393(following examples, another sequence of steps is, in general, necessary to determine the appropriate processor ad-)W
54 563.666 M (dress to use.  The information necessary for these steps is contained in the )S
FmE
5374 0 :M
f5_10 sf
( )S
5380 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.494 563.666 M 0 0 48(\"ranges\")FmTx
FmE
5380 0 :M
f2_10 sf
( )S
5382 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.494 563.666 M ( properties of bus nodes.)S
FmE
5383 0 :M
f0_12 sf
( )S
5386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 597.999 M (11.2.1. )S
(Determining the address of a register of example in Section )S
(11.1.4.)S
FmE
5386 0 :M
f2_10 sf
( )S
5388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 614.666 M 0.436(Problem: Given the last device described in Section )W
(11.1.4.)S
0.436(, determine the physical address associated with the)W
54 626.666 M (3rd byte of its operational registers.)S
54 642.666 M 0.36(1.  Extract the second )W
FmE
5388 0 :M
f3_10 sf
( )S
5390 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.653 642.666 M (phys-addr,size)S
FmE
5391 0 :M
f2_10 sf
( )S
5393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.692 642.666 M 0.36( pair from the )W
FmE
5393 0 :M
f5_10 sf
( )S
5399 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
261.327 642.666 M 0 0 30(\"reg\")FmTx
FmE
5399 0 :M
f2_10 sf
( )S
5401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.327 642.666 M 0.36( property.  \(We know to use the second pair because)W
54 654.666 M -0.186(the first pair is the Configuration Space entry and the device documentation tells us that the second pair is the op-)W
54 666.666 M (erational registers.\))S
54 682.666 M (2.  Note that the \325)S
FmE
5402 0 :M
f4_10 sf
( )S
5408 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123.976 682.666 M 0 0 6(n)FmTx
FmE
5408 0 :M
f2_10 sf
( )S
5410 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.976 682.666 M (\325 bit is zero, indicating a relocatable region.  Note that the )S
FmE
5410 0 :M
f4_10 sf
( )S
5416 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
363.208 682.666 M 0 0 48(rrrrrrrr)FmTx
FmE
5416 0 :M
f2_10 sf
( )S
5418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
411.208 682.666 M ( field is )S
FmE
5419 0 :M
f4_10 sf
( )S
5425 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
443.698 682.666 M 0 0 24(0x10)FmTx
FmE
5425 0 :M
f2_10 sf
( )S
5427 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
467.698 682.666 M (.)S
54 698.666 M 0.203(3.  Search the )W
FmE
5427 0 :M
f5_10 sf
( )S
5433 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.73 698.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5433 0 :M
f2_10 sf
( )S
5435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.73 698.666 M 0.203(  property for an entry with an )W
FmE
5436 0 :M
f4_10 sf
( )S
5442 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.078 698.666 M 0 0 48(rrrrrrrr)FmTx
FmE
5442 0 :M
f2_10 sf
( )S
5444 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
404.078 698.666 M 0.203( field of )W
FmE
5444 0 :M
f4_10 sf
( )S
5450 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
438.837 698.666 M 0 0 24(0x10)FmTx
FmE
5450 0 :M
f2_10 sf
( )S
5452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.837 698.666 M 0.203(.  Find the)W
54 710.666 M (second entry.)S
54 726.666 M 0.092(4.  Add the )W
FmE
5453 0 :M
f3_10 sf
( )S
5455 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.306 726.666 M (phys_mid,phys_lo)S
FmE
5455 0 :M
f2_10 sf
( )S
5457 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.237 726.666 M 0.092( value from the )W
FmE
5458 0 :M
f5_10 sf
( )S
5464 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.912 726.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5464 0 :M
f2_10 sf
( )S
5466 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.912 726.666 M 0.092( entry to the )W
FmE
5466 0 :M
f3_10 sf
( )S
5468 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
407.821 726.666 M (phys_mid,phys_lo)S
FmE
5469 0 :M
f2_10 sf
( )S
5471 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
479.752 726.666 M 0.092( value)W
FmE
endp
%%Page: 26 26
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 26 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
5471 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
5471 0 :M
f0_12 sf
( )S
5474 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 27 M (Revision 1.75)S
197.024 N (PCI Bus Binding to Open Firmware)S
FmE
5474 0 :M
f1_12 sf
( )S
5477 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 757 M (Unapproved Draft)S
FmE
5477 0 :M
f2_12 sf
( )S
5480 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (27)S
FmE
5480 0 :M
f4_12 sf
( )S
5487 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
27 55 M 0 0 14( 1)FmTx
27 67 M 0 0 14( 2)FmTx
27 79 M 0 0 14( 3)FmTx
27 91 M 0 0 14( 4)FmTx
27 103 M 0 0 14( 5)FmTx
27 115 M 0 0 14( 6)FmTx
27 127 M 0 0 14( 7)FmTx
27 139 M 0 0 14( 8)FmTx
27 151 M 0 0 14( 9)FmTx
27 163 M 0 0 14(10)FmTx
27 175 M 0 0 14(11)FmTx
27 187 M 0 0 14(12)FmTx
27 199 M 0 0 14(13)FmTx
27 211 M 0 0 14(14)FmTx
27 223 M 0 0 14(15)FmTx
27 235 M 0 0 14(16)FmTx
27 247 M 0 0 14(17)FmTx
27 259 M 0 0 14(18)FmTx
27 271 M 0 0 14(19)FmTx
27 283 M 0 0 14(20)FmTx
27 295 M 0 0 14(21)FmTx
27 307 M 0 0 14(22)FmTx
27 319 M 0 0 14(23)FmTx
27 331 M 0 0 14(24)FmTx
27 343 M 0 0 14(25)FmTx
27 355 M 0 0 14(26)FmTx
27 367 M 0 0 14(27)FmTx
27 379 M 0 0 14(28)FmTx
27 391 M 0 0 14(29)FmTx
27 403 M 0 0 14(30)FmTx
27 415 M 0 0 14(31)FmTx
27 427 M 0 0 14(32)FmTx
27 439 M 0 0 14(33)FmTx
27 451 M 0 0 14(34)FmTx
27 463 M 0 0 14(35)FmTx
27 475 M 0 0 14(36)FmTx
27 487 M 0 0 14(37)FmTx
27 499 M 0 0 14(38)FmTx
27 511 M 0 0 14(39)FmTx
27 523 M 0 0 14(40)FmTx
27 535 M 0 0 14(41)FmTx
27 547 M 0 0 14(42)FmTx
27 559 M 0 0 14(43)FmTx
27 571 M 0 0 14(44)FmTx
27 583 M 0 0 14(45)FmTx
27 595 M 0 0 14(46)FmTx
27 607 M 0 0 14(47)FmTx
27 619 M 0 0 14(48)FmTx
27 631 M 0 0 14(49)FmTx
27 643 M 0 0 14(50)FmTx
27 655 M 0 0 14(51)FmTx
27 667 M 0 0 14(52)FmTx
27 679 M 0 0 14(53)FmTx
27 691 M 0 0 14(54)FmTx
27 703 M 0 0 14(55)FmTx
27 715 M 0 0 14(56)FmTx
27 727 M 0 0 14(57)FmTx
FmE
5487 0 :M
f2_10 sf
( )S
5489 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 52.667 M 0.511(\(0x40\) from the )W
FmE
5490 0 :M
f5_10 sf
( )S
5496 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
139.339 52.667 M 0 0 30(\"reg\")FmTx
FmE
5496 0 :M
f2_10 sf
( )S
5498 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.339 52.667 M 0.511( entry.  This yields the physical base \(in PCI address space\) of the device\'s operational)W
72 64.667 M (registers.)S
72 80.667 M -0.045(5.  Add this value to the desired register offset, 3.  This yields the \(PCI domain\325s\) physical address of the desired)W
72 92.667 M (register.)S
FmE
5498 0 :M
f0_12 sf
( )S
5501 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 127 M (11.2.2. )S
(Determining the address of a register of example in Section )S
(11.1.2.)S
FmE
5501 0 :M
f2_10 sf
( )S
5503 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 143.667 M -0.119(Problem: Given the VGA device described above \(in Section )W
(11.1.2.)S
-0.119(\), determine the PCI address associated with)W
72 155.667 M (the sequencer index register \(I/O address )S
FmE
5504 0 :M
f4_10 sf
( )S
5510 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238.018 155.667 M 0 0 30(0x3C4)FmTx
FmE
5510 0 :M
f2_10 sf
( )S
5512 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.018 155.667 M ( in the documentation\).)S
72 171.667 M (\(Of course, we could \"just know\" that the answer is )S
FmE
5512 0 :M
f4_10 sf
( )S
5518 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
280.359 171.667 M 0 0 30(0x3C4)FmTx
FmE
5518 0 :M
f2_10 sf
( )S
5520 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
310.359 171.667 M (, but let\'s do it according to the book.\))S
72 187.667 M -0.177(1.  Extract the fourth )W
FmE
5521 0 :M
f3_10 sf
( )S
5523 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156.636 187.667 M (phys-addr,size)S
FmE
5523 0 :M
f2_10 sf
( )S
5525 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214.676 187.667 M -0.177(  pair from the )W
FmE
5526 0 :M
f5_10 sf
( )S
5532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.487 187.667 M 0 0 30(\"reg\")FmTx
FmE
5532 0 :M
f2_10 sf
( )S
5534 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303.487 187.667 M -0.177( property.  \(We know to use the fourth pair because the)W
72 199.667 M -0.478(first pair is the Configuration Space entry, the second pair is the ROM, the third pair is the monochrome I/O range,)W
72 211.667 M (the fourth pair is the color I/O range, and the fifth pair is the video memory.\))S
72 227.667 M (2.  Note that the \325)S
FmE
5534 0 :M
f4_10 sf
( )S
5540 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.976 227.667 M 0 0 6(n)FmTx
FmE
5540 0 :M
f2_10 sf
( )S
5542 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.976 227.667 M (\325 bit is one, indicating a non-relocatable region.)S
72 243.666 M -0.327(3.  Add the )W
FmE
5543 0 :M
f3_10 sf
( )S
5545 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.629 243.666 M (phys_mid,phys_lo)S
FmE
5545 0 :M
f2_10 sf
( )S
5547 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
189.56 243.666 M -0.327( values from this )W
FmE
5548 0 :M
f5_10 sf
( )S
5554 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
257.677 243.666 M 0 0 30(\"reg\")FmTx
FmE
5554 0 :M
f2_10 sf
( )S
5556 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.677 243.666 M -0.327( entry to the desired register offset, 4.  This yields the phys-)W
72 255.666 M (ical address \(in the PCI domain\) of the sequencer index register.)S
FmE
5556 0 :M
f0_12 sf
( )S
5559 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 297 M (12. )S
(Use of the )S
FmE
5559 0 :M
f5_10 sf
( )S
5565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.64 297 M 0 0 48(\"ranges\")FmTx
FmE
5565 0 :M
f0_12 sf
( )S
5568 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
191.64 297 M ( property)S
FmE
5568 0 :M
f2_10 sf
( )S
5570 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 313.666 M 0.373(The )W
FmE
5571 0 :M
f5_10 sf
( )S
5577 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90.42 313.666 M 0 0 48(\"ranges\")FmTx
FmE
5577 0 :M
f2_10 sf
( )S
5579 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
138.42 313.666 M 0.373( property of Open Firmware represents how address transformation is done across bus bridges.)W
72 325.666 M 0.224(The )W
FmE
5579 0 :M
f5_10 sf
( )S
5585 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90.271 325.666 M 0 0 48(\"ranges\")FmTx
FmE
5585 0 :M
f2_10 sf
( )S
5587 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
138.271 325.666 M 0.224( property conveys this information for PCI, but the use of the property is not as straightforward)W
72 337.666 M (as on some other busses.)S
72 353.666 M 0.366(In particular, the )W
FmE
5588 0 :M
f3_10 sf
( )S
5590 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.95 353.666 M (phys.hi)S
FmE
5590 0 :M
f2_10 sf
( )S
5592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
170.555 353.666 M 0.366( fields of the child address spaces in the )W
FmE
5593 0 :M
f5_10 sf
( )S
5599 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.177 353.666 M 0 0 48(\"ranges\")FmTx
FmE
5599 0 :M
f2_10 sf
( )S
5601 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.177 353.666 M 0.366( property for PCI does not contain)W
72 365.666 M 1.347(the same information as )W
FmE
5601 0 :M
f5_10 sf
( )S
5607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.684 365.666 M 0 0 30(\"reg\")FmTx
FmE
5607 0 :M
f2_10 sf
( )S
5609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
205.684 365.666 M 1.347( property entries within PCI nodes.  The only information that is present in)W
FmE
5610 0 :M
f5_10 sf
( )S
5616 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 377.666 M 0 0 48(\"ranges\")FmTx
FmE
5616 0 :M
f2_10 sf
( )S
5618 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
120 377.666 M -0.246( )W
FmE
5618 0 :M
f3_10 sf
( )S
5620 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
122.254 377.666 M (phys.hi)S
FmE
5621 0 :M
f2_10 sf
( )S
5623 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.86 377.666 M -0.246(  entries are the non-relocatable, prefetchable and the PCI address space bits for which the en-)W
72 389.666 M -0.523(try applies.  I.e., only the )W
FmE
5623 0 :M
f4_10 sf
( )S
5629 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.053 389.666 M 0 0 6(n)FmTx
FmE
5629 0 :M
f5_9 sf
( )S
5634 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.053 389.666 M -1.046 0 10(, )FmTx
FmE
5634 0 :M
f4_10 sf
( )S
5640 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.007 389.666 M 0 0 6(p)FmTx
FmE
5640 0 :M
f2_10 sf
( )S
5642 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.007 389.666 M -0.523( and )W
FmE
5643 0 :M
f4_10 sf
( )S
5649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.4 389.666 M 0 0 12(ss)FmTx
FmE
5649 0 :M
f2_10 sf
( )S
5651 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222.4 389.666 M -0.523( bits are present; the )W
FmE
5651 0 :M
f4_10 sf
( )S
5657 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.804 389.666 M 0 0 48(bbbbbbbb)FmTx
FmE
5657 0 :M
f2_10 sf
( )S
5659 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.804 389.666 M -0.523(, )W
FmE
5660 0 :M
f4_10 sf
( )S
5666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
355.281 389.666 M 0 0 30(ddddd)FmTx
FmE
5666 0 :M
f2_10 sf
( )S
5668 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.281 389.666 M -0.523(, )W
FmE
5668 0 :M
f4_10 sf
( )S
5674 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.758 389.666 M 0 0 18(fff)FmTx
FmE
5674 0 :M
f2_10 sf
( )S
5676 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
407.758 389.666 M -0.523( and )W
FmE
5677 0 :M
f4_10 sf
( )S
5683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
426.151 389.666 M 0 0 48(rrrrrrrr)FmTx
FmE
5683 0 :M
f2_10 sf
( )S
5685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
474.151 389.666 M -0.523( fields are 0.)W
72 405.666 M 0.205(When an address is to be mapped through a PCI bus bridge node, the )W
FmE
5685 0 :M
f3_10 sf
( )S
5687 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.402 405.666 M (phys.hi)S
FmE
5688 0 :M
f2_10 sf
( )S
5690 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
382.008 405.666 M 0.205( value of the address to be mapped)W
72 417.666 M 0.107(and the child field of a )W
FmE
5690 0 :M
f5_10 sf
( )S
5696 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.381 417.666 M 0 0 48(\"ranges\")FmTx
FmE
5696 0 :M
f2_10 sf
( )S
5698 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.381 417.666 M 0.107( entry should be masked so that only the )W
FmE
5699 0 :M
f4_10 sf
( )S
5705 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
377.918 417.666 M 0 0 12(ss)FmTx
FmE
5705 0 :M
f2_10 sf
( )S
5707 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.918 417.666 M 0.107( bits are compared.  I.e., the only)W
72 429.666 M (portion of )S
FmE
5707 0 :M
f3_10 sf
( )S
5709 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114.212 429.666 M (phys.hi)S
FmE
5710 0 :M
f2_10 sf
( )S
5712 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
142.818 429.666 M ( that should participate in the range determination is the address space indicator \(the )S
FmE
5712 0 :M
f4_10 sf
( )S
5718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
481.565 429.666 M 0 0 12(ss)FmTx
FmE
5718 0 :M
f2_10 sf
( )S
5720 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
493.565 429.666 M ( bits\).)S
FmE
5721 0 :M
f0_12 sf
( )S
5724 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 471 M (13. )S
(Example of use of add-ranges check)S
FmE
5724 0 :M
f4_9 sf
( )S
5729 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 483 M 0 0 325(   \\ Flag is true if the parent\'s map-in method doesn\'t work with)FmTx
72 492 M 0 0 135(   \\ relocatable addresses.)FmTx
72 501 M 0 0 15(   )FmTx
72 510 M 0 0 160(   : map-in-broken?  \( -- flag \))FmTx
72 519 M 0 0 335(      \\ Look for the method that is present when the bug is present)FmTx
72 528 M 0 0 340(      \" add-range\"  my-parent  ihandle>phandle   \( adr len phandle \))FmTx
72 537 M 0 0 410(      find-method  dup  if  nip  then            \( flag \)  \\ Discard xt if present)FmTx
72 546 M 0 0 20(   ;)FmTx
72 555 M 0 0 15(   )FmTx
72 564 M 0 0 15(   )FmTx
72 573 M 0 0 400(   \\ Return phys.lo and phys.mid of the address assigned to the PCI base address)FmTx
72 582 M 0 0 180(   \\ register indicated by phys.hi .)FmTx
72 591 M 0 0 15(   )FmTx
72 600 M 0 0 310(   : get-base-address  \( phys.hi -- phys.lo phys.mid phys.hi \))FmTx
72 609 M 0 0 15(   )FmTx
72 618 M 0 0 305(      \" assigned-addresses\" get-my-property  if   \( phys.hi \))FmTx
72 627 M 0 0 210(         .\" No address property found!\" cr)FmTx
72 636 M 0 0 310(         0 0 rot  exit                            \\ Error exit)FmTx
72 645 M 0 0 255(      then                      \( phys.hi adr len \))FmTx
72 654 M 0 0 15(   )FmTx
72 663 M 0 0 295(      rot >r                    \( adr len \)  \( r: phys.hi \))FmTx
72 672 M 0 0 225(      \\ Found assigned-addresses, get address)FmTx
72 681 M 0 0 325(      begin  dup  while         \( adr len\' \)  \\ Loop over entries)FmTx
72 690 M 0 0 345(         decode-phys            \( adr len\' phys.lo phys.mid phys.hi \))FmTx
72 699 M 0 0 415(         h# ff and  r@ h# ff and  =  if  \( adr len\' phys.lo phys.mid \)  \\ This one?)FmTx
72 708 M 0 0 395(            2swap 2drop         \( phys.lo phys.mid \)          \\ This is the one)FmTx
72 717 M 0 0 300(            r> exit             \( phys.lo phys.mid phys.hi \))FmTx
72 726 M 0 0 380(         else                   \( adr len\' phys.lo phys.mid \) \\ Not this one)FmTx
FmE
endp
%%Page: 27 27
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 27 of 27)setjob
%%EndPageSetup
gS 0 0 576 776 rC
5729 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
5729 0 :M
f0_12 sf
( )S
5732 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 27 M (PCI Bus Binding to Open Firmware)S
197.024 N (Revision 1.75)S
FmE
5732 0 :M
f2_12 sf
( )S
5735 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 757 M (28)S
FmE
5735 0 :M
f1_12 sf
( )S
5738 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.689 757 M (Unapproved Draft)S
FmE
5738 0 :M
f4_12 sf
( )S
5745 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
9 55 M 0 0 14( 1)FmTx
9 67 M 0 0 14( 2)FmTx
9 79 M 0 0 14( 3)FmTx
9 91 M 0 0 14( 4)FmTx
9 103 M 0 0 14( 5)FmTx
9 115 M 0 0 14( 6)FmTx
9 127 M 0 0 14( 7)FmTx
9 139 M 0 0 14( 8)FmTx
9 151 M 0 0 14( 9)FmTx
9 163 M 0 0 14(10)FmTx
9 175 M 0 0 14(11)FmTx
9 187 M 0 0 14(12)FmTx
9 199 M 0 0 14(13)FmTx
9 211 M 0 0 14(14)FmTx
9 223 M 0 0 14(15)FmTx
9 235 M 0 0 14(16)FmTx
9 247 M 0 0 14(17)FmTx
9 259 M 0 0 14(18)FmTx
9 271 M 0 0 14(19)FmTx
9 283 M 0 0 14(20)FmTx
9 295 M 0 0 14(21)FmTx
9 307 M 0 0 14(22)FmTx
9 319 M 0 0 14(23)FmTx
9 331 M 0 0 14(24)FmTx
9 343 M 0 0 14(25)FmTx
9 355 M 0 0 14(26)FmTx
9 367 M 0 0 14(27)FmTx
9 379 M 0 0 14(28)FmTx
9 391 M 0 0 14(29)FmTx
9 403 M 0 0 14(30)FmTx
9 415 M 0 0 14(31)FmTx
9 427 M 0 0 14(32)FmTx
9 439 M 0 0 14(33)FmTx
9 451 M 0 0 14(34)FmTx
9 463 M 0 0 14(35)FmTx
9 475 M 0 0 14(36)FmTx
9 487 M 0 0 14(37)FmTx
9 499 M 0 0 14(38)FmTx
9 511 M 0 0 14(39)FmTx
9 523 M 0 0 14(40)FmTx
9 535 M 0 0 14(41)FmTx
9 547 M 0 0 14(42)FmTx
9 559 M 0 0 14(43)FmTx
9 571 M 0 0 14(44)FmTx
9 583 M 0 0 14(45)FmTx
9 595 M 0 0 14(46)FmTx
9 607 M 0 0 14(47)FmTx
9 619 M 0 0 14(48)FmTx
9 631 M 0 0 14(49)FmTx
9 643 M 0 0 14(50)FmTx
9 655 M 0 0 14(51)FmTx
9 667 M 0 0 14(52)FmTx
9 679 M 0 0 14(53)FmTx
9 691 M 0 0 14(54)FmTx
9 703 M 0 0 14(55)FmTx
9 715 M 0 0 14(56)FmTx
9 727 M 0 0 14(57)FmTx
FmE
5745 0 :M
f4_9 sf
( )S
5750 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
54 52 M 0 0 220(            2drop               \( adr len\' \))FmTx
54 61 M 0 0 220(         then                   \( adr len\' \))FmTx
54 70 M 0 0 355(         decode-int drop decode-int drop        \\ Discard boring fields)FmTx
54 79 M 0 0 60(      repeat)FmTx
54 88 M 0 0 175(      2drop                     \( \))FmTx
54 97 M 0 0 15(   )FmTx
54 106 M 0 0 195(      .\" Base address not assigned!\" cr)FmTx
54 115 M 0 0 15(   )FmTx
54 124 M 0 0 235(      0 0 r>                    \( 0 0 phys.hi \))FmTx
54 133 M 0 0 20(   ;)FmTx
54 142 M 0 0 15(   )FmTx
54 151 M 0 0 15(   )FmTx
54 160 M 0 0 390(   \\ Example code to compute the phys.lo..hi arguments for \"map-in\", using the)FmTx
54 169 M 0 0 370(   \\ above functions so that the code works both on systems that implement)FmTx
54 178 M 0 0 380(   \\ map-in according to the PCI binding document, and also on systems whose)FmTx
54 187 M 0 0 385(   \\ PCI map-in method requires phys.lo,phys.mid to contain the assigned base)FmTx
54 196 M 0 0 65(   \\ address.)FmTx
54 205 M 0 0 15(   )FmTx
54 214 M 0 0 355(      \\ Compute entire phys.lo..hi address for base address register 10)FmTx
54 223 M 0 0 120(      map-in-broken?  if)FmTx
54 232 M 0 0 380(         my-space h# 8200.0010 +  get-base-address        \( phys.lo,mid,hi \))FmTx
54 241 M 0 0 50(      else)FmTx
54 250 M 0 0 380(         0 0  my-space h# 200.0010 +                      \( phys.lo,mid,hi \))FmTx
54 259 M 0 0 380(      then                                                \( phys.lo,mid,hi \))FmTx
54 268 M 0 0 15(   )FmTx
54 277 M 0 0 15(   )FmTx
54 286 M 0 0 380(   \\ An FCode driver that need not work on systems with the map-in bug could)FmTx
54 295 M 0 0 365(   \\ use the following code, omitting the definitions of \"map-in-broken?\")FmTx
54 304 M 0 0 140(   \\ and \"get-base-address\".)FmTx
54 313 M 0 0 20(   \\)FmTx
54 322 M 0 0 375(   \\    0 0  my-space h# 200.0010 +                      \( phys.lo,mid,hi \))FmTx
FmE
endp
%%Trailer
end
%%EOF
