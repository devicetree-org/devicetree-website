%!PS-Adobe-3.0
%%Title: (PCI Binding 1Book)
%%Creator: (FrameMaker5 \244: LaserWriter 8 8.3.3)
%%CreationDate: (15:51 Monday, April 22, 1996)
%%For: (Ron Hochsprung)
%%Pages: 28
%%DocumentFonts: Times-Bold Times-BoldItalic Times-Roman Times-Italic Courier Courier-Bold Courier-BoldOblique Courier-Oblique
%%DocumentNeededFonts: Times-Bold Times-BoldItalic Times-Roman Times-Italic Courier Courier-Bold Courier-BoldOblique Courier-Oblique
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%ADO_ImageableArea: 12 14 600 782
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(PCI Binding 1Book)def
/Creator(FrameMaker5 \244: LaserWriter 8 8.3.3)def
/CreationDate(15:51 Monday, April 22, 1996)def
/For(Ron Hochsprung)def
/Pages 28 def
end def end
% Changes by dmk from Jordan to fix Newsprint printing problem
% Comment out the following block
%/filterLineCapBugCTM where {pop false} {true} ifelse
%version cvi 2014 eq revision 1.1 lt and and
%{ userdict begin
% /sysdictSc systemdict /scale get def
% /sysdictSa systemdict /setstrokeadjust get def
% /sysdictLc systemdict /setlinecap get def
% /sysdictIm systemdict /initmatrix get def
% /sysdictCc systemdict /concat get def
% /sysdictSm systemdict /setmatrix get def
% /filterLineCapBugCTM matrix def
% /filterLCBCTM {
%	currentstrokeadjust currentlinecap 2 eq and
%	{
%		filterLineCapBugCTM currentmatrix
%		dup dup 0 get abs exch 3 get abs ne
%		exch dup 1 get abs exch 2 get abs ne or
%		{1 sysdictLc} if
%	} if
% } bind def
% /scale {sysdictSc filterLCBCTM} bind def
% /setlinecap {sysdictLc filterLCBCTM} bind def
% /setstrokeadjust {sysdictSa filterLCBCTM} bind def
% /initmatrix {sysdictIm filterLCBCTM} bind def
% /concat {sysdictCc filterLCBCTM} bind def
% /setmatrix {sysdictSm filterLCBCTM} bind def
%end 
%/sysdictSc /sysdictSa /sysdictLc
%/sysdictIm /sysdictCc /sysdictSm
%6 {userdict exch undef} repeat
%} if 
/md 209 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 83 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/:rg{/DeviceRGB :ss}bd
/:sc{$cs :ss}bd
/:dc{/$cs xdf}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
/$cs Z
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
$cs
}bd
/popstatic
{
/$cs xs
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div setgray 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *PageSize Letter

    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
%%EndFeature
}featurecleanup
(Ron Hochsprung)setjob
/mT[1 0 0 -1 12 782]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Bold
%%IncludeFont: Times-BoldItalic
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Italic
%%IncludeFont: Courier
%%IncludeFont: Courier-Bold
%%IncludeFont: Courier-BoldOblique
%%IncludeFont: Courier-Oblique
/f0_1/Times-Bold
:mre
/f0_24 f0_1 24 scf
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f0_9 f0_1 9 scf
/f1_1/Times-BoldItalic
:mre
/f1_24 f1_1 24 scf
/f1_12 f1_1 12 scf
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f2_1/Times-Roman
:mre
/f2_12 f2_1 12 scf
/f2_10 f2_1 10 scf
/f2_9 f2_1 9 scf
/f2_8 f2_1 8 scf
/f3_1/Times-Italic
:mre
/f3_10 f3_1 10 scf
/f3_9 f3_1 9 scf
/f4_1/Courier
:mre
/f4_12 f4_1 12 scf
/f4_10 f4_1 10 scf
/f4_9 f4_1 9 scf
/f5_1/Courier-Bold
:mre
/f5_12 f5_1 12 scf
/f5_10 f5_1 10 scf
/f5_9 f5_1 9 scf
/f6_1/Courier-BoldOblique
:mre
/f7_1 f6_1
def
/f7_10 f7_1 10 scf
/f7_9 f7_1 9 scf
/f8_1/Courier-Oblique
:mre
/f9_1 f8_1
def
/f9_10 f9_1 10 scf
/f9_9 f9_1 9 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
% Frame PostScript Prolog for use with Macintosh Frame Products 5.0.1
% Copyright (c) 1986-95 Frame Technology Corp.  All rights reserved.
%%BeginProcSet: "FrameMacDict" 501 1
userdict/FrameMacDict 250 dict put FrameMacDict begin systemdict/setpacking
known{/fMSP currentpacking def true setpacking}if[/fM1/fM18/fM2/fM3/fM4/fMAB
/fM5/fM6/fM8/fM9/fMBC/fMBM/fMC/fMCD/fMCG/fMCK/fMCM/fMCl/fMCO/fMef/fMet/fMeh
/fMew/fMey/fMex/fMei/fMej/fMek/fMel/fMFl/fMGC/fMGL/fMGM/fMIx/fMJB/fMJC/fMJG
/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMN/fMNC/fMNg/fMND/fMOx/fMPC/fMPH/fMPt/fMRC
/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMdm/fM2x/fMa2/fMi/fMk/fms/fmBS/fMdp/freq/sangle
/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/fM1B/fM0B/fMdc/fMds]{0 def}
forall/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCl fML1{
/statusdict where{pop statusdict/processcolors known{statusdict/processcolors
get exec 1 gt}{F}ifelse}{F}ifelse}{T}ifelse def/fMXN/statusdict where{pop
statusdict/product known{statusdict/product get}{(Unknown)}ifelse}{(Unknown)}
ifelse def/fMHq fMXN(LaserWriter-Sim)eq def/FmBD{bind def}bind def/fmBx{[exch{
dup/FrameMacDict eq{pop FrameMacDict}{dup type dup/arraytype eq exch
/packedarraytype eq or{dup xcheck{fmBi}if}if}ifelse}forall]cvx}FmBD/fmBi{bind
fmBx}FmBD fML1{userdict/FrMacBegin{FrameMacDict begin}fmBi put/FmE{end}FmBD}{
/fMdc 6 array def userdict/FrMacBegin{FrameMacDict begin/fMds currentcolorspace
store mark 0 0 0 0 0 currentcolor fMdc astore pop cleartomark}fmBi put/FmE{fMds
setcolorspace mark fMdc aload pop setcolor cleartomark end}FmBD}ifelse/fMEd 35
dict def/fmPE{fMEd 3 1 roll fmBi put}bind def/T true def/F false def userdict
/FrameSuccessfull F put userdict/FrameEndPictSave F put userdict
/FrameEndPictStopped F put userdict/fM7 known not{userdict/fM7 0 put}if/fmXD{
exch def}FmBD/FmG/gsave load def/FmR/grestore load def/fm_l/grestoreall load
def/fm_v/save load def/fm_g/setgray load def/fm_r/setrgbcolor load def/fm_h
/sethsbcolor load def/fm_f/fill load def/fm_e/eofill load def/fm_t/stroke load
def/fm_m/imagemask load def/fm_i/image load def/fm_s/show load def/fm_a/ashow
load def/fm_w/widthshow load def/fm_y/awidthshow load def/RealKshow/kshow load
def/fMdm matrix defaultmatrix def/fM2x matrix def/fMa2 matrix def/fmSM{fM2x
currentmatrix pop}FmBD/fmRM{fM2x setmatrix}FmBD/FmRF{currentpoint 2 copy
translate 4 2 roll{-1 1 scale}if rotate neg exch neg exch translate}FmBD/fmax{2
copy lt{exch}if pop}FmBD/fmin{2 copy gt{exch}if pop}FmBD systemdict/pdfmark
known{/fMAB true def/FmPD/pdfmark load def/FmPT/fm_s load def
currentdistillerparams/CoreDistVersion get 2000 ge{/FmPD2/pdfmark load def/FmPA
{mark exch/Dest exch 5 3 roll/View[/XYZ null 6 -2 roll FmDC exch pop null]/DEST
FmPD}FmBD}{/FmPD2/cleartomark load def/FmPA{pop pop pop}FmBD}ifelse}{/fMAB
false def/FmPD/cleartomark load def/FmPD2/cleartomark load def/FmPT/pop load
def/FmPA{pop pop pop}FmBD}ifelse/FmDC{transform fMdm itransform cvi exch cvi
exch}FmBD/FmBx{dup 3 index lt{3 1 roll exch}if 1 index 4 index lt{4 -1 roll 3 1
roll exch 4 1 roll}if}FmBD/fmgS 32 array def/fMgt 0 def/fMtp 0 def/fmSG{fmgS
fMgt get dup null eq{pop fmgS fMgt 10 dict dup 4 1 roll put}if 3 1 roll put}
FmBD/fmGG{fMgt -1 -1{fmgS exch get dup null ne{2 copy exch known{2 copy exch
get/_notdef ne{exch get dup exit}if}if}if pop}for pop}FmBD/gsave{FrameMacDict
begin FmG/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{dup dup{pop
/_notdef put dup}forall pop pop}ifelse end}fmPE/grestore{FrameMacDict begin
fMgt fMtp gt{/fMgt fMgt 1 sub def}if FmR null fmCN end}fmPE/grestoreall{
FrameMacDict begin/fMgt fMtp def fm_l null fmCN end}fmPE/save{FrameMacDict/fm_v
get exec FrameMacDict begin/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{
dup dup{pop/_notdef put dup}forall pop pop}ifelse/fMtp fMgt def end}fmPE/fMND F
def/fMCC null fmSG/fMOP F fmSG/fMKO F fmSG/fmRY{1 exch sub 3 1 roll 1 exch sub
3 1 roll 1 exch sub 3 1 roll 3 copy 2 copy le{pop}{exch pop}ifelse 2 copy le{
pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1 roll 7 1 roll sub 6 1 roll sub 5
1 roll sub 4 1 roll}fmSG/fmkn{2 copy known{get T}{pop pop false}ifelse}FmBD
/fmfp{exch currentfont dup/FontMatrix get exch/FontInfo fmkn{T}{currentfont/df
fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix get mtx concatmatrix exch T}{pop pop
pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1 roll fmkn{exch 0 3 1 roll dtransform
neg exch pop exch pop}{pop exec}ifelse}{exec}ifelse}FmBD/fmdl{3 index 16 and 0
ne{FmG currentlinewidth 2. div dup rmoveto currentpoint newpath moveto 2 index
0 rlineto fm_t FmR}if 3 index 24 and 0 ne{FmG currentrgbcolor dup 4 1 roll eq 3
1 roll eq and{1 currentgray sub setgray}{1 setgray}ifelse 2 index 0 rlineto
fm_t FmR FmG 2 index 0 rlineto strokepath .24 setlinewidth fm_t FmR}{2 index 0
rlineto fm_t 0 0 moveto}ifelse}FmBD/FmUl{FmG/fM2 fmXD currentpoint
/UnderlineThickness{fM2 15 div}fmfp abs dup setlinewidth/fM1 fmXD 4 index 1 and
0 ne{newpath 2 copy moveto 0/UnderlinePosition{fM2 10 div neg}fmfp neg rmoveto
fmdl}if 4 index 2 and 0 ne{newpath 2 copy moveto 0/XHeight{FmG newpath 0 0
moveto(x)F charpath flattenpath pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop
fM2 2. mul 3. div neg}if}fmfp 2. div rmoveto fmdl}if 4 index 4 and 0 ne{newpath
2 copy moveto 0/CapHeight{FmG newpath 0 0 moveto(H)F charpath flattenpath
pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop fM2 3. mul 4. div neg}if}fmfp
fM1 sub rmoveto fmdl}if pop pop pop pop pop FmR}FmBD/FmTx{/fM3 fmXD/fM2 fmXD
/fM1 fmXD 0 32 fM1 fM3 stringwidth pop fM2 sub fM3 length div sub 0 fM3 fm_y}
FmBD/fMN 0 def/fMC 1 def/fMM 2 def/fMY 3 def/fMK 4 def/fMS 5 def/fMNg 0
currenttransfer exec .5 gt def/fMCM fMN def/fMJK 0 def/fMJY 0 def/fMJM 0 def
/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1 def/fMCG 1 def/fMPt null def/fMCK[0 0
0 1 0 0 0]def/fmCH{fML1{14 dict dup begin fMCl{/HalftoneType 2 def
currentcolorscreen[/GraySpotFunction/GrayAngle/GrayFrequency/BlueSpotFunction
/BlueAngle/BlueFrequency/GreenSpotFunction/GreenAngle/GreenFrequency
/RedSpotFunction/RedAngle/RedFrequency]{exch def}forall}{/HalftoneType 1 def
currentscreen[/SpotFunction/Angle/Frequency]{exch def}forall}ifelse statusdict
/checkscreen known{statusdict/accuratescreens get exec}{F}ifelse
/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{fML1{begin
statusdict/checkscreen known{currentdict/AccurateScreens known{AccurateScreens}
{F}ifelse statusdict/setaccuratescreens get exec}if HalftoneType 1 eq{Frequency
Angle currentdict/SpotFunction get setscreen}{HalftoneType 2 eq{fMCl{
RedFrequency RedAngle currentdict/RedSpotFunction get GreenFrequency GreenAngle
currentdict/GreenSpotFunction get BlueFrequency BlueAngle currentdict
/BlueSpotFunction get GrayFrequency GrayAngle currentdict/GraySpotFunction get
setcolorscreen}{GrayFrequency GrayAngle currentdict/GraySpotFunction get
setscreen}ifelse}if}ifelse end}{sethalftone}ifelse}FmBD/FmCS{14 dict begin
/HalftoneType 2 def/AccurateScreens exch def/GraySpotFunction exch def
/GrayAngle exch def/GrayFrequency exch def/BlueSpotFunction exch def/BlueAngle
exch def/BlueFrequency exch def/GreenSpotFunction exch def/GreenAngle exch def
/GreenFrequency exch def/RedSpotFunction exch def/RedAngle exch def
/RedFrequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/FmSS{5 dict
begin/HalftoneType 1 def/AccurateScreens exch def/SpotFunction exch def/Angle
exch def/Frequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/fMPH
fmCH def/fmcp{/FmPr2 exch cvlit def/FmPr1 exch cvlit def/FmPrn FmPr1 length
FmPr2 length add array def FmPrn 0 FmPr1 putinterval FmPrn FmPr1 length FmPr2
putinterval FmPrn cvx}FmBD/fmEp{sub dup 0 lt{neg}if .001 le}FmBD/fmQC{2 copy 0
get exch 0 get fmEp{2 copy 1 get exch 1 get fmEp{2 copy 2 get exch 2 get fmEp{3
get exch 3 get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD
/fmQR{2 copy 4 get exch 0 get fmEp{2 copy 5 get exch 1 get fmEp{6 get exch 2
get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/FmSC{/fMCM fmXD/fMJB fmXD
/fMJG fmXD/fMJR fmXD/fMJK fmXD/fMJY fmXD/fMJM fmXD/fMJC fmXD fmCC}FmBD/FmSP{
/fMCM fmXD fmCC}FmBD/FrameSetSepColors{FrameMacDict begin[exch 1 add 1 roll]
/fMSC exch def end}fmBi def/fmLC{fMSC{exch dup 3 -1 roll fmQC{pop T exit}if}
forall dup T ne{pop F}if}FmBD/fmLR{fMSC{exch dup 3 -1 roll fmQR{pop T exit}if}
forall dup T ne{pop F}if}FmBD/fmLM{fMSC{exch dup 3 -1 roll dup 7 get 3 -1 roll
eq{exch pop T exit}{pop}ifelse}forall dup T ne{pop F}if}FmBD/fmCN{fMND F fMCM
fMN ne{/fMOP fmGG{/fMKO fmGG{pop T}if}if}if dup/fMND exch def{pop pop}{exch dup
null ne{exch pop dup type dup/integertype eq exch/realtype eq or{fm_g}{setcolor
}ifelse}{pop{1 fm_g}if}ifelse}ifelse}FmBD/fill{FrameMacDict begin fMND{newpath}
{fm_f}ifelse end}fmPE/eofill{FrameMacDict begin fMND{newpath}{fm_e}ifelse end}
fmPE/stroke{FrameMacDict begin fMND{newpath}{fm_t}ifelse end}fmPE/imagemask{
FrameMacDict begin fMND{FmG nulldevive fm_m FmR}{fm_m}ifelse end}fmPE/fmNX{load
fMND{FmG fMa2 currentmatrix end nulldevice setmatrix exec currentpoint
FrameMacDict/FmR get exec moveto}{end exec}ifelse}fmBi def/show{FrameMacDict
begin/fm_s fmNX}fmPE/ashow{FrameMacDict begin/fm_a fmNX}fmPE/widthshow{
FrameMacDict begin/fm_w fmNX}fmPE/awidthshow{FrameMacDict begin/fm_y fmNX}fmPE
/kshow{FrameMacDict begin/RealKshow fmNX}fmPE/image{FrameMacDict begin fMCM fMN
ne fMCM fMK ne and{FmG/fMOP fmGG{nulldevice}{fMNg{{pop 0}}{{pop 1}}ifelse
settransfer}ifelse/fm_i load end exec FmR}{/fm_i load end exec}ifelse}fmPE/fMGM
T def/fMBM F def/findcmykcustomcolor{0 0 0 4 -1 roll 8 array astore}fmPE
/findrgbcustomcolor{FrameMacDict begin 4 1 roll 3 copy/fmRY fmGG exec 8 4 roll
4 -1 roll 8 array astore end}fmPE/findgraycustomcolor{0 0 0 exch 1 exch sub
exch findcmykcustomcolor}fmPE/findhsbcustomcolor{FrameMacDict begin 4 1 roll
gsave fm_h currentrgbcolor grestore 4 -1 roll findrgbcustomcolor end}fmPE
/setcustomcolor{FrameMacDict begin dup type dup/integertype eq exch/realtype eq
or not{1.0}if exch dup/fMCC exch fmSG/fMBM F def fMCM fMN eq{0 4 getinterval
aload pop 4{4 index mul 4 1 roll}repeat fmSK pop}{dup{7 get}stopped{pop 4 get}
if fmLM{exch pop 0 4 getinterval aload pop fMCM fMS eq{fMJK eq exch fMJY eq and
exch fMJM eq and exch fMJC eq and{1 exch sub F}{pop 1 T}ifelse}{5{pop}repeat 1
T}ifelse}{fMCM fMK eq{3 get F}{fMCM fMY eq{2 get F}{fMCM fMM eq{1 get F}{fMCM
fMC eq{0 get F}{pop 0 T}ifelse}ifelse}ifelse}ifelse 3 1 roll mul 1 exch sub
exch}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/setoverprint{FrameMacDict begin
/fMOP exch fmSG null fmCN end}fmPE/currentoverprint{FrameMacDict begin/fMOP
fmGG end}fmPE/fmCC{fMCM fMN eq{fMGM fML1 or not{[/Pattern[/DeviceCMYK]]
setcolorspace fMCK 0 4 getinterval aload pop fMPt setcolor}{fMCK 3 get 1.0 ge{
fMCG fm_g}{fMAB not fMCl fMGM and and{0 1 3{fMCK exch get 1 fMCG sub mul}for
fmSK}{4 1 6{fMCK exch get fMGM{1 exch sub 1 fMCG sub mul 1 exch sub}{1.0 lt{
fMCG}{1}ifelse}ifelse}for fm_r}ifelse}ifelse}ifelse null/fMKO F fmSG}{fMBM{fMCG
F}{fMCK 0 4 getinterval aload fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch
fMJM eq and exch fMJC eq and{fMCG F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{
fMCM fMK eq{fMCG 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY
eq{pop fMCG 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop
pop fMCG 1.0 exch sub mul 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop fMCG
1.0 exch sub mul 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse}ifelse/fMKO exch fmSG fMGM fML1 or not{[/Pattern[/DeviceGray]]
setcolorspace fMPt}{fMGM not fML1 and{dup 1 lt{pop fMCG}if}if}ifelse}ifelse
fmCN}FmBD/setgray{FrameMacDict begin fMCM fMN eq{F}{fMCM fMK eq{F}{fMCM fMS eq
fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{F}{pop 1 T}ifelse}ifelse}ifelse/fMKO
exch fmSG fmCN end}fmPE/setrgbcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{
fm_r}{3 copy[4 1 roll]fmLR{fMCM fMS eq{fMJB eq exch fMJG eq and exch fMJR eq
and{0 F}{1 T}ifelse}{pop pop pop 1 T}ifelse}{/fmRY fmGG exec fMCM fMK eq{1.0
exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop
F}{fMCM fMM eq{pop pop 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop 1.0
exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch
fmSG fmCN}ifelse end}fmPE/sethsbcolor{FrameMacDict begin fMCM fMN eq{fm_h}{fm_h
currentrgbcolor setrgbcolor}ifelse end}fmPE/setcmykcolor where{pop/fmSK
/setcmykcolor load def}{/fmSK{4 1 roll 3{3 index add 0 fmax 1 fmin 1 exch sub 3
1 roll}repeat fm_r pop}FmBD}ifelse/currentcmykcolor where{pop}{
/currentcmykcolor{FrameMacDict begin currentrgbcolor/fmRY fmGG exec end}fmPE}
ifelse/setcmykcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{fmSK}{4 copy[5 1
roll]fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and exch fMJC eq
and{0 F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{fMCM fMK eq{1.0 exch sub 4 1
roll pop pop pop dup 1.0 ge}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop dup
1.0 ge}{fMCM fMM eq{pop pop 1.0 exch sub exch pop dup 1.0 ge}{fMCM fMC eq{pop
pop pop 1.0 exch sub dup 1.0 ge}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/fMFl[0 .1 .3 .5 .7 .9 .97 1<
0f1e3c78f0e1c387><0f87c3e1f0783c1e><cccccccccccccccc><ffff0000ffff0000><814224
1818244281><0102040810204080><8040201008040201>]def fML1{/patScreenDict 7 dict
dup begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c1e>[
135{pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff0000
ffff0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}dup
.75 2 sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<8040201008
040201>[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/fMPP 5 dict dup begin<0f87
c3e1f0783c1e>{3 setlinewidth -1 -1 moveto 9 9 lineto fm_t 4 -4 moveto 12 4
lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0f1e3c78f0e1c387>{3 setlinewidth
-1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12 moveto 12 4
lineto fm_t}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t
-1 -1 moveto 9 9 lineto fm_t}FmBD<8040201008040201>{1 setlinewidth -1 -1 moveto
9 9 lineto fm_t 4 -4 moveto 12 4 lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<
0102040810204080>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4
lineto fm_t 4 12 moveto 12 4 lineto fm_t}FmBD end def/fMPD 15 dict dup begin
/PatternType 1 def/PaintType 2 def/TilingType 3 def/BBox[0 0 8 8]def/XStep 8
def/YStep 8 def/PaintProc{begin fMPP fmBS known{fMPP fmBS get exec}{8 8 T[1 0 0
-1 0 8]fmBS fm_m}ifelse end}FmBD end def}ifelse/fMdp 72 0 fMdm dtransform dup
mul exch dup mul add sqrt def/freq fMdp dup 72 div round dup 0 eq{pop 1}if 8
mul div def/sangle 1 0 fMdm dtransform exch atan def sangle fMa2 rotate fMdm
fMa2 concatmatrix dup 0 get/sflipx exch def 3 get/sflipy exch def fML1{/fmgF{
fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPM fML1{{dup patScreenDict exch
known{patScreenDict exch get aload pop freq mul 5 2 roll fMa2 currentmatrix 1
get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgF sflipy 2 fmgF mul}{sflipx 0
fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{pop}ifelse fMNg{{neg}fmcp}if
bind systemdict/setscreen get exec}{/fmBS fmXD/fM1B 0 def/fM0B 0 def freq 0
fMa2 currentmatrix 1 get 0 ne{90 add/pflipx sflipx 1 fmgF def/pflipy sflipy 2
fmgF def}{/pflipx sflipx 0 fmgF def/pflipy sflipy 3 fmgF neg def}ifelse{pflipy
mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1 add 2 div 8 mul cvi def/yindex yy 1
add 2 div 8 mul cvi def fmBS yindex xindex 8 idiv add get 1 7 xindex 8 mod sub
bitshift and 0 ne fMNg{not}if{/fM1B fM1B 1 add def 1}{/fM0B fM0B 1 add def 0}
ifelse}setscreen fM0B fM0B fM1B add div fMNg{1.0 exch sub}if}ifelse/fMCG exch
def/fMGM F def fmCC}}{/fMPC 8 dict def{dup fMPC exch known{fMPC exch get}{dup
fMPD/fmBS 3 -1 roll put fMPD matrix makepattern dup fMPC 4 -1 roll 3 -1 roll
put}ifelse/fMCG 0 def/fMPt exch def/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{
/fMGM T def fML1{fMPH fmSH}if}if/fMCG exch def fmCC}FmBD/FmP{fMFl exch get dup
type/stringtype eq{fmPM}{fmgr}ifelse}FmBD/FmK{fMCK astore pop/fMBM F def fmCC}
FmBD/FmFB{0 0 0 1 0 0 0 fMCK astore pop/fMCG 0 def/fMBM T def fmCC}FmBD/fMOx
matrix def fMOx currentmatrix pop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD
/FmIO{fmRM}FmBD/FmEO{FmOs restore}FmBD/fm3R[{.3 mul add 1}bind{.59 mul add 2}
bind{.11 mul add round cvi fMs exch fMi exch put/fMi fMi 1 add def 0 0}bind]def
/fm31{/fMi 0 def 0 exch 0 exch{exch fm3R exch get exec}forall pop pop fMs}FmBD
/fm41{0 exch 4 exch{exch 1 sub dup 0 eq{pop 4 1 roll 3 index add 255 fmin 255
exch sub .11 mul 3 1 roll 3 index add 255 fmin 255 exch sub .59 mul 3 1 roll 3
index add 255 fmin 255 exch sub .3 mul add add 255 fmin round cvi fMs exch 3
index exch put pop 1 add 4}if}forall pop pop fMs}FmBD fML1{/Fmi{save userdict
/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD
/fMRC fmXD/fMGC fMGL 1 add array def/setcolortransfer where{pop
currentcolortransfer/gryt fmXD/blut fmXD/grnt fmXD/redt fmXD 0 1 fMGL{/fMIx
fmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNC fMIx get sub def/fMUY 1 fMBC fMIx
get sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU fMk currentundercolorremoval
exec def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt exec put fMNC fMIx 1 0 fMUM
FmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY FmU sub fmax sub blut exec
put fMGC fMIx 1 fMk currentblackgeneration exec sub gryt exec put}for{fMGL mul
cvi fMRC exch get}{fMGL mul cvi fMNC exch get}{fMGL mul cvi fMBC exch get}{fMGL
mul cvi fMGC exch get}setcolortransfer{pop 0}setundercolorremoval{}
setblackgeneration/fM9 T def}{0 1 fMGL{fMGC exch dup dup fMRC exch get .3 mul
exch dup fMNC exch get .59 mul exch fMBC exch get .11 mul add add put}for{fMGL
mul cvi fMGC exch get}currenttransfer fmcp settransfer}ifelse}{dup length 1 sub
/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}currenttransfer fmcp
settransfer}ifelse}{{{1 exch sub}currenttransfer fmcp settransfer}if}ifelse/fM5
fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if
/fM18 fM8 string def fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]{currentfile
fM18 fM5{readstring}{readhexstring}ifelse pop}fM9{{fM18}{fM18}T 3 colorimage}{
fm_i}ifelse fM7 restore}FmBD}{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{
dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD[/Indexed/DeviceRGB
fMGL{dup fMRC exch get exch dup fMNC exch get exch fMBC exch get}]setcolorspace
}{dup length 1 sub/fMGL fmXD/fMGC fmXD[/Indexed/DeviceGray fMGL{fMGC exch get}]
setcolorspace}ifelse}{1 4 index bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGray
fMGL 5 -1 roll{{fMGL div 1 exch sub}}{{fMGL div}}ifelse]setcolorspace}ifelse
/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale
}if/fM18 fM8 string def 7 dict begin/ImageType 1 def/Width fM4 def/Height fM3
def/ImageMatrix[fM4 0 0 fM3 fM4 2 div fM3 2 div]def/DataSource{currentfile fM18
fM5{readstring}{readhexstring}ifelse pop}def/BitsPerComponent fM6 def/Decode[0
fMGL]def currentdict end fm_i fM7 restore}FmBD}ifelse/Fmci{save userdict/fM7 3
-1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD/fM18 fM8 string def
/fMs fM18 0 fM18 length 3 idiv getinterval def translate rotate scale{-1 1
scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{currentfile fM18 fM5
{readstring}{readhexstring}ifelse pop}F 3 colorimage}{{currentfile fM18 fM5{
readstring}{readhexstring}ifelse pop fm31}fm_i}ifelse fM7 restore}FmBD/Fmc4{
save userdict/fM7 3 -1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD
/fM18 fM8 string def/fMs fM18 0 fM18 length 4 idiv getinterval def translate
rotate scale{-1 1 scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop}F 4 colorimage}{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop fm41}fm_i}ifelse fM7
restore}FmBD fML1{/fmAn{transform round .5 sub exch round .5 sub exch
itransform}FmBD/fmAc{transform round 1.5 sub exch round 1.5 sub exch itransform
}FmBD/fmDn{dtransform round exch round exch idtransform}FmBD/fmLn{0 dtransform
exch cvi 2 idiv 2 mul .1 add exch idtransform pop}FmBD/FmCv{fmDn 6 2 roll fmDn
6 2 roll fmDn 6 2 roll rcurveto}FmBD}{T setstrokeadjust/fmAn{}FmBD/fmAc{}FmBD
/fmDn{}FmBD/fmLn{}FmBD/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn moveto}FmBD/M{moveto}
FmBD/N{0 rmoveto}FmBD/S{fm_s}FmBD/A{0 exch fm_a}FmBD/W{0 exch 32 exch fm_w}FmBD
/X{0 exch 0 32 5 2 roll fm_y}FmBD/fmQP{fML1 fMGM or not{FmG dup 1 fm_g exec FmR
}if exec}FmBD/FmB{newpath fmAn moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}
FmBD/FmSo{fmLn setlinewidth setlinecap{fm_t}fmQP 0 0 moveto}FmBD/FmS{fmLn
setlinewidth closepath{fm_t}fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth
setlinecap{closepath}if setdash{fm_t}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{FmG{
fm_e}fmQP FmR}FmBD/fmq{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{fm_t}fmQP
0 0 moveto}FmBD/FmqF{fmq FmG{fm_f}fmQP FmR}FmBD/FmKp{{currentpoint}stopped{F 5
1 roll}{T 7 3 roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{
currentpoint}stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{FmG
newpath fmAn translate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3
roll arc closepath{fm_f}fmQP FmR}FmBD/FmAP{FmG{setdash}if fmLn setlinewidth
setlinecap fmSM newpath 2 index 2 div add exch 3 index 2 div sub exch fmAn 2
index 2 div sub exch 3 index 2 div add exch translate rotate scale 0.0 0.0 1.0
5 3 roll exch arcn{closepath}if fmRM{fm_t}fmQP FmR}FmBD/FmST{FmG fmAn translate
.3 fmLn setlinewidth 0 setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc
fm_f 0 fm_g 0 0 10 0 360 arc fm_t 36{1 0 moveto 0 0 10 -2.5 2.5 arc fm_f 10
rotate}repeat FmR}FmBD/FmSL{FmG fmAn translate .25 fmLn setlinewidth 0
setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0 fm_g 10 .5 fmLn
neg .1{0 0 3 -1 roll 0 360 arc fm_t}for FmR}FmBD/FrameEr where{pop}{userdict
/FrameEr(\000)put}ifelse/fMSJ 100 string def/fmXC{userdict/FrameEndPictSave 2
index put FmE{countdictstack userdict begin/showpage{}def/FrameDictStackDepth
exch def count/FrameStackDepth exch def}if userdict/FrameSuccessfull false put
FrameMacDict/fMHq get/$brkpage where dup{exch pop}if or{userdict
/FrameEndPictStopped false put}{userdict/FrameEndPictStopped true put
currentfile cvx stopped pop FrameSuccessfull not{systemdict/clear get exec
userdict/FrameEr get 0 1 put FrameMacDict begin FmG systemdict/initmatrix get
exec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}if
exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefont
setfont FrameEr1 fm_s( \()fm_s $error begin errorname 20 string cvs fm_s(, )
fm_s/command load 128 string cvs fm_s end(\))fm_s FrameEr2 print flush
FrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}if
not{exit}if(EndFrame5Picture)eq{exit}if}loop grestore end}if userdict
/FrameSuccessfull false put userdict/FrameEndPictStopped false put FrameMacDict
/fmIR get exec}ifelse}fmBi def/FmEP{save userdict/fM7 3 -1 roll put fMEd{
userdict 3 1 roll put}forall setoverprint{fMN FmSP}if[/fMef/fMet/fMeh/fMew/fMey
/fMex/fMei/fMej/fMek/fMel]{fmXD}forall fMex fMey translate fMet rotate fMew
fMeh scale fMef{-1 1 scale}if 1 fMej fMel sub div 1 fMek fMei sub div scale
fMej fMel add 2 div neg fMei fMek add 2 div neg translate 0 setgray 0
setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit[]0 setdash newpath
fML1 not{F setstrokeadjust}if T fmXC}FmBD/FmPI{newpath 0 0 moveto F fmXC}FmBD
/FmPc{save userdict/fM7 3 -1 roll put newpath 3 index neg 3 index neg translate
1 -1 scale 0.0 0.0 moveto T fmXC}FmBD/fmIR{FrameEndPictSave{fM7 type/savetype
eq{end/FrameDictStackDepth where{pop countdictstack FrameDictStackDepth sub dup
0 gt{{end}repeat}{pop}ifelse count FrameStackDepth sub dup 0 gt{{pop}repeat}{
pop}ifelse}if fM7 restore}if}if FrMacBegin}FmBD userdict/EndFrame5Picture{
userdict/FrameEndPictSave 3 -1 roll put userdict/FrameEndPictStopped get{
userdict/FrameSuccessfull true put stop}{FrameMacDict/fmIR get exec}ifelse}fmBi
put/alphaimage where{pop}{/alphaimage{1 ne{limitcheck}if not{limitcheck}if pop
image}fmPE}ifelse/fmDE{systemdict/initgraphics get exec clippath{pathbbox}
stopped{100 100 512 692}if exch pop add 2. div newpath moveto
(Courier-BoldOblique)findfont 18 scalefont setfont currentpoint 2 copy FrameEr3
fm_s 20 sub 2 copy moveto FrameEr4 fm_s 20 sub 2 copy moveto(\()fm_s statusdict
/jobname get fm_s(\))fm_s 20 sub moveto FrameEr5 fm_s showpage}FmBD/cd where{
dup/cd get/fmRC fmXD/cd{FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if/fmRC load
end exec}fmBi put}{/endp where{dup/endp get/fMRE fmXD/endp{FrameMacDict/fMRE
get exec FrameEr 0 get 0 ne{FrameMacDict begin currentfile fMSJ{readline}
stopped{pop exch pop true}if pop(%%Trailer)eq{fmDE}if end}if}fmBi put}if}ifelse
systemdict/setpacking known{fMSP setpacking}if end
%%EndProcSet
%%FRMSetup
FrameMacDict begin
/FrameEr1(PostScript error)def
/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def
/FrameEr3(FrameMaker has detected one or more)def
/FrameEr4(PostScript errors in this document.)def
/FrameEr5(Please check your output.)def
end
%%FRMEndSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 1 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
0 0 :M
f0_24 sf
( )S
6 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
199.327 60 M (PCI Bus Binding to:)S
198.993 147 M (IEEE Std 1275-1994)S
209.681 176 M (Standard for Boot)S
153.366 205 M (\(Initialization Configuration\))S
251.701 234 M (Firmware)S
241.005 350 M (Revision 1.7)S
FmE
6 0 :M
f1_24 sf
( )S
12 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
199.342 408 M (Unapproved )S
(DRAF)S
(T)S
0.502 0.502 0 0.498 0 0 0.502 FmK
58 334 2 82 FmqF
FmE
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 2 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
12 0 :M
FrMacBegin
0 FmP
0 FmSP
0.502 0.502 0 0.498 0 0 0.502 FmK
40 44 2 10 FmqF
FmE
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 3 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
12 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
12 0 :M
0 G
f0_12 sf
( )S
15 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
15 0 :M
f1_12 sf
( )S
18 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
18 0 :M
f2_12 sf
( )S
21 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (iii)S
FmE
21 0 :M
f4_12 sf
( )S
28 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
28 0 :M
f0_10 sf
( )S
30 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
170.655 50.667 M (Foreword by the Chairman of the IEEE 1275 Working Group)S
FmE
31 0 :M
f2_10 sf
( )S
33 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204.851 62.667 M (\(This foreword is not a part of the Specification.\))S
FmE
33 0 :M
f0_10 sf
( )S
35 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 92.667 M (Introduction)S
FmE
36 0 :M
f2_10 sf
( )S
38 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 108.667 M 0.228(Firmware is the ROM-based software that controls a computer between the time it is turned on and the time the)W
78 120.667 M -0.341(primary operating system takes control of the machine. Firmware\'s responsibilities include testing and initializing)W
78 132.667 M 0.184(the hardware, determining the hardware configuration, loading \(or booting\) the operating system, and providing)W
78 144.667 M (interactive debugging facilities in case of faulty hardware or software.)S
FmE
38 0 :M
f0_10 sf
( )S
40 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 174.667 M (Historical Perspective)S
FmE
41 0 :M
f2_10 sf
( )S
43 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 190.667 M -0.281(Historically, firmware designs have been proprietary and often specific to a particular bus or instruction set archi-)W
78 202.667 M -0.429(tecture \(ISA\). This need not be the case. Firmware can be designed to be machine-independent and easily portable)W
78 214.667 M 0.112(to different hardware. There is a strong analogy with operating systems in this respect. Prior to the advent of the)W
78 226.666 M -0.139(portable UNIX operating system in the mid-seventies, the prevailing wisdom was that operating systems must be)W
78 238.666 M -0.349(heavily tuned to a particular computer system design and thus effectively proprietary to the vendor of that system.)W
78 256.666 M -0.37(The )W
FmE
43 0 :M
f3_10 sf
( )S
45 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.677 256.666 M -0.37(IEEE Std 1275-1994 Standard for Boot \(Initialization Configuration\), Core Requirements and Practices)W
FmE
46 0 :M
f2_10 sf
( )S
48 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
509.318 256.666 M -0.37(  \(re-)W
78 268.666 M -0.471(ferred to in the remainder of this document as Open Firmware\) specification is based on Sun Microsystem\'s Open-)W
78 280.666 M 0.738(Boot firmware. The OpenBoot design effort began in 1988, when Sun was building computers based on three)W
78 292.666 M -0.206(different processor families, thus OpenBoot was designed from the outset to be ISA-independent \(independent of)W
78 304.666 M 0.296(the Instruction Set Architecture\). The first version of OpenBoot was introduced on Sun\'s SPARCstation 1 com-)W
78 316.666 M 0.27(puters. Based on experience with those machines, OpenBoot version 2 was developed, and was first shipped on)W
78 328.666 M (SPARCstation 2 computers. This standard is based on OpenBoot version 2.)S
FmE
48 0 :M
f0_10 sf
( )S
50 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 358.666 M (Purpose and Features of the Open Firmware Specification)S
FmE
51 0 :M
f2_10 sf
( )S
53 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 374.666 M (Open Firmware has the following features:)S
96 390.666 M -0.361(Mechanism for loading and executing programs \(such as operating systems\) from disks, tapes, network inter-)W
96 402.666 M (faces, and other devices.)S
96 418.666 M (ISA-independent method for identifying devices \"plugged-in\" to expansion buses, and for providing firm-)S
96 430.666 M (ware and diagnostics drivers for these devices.)S
96 446.666 M (An extensible and programmable command language based on the Forth programming language.)S
96 462.666 M (Methods for managing user-configurable options stored in non-volatile memory.)S
96 478.666 M (A \"call back\" interface allowing other programs to make use of Open Firmware services.)S
96 494.666 M (Debugging tools for hardware, firmware, firmware drivers, and system software.)S
FmE
53 0 :M
f0_10 sf
( )S
55 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 524.666 M (Purpose of this Bus Binding)S
FmE
56 0 :M
f2_10 sf
( )S
58 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 540.666 M -0.063(This document specifies the application of Open Firmware to the PCI Local Bus, including PCI-specific require-)W
78 552.666 M (ments and practices for address format, interrupts, probing, and related properties and methods.)S
78 570.666 M -0.222(The core requirements and practices specified by Open Firmware must be augmented by system-specific require-)W
78 582.666 M 0.168(ments to form a complete specification for the firmware for a particular system. This document establishes such)W
78 594.666 M (additional requirements pertaining to PCI.)S
FmE
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 4 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
58 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
58 0 :M
f0_12 sf
( )S
61 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
61 0 :M
f2_12 sf
( )S
64 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (iv)S
FmE
64 0 :M
f1_12 sf
( )S
67 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
67 0 :M
f4_12 sf
( )S
74 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
74 0 :M
f0_10 sf
( )S
76 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 50.667 M (Task Group Members)S
FmE
77 0 :M
f2_10 sf
( )S
79 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 66.667 M (The following individuals were members of the Task Group that produced this document:)S
60 82.667 M (Ron Hochsprung, Apple Computer, Inc.)S
60 98.667 M (Mitch Bradley, FirmWorks \(Chair, IEEE P1275 Working Group\))S
60 114.667 M (David Kahn, Sun Microsystems, Inc. \(Vice Chair, IEEE P1275 Working Group\))S
60 146.667 M (TRADEMARKS)S
FmE
79 0 :M
f0_10 sf
( )S
81 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 162.667 M (Sun Microsystems)S
FmE
82 0 :M
f2_10 sf
( )S
84 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
138.032 162.667 M ( is a registered trademark of Sun Microsystems, Inc. in the United States and other countries.)S
FmE
84 0 :M
f0_10 sf
( )S
86 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 178.667 M (OpenBoot)S
FmE
87 0 :M
f2_10 sf
( )S
89 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.333 178.667 M ( is a trademark of Sun Microsystems, Inc.)S
FmE
89 0 :M
f0_10 sf
( )S
91 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 194.667 M (UNIX)S
FmE
92 0 :M
f2_10 sf
( )S
94 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.547 194.667 M ( is a registered trademark of UNIX System Laboratories, Inc.)S
FmE
94 0 :M
f0_10 sf
( )S
96 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 210.667 M (SPARC)S
FmE
97 0 :M
f2_10 sf
( )S
99 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
93.325 210.667 M -0.34( is a registered trademark of SPARC International, Inc. Products bearing the SPARC trademark are based)W
60 222.666 M (on an architecture developed by Sun Microsystems, Inc.)S
FmE
99 0 :M
f0_10 sf
( )S
101 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 238.666 M (SPARCstation)S
FmE
102 0 :M
f2_10 sf
( )S
104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
122.207 238.666 M ( is a trademark of SPARC International, Inc., licensed exclusively to Sun Microsystems, Inc.)S
60 254.666 M -0.561(All other products or services mentioned in this document are identified by the trademarks, service marks, or prod-)W
60 266.666 M 1.103(uct names as designated by the companies who market those products. Inquiries concerning such trademarks)W
60 278.666 M (should be made directly to those companies.)S
60 294.666 M (The latest version of this binding may be found in the Bus Supplements area of the Web page at:)S
FmE
104 0 :M
f4_10 sf
( )S
110 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 310.666 M 0 0 204(http://playground.sun.com/pub/1275)FmTx
FmE
110 0 :M
f0_10 sf
( )S
112 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 347.666 M (Revision History)S
60 363.666 M (Revision 0.1)S
20.337 N (Oct. 7, 1993)S
FmE
113 0 :M
f2_10 sf
( )S
115 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 363.666 M 0.367(First revision distributed outside of task group \(the number 0.1 did)W
240 373.666 M (not appear on  the cover\).)S
FmE
115 0 :M
f0_10 sf
( )S
117 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 387.666 M (Revision 0.2)S
20.337 N (Oct. 28, 1993)S
FmE
118 0 :M
f2_10 sf
( )S
120 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 387.666 M 0.46(Changed the designator for 64-bit memory space from \"M\" to \"x\".)W
240 397.666 M -0.143(Changed the parts of the specification related to )W
-0.143(PCI-to-PCI b)W
(ridges)S
240 407.666 M (to reflect the 0.4 bridge architecture spec.)S
FmE
120 0 :M
f0_10 sf
( )S
122 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 421.666 M (Revision 1.0)S
20.337 N (April 14, 1994)S
FmE
123 0 :M
f2_10 sf
( )S
125 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 421.666 M 0.445(Changed references from P1275 to Open Firmware.  Changed size)W
240 431.666 M (of fields for I/O address representations to reflect PCI architecture.)S
FmE
125 0 :M
f0_10 sf
( )S
127 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 445.666 M (Revision 1.1 )S
17.837 N (June 28, 1994)S
FmE
128 0 :M
f2_10 sf
( )S
130 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 445.666 M (Added \'t\'-bit for aliasing, and discussion of \"hard-decode\" cases.)S
FmE
130 0 :M
f0_10 sf
( )S
132 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 459.666 M (Revision 1.2)S
20.337 N (August 7, 1994)S
FmE
133 0 :M
f2_10 sf
( )S
135 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 459.666 M -0.351(Added note about DD encoding.  Added new standard properties for)W
240 469.666 M -0.269(those of draft Rev 2.1 PCI spec.  Deleted enabling of Memory space)W
240 479.666 M (at post-probe.  Added driver encapsulation description.)S
FmE
135 0 :M
f0_10 sf
( )S
137 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 493.666 M (Revision 1.3)S
20.337 N (September 27, 1994)S
FmE
138 0 :M
f2_10 sf
( )S
140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 493.666 M 0.011(Changed generated name for Subsystem, if present.  Added rule for)W
240 503.666 M (I/O assignment.  Added discussion of )S
(PCI-to-PCI b)S
(ridge probing.)S
FmE
140 0 :M
f0_10 sf
( )S
142 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 517.666 M (Revision 1.4)S
20.337 N (December 16, 1994)S
FmE
143 0 :M
f2_10 sf
( )S
145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 517.666 M 1.45(Added Expansion ROM address assignment, \')W
FmE
145 0 :M
f4_10 sf
( )S
151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
430.673 517.666 M 0 0 6(t)FmTx
FmE
151 0 :M
f2_10 sf
( )S
153 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
436.673 517.666 M 1.45(\' bit for \"below 1)W
240 527.666 M (MB\".)S
FmE
154 0 :M
f0_10 sf
( )S
156 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 541.666 M (Revision 1.5)S
20.337 N (March 20, 1995)S
FmE
156 0 :M
f2_10 sf
( )S
158 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 541.666 M 0.09(Applied proposals 241, 242, 249, 264, 273.  Added Legacy devices)W
240 551.666 M 0.395(section, \"clock-frequencey\" property, clarified address assignment,)W
240 561.666 M (added \'t\' bit for relocatable I/O space.)S
FmE
159 0 :M
f0_10 sf
( )S
161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 575.666 M (Revision 1.6)S
20.337 N (October 12, 1995)S
FmE
161 0 :M
f2_10 sf
( )S
163 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 575.666 M (Applied proposal)S
(s)S
( 274)S
(,286, 287 and 290)S
(.)S
FmE
164 0 :M
f0_10 sf
( )S
166 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 589.666 M (Revision 1.65)S
15.337 N (March 4, 1995)S
FmE
166 0 :M
f2_10 sf
( )S
168 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
193.375 589.666 M (\324)S
43.298 N (Applied proposals 251, 293, 303; fixed 287 changes.)S
FmE
169 0 :M
f0_10 sf
( )S
171 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 603.666 M (Revision 1.7)S
20.337 N (April 22, 1996)S
FmE
171 0 :M
f2_10 sf
( )S
173 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 603.666 M -0.49(Applied proposals 308, 311, 314; added \"ranges\" usage information.)W
240 613.666 M (Added open and close notes to child nodes.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
40 582.999 2 48 FmqF
FmE
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 5 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
174 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
174 0 :M
0 G
f0_12 sf
( )S
177 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
177 0 :M
f1_12 sf
( )S
180 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
180 0 :M
f2_12 sf
( )S
183 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (1)S
FmE
183 0 :M
f4_12 sf
( )S
190 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
190 0 :M
f2_12 sf
( )S
193 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 52 M (1. Overview and References)S
2.08 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(3)S
78 66 M (  1.1. Definitions of Terms)S
1.371 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(3)S
78 80 M (2. Bus Characteristics)S
0.038 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(3)S
78 94 M (  2.1. Address Spaces)S
2.367 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(3)S
78 108 M (    2.1.1. Memory Space)S
2.03 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(3)S
78 122 M (    2.1.2. I/O Space)S
0.36 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(4)S
78 136 M (    2.1.3. Hard-decoded Spaces)S
0.729 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(4)S
78 150 M (    2.1.4. Configuration Space)S
0.032 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(4)S
78 164 M (      2.1.4.1. Bus Number:  8 bits.)S
2.344 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(5)S
78 178 M (      2.1.4.2. Device Number:  5 bits)S
2.039 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(5)S
78 192 M (      2.1.4.3. Function Number:  3 bits)S
2.35 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(5)S
78 206 M (      2.1.4.4. Register Number:  8 bits)S
2.03 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(5)S
78 220 M (      2.1.4.5. \"Address-less\" Cycles)S
1.248 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(5)S
78 234 M (      2.1.4.6. Low-order Address Bits)S
1.046 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(6)S
78 248 M (  2.2. Address Formats and Representations)S
1.395 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(6)S
78 262 M (    2.2.1. Physical Address Formats)S
0.7 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(6)S
78 276 M (      2.2.1.1. Numerical Representation)S
0.393 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(6)S
78 290 M (        2.2.1.1. Encoding of type code \"ss\":)S
1.245 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(7)S
78 304 M (      2.2.1.2. Text Representation)S
2.039 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(8)S
78 318 M (      2.2.1.3. Unit Address Representation)S
2.382 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(9)S
78 332 M (  2.3. Bus-specific Configuration Variables)S
0.741 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
78 346 M (  2.4. Format of a Probe List)S
2.367 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
78 360 M (  2.5. FCode Evaluation Semantics)S
1.696 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
78 374 M (3. Bus Nodes)S
1.673 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
78 388 M (  3.1. Properties)S
2.355 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
78 402 M (    3.1.1.  Open Firmware-defined Properties for Bus Nodes)S
0.439 N ( . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
78 416 M (    3.1.2. Bus-specific Properties for Bus Nodes)S
2.071 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(11)S
78 430 M (  3.2. Methods)S
0.006 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(11)S
78 444 M (    3.2.1. Open Firmware-defined Methods for Bus Nodes)S
1.09 N (. . . . . . . . . . . . . . . . . . . . . . . . )S
(11)S
78 458 M (    3.2.2. Bus-specific Methods for Bus Nodes)S
2.722 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(12)S
78 472 M (    3.2.3. Configuration Access Words)S
1.72 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(12)S
78 486 M (      3.2.3.1. Address-less Access Words)S
1.734 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(13)S
78 500 M (4. Child Nodes)S
2.672 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(13)S
78 514 M (  4.1. Properties)S
2.355 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(13)S
78 528 M (    4.1.1. Open Firmware-defined Properties for Child Nodes)S
1.438 N ( . . . . . . . . . . . . . . . . . . . . . )S
(13)S
78 542 M (    4.1.2. Bus-specific Properties for Child Nodes)S
0.07 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(14)S
78 556 M (      4.1.2.1. Standard PCI Configuration Properties)S
2.719 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(15)S
78 570 M (  4.2. Methods)S
0.006 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(16)S
78 584 M (5. Bus-specific User Interface Commands)S
0.097 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(16)S
78 598 M (6. Probing PCI-to-PCI bridges)S
1.025 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(18)S
78 612 M (7. Legacy devices)S
0.712 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(18)S
78 626 M (8. Relationship between PCI Base Registers and Open Firmware Properties)S
1.122 N ( . . . . . . . . . )S
(18)S
78 640 M (9. ROM Image Format for FCode:)S
2.707 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(18)S
78 654 M (10. Encapsulated Drivers)S
2.054 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(19)S
78 668 M (  10.1. Naming conventions)S
2.355 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(19)S
78 682 M (11. Examples of \"reg\" and \"assigned-addresses\" properties)S
0.202 N (. . . . . . . . . . . . . . . . . . . . . . . )S
(20)S
78 696 M (  11.1. Creation of \"reg\" and \"assigned-address\" properties)S
1.195 N (. . . . . . . . . . . . . . . . . . . . . . . )S
(20)S
78 710 M (    11.1.1. A single 256-byte address base register, without FCode.)S
1.084 N (. . . . . . . . . . . . . . . . . )S
(20)S
78 724 M (    11.1.2. A simple VGA device, without FCode.)S
1.374 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(20)S
0.502 0.502 0 0.498 0 0 0.502 FmK
58 282 2 12 FmqF
FmE
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 6 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
193 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
193 0 :M
0 G
f0_12 sf
( )S
196 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
196 0 :M
f2_12 sf
( )S
199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (2)S
FmE
199 0 :M
f1_12 sf
( )S
202 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
202 0 :M
f4_12 sf
( )S
209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
209 0 :M
f2_12 sf
( )S
212 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 52 M (    11.1.3. A single 256 resource, Memory and I/O accessible, without FCode)S
0.108 N ( . . . . . . . . )S
(21)S
60 66 M (    11.1.4. A single 256 resource, Memory and I/O accessible, with FCode.)S
0.442 N ( . . . . . . . . . . )S
(21)S
60 80 M (  11.2. Computing PCI addresses from \"reg\" and \"assigned-addresses\")S
2.52 N ( . . . . . . . . . . . . . )S
(22)S
60 94 M (    11.2.1. Determining the address of a register of example in Section 11.1.4.)S
2.458 N (. . . . . . . . )S
(22)S
60 108 M (    11.2.2. Determining the address of a register of example in Section 11.1.2.)S
2.458 N (. . . . . . . . )S
(23)S
60 122 M (12. Use of the )S
FmE
212 0 :M
f5_10 sf
( )S
218 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.31 122 M 0 0 48(\"ranges\")FmTx
FmE
218 0 :M
f2_12 sf
( )S
221 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.31 122 M ( property)S
0.044 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(23)S
60 136 M (13. Example of use of add-ranges check)S
2.76 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(23)S
FmE
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 7 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
221 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
221 0 :M
f0_12 sf
( )S
224 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
224 0 :M
f1_12 sf
( )S
227 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
227 0 :M
f2_12 sf
( )S
230 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (3)S
FmE
230 0 :M
f4_12 sf
( )S
237 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
237 0 :M
f0_12 sf
( )S
240 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 52 M (1. Overview and References)S
FmE
240 0 :M
f2_10 sf
( )S
242 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 68.667 M -0.137(This specification describes the application of Open Firmware to computer systems that use the PCI Local bus as)W
78 80.667 M -0.061(defined in )W
FmE
243 0 :M
f3_10 sf
( )S
245 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
120.64 80.667 M -0.061(PCI Local Bus Specification, Revision 2.)W
(1,)S
-0.061( June 1, 1995 )W
FmE
245 0 :M
f2_10 sf
( )S
247 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
346.989 80.667 M -0.061( and )W
FmE
248 0 :M
f3_10 sf
( )S
250 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
366.307 80.667 M -0.061(PCI-to-PCI B)W
-0.061(ridge Architecture Specifi-)W
78 92.667 M (cation, Revision 1.0 April 5, 1994)S
FmE
250 0 :M
f2_10 sf
( )S
252 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
212.98 92.667 M ( and is to be used in conjunction with those documents.)S
FmE
253 0 :M
f0_12 sf
( )S
256 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 127 M (1.1. Definitions of Terms)S
FmE
256 0 :M
f0_10 sf
( )S
258 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 143.667 M (bus controller:)S
FmE
258 0 :M
f2_10 sf
( )S
260 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.032 143.667 M (  a hardware device that implements a PCI bus.)S
FmE
261 0 :M
f0_10 sf
( )S
263 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 159.667 M (hard decode:)S
FmE
263 0 :M
f2_10 sf
( )S
265 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.818 159.667 M (  a decoding which is not based upon a base register, but, rather, is fixed.)S
FmE
266 0 :M
f0_10 sf
( )S
268 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 175.667 M (PCI device:)S
FmE
268 0 :M
f2_10 sf
( )S
270 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.697 175.667 M (  a hardware device that connects to or \"plugs in\" to a PCI bus)S
(.)S
FmE
271 0 :M
f0_10 sf
( )S
273 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 191.667 M (P)S
-0.167(CI function:)W
FmE
273 0 :M
f2_10 sf
( )S
275 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136.427 191.667 M -0.167(  one of a number of logically-independent parts of a PCI device. Many PCI devices have only one)W
78 203.667 M (function per device; in such cases, the terms \"PCI function\" and \"PCI device\" can be used interchangeably.)S
FmE
276 0 :M
f0_10 sf
( )S
278 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 221 M 0.257(PCI-to-PCI b)W
(ridge:)S
FmE
278 0 :M
f2_12 sf
( )S
281 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
161.275 221 M 0.309(  )W
FmE
281 0 :M
f2_10 sf
( )S
283 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.892 221 M 0.257(a hardware device that is, from an electrical standpoint, a single PCI function on one PCI)W
78 233.667 M (bus \(the \"parent\" bus\) and the bus controller of a secondary PCI bus \(the \"child\" bus\).)S
FmE
284 0 :M
f0_10 sf
( )S
286 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 249.667 M (PCI domain:)S
FmE
286 0 :M
f2_10 sf
( )S
288 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.269 249.667 M (  a group of PCI buses connected together in a tree topology by )S
(PCI-to-PCI b)S
(ridges.)S
FmE
289 0 :M
f0_10 sf
( )S
291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 265.667 M -0.237(relocatable region:)W
FmE
291 0 :M
f2_10 sf
( )S
293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
158.002 265.667 M -0.237(  a range of PCI address space whose base address is established by a single base address reg-)W
78 277.666 M (ister.)S
FmE
294 0 :M
f0_10 sf
( )S
296 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 293.666 M (Master PCI bus:)S
FmE
296 0 :M
f2_10 sf
( )S
298 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.084 293.666 M (  within a PCI domain, the PCI bus that forms the root of the tree structure.)S
FmE
299 0 :M
f0_10 sf
( )S
301 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 309.666 M -0.004(bus node:)W
FmE
301 0 :M
f2_10 sf
( )S
303 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
119.388 309.666 M -0.004(  an Open Firmware device node that represents a bus controller.  In cases where a node represents the)W
78 321.666 M -0.262(interface, or \"bridge\", between one bus and another, the node is both a bus node relative to the bus it controls, and)W
78 333.666 M -0.408(a child node of its parent bus.  Note that an Open Firmware device node is not in itself a physical hardware device;)W
78 345.666 M (rather, it is a software abstraction that describes a hardware device.)S
FmE
304 0 :M
f0_10 sf
( )S
306 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 361.666 M -0.227(child node:)W
FmE
306 0 :M
f2_10 sf
( )S
308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.27 361.666 M -0.227(  an Open Firmware device node that represents a PCI function.  Such a node can correspond to either)W
78 373.666 M 0.162(a device that is \"hardwired\" to a planar PCI bus, or to an \"add in\" expansion card that is plugged into a standard)W
78 385.666 M (PCI Expansion Connector.)S
FmE
309 0 :M
f0_12 sf
( )S
312 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 427 M (2. Bus Characteristics)S
78 462 M (2.1. Address Spaces)S
FmE
312 0 :M
f2_10 sf
( )S
314 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 478.666 M (PCI has several address spaces \(Memory, I/O, Configuration\), with different addressing characteristics.)S
FmE
314 0 :M
f0_12 sf
( )S
317 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 513 M (2.1.1. Memory Space)S
FmE
317 0 :M
f2_10 sf
( )S
319 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 529.666 M -0.144(Memory Space is the primary address space of PCI; it corresponds to traditional memory and \"memory-mapped\")W
78 541.666 M 0.314(I/O.  PCI allows for a full 64-bit address range in Memory Space; however, most devices will not require a full)W
78 553.666 M 0.01(64-bit range.  In order to provide compatibility between devices designed for 64-bit addressing and those for 32-)W
78 565.666 M 0.024(bit addressing, the 32-bit address space appears as the first 4 GB region of the 64-bit space; i.e., 64-bit addresses)W
78 577.666 M -0.006(with the 32 most-significant bits equal to 0 are used to access 32-bit devices.  64-bit initiators are required to use)W
78 589.666 M (the 32-bit address protocol for any 64-bit address in which the upper 32 bits are all 0.)S
78 607.666 M -0.388(The PCI specification requires that all of a device\'s relocatable resources must be mappable in Memory Space, i.e.)W
78 619.666 M (it is not permissible for a resource to be mappable only in I/O Space \(described below\).)S
78 637.666 M -0.233(The regions of Memory Space to which a PCI device responds are assigned dynamically during system initializa-)W
78 649.666 M 0.381(tion, by setting device base address registers in Configuration Space \(see below\).  The size of each such region)W
78 661.666 M 0.008(must be a power of two, and the assigned base address must be aligned on a boundary equal to the size of the re-)W
78 673.666 M (gion.)S
78 691.666 M -0.461(The encoding of the base address registers for Memory Space allows a resource to require address allocation with-)W
78 703.666 M 0.114(in the first 1 MB.  This requirement is reflected in the )W
FmE
320 0 :M
f5_10 sf
( )S
326 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
296.231 703.666 M 0 0 30(\"reg\")FmTx
FmE
326 0 :M
f2_10 sf
( )S
328 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
326.231 703.666 M 0.114( property entry for that base register by having the)W
FmE
328 0 :M
f4_10 sf
( )S
334 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 715.666 M 0 0 18(\'t\')FmTx
FmE
334 0 :M
f2_10 sf
( )S
336 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 715.666 M ( bit set.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
58 169 2 26 FmqF
FmE
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 8 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
337 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
337 0 :M
0 G
f0_12 sf
( )S
340 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
340 0 :M
f2_12 sf
( )S
343 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (4)S
FmE
343 0 :M
f1_12 sf
( )S
346 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
346 0 :M
f4_12 sf
( )S
353 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
353 0 :M
f2_10 sf
( )S
355 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 50.667 M -0.058(Memory Space addressing is \"flat\" across a PCI domain, in that addresses are not transformed as they cross )W
(PCI-)S
60 62.667 M -0.081(to-PCI b)W
-0.081(ridges.  The flat address space is not necessarily limited to a single PCI domain; the PCI design attempts)W
60 74.667 M 0.154(to make it possible to have a flat address across multiple PCI domains that are peers of one another on a higher-)W
60 86.667 M (level host address bus.)S
60 104.667 M -0.237(An early revision of the PCI specification admitted the possibility that some devices might respond to fixed \(non-)W
60 116.667 M -0.495(relocatable\) address ranges. The current revision permits this behavior for VGA and IDE devices, but it is possible)W
60 128.667 M 0.519(that some other devices still behave that way.  The current specification allows devices to respond to fixed ad-)W
60 140.667 M 0.135(dresses after a system reset, but provides a standard way to disable such response, which devices are required to)W
60 152.667 M (implement.)S
FmE
356 0 :M
f0_12 sf
( )S
359 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 187 M (2.1.2. I/O Space)S
FmE
359 0 :M
f2_10 sf
( )S
361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 203.667 M -0.46(I/O Space is similar to Memory Space, except that it is intended as to be used with the special \"I/O access\" instruc-)W
60 215.667 M 0.4(tions that some processors have. As with Memory Space, I/O Space addresses are assigned dynamically during)W
60 227.666 M (system initialization, and the addressing is \"flat\" across a PCI domain.)S
60 243.666 M 19.012(Relocatable I/O Space )W
FmE
361 0 :M
f3_10 sf
( )S
363 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208.934 243.666 M (shall)S
FmE
364 0 :M
f2_10 sf
( )S
366 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228.38 243.666 M 19.012( be allocated at addresses of the form)W
FmE
366 0 :M
f4_9 sf
( )S
371 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 255.666 M 0 0 195(aaaa.aaaa.aaaa.aaaa.aaaa.aa00.aaaa.aaaa)FmTx
FmE
371 0 :M
f2_10 sf
( )S
373 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255 255.666 M -0.238(.  This guarantees that relocatable I/O addresses will not conflict)W
60 267.666 M -0.283(with hard-decoded address that have non-zero bits in AD[9\3118].  Because )W
-0.283(PCI-to-PCI b)W
-0.283(ridges restrict I/O address)W
60 279.666 M 7.728(space to 16 bits, relocatable I/O Space across )W
7.728(PCI-to-PCI b)W
7.728(ridges )W
FmE
374 0 :M
f3_10 sf
( )S
376 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.226 279.666 M (shall)S
FmE
376 0 :M
f2_10 sf
( )S
378 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.671 279.666 M 7.728( be of the form)W
FmE
379 0 :M
f4_9 sf
( )S
384 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 291 M 0 0 200(0000.0000.0000.0000.aaaa.aa00.aaaa.aaaa.)FmTx
FmE
384 0 :M
f3_10 sf
( )S
386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 306.666 M -0.386(Note:  although the PCI specification allows 32-bit I/O Space addresses, many of the processors that have special)W
60 318.666 M -0.028(I/O access instructions present only a 16-bit I/O address.  However, Open Firmware allows for the specification)W
60 330.666 M (of the full 32-bit range.)S
FmE
386 0 :M
f2_10 sf
( )S
388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 346.666 M 0.608(PCI also allows devices to have I/O base address registers that implement only the low-order 16 bits.  I.e., the)W
60 358.666 M -0.156(upper 16 bits are assumed to be 0.  When probing, after writing all 1s, the data read back will have the high-order)W
60 370.666 M -0.046(16 bits equal to 0, while the low-order 16 bits will reflect the address space requirement.  Address space for such)W
60 382.666 M -0.15(a base register must be allocated within the first 64 KB of I/O Space.  This requirement is reflected in the )W
FmE
389 0 :M
f5_10 sf
( )S
395 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480 382.666 M 0 0 30(\"reg\")FmTx
FmE
395 0 :M
f2_10 sf
( )S
397 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 394.666 M 0.528(property for that base register by having the )W
FmE
397 0 :M
f4_10 sf
( )S
403 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
241.921 394.666 M 0 0 18(\'t\')FmTx
FmE
403 0 :M
f2_10 sf
( )S
405 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.921 394.666 M 0.528(-bit set.  This is interpretation of the )W
FmE
406 0 :M
f4_10 sf
( )S
412 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
410.482 394.666 M 0 0 18(\'t\')FmTx
FmE
412 0 :M
f2_10 sf
( )S
414 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
428.482 394.666 M 0.528(-bit for I/O Space is)W
60 406.666 M -0.31(distinquished from the \"alias\" case by having the )W
FmE
414 0 :M
f4_10 sf
( )S
420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.624 406.666 M 0 0 18(\'n\')FmTx
FmE
420 0 :M
f2_10 sf
( )S
422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.624 406.666 M -0.31(-bit equal to 0 in its )W
FmE
423 0 :M
f5_10 sf
( )S
429 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.308 406.666 M 0 0 30(\"reg\")FmTx
FmE
429 0 :M
f2_10 sf
( )S
431 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
382.308 406.666 M -0.31( entry;  the corresponding )W
FmE
431 0 :M
f5_10 sf
( )S
437 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
485.999 406.666 M 0 0 24(\"as-)FmTx
60 418.666 M 0 0 102(signed-addresses\")FmTx
FmE
437 0 :M
f2_10 sf
( )S
439 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 418.666 M ( entry )S
FmE
440 0 :M
f3_10 sf
( )S
442 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
187.544 418.666 M (shall)S
FmE
442 0 :M
f2_10 sf
( )S
444 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.99 418.666 M ( have the )S
FmE
445 0 :M
f4_10 sf
( )S
451 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
245.584 418.666 M 0 0 18(\'t\')FmTx
FmE
451 0 :M
f2_10 sf
( )S
453 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.584 418.666 M (-bit equal to 0.)S
FmE
453 0 :M
f0_12 sf
( )S
456 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 453 M (2.1.3. Hard-decoded Spaces)S
FmE
456 0 :M
f2_10 sf
( )S
458 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 469.666 M 0.054(PCI allows devices to \"hard-decode\" Memory and I/O addresses;  i.e., the addresses are not subject to relocation)W
60 481.666 M -0.145(via a base register.  These address ranges are represented by having the non-relocatable bit \()W
FmE
459 0 :M
f4_10 sf
( )S
465 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.952 481.666 M 0 0 18(\'n\')FmTx
FmE
465 0 :M
f2_10 sf
( )S
467 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
443.952 481.666 M -0.145(\) set in their cor-)W
60 493.666 M -0.246(responding )W
FmE
467 0 :M
f5_10 sf
( )S
473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106.687 493.666 M 0 0 30(\"reg\")FmTx
FmE
473 0 :M
f2_10 sf
( )S
475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136.687 493.666 M -0.246( and )W
FmE
476 0 :M
f5_10 sf
( )S
482 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
155.633 493.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
482 0 :M
f2_10 sf
( )S
484 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
275.633 493.666 M -0.246( properties, where the base-register field of the )W
FmE
484 0 :M
f3_10 sf
( )S
486 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.719 493.666 M (phys.hi)S
FmE
487 0 :M
f2_10 sf
( )S
489 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
491.325 493.666 M -0.246( is 0.)W
60 509.666 M 0.318(Furthermore, such devices are allowed to \"alias\" their hard-decoded I/O addresses by ignoring all but the lower)W
60 521.666 M 0.341(10 bits of an I/O address.  To conserve )W
FmE
489 0 :M
f5_10 sf
( )S
495 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220.229 521.666 M 0 0 30(\"reg\")FmTx
FmE
495 0 :M
f2_10 sf
( )S
497 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.229 521.666 M 0.341( property space, a bit \(the )W
FmE
498 0 :M
f4_10 sf
( )S
504 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.39 521.666 M 0 0 18(\'t\')FmTx
FmE
504 0 :M
f2_10 sf
( )S
506 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
374.39 521.666 M 0.341(-bit, for ten-bit\) is included in the)W
60 533.666 M 0.136(encoding of hard-decoded \(non-relocatable, )W
FmE
506 0 :M
f4_10 sf
( )S
512 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.948 533.666 M 0 0 18(\'n\')FmTx
FmE
512 0 :M
f2_10 sf
( )S
514 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.948 533.666 M 0.136(-bit = 1\) I/O address )W
FmE
515 0 :M
f5_10 sf
( )S
521 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
340.289 533.666 M 0 0 30(\"reg\")FmTx
FmE
521 0 :M
f2_10 sf
( )S
523 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
370.289 533.666 M 0.136( and )W
FmE
523 0 :M
f5_10 sf
( )S
529 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
390 533.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
529 0 :M
f2_10 sf
( )S
531 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 545.666 M (entries to indicated that the address range includes all such aliases.)S
FmE
532 0 :M
f0_12 sf
( )S
535 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 580 M (2.1.4. Configuration Space)S
FmE
535 0 :M
f2_10 sf
( )S
537 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 596.666 M 0.381(Configuration Space is used primarily during device initialization.  Each device contains a set of Configuration)W
60 608.666 M -0.222(Registers which are used to identify and configure the device.  Configuration Cycles access a device\'s Configura-)W
60 620.666 M 0.177(tion Registers, including the \"address base registers\" which must be initialized before the device will respond to)W
60 632.666 M (Memory and I/O Space accesses.)S
60 650.666 M 0.305(In contrast to Memory and I/O Space addressing, Configuration Space addressing is effectively \"geographical\",)W
60 662.666 M -0.006(in that the Configuration Space address of a particular device is determined by its physical location on a PCI bus)W
60 674.666 M -0.348(\(i.e. the slot in which it is installed\), or more generally, its physical location within a \"tree\" of interconnected )W
(PCI-)S
60 686.666 M (to-PCI b)S
(ridges.)S
60 704.666 M -0.489(The method for generating Configuration Cycles is system-dependent.  In some systems, special registers are used)W
60 716.666 M -0.303(to generate Configuration Space cycles. In other systems, Configuration Space might be memory-mapped as a re-)W
FmE
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 9 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
537 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
537 0 :M
f0_12 sf
( )S
540 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
540 0 :M
f1_12 sf
( )S
543 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
543 0 :M
f2_12 sf
( )S
546 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (5)S
FmE
546 0 :M
f4_12 sf
( )S
553 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
553 0 :M
f2_10 sf
( )S
555 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 50.667 M -0.421(gion within a large physical address space.  In particular, the hardware method for specifying the Bus Number and)W
78 62.667 M 0.203(Device Number is system-dependent.  Bus Number and Device Number are described below as though they are)W
78 74.667 M 0.078(binary-encoded fields within an address; in practice, that is not necessarily true at the hardware level.  However,)W
78 86.667 M -0.28(the representation described below is adequate as an internal software representation, because it is capable of rep-)W
78 98.667 M (resenting the entire possible space of PCI Configuration Space addresses.)S
78 116.667 M (A Configuration Space address consists of several fields:)S
FmE
556 0 :M
f0_10 sf
( )S
558 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 146.667 M (2.1.4.1. Bus Number:  8 bits.)S
FmE
558 0 :M
f2_10 sf
( )S
560 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 162.667 M 0.497(Each PCI bus within a PCI domain is assigned a unique identifying number, known as the \"bus number\".  The)W
78 174.667 M -0.218(assignments occur during system initialization, when the bus controllers for the PCI buses within the PCI domain)W
78 186.667 M (are located. The bus number for a particular bus is written into a register in that bus\'s bus controller.)S
78 204.667 M 0.369(During a Configuration Cycle, each bus controller compares the bus number field of the address to its assigned)W
78 216.666 M -0.005(bus number.  If they match, the bus controller selects one of the devices on its PCI bus, according to the value of)W
78 228.666 M -0.126(the Device Number field.  Otherwise, the bus controller either forwards the configuration cycle to its subordinate)W
78 240.666 M (PCI-to-PCI b)S
(ridges \(if the bus number is for one of its subordinate bridges\) or ignores the cycle.)S
FmE
561 0 :M
f0_10 sf
( )S
563 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 270.666 M (2.1.4.2. Device Number:  5 bits)S
FmE
563 0 :M
f2_10 sf
( )S
565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 286.666 M 0.479(During a Configuration Cycle, the bus controller selected by the bus number field decodes the Device Number)W
78 298.666 M -0.259(field, activating the single corresponding \"IDSEL\" device select line to enable one of the PCI devices on that bus.)W
78 310.666 M 0.158(For PCI buses with plug-in slots, the Device Number field effectively selects a particular slot.  Electrical limita-)W
78 322.666 M -0.27(tions restrict the number of devices on an individual PCI bus to fewer than the 32 that could otherwise be selected)W
78 334.666 M (by this 5-bit field.)S
78 352.666 M 0.514(Some PCI bus controllers use the same physical wires for the IDSEL lines and higher-numbered address lines,)W
78 364.666 M 0.179(thus, on the bus that is selected by the bus number field, the Device Number does not appear on the address bus)W
78 376.666 M 0.136(in its 5-bit binary-encoded form.  Rather, the 5-bit field is decoded to a \"one of n\" select that asserts exactly one)W
78 388.666 M 0.391(upper address line.  This fact does not affect the logical representation of the Device Number as a 5-bit binary-)W
78 400.666 M (encoded field.)S
FmE
566 0 :M
f3_10 sf
( )S
568 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 416.666 M -0.392(Note:  the decoding mechanism \(e.g., the address bit selected\) from the Device Number is system dependent.  Fur-)W
78 428.666 M 0.359(thermore, the implementation of the Open Firmware )W
FmE
568 0 :M
f7_10 sf
( )S
574 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
293.233 428.666 M 0 0 54(config-xx)FmTx
FmE
574 0 :M
f3_10 sf
( )S
576 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
347.233 428.666 M 0.359( words can \"hide\" this detail.  However, it is)W
78 440.666 M (recommended that an Open Firmware implementation choose a numbering which is meaningful to the user.)S
FmE
577 0 :M
f0_10 sf
( )S
579 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 470.666 M (2.1.4.3. Function Number:  3 bits)S
FmE
579 0 :M
f2_10 sf
( )S
581 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 486.666 M 0.271(Each PCI device can have from one to eight logically-independent functions, each with its own independent set)W
78 498.666 M -0.416(of configuration registers.  A PCI device that is selected during a Configuration Cycle decodes the Function Num-)W
78 510.666 M -0.545(ber field to select the appropriate set of configuration registers for that function. The assignment of Function Num-)W
78 522.666 M -0.341(bers to particular functions is a hard-wired characteristic of the individual PCI device.  For a PCI device with only)W
78 534.666 M (one function, the Function Number must be zero.)S
FmE
582 0 :M
f0_10 sf
( )S
584 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 564.666 M (2.1.4.4. Register Number:  8 bits)S
FmE
584 0 :M
f2_10 sf
( )S
586 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 580.666 M 0.028(The register number field, decoded by the PCI device, selects a particular register within the set of configuration)W
78 592.666 M -0.316(registers corresponding to the selected function.  The layout \(locations and meanings of particular bits\) of the first)W
78 604.666 M -0.197(few configuration registers \(i.e. those with small register numbers\) is specified by the PCI standard; other config-)W
78 616.666 M 0.7(uration registers are device-specific.  The standard configuration registers perform such functions as assigning)W
78 628.666 M (Memory Space and I/O Space base addresses for the device\'s addressable regions.)S
78 646.666 M 0.332(In many PCI hardware implementations, Configuration Space does not appear as a direct subset of the system\'s)W
78 658.666 M 0.136(physical address space; instead, Configuration Space accesses are performed by a sequence of reads or writes to)W
78 670.666 M (special system registers.)S
FmE
587 0 :M
f0_10 sf
( )S
589 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 700.666 M (2.1.4.5. \"Address-less\" Cycles)S
FmE
589 0 :M
f2_10 sf
( )S
591 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 716.666 M -0.456(In addition to these address spaces, PCI has two types of transactions in which the address bus is not used.  Special)W
FmE
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 10 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
592 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
592 0 :M
f0_12 sf
( )S
595 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
595 0 :M
f2_12 sf
( )S
598 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (6)S
FmE
598 0 :M
f1_12 sf
( )S
601 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
601 0 :M
f4_12 sf
( )S
608 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
608 0 :M
f2_10 sf
( )S
610 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 50.667 M 0.215(Cycles \(writes\) are \"broadcast\" cycles in which the data conveys all of the information.  Interrupt Acknowledge)W
60 62.667 M 0.169(Cycles \(reads\) are intended to support interrupt control hardware associated with PCI devices.  The PCI specifi-)W
60 74.667 M (cation does not specify the details of such interrupt control hardware.)S
FmE
611 0 :M
f0_10 sf
( )S
613 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 104.667 M (2.1.4.6. Low-order Address Bits)S
FmE
613 0 :M
f2_10 sf
( )S
615 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 120.667 M 0.134(The address characteristics described above do not take into account the way that the PCI bus uses the least-sig-)W
60 132.667 M -0.005(nificant two address bits.  In general, at the hardware level, the PCI bus uses the two low address bits \(AD[1::0]\))W
60 144.667 M -0.438(not to identify the particular byte to be accessed, but instead to convey additional information about the data trans-)W
60 156.667 M -0.389(fer, such as the type of address incrementing for burst transfers.  The bytes are selected with \"byte enable\" signals.)W
60 174.667 M -0.11(That hardware subtlety is irrelevant for the purposes of this specification; within the Open Firmware domain, ad-)W
60 186.667 M 0.399(dresses identify individual 8-bit, 16-bit, and 32-bit registers or memory locations in the usual way.  Within this)W
60 198.667 M -0.037(document, \"address\" refers to that software view of an address, which in the case of the two lower address bits is)W
60 210.666 M (not necessarily the same as what is on the PCI address wires.)S
FmE
616 0 :M
f0_12 sf
( )S
619 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 245 M (2.2. Address Formats and Representations)S
60 280 M (2.2.1. Physical Address Formats)S
FmE
619 0 :M
f0_10 sf
( )S
621 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 310.666 M (2.2.1.1. Numerical Representation)S
FmE
621 0 :M
f2_10 sf
( )S
623 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 326.666 M -0.234(\(The Numerical Representation of an address is the format that Open Firmware uses for storing an address within)W
60 338.666 M 0.317(a property value and on the stack, as an argument to a package method.\) The numerical representation of a PCI)W
60 350.666 M -0.145(address consists of three cells, encoded as follows.  For this purpose, the least-significant 32 bits of a cell is used;)W
60 362.666 M -0.56(if the cell size is larger than 32 bits, any additional high-order bits are zero.  Bit# 0 refers to the least-significant bit.)W
FmE
624 0 :M
f4_10 sf
( )S
630 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 378.666 M 0 0 126(                 Bit#)FmTx
27 N 0 0 210(33222222 22221111 11111100 00000000)FmTx
175.2 390.666 M 0 0 24(    )FmTx
13.8 N 0 0 210(10987654 32109876 54321098 76543210)FmTx
117.6 408.666 M 0 0 78(phys.hi cell:)FmTx
17.4 N 0 0 210(npt000ss bbbbbbbb dddddfff rrrrrrrr)FmTx
117.6 420.666 M 0 0 84(phys.mid cell:)FmTx
11.4 N 0 0 210(hhhhhhhh hhhhhhhh hhhhhhhh hhhhhhhh)FmTx
117.6 432.666 M 0 0 78(phys.lo cell:)FmTx
17.4 N 0 0 210(llllllll llllllll llllllll llllllll)FmTx
FmE
630 0 :M
f2_10 sf
( )S
632 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 456.666 M (where:)S
FmE
632 0 :M
f4_10 sf
( )S
638 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 480.666 M 0 0 6(n)FmTx
FmE
638 0 :M
f2_10 sf
( )S
640 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.2 480.666 M (is 0 if the address is relocatable, 1 otherwise)S
FmE
641 0 :M
f4_10 sf
( )S
647 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 492.666 M 0 0 6(p)FmTx
FmE
647 0 :M
f2_10 sf
( )S
649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.2 492.666 M (is 1 if the addressable region is \"prefetchable\", 0 otherwise)S
FmE
649 0 :M
f4_10 sf
( )S
655 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 504.666 M 0 0 6(t)FmTx
FmE
655 0 :M
f2_10 sf
( )S
657 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.2 504.666 M 0.117(is 1 if the address is aliased \(for non-relocatable I/O\), below 1 MB \(for Memory\),)W
177 516.666 M (or below 64 KB \(for relocatable I/O\).)S
FmE
658 0 :M
f4_10 sf
( )S
664 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 528.666 M 0 0 12(ss)FmTx
FmE
664 0 :M
f2_10 sf
( )S
666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.2 528.666 M (is the space code, denoting the address space)S
FmE
666 0 :M
f4_10 sf
( )S
672 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 540.666 M 0 0 48(bbbbbbbb)FmTx
FmE
672 0 :M
f2_10 sf
( )S
674 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.2 540.666 M (is the 8-bit Bus Number)S
FmE
675 0 :M
f4_10 sf
( )S
681 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 552.666 M 0 0 30(ddddd)FmTx
FmE
681 0 :M
f2_10 sf
( )S
683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.2 552.666 M (is the 5-bit Device Number)S
FmE
683 0 :M
f4_10 sf
( )S
689 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 564.666 M 0 0 18(fff)FmTx
FmE
689 0 :M
f2_10 sf
( )S
691 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.2 564.666 M (is the 3-bit Function Number)S
FmE
692 0 :M
f4_10 sf
( )S
698 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 576.666 M 0 0 48(rrrrrrrr)FmTx
FmE
698 0 :M
f2_10 sf
( )S
700 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.2 576.666 M (is the 8-bit Register Number)S
FmE
700 0 :M
f4_10 sf
( )S
706 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 588.666 M 0 0 30(hh\311hh)FmTx
FmE
706 0 :M
f2_10 sf
( )S
708 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.2 588.666 M (is a 32-bit unsigned number)S
FmE
709 0 :M
f4_10 sf
( )S
715 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 600.666 M 0 0 30(ll\311ll)FmTx
FmE
715 0 :M
f2_10 sf
( )S
717 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.2 600.666 M (is a 32-bit unsigned number)S
60 624.666 M -0.407(When the )W
FmE
717 0 :M
f4_10 sf
( )S
723 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100.279 624.666 M 0 0 30(hh\311hh)FmTx
FmE
723 0 :M
f2_10 sf
( )S
725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.279 624.666 M -0.407( and )W
FmE
726 0 :M
f4_10 sf
( )S
732 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.902 624.666 M 0 0 30(ll\311ll)FmTx
FmE
732 0 :M
f2_10 sf
( )S
734 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.902 624.666 M -0.407( fields are concatenated to form a larger number, )W
FmE
734 0 :M
f4_10 sf
( )S
740 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
372.345 624.666 M 0 0 30(hh\311hh)FmTx
FmE
740 0 :M
f2_10 sf
( )S
742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
402.345 624.666 M -0.407( is the most significant por-)W
60 636.666 M (tion and )S
FmE
743 0 :M
f4_10 sf
( )S
749 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94.995 636.666 M 0 0 30(ll\311ll)FmTx
FmE
749 0 :M
f2_10 sf
( )S
751 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.995 636.666 M ( is the least significant portion.)S
60 652.666 M (The \')S
FmE
751 0 :M
f4_10 sf
( )S
757 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.846 652.666 M 0 0 6(p)FmTx
FmE
757 0 :M
f2_10 sf
( )S
759 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.846 652.666 M (\' bit reflects the state of the \"P\" bit in the corresponding hardware Base Address register.)S
FmE
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 11 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
760 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
760 0 :M
f0_12 sf
( )S
763 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
763 0 :M
f1_12 sf
( )S
766 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
766 0 :M
f2_12 sf
( )S
769 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (7)S
FmE
769 0 :M
f4_12 sf
( )S
776 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
776 0 :M
f0_10 sf
( )S
778 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 50.667 M (Encoding of type code \"ss\":)S
FmE
779 0 :M
f4_10 sf
( )S
785 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 68.667 M 0 0 12(00)FmTx
FmE
785 0 :M
f2_10 sf
( )S
787 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 68.667 M ( denotes  Configuration Space, in which case:)S
FmE
787 0 :M
f4_10 sf
( )S
793 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 80.667 M 0 0 6(n)FmTx
FmE
793 0 :M
f2_10 sf
( )S
795 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 80.667 M (must be zero)S
FmE
796 0 :M
f4_10 sf
( )S
802 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 92.667 M 0 0 6(p)FmTx
FmE
802 0 :M
f2_10 sf
( )S
804 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 92.667 M (must be zero)S
FmE
804 0 :M
f4_10 sf
( )S
810 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 104.667 M 0 0 6(t)FmTx
FmE
810 0 :M
f2_10 sf
( )S
812 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 104.667 M (must be zero)S
FmE
813 0 :M
f4_10 sf
( )S
819 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 116.667 M 0 0 48(bbbbbbbb)FmTx
FmE
819 0 :M
f2_10 sf
( )S
821 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351 116.667 M (,)S
FmE
821 0 :M
f4_10 sf
( )S
827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.5 116.667 M 0 0 30(ddddd)FmTx
FmE
827 0 :M
f2_10 sf
( )S
829 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.5 116.667 M (,)S
FmE
830 0 :M
f4_10 sf
( )S
836 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
386 116.667 M 0 0 18(fff)FmTx
FmE
836 0 :M
f2_10 sf
( )S
838 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
404 116.667 M (,)S
FmE
838 0 :M
f4_10 sf
( )S
844 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406.5 116.667 M 0 0 54(rrrrrrrrr)FmTx
FmE
844 0 :M
f2_10 sf
( )S
846 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
460.5 116.667 M -0.127(is the Configura-)W
303 128.667 M (tion Space address)S
FmE
847 0 :M
f4_10 sf
( )S
853 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 140.667 M 0 0 30(hh\311hh)FmTx
FmE
853 0 :M
f2_10 sf
( )S
855 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333 140.667 M (,)S
FmE
855 0 :M
f4_10 sf
( )S
861 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.5 140.667 M 0 0 30(ll\311ll)FmTx
FmE
861 0 :M
f2_10 sf
( )S
863 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.5 140.667 M (must be zero)S
FmE
864 0 :M
f4_10 sf
( )S
870 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 164.667 M 0 0 12(01)FmTx
FmE
870 0 :M
f2_10 sf
( )S
872 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 164.667 M ( denotes  I/O Space, in which case:)S
FmE
872 0 :M
f4_10 sf
( )S
878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 176.667 M 0 0 6(p)FmTx
FmE
878 0 :M
f2_10 sf
( )S
880 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 176.667 M (must be zero)S
FmE
881 0 :M
f4_10 sf
( )S
887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 188.666 M 0 0 6(t)FmTx
FmE
887 0 :M
f2_10 sf
( )S
889 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 188.666 M (is set if 10-bit aliasing is present \(for non-relocatable\),)S
303 200.666 M (or below 64 KB required \(for relocatable\).)S
FmE
889 0 :M
f4_10 sf
( )S
895 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 212.666 M 0 0 48(bbbbbbbb)FmTx
FmE
895 0 :M
f2_10 sf
( )S
897 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.6 212.666 M (,)S
FmE
898 0 :M
f4_10 sf
( )S
904 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.1 212.666 M 0 0 30(ddddd)FmTx
FmE
904 0 :M
f2_10 sf
( )S
906 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.1 212.666 M (,)S
FmE
906 0 :M
f4_10 sf
( )S
912 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.6 212.666 M 0 0 18(fff)FmTx
FmE
912 0 :M
f2_10 sf
( )S
914 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.6 212.666 M (,)S
FmE
915 0 :M
f4_10 sf
( )S
921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.1 212.666 M 0 0 48(rrrrrrrr)FmTx
FmE
921 0 :M
f2_10 sf
( )S
923 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 212.666 M (identifies the region\'s Base Address Register )S
FmE
923 0 :M
f4_10 sf
( )S
929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 224.666 M 0 0 48(rrrrrrrr)FmTx
FmE
929 0 :M
f2_10 sf
( )S
931 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351 224.666 M ( can be 0x10, 0x14, 0x18, 0x1c, 0x20 or )S
303 236.666 M (0x24 \(for relocatable\).)S
FmE
932 0 :M
f4_10 sf
( )S
938 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 248.666 M 0 0 48(rrrrrrrr)FmTx
FmE
938 0 :M
f2_10 sf
( )S
940 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351 248.666 M (is 0x00 for non-relocatable)S
FmE
940 0 :M
f4_10 sf
( )S
946 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 260.666 M 0 0 30(hh\311hh)FmTx
FmE
946 0 :M
f2_10 sf
( )S
948 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 260.666 M (must be zero)S
78 272.666 M (    If )S
FmE
949 0 :M
f4_10 sf
( )S
955 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 272.666 M 0 0 6(n)FmTx
FmE
955 0 :M
f2_10 sf
( )S
957 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.155 272.666 M ( is 0:)S
FmE
957 0 :M
f4_10 sf
( )S
963 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 272.666 M 0 0 30(ll\311ll)FmTx
FmE
963 0 :M
f2_10 sf
( )S
965 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.6 272.666 M ( )S
134.9 N -0.621(is the 32-bit offset from the start of the relocatable region )W
303 284.666 M (of I/O Space)S
78 296.666 M (    If )S
FmE
966 0 :M
f4_10 sf
( )S
972 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 296.666 M 0 0 6(n)FmTx
FmE
972 0 :M
f2_10 sf
( )S
974 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.155 296.666 M ( is 1:)S
FmE
974 0 :M
f4_10 sf
( )S
980 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 296.666 M 0 0 30(ll\311ll)FmTx
FmE
980 0 :M
f2_10 sf
( )S
982 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.6 296.666 M ( )S
134.9 N (is the 32-bit I/O Space address)S
FmE
983 0 :M
f4_10 sf
( )S
989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 320.666 M 0 0 12(10)FmTx
FmE
989 0 :M
f2_10 sf
( )S
991 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 320.666 M ( denotes  32-bit-address Memory Space, in which case:)S
FmE
991 0 :M
f4_10 sf
( )S
997 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 332.666 M 0 0 6(p)FmTx
FmE
997 0 :M
f2_10 sf
( )S
999 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 332.666 M ( may be either 0 or 1)S
FmE
1000 0 :M
f4_10 sf
( )S
1006 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 344.666 M 0 0 6(t)FmTx
FmE
1006 0 :M
f2_10 sf
( )S
1008 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 344.666 M (is set if an address below 1 MB is required)S
FmE
1008 0 :M
f4_10 sf
( )S
1014 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 356.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1014 0 :M
f2_10 sf
( )S
1016 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.6 356.666 M (,)S
FmE
1017 0 :M
f4_10 sf
( )S
1023 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.1 356.666 M 0 0 30(ddddd)FmTx
FmE
1023 0 :M
f2_10 sf
( )S
1025 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.1 356.666 M (,)S
FmE
1025 0 :M
f4_10 sf
( )S
1031 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.6 356.666 M 0 0 18(fff)FmTx
FmE
1031 0 :M
f2_10 sf
( )S
1033 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.6 356.666 M (,)S
FmE
1034 0 :M
f4_10 sf
( )S
1040 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.1 356.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1040 0 :M
f2_10 sf
( )S
1042 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.1 356.666 M ( )S
13.4 N -0.005(identifies the relocatable region\'s Base Address Register)W
FmE
1042 0 :M
f4_10 sf
( )S
1048 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 368.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1048 0 :M
f2_10 sf
( )S
1050 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351 368.666 M -0.362( can be 0x10, 0x14, 0x18, 0x1c, 0x20, 0x24, )W
303 380.666 M (0x30 \(relocatable\))S
FmE
1051 0 :M
f4_10 sf
( )S
1057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 392.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1057 0 :M
f2_10 sf
( )S
1059 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351 392.666 M ( is 0x00 for non-relocatable)S
FmE
1059 0 :M
f4_10 sf
( )S
1065 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 404.666 M 0 0 30(hh\311hh)FmTx
FmE
1065 0 :M
f2_10 sf
( )S
1067 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.6 404.666 M ( )S
134.9 N (must be zero)S
78 416.666 M (    If )S
FmE
1068 0 :M
f4_10 sf
( )S
1074 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 416.666 M 0 0 6(n)FmTx
FmE
1074 0 :M
f2_10 sf
( )S
1076 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.155 416.666 M ( is 0:)S
FmE
1076 0 :M
f4_10 sf
( )S
1082 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 416.666 M 0 0 30(ll\311ll)FmTx
FmE
1082 0 :M
f2_10 sf
( )S
1084 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 416.666 M -0.621(is the 32-bit offset from the start of the relocatable region )W
303 428.666 M (of 32-bit address Memory Space)S
78 440.666 M (    If )S
FmE
1085 0 :M
f4_10 sf
( )S
1091 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 440.666 M 0 0 6(n)FmTx
FmE
1091 0 :M
f2_10 sf
( )S
1093 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.155 440.666 M ( is 1:)S
FmE
1093 0 :M
f4_10 sf
( )S
1099 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 440.666 M 0 0 30(ll\311ll)FmTx
FmE
1099 0 :M
f2_10 sf
( )S
1101 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 440.666 M (is the 32-bit Memory Space address)S
FmE
1102 0 :M
f4_10 sf
( )S
1108 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 464.666 M 0 0 12(11)FmTx
FmE
1108 0 :M
f2_10 sf
( )S
1110 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 464.666 M ( denotes  64-bit-address Memory Space, in which case:)S
FmE
1110 0 :M
f4_10 sf
( )S
1116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 476.666 M 0 0 6(p)FmTx
FmE
1116 0 :M
f2_10 sf
( )S
1118 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 476.666 M (may be either 0 or 1)S
FmE
1119 0 :M
f4_10 sf
( )S
1125 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 488.666 M 0 0 6(t)FmTx
FmE
1125 0 :M
f2_10 sf
( )S
1127 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 488.666 M (must be 0)S
FmE
1127 0 :M
f4_10 sf
( )S
1133 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 500.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1133 0 :M
f2_10 sf
( )S
1135 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.6 500.666 M (,)S
FmE
1136 0 :M
f4_10 sf
( )S
1142 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.1 500.666 M 0 0 30(ddddd)FmTx
FmE
1142 0 :M
f2_10 sf
( )S
1144 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.1 500.666 M (,)S
FmE
1144 0 :M
f4_10 sf
( )S
1150 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.6 500.666 M 0 0 18(fff)FmTx
FmE
1150 0 :M
f2_10 sf
( )S
1152 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.6 500.666 M (,)S
FmE
1153 0 :M
f4_10 sf
( )S
1159 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.1 500.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1159 0 :M
f2_10 sf
( )S
1161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 500.666 M (identifies the first register of the relocatable region\'s )S
303 512.666 M (Base Address )S
(Register pair.  )S
FmE
1161 0 :M
f4_10 sf
( )S
1167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.064 512.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1167 0 :M
f2_10 sf
( )S
1169 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
467.064 512.666 M ( can be 0x10, )S
303 524.666 M (0x14, 0x18, 0x1c, or 0x20)S
78 536.666 M (    If )S
FmE
1170 0 :M
f4_10 sf
( )S
1176 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 536.666 M 0 0 6(n)FmTx
FmE
1176 0 :M
f2_10 sf
( )S
1178 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.155 536.666 M ( is 0:)S
FmE
1178 0 :M
f4_10 sf
( )S
1184 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 536.666 M 0 0 30(hh\311hh)FmTx
FmE
1184 0 :M
f2_10 sf
( )S
1186 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.6 536.666 M (,)S
FmE
1187 0 :M
f4_10 sf
( )S
1193 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.1 536.666 M 0 0 30(ll\311ll)FmTx
FmE
1193 0 :M
f2_10 sf
( )S
1195 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 536.666 M -0.621(is the 64-bit offset from the start of the relocatable region )W
303 548.666 M -0.324(of 64-bit address Memory Space to the start of the subre-)W
303 560.666 M (gion)S
78 572.666 M (    If )S
FmE
1195 0 :M
f4_10 sf
( )S
1201 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.155 572.666 M 0 0 6(n)FmTx
FmE
1201 0 :M
f2_10 sf
( )S
1203 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.155 572.666 M ( is 1:)S
FmE
1204 0 :M
f4_10 sf
( )S
1210 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 572.666 M 0 0 30(hh\311hh)FmTx
FmE
1210 0 :M
f2_10 sf
( )S
1212 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.6 572.666 M (,)S
FmE
1212 0 :M
f4_10 sf
( )S
1218 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.1 572.666 M 0 0 30(ll\311ll)FmTx
FmE
1218 0 :M
f2_10 sf
( )S
1220 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 572.666 M (is the 64-bit Memory Space address)S
FmE
1221 0 :M
f3_10 sf
( )S
1223 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 588.666 M -0.155(Note:  Although the bit format of the phys.hi cell is generally consistent with the bit format of a particular kind of)W
78 600.666 M 0.301(hardware mechanism for Configuration Space access that is recommended by the PCI standard, the use of that)W
78 612.666 M -0.358(format does not imply that the hardware must use the same format. The numerical representation specified herein)W
78 624.666 M -0.358(contains the information needed to select a particular hardware device, specifying the format by which that infor-)W
78 636.666 M 0.202(mation is communicated among elements of Open Firmware firmware and client programs.  A driver for a par-)W
78 648.666 M 0.596(ticular PCI bus hardware implementation is free to extract that information and reformat as necessary for the)W
78 660.666 M (hardware.)S
78 678.666 M 0.159(Note:  Although the )W
FmE
1223 0 :M
f2_10 sf
( )S
1225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.732 678.666 M 0.159(PCI Local Bus Specification)W
FmE
1226 0 :M
f3_10 sf
( )S
1228 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274.343 678.666 M 0.159( defines both prefetchable and non-prefetchable 64-bit-address)W
78 690.666 M -0.605(Memory Space, the )W
FmE
1228 0 :M
f2_10 sf
( )S
1230 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
155.592 690.666 M -0.605(PCI-to-PCI B)W
-0.605(ridge Architecture Specification)W
FmE
1231 0 :M
f3_10 sf
( )S
1233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.755 690.666 M -0.605( does not specify a standard means of supporting)W
78 702.666 M (non-prefetchable 64-bit-address Memory Space across )S
(PCI-to-PCI b)S
(ridges. )S
FmE
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 12 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1233 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1233 0 :M
f0_12 sf
( )S
1236 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
1236 0 :M
f2_12 sf
( )S
1239 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (8)S
FmE
1239 0 :M
f1_12 sf
( )S
1242 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
1242 0 :M
f4_12 sf
( )S
1249 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
1249 0 :M
f0_10 sf
( )S
1251 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 50.667 M (2.2.1.2. Text Representation)S
FmE
1252 0 :M
f2_10 sf
( )S
1254 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 66.667 M (The text representation of a PCI address is one of the following forms:)S
96 78.667 M (DD)S
FmE
1254 0 :M
f4_10 sf
( )S
1260 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 90.667 M 0 0 24(DD,F)FmTx
96 102.667 M 0 0 138([n]i[t]DD,F,RR,NNNNNNNN)FmTx
96 114.667 M 0 0 156([n]m[t][p]DD,F,RR,NNNNNNNN)FmTx
96 126.667 M 0 0 186([n]x[p]DD,F,RR,NNNNNNNNNNNNNNNN)FmTx
FmE
1260 0 :M
f2_10 sf
( )S
1262 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 142.667 M (where:)S
FmE
1263 0 :M
f4_10 sf
( )S
1269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 154.667 M 0 0 12(DD)FmTx
FmE
1269 0 :M
f2_10 sf
( )S
1271 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 154.667 M (is an ASCII hexadecimal number in the range )S
FmE
1271 0 :M
f4_10 sf
( )S
1277 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.481 154.667 M 0 0 24(0\3111F)FmTx
96 166.667 M 0 0 6(F)FmTx
FmE
1277 0 :M
f2_10 sf
( )S
1279 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 166.667 M (is an ASCII numeral in the range )S
FmE
1280 0 :M
f4_10 sf
( )S
1286 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.67 166.667 M 0 0 18(0\3117)FmTx
96 178.667 M 0 0 12(RR)FmTx
FmE
1286 0 :M
f2_10 sf
( )S
1288 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 178.667 M (is an ASCII hexadecimal number in the range )S
FmE
1288 0 :M
f4_10 sf
( )S
1294 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.481 178.667 M 0 0 24(0\311FF)FmTx
96 190.666 M 0 0 48(NNNNNNNN)FmTx
FmE
1294 0 :M
f2_10 sf
( )S
1296 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 190.666 M (is an ASCII hexadecimal number in the range )S
FmE
1297 0 :M
f4_10 sf
( )S
1303 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.481 190.666 M 0 0 60(0\311FFFFFFFF)FmTx
96 202.666 M 0 0 96(NNNNNNNNNNNNNNNN)FmTx
FmE
1303 0 :M
f2_10 sf
( )S
1305 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 202.666 M (is )S
(an )S
(ASCII )S
(hexadecimal )S
(number )S
(in )S
(the )S
(range )S
FmE
1305 0 :M
f4_10 sf
( )S
1311 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.481 202.666 M 0 0 108(0\311FFFFFFFFFFFFFFFF)FmTx
96 214.666 M 0 0 18([n])FmTx
FmE
1311 0 :M
f2_10 sf
( )S
1313 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 214.666 M (is the letter \')S
FmE
1314 0 :M
f4_10 sf
( )S
1320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 214.666 M 0 0 6(n)FmTx
FmE
1320 0 :M
f2_10 sf
( )S
1322 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.723 214.666 M (\', whose presence is optional)S
FmE
1322 0 :M
f4_10 sf
( )S
1328 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 226.666 M 0 0 18([t])FmTx
FmE
1328 0 :M
f2_10 sf
( )S
1330 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 226.666 M (is the letter \')S
FmE
1331 0 :M
f4_10 sf
( )S
1337 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 226.666 M 0 0 6(t)FmTx
FmE
1337 0 :M
f2_10 sf
( )S
1339 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.723 226.666 M (\', whose presence is optional)S
FmE
1339 0 :M
f4_10 sf
( )S
1345 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 238.666 M 0 0 18([p])FmTx
FmE
1345 0 :M
f2_10 sf
( )S
1347 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 238.666 M (is the letter \')S
FmE
1348 0 :M
f4_10 sf
( )S
1354 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 238.666 M 0 0 6(p)FmTx
FmE
1354 0 :M
f2_10 sf
( )S
1356 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.723 238.666 M (\', whose presence is optional)S
FmE
1356 0 :M
f4_10 sf
( )S
1362 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 250.666 M 0 0 6(i)FmTx
FmE
1362 0 :M
f2_10 sf
( )S
1364 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 250.666 M (is the letter \')S
FmE
1365 0 :M
f4_10 sf
( )S
1371 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 250.666 M 0 0 6(i)FmTx
FmE
1371 0 :M
f2_10 sf
( )S
1373 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.723 250.666 M (\')S
FmE
1373 0 :M
f4_10 sf
( )S
1379 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 262.666 M 0 0 6(m)FmTx
FmE
1379 0 :M
f2_10 sf
( )S
1381 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 262.666 M (is the letter \')S
FmE
1382 0 :M
f4_10 sf
( )S
1388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 262.666 M 0 0 6(m)FmTx
FmE
1388 0 :M
f2_10 sf
( )S
1390 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.723 262.666 M (\')S
FmE
1390 0 :M
f4_10 sf
( )S
1396 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 274.666 M 0 0 6(x)FmTx
FmE
1396 0 :M
f2_10 sf
( )S
1398 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 274.666 M (is the letter \')S
FmE
1399 0 :M
f4_10 sf
( )S
1405 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.723 274.666 M 0 0 6(x)FmTx
FmE
1405 0 :M
f2_10 sf
( )S
1407 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.723 274.666 M (\')S
FmE
1407 0 :M
f4_10 sf
( )S
1413 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 286.666 M 0 0 6(,)FmTx
FmE
1413 0 :M
f2_10 sf
( )S
1415 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 286.666 M (is the character \')S
FmE
1416 0 :M
f4_10 sf
( )S
1422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.81 286.666 M 0 0 6(,)FmTx
FmE
1422 0 :M
f2_10 sf
( )S
1424 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274.81 286.666 M (\' \(comma\))S
60 302.666 M (The correspondence between the text representations and numerical representation is as follows:)S
FmE
1424 0 :M
f4_10 sf
( )S
1430 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 318.666 M 0 0 12(DD)FmTx
FmE
1430 0 :M
f2_10 sf
( )S
1432 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 334.666 M (corresponds to a Configuration Space address with the numerical value:)S
FmE
1433 0 :M
f4_10 sf
( )S
1439 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 346.666 M 0 0 12(ss)FmTx
FmE
1439 0 :M
f2_10 sf
( )S
1441 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 346.666 M ( )S
(is 00)S
FmE
1441 0 :M
f4_10 sf
( )S
1447 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 358.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1447 0 :M
f2_10 sf
( )S
1449 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 358.666 M ( )S
(is the parent\'s bus number)S
FmE
1450 0 :M
f4_10 sf
( )S
1456 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 370.666 M 0 0 30(ddddd)FmTx
FmE
1456 0 :M
f2_10 sf
( )S
1458 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 370.666 M ( )S
(is the binary encoding of )S
FmE
1458 0 :M
f4_10 sf
( )S
1464 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.412 370.666 M 0 0 12(DD)FmTx
150 382.666 M 0 0 18(fff)FmTx
FmE
1464 0 :M
f2_10 sf
( )S
1466 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 382.666 M (is zero)S
FmE
1467 0 :M
f4_10 sf
( )S
1473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 394.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1473 0 :M
f2_10 sf
( )S
1475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 394.666 M ( )S
(is zero)S
FmE
1475 0 :M
f4_10 sf
( )S
1481 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 406.666 M 0 0 36(hh\311hh )FmTx
FmE
1481 0 :M
f2_10 sf
( )S
1483 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 406.666 M (is zero)S
FmE
1484 0 :M
f4_10 sf
( )S
1490 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 418.666 M 0 0 30(ll\311ll)FmTx
FmE
1490 0 :M
f2_10 sf
( )S
1492 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 418.666 M ( )S
(is zero)S
FmE
1492 0 :M
f4_10 sf
( )S
1498 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118.32 436.666 M 0 0 24(DD,F)FmTx
FmE
1498 0 :M
f2_10 sf
( )S
1500 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 452.666 M (corresponds to a Configuration Space address with the numerical value:)S
FmE
1501 0 :M
f4_10 sf
( )S
1507 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 464.666 M 0 0 12(ss)FmTx
FmE
1507 0 :M
f2_10 sf
( )S
1509 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 464.666 M ( )S
(is 00)S
FmE
1509 0 :M
f4_10 sf
( )S
1515 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 476.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1515 0 :M
f2_10 sf
( )S
1517 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 476.666 M ( )S
(is the parent\'s bus number)S
FmE
1518 0 :M
f4_10 sf
( )S
1524 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 488.666 M 0 0 30(ddddd)FmTx
FmE
1524 0 :M
f2_10 sf
( )S
1526 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 488.666 M ( )S
(is the binary encoding of )S
FmE
1526 0 :M
f4_10 sf
( )S
1532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.412 488.666 M 0 0 12(DD)FmTx
150 500.666 M 0 0 18(fff)FmTx
FmE
1532 0 :M
f2_10 sf
( )S
1534 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 500.666 M (is the binary encoding of )S
FmE
1535 0 :M
f4_10 sf
( )S
1541 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.912 500.666 M 0 0 6(F)FmTx
150 512.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1541 0 :M
f2_10 sf
( )S
1543 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 512.666 M (is zero)S
FmE
1543 0 :M
f4_10 sf
( )S
1549 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 524.666 M 0 0 30(hh\311hh)FmTx
FmE
1549 0 :M
f2_10 sf
( )S
1551 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 524.666 M ( )S
(is zero)S
FmE
1552 0 :M
f4_10 sf
( )S
1558 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 536.666 M 0 0 36(ll\311ll )FmTx
FmE
1558 0 :M
f2_10 sf
( )S
1560 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 536.666 M (is zero)S
FmE
1560 0 :M
f4_10 sf
( )S
1566 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 560.666 M 0 0 138([n]i[t]DD,F,RR,NNNNNNNN)FmTx
FmE
1566 0 :M
f2_10 sf
( )S
1568 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 584.666 M -0.068(corresponds to a relocatable \(if \')W
FmE
1569 0 :M
f4_10 sf
( )S
1575 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.775 584.666 M 0 0 6(n)FmTx
FmE
1575 0 :M
f2_10 sf
( )S
1577 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
265.775 584.666 M -0.068(\' is not present\) or a non-relocatable \(if \')W
FmE
1577 0 :M
f4_10 sf
( )S
1583 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
424.857 584.666 M 0 0 6(n)FmTx
FmE
1583 0 :M
f2_10 sf
( )S
1585 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
430.857 584.666 M -0.068(\' is present\) 32-bit   )W
132 596.666 M -0.082(I/O Space address with the numerical value.  If \')W
FmE
1586 0 :M
f4_10 sf
( )S
1592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
323.522 596.666 M 0 0 6(t)FmTx
FmE
1592 0 :M
f2_10 sf
( )S
1594 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
329.522 596.666 M -0.082(\' is present, only the low-order 10 bits of an   )W
132 608.666 M (I/O address range is indicated;  aliases are assumed to for all high-order bits.  The numerical )S
132 620.666 M (value is:)S
FmE
1594 0 :M
f4_10 sf
( )S
1600 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 632.666 M 0 0 12(ss)FmTx
FmE
1600 0 :M
f2_10 sf
( )S
1602 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 632.666 M ( is )S
FmE
1603 0 :M
f4_10 sf
( )S
1609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.667 632.666 M 0 0 12(01)FmTx
150 644.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1609 0 :M
f2_10 sf
( )S
1611 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 644.666 M ( )S
(is the parent\'s bus number)S
FmE
1611 0 :M
f4_10 sf
( )S
1617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 656.666 M 0 0 30(ddddd)FmTx
FmE
1617 0 :M
f2_10 sf
( )S
1619 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 656.666 M ( is the binary encoding of )S
FmE
1620 0 :M
f4_10 sf
( )S
1626 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.412 656.666 M 0 0 12(DD)FmTx
150 668.666 M 0 0 18(fff)FmTx
FmE
1626 0 :M
f2_10 sf
( )S
1628 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 668.666 M (is the binary encoding of )S
FmE
1628 0 :M
f4_10 sf
( )S
1634 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.912 668.666 M 0 0 6(F)FmTx
150 680.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1634 0 :M
f2_10 sf
( )S
1636 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 680.666 M ( is the binary encoding of )S
FmE
1637 0 :M
f4_10 sf
( )S
1643 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.412 680.666 M 0 0 12(RR)FmTx
150 692.666 M 0 0 30(hh\311hh)FmTx
FmE
1643 0 :M
f2_10 sf
( )S
1645 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 692.666 M ( )S
(is zero)S
FmE
1645 0 :M
f4_10 sf
( )S
1651 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 704.666 M 0 0 30(ll\311ll)FmTx
FmE
1651 0 :M
f2_10 sf
( )S
1653 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 704.666 M ( )S
(is the binary encoding of )S
FmE
1654 0 :M
f4_10 sf
( )S
1660 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.412 704.666 M 0 0 48(NNNNNNNN)FmTx
FmE
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 13 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1660 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1660 0 :M
f0_12 sf
( )S
1663 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
1663 0 :M
f1_12 sf
( )S
1666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
1666 0 :M
f2_12 sf
( )S
1669 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (9)S
FmE
1669 0 :M
f4_12 sf
( )S
1676 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
1676 0 :M
f4_10 sf
( )S
1682 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.6 50.667 M 0 0 156([n]m[t][p]DD,F,RR,NNNNNNNN)FmTx
FmE
1682 0 :M
f2_10 sf
( )S
1684 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 66.667 M 0.45(corresponds to a relocatable \(if \')W
FmE
1685 0 :M
f4_10 sf
( )S
1691 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
280.367 66.667 M 0 0 6(n)FmTx
FmE
1691 0 :M
f2_10 sf
( )S
1693 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
286.367 66.667 M 0.45(\' is not present\) or a non-relocatable \(if \'n\' is present\) 32-bit)W
150 78.667 M -0.39(Memory Space address.  If \')W
FmE
1693 0 :M
f4_10 sf
( )S
1699 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.797 78.667 M 0 0 6(t)FmTx
FmE
1699 0 :M
f2_10 sf
( )S
1701 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
265.797 78.667 M -0.39(\' is present, the address is within the first 1 MB of memory address)W
150 90.667 M (space.   The the numerical value is:)S
FmE
1702 0 :M
f4_10 sf
( )S
1708 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 102.667 M 0 0 12(ss)FmTx
FmE
1708 0 :M
f2_10 sf
( )S
1710 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 102.667 M ( )S
(is )S
FmE
1710 0 :M
f4_10 sf
( )S
1716 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
191.667 102.667 M 0 0 12(10)FmTx
168 114.667 M 0 0 48(bbbbbbbb)FmTx
FmE
1716 0 :M
f2_10 sf
( )S
1718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216 114.667 M ( )S
(is the parent\'s bus number)S
FmE
1719 0 :M
f4_10 sf
( )S
1725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 126.667 M 0 0 30(ddddd)FmTx
FmE
1725 0 :M
f2_10 sf
( )S
1727 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 126.667 M ( )S
(is the binary encoding of )S
FmE
1727 0 :M
f4_10 sf
( )S
1733 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.412 126.667 M 0 0 12(DD)FmTx
168 138.667 M 0 0 18(fff)FmTx
FmE
1733 0 :M
f2_10 sf
( )S
1735 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 138.667 M (is the binary encoding of )S
FmE
1736 0 :M
f4_10 sf
( )S
1742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.912 138.667 M 0 0 6(F)FmTx
168 150.667 M 0 0 48(rrrrrrrr)FmTx
FmE
1742 0 :M
f2_10 sf
( )S
1744 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216 150.667 M (is the binary encoding of )S
FmE
1744 0 :M
f4_10 sf
( )S
1750 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
317.912 150.667 M 0 0 12(RR)FmTx
168 162.667 M 0 0 30(hh\311hh)FmTx
FmE
1750 0 :M
f2_10 sf
( )S
1752 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 162.667 M ( is zero)S
FmE
1753 0 :M
f4_10 sf
( )S
1759 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 174.667 M 0 0 36(ll\311ll )FmTx
FmE
1759 0 :M
f2_10 sf
( )S
1761 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 174.667 M (is the binary encoding of )S
FmE
1761 0 :M
f4_10 sf
( )S
1767 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
305.912 174.667 M 0 0 48(NNNNNNNN)FmTx
135.6 198.666 M 0 0 186([n]x[p]DD,F,RR,NNNNNNNNNNNNNNNN)FmTx
FmE
1767 0 :M
f2_10 sf
( )S
1769 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 214.666 M (corresponds to a relocatable \(if \')S
FmE
1770 0 :M
f4_10 sf
( )S
1776 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.115 214.666 M 0 0 6(n)FmTx
FmE
1776 0 :M
f2_10 sf
( )S
1778 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.115 214.666 M (\' is not present\) or a non-relocatable \(if \')S
FmE
1778 0 :M
f4_10 sf
( )S
1784 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
443.742 214.666 M 0 0 6(n)FmTx
FmE
1784 0 :M
f2_10 sf
( )S
1786 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
449.742 214.666 M (\' is present\) 64-bit )S
150 226.666 M (Memory Space address with the numerical value:)S
FmE
1787 0 :M
f4_10 sf
( )S
1793 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 238.666 M 0 0 12(ss)FmTx
FmE
1793 0 :M
f2_10 sf
( )S
1795 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 238.666 M ( )S
(is )S
FmE
1795 0 :M
f4_10 sf
( )S
1801 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
191.667 238.666 M 0 0 12(10)FmTx
168 250.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1801 0 :M
f2_10 sf
( )S
1803 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216 250.666 M ( )S
(is the parent\'s bus number)S
FmE
1804 0 :M
f4_10 sf
( )S
1810 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 262.666 M 0 0 30(ddddd)FmTx
FmE
1810 0 :M
f2_10 sf
( )S
1812 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 262.666 M ( )S
(is the binary encoding of )S
FmE
1812 0 :M
f4_10 sf
( )S
1818 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.412 262.666 M 0 0 12(DD)FmTx
168 274.666 M 0 0 18(fff)FmTx
FmE
1818 0 :M
f2_10 sf
( )S
1820 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 274.666 M (is the binary encoding of )S
FmE
1821 0 :M
f4_10 sf
( )S
1827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.912 274.666 M 0 0 6(F)FmTx
168 286.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1827 0 :M
f2_10 sf
( )S
1829 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216 286.666 M ( is the binary encoding of )S
FmE
1829 0 :M
f4_10 sf
( )S
1835 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.412 286.666 M 0 0 12(RR)FmTx
168 298.666 M 0 0 30(hh\311hh)FmTx
FmE
1835 0 :M
f2_10 sf
( )S
1837 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 298.666 M (,)S
FmE
1838 0 :M
f4_10 sf
( )S
1844 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.5 298.666 M 0 0 30(ll\311ll)FmTx
FmE
1844 0 :M
f2_10 sf
( )S
1846 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
230.5 298.666 M ( is the binary encoding of )S
FmE
1846 0 :M
f4_10 sf
( )S
1852 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.912 298.666 M 0 0 96(NNNNNNNNNNNNNNNN)FmTx
FmE
1852 0 :M
f2_10 sf
( )S
1854 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 322.666 M -0.146(Conversion of hexadecimal numbers from text representation to numeric representation shall be case-insensitive,)W
78 334.666 M (and leading zeros shall be permitted but not required.)S
78 352.666 M -0.042(Conversion from numeric representation to text representation shall use the lower case forms of the hexadecimal)W
78 364.666 M 0.348(digits in the range )W
FmE
1855 0 :M
f4_10 sf
( )S
1861 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.816 364.666 M 0 0 18(a\311f)FmTx
FmE
1861 0 :M
f2_10 sf
( )S
1863 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.816 364.666 M 0.348(, suppressing leading zeroes, and the )W
FmE
1863 0 :M
f4_10 sf
( )S
1869 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.737 364.666 M 0 0 12(DD)FmTx
FmE
1869 0 :M
f2_10 sf
( )S
1871 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.737 364.666 M 0.348( form shall be used for Configuration Space ad-)W
78 376.666 M (dresses where )S
FmE
1872 0 :M
f4_10 sf
( )S
1878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136.296 376.666 M 0 0 18(fff)FmTx
FmE
1878 0 :M
f2_10 sf
( )S
1880 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
154.296 376.666 M ( is zero.)S
FmE
1880 0 :M
f0_10 sf
( )S
1882 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 406.666 M (2.2.1.3. Unit Address Representation)S
FmE
1883 0 :M
f2_10 sf
( )S
1885 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 422.666 M -0.43(As required by this specification\'s definition of the )W
FmE
1885 0 :M
f5_10 sf
( )S
1891 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.622 422.666 M 0 0 30(\"reg\")FmTx
FmE
1891 0 :M
f2_10 sf
( )S
1893 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
309.622 422.666 M -0.43( property, a function\'s \"unit-number\" \(i.e. the first com-)W
78 434.666 M -0.07(ponent of its \")W
FmE
1894 0 :M
f5_10 sf
( )S
1900 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
134.361 434.666 M 0 0 24(reg\")FmTx
FmE
1900 0 :M
f2_10 sf
( )S
1902 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
158.361 434.666 M -0.07( value\) is the Configuration Space address of the function\'s configuration registers. Since the)W
78 446.666 M 1.049(\"unit-number\" is the address that appears in an Open Firmware \'device path\', it follows that only the )W
FmE
1902 0 :M
f4_10 sf
( )S
1908 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
498.012 446.666 M 0 0 12(DD)FmTx
FmE
1908 0 :M
f2_10 sf
( )S
1910 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
510.012 446.666 M 1.049( and)W
FmE
1911 0 :M
f4_10 sf
( )S
1917 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 458.666 M 0 0 30(DD,FF)FmTx
FmE
1917 0 :M
f2_10 sf
( )S
1919 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 458.666 M ( forms of the text representation can appear in a \'device path\'.)S
FmE
1919 0 :M
f3_10 sf
( )S
1921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 474.666 M -0.37(Note:  Since the predominant use of the text representation is within \'device paths\', text representations of I/O and)W
78 486.666 M (Memory Space addresses are rarely seen by casual users.)S
78 502.666 M -0.167(Note:  The bus number does not appear in the text representation.  If the bus number were present, then the path-)W
78 514.666 M -0.104(name of a particular device would depend on the particular assignment of bus numbers to bus controllers, so the)W
78 526.666 M -0.025(pathname could change if )W
-0.025(PCI-to-PCI b)W
-0.025(ridges were added or removed from other slots.  \(It is generally undesir-)W
78 538.666 M 0.257(able for the pathname of a particular device to depend on the presence or absence of other devices that are not)W
78 550.666 M -0.432(its ancestors in the device tree.\)  The combination of a device node\'s position in the device tree, its Device Number)W
78 562.666 M 0.266(and its Function Number uniquely select an individual function based on physical characteristics of the system,)W
78 574.666 M (so the function\'s pathname does not change unless the device is physically moved.)S
78 590.666 M 0.154(Note:  The bus number appears in the numerical representation because that makes it easier to implement Con-)W
78 602.666 M 0.309(figuration Space access methods.  The )W
FmE
1922 0 :M
f7_10 sf
( )S
1928 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
235.653 602.666 M 0 0 66(decode-unit)FmTx
FmE
1928 0 :M
f3_10 sf
( )S
1930 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301.653 602.666 M 0.309( method automatically inserts the bus number in the nu-)W
78 614.666 M (merical representation; it can do so because each bus node knows the bus number of the bus it represents.)S
FmE
1930 0 :M
f2_10 sf
( )S
1932 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 632.666 M (Open Firmware implications:)S
78 650.666 M -0.085(Since some processors cannot generate I/O cycles directly, I/O Space accesses must be done with the register ac-)W
78 662.666 M (cess words \(e.g.,)S
FmE
1933 0 :M
f5_9 sf
( )S
1938 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.357 662.666 M 0 0 20( rb@)FmTx
FmE
1938 0 :M
f2_10 sf
( )S
1940 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.357 662.666 M (, )S
FmE
1940 0 :M
f5_9 sf
( )S
1945 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.357 662.666 M 0 0 15(rw!)FmTx
FmE
1945 0 :M
f2_10 sf
( )S
1947 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.357 662.666 M (\).)S
78 680.666 M -0.269(It is recommended that a range of virtual addresses be set aside for use by )W
FmE
1948 0 :M
f5_9 sf
( )S
1953 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
371.322 680.666 M 0 0 30(map-in)FmTx
FmE
1953 0 :M
f2_10 sf
( )S
1955 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
401.322 680.666 M -0.269( to I/O Space devices so that the)W
78 692.666 M (register access words can determine when an I/O cycle needs to be generated.)S
78 710.666 M -0.226(Since Configuration Space often does not appear as a subset of the system\'s physical address space, this firmware)W
78 722.666 M 0.718(specification provides bus-specific methods to access Configuration Space.  Likewise, it provides methods for)W
FmE
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 14 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1955 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1955 0 :M
f0_12 sf
( )S
1958 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
1958 0 :M
f2_12 sf
( )S
1961 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (10)S
FmE
1961 0 :M
f1_12 sf
( )S
1964 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
1964 0 :M
f4_12 sf
( )S
1971 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
1971 0 :M
f2_10 sf
( )S
1973 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 50.667 M (Special Cycles and Interrupt Acknowledge Cycles.)S
FmE
1974 0 :M
f0_12 sf
( )S
1977 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 85 M (2.3. Bus-specific Configuration Variables)S
FmE
1977 0 :M
f2_10 sf
( )S
1979 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 101.667 M -0.056(An Open Firmware-compliant User Interface on a system with a single built-in PCI bus )W
FmE
1979 0 :M
f3_10 sf
( )S
1981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
411.868 101.667 M (may)S
FmE
1982 0 :M
f2_10 sf
( )S
1984 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
428.526 101.667 M -0.056( implement the)W
60 113.667 M (following PCI-specific Configuration Variable.)S
FmE
1984 0 :M
f5_9 sf
( )S
1989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 127.667 M 0 0 70(pci-probe-list)FmTx
FmE
1989 0 :M
f2_10 sf
( )S
1991 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.687 127.667 M (\( -- list-str list-len \))S
116.468 N (N)S
FmE
1992 0 :M
f2_9 sf
( )S
1994 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 139 M (Holds list of slots to probe with )S
FmE
1994 0 :M
f5_9 sf
( )S
1999 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
193.734 139 M 0 0 45(probe-pci)FmTx
FmE
1999 0 :M
f2_9 sf
( )S
2001 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238.734 139 M ( .)S
78 154 M (A configuration variable containing a string, formatted as described in the following section, indicating the set of slots )S
78 163 M -0.137(that will be probed when )W
FmE
2001 0 :M
f5_9 sf
( )S
2006 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.033 163 M 0 0 45(probe-pci)FmTx
FmE
2006 0 :M
f2_9 sf
( )S
2008 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214.033 163 M -0.137( is executed.  The maximum length shall be sufficient to contain a string listing all )W
78 172 M (of the PCI bus\'s implemented slots.)S
FmE
2008 0 :M
f0_9 sf
( )S
2010 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 184 M (Configuration Variable Type)S
FmE
2011 0 :M
f2_9 sf
( )S
2013 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
189.984 184 M (: string)S
FmE
2013 0 :M
f0_9 sf
( )S
2015 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 196 M (Default value)S
FmE
2015 0 :M
f2_9 sf
( )S
2017 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.234 196 M (: a system-dependent value that includes all available slots, in numerically-ascending order.)S
FmE
2017 0 :M
f3_9 sf
( )S
2019 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 208 M (Note: )S
FmE
2020 0 :M
f5_9 sf
( )S
2025 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100.243 208 M 0 0 70(pci-probe-list)FmTx
FmE
2025 0 :M
f3_9 sf
( )S
2027 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
170.243 208 M ( is intended for the common case of a system with a single built-in PCI bus.  On systems with )S
78 217 M -0.598(multiple PCI buses, fine-grained control over the probe order can be achieved by repeated execution of the  )W
FmE
2027 0 :M
f5_9 sf
( )S
2032 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
458.348 217 M 0 0 50(probe-self)FmTx
FmE
2032 0 :M
f3_9 sf
( )S
2034 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
508.348 217 M -0.598( )W
78 226 M -0.079(method within individual bus nodes.  In any case, the ability to control the probe order is primarily intended as a conve-)W
78 235 M (nience when debugging faulty expansion cards.  Normally, the default probe order \(all available slots\) is used.)S
FmE
2034 0 :M
f0_12 sf
( )S
2037 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 267 M (2.4. Format of a Probe List)S
FmE
2037 0 :M
f2_10 sf
( )S
2039 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 283.667 M 0.118(A PCI probe list is a text string consisting of a series of lower-case hexadecimal numbers separated by commas.)W
60 295.667 M -0.197(Each number is in the range )W
FmE
2040 0 :M
f4_10 sf
( )S
2046 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.214 295.667 M 0 0 24(0\3111F)FmTx
FmE
2046 0 :M
f2_10 sf
( )S
2048 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.214 295.667 M -0.197(, corresponding to the slot with the same Device Number.  For a given PCI bus)W
60 307.667 M (implementation, only the numbers corresponding to existing slots are valid.)S
60 325.667 M (The first number in the series specifies the first slot to be probed, and so on.)S
FmE
2048 0 :M
f0_12 sf
( )S
2051 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 360 M (2.5. FCode Evaluation Semantics)S
FmE
2051 0 :M
f2_10 sf
( )S
2053 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 376.667 M (See the description of )S
FmE
2054 0 :M
f5_10 sf
( )S
2060 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.409 376.667 M 0 0 54(probe-pci)FmTx
FmE
2060 0 :M
f2_10 sf
( )S
2062 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
203.409 376.667 M ( for the precise specification of the FCode evaluation semantics.)S
FmE
2062 0 :M
f0_12 sf
( )S
2065 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 418 M (3. Bus Nodes)S
FmE
2065 0 :M
f3_10 sf
( )S
2067 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 434.667 M 0.461(Note: A )W
0.461(PCI-to-PCI b)W
0.461(ridge is a parent of one PCI bus and a child of another. Consequently, a device node)W
60 446.667 M (representing a PCI bridge is both a Bus Node and a Child Node, with both sets of properties and methods.)S
FmE
2068 0 :M
f0_12 sf
( )S
2071 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 481 M (3.1. Properties)S
60 516 M (3.1.1.  Open Firmware-defined Properties for Bus Nodes)S
FmE
2071 0 :M
f2_10 sf
( )S
2073 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 532.666 M -0.543(The following standard properties, as defined in Open Firmware, have special meanings or interpretations for PCI.)W
FmE
2073 0 :M
f5_9 sf
( )S
2078 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 558.666 M 0 0 65(\"device_type\")FmTx
FmE
2078 0 :M
f2_10 sf
( )S
2080 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 558.666 M (S)S
FmE
2081 0 :M
f2_9 sf
( )S
2083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 573 M -0.488(Standard )W
FmE
2083 0 :M
f3_9 sf
( )S
2085 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.75 573 M (prop-name)S
FmE
2085 0 :M
f2_9 sf
( )S
2087 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.237 573 M -0.488(  to specify the implemented interface. prop-encoded-array:  a string encoded with )W
FmE
2087 0 :M
f5_9 sf
( )S
2092 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
442.75 573 M 0 0 65(encode-string)FmTx
FmE
2092 0 :M
f2_9 sf
( )S
2094 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
507.75 573 M (.)S
78 585 M -0.13(The meaning of this property is as defined in Open Firmware.  A Standard Package conforming to this specification and )W
78 594 M (corresponding to a device that implements a PCI bus shall implement this property with the string value \")S
FmE
2095 0 :M
f4_9 sf
( )S
2100 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
457.817 594 M 0 0 15(pci)FmTx
FmE
2100 0 :M
f2_9 sf
( )S
2102 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
472.817 594 M (\".)S
FmE
2102 0 :M
f5_9 sf
( )S
2107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 607.666 M 0 0 80(\"#address-cells\")FmTx
FmE
2107 0 :M
f2_10 sf
( )S
2109 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 607.666 M (S)S
FmE
2109 0 :M
f2_9 sf
( )S
2111 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 622 M (Standard )S
FmE
2112 0 :M
f3_9 sf
( )S
2114 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.238 622 M (prop-name)S
FmE
2114 0 :M
f2_9 sf
( )S
2116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.725 622 M ( to define the number of cells necessary to represent a physical address.)S
FmE
2116 0 :M
f3_9 sf
( )S
2118 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 634 M (prop-encoded-array)S
FmE
2118 0 :M
f2_9 sf
( )S
2120 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 634 M (:  Integer constant 3, encoded with )S
FmE
2121 0 :M
f5_9 sf
( )S
2126 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
277.422 634 M 0 0 50(encode-int)FmTx
FmE
2126 0 :M
f2_9 sf
( )S
2128 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
327.422 634 M (.)S
78 646 M (The value of )S
FmE
2128 0 :M
f5_9 sf
( )S
2133 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.727 646 M 0 0 80(\"#address-cells\")FmTx
FmE
2133 0 :M
f2_9 sf
( )S
2135 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
205.727 646 M ( for PCI Bus Nodes is 3.)S
FmE
2135 0 :M
f5_9 sf
( )S
2140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 659.666 M 0 0 65(\"#size-cells\")FmTx
FmE
2140 0 :M
f2_10 sf
( )S
2142 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 659.666 M (S)S
FmE
2143 0 :M
f2_9 sf
( )S
2145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 674 M (Standard )S
FmE
2145 0 :M
f3_9 sf
( )S
2147 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.238 674 M (prop-name)S
FmE
2147 0 :M
f2_9 sf
( )S
2149 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.725 674 M ( to define the number of cells necessary to represent the length of a physical address range.)S
FmE
2149 0 :M
f3_9 sf
( )S
2151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 686 M (prop-encoded-array)S
FmE
2152 0 :M
f2_9 sf
( )S
2154 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 686 M (:  Integer constant 2, encoded as with)S
FmE
2154 0 :M
f5_9 sf
( )S
2159 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.917 686 M 0 0 55( encode-int)FmTx
FmE
2159 0 :M
f2_9 sf
( )S
2161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
339.917 686 M (.)S
78 698 M (The value of )S
FmE
2161 0 :M
f5_9 sf
( )S
2166 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.727 698 M 0 0 65(\"#size-cells\")FmTx
FmE
2166 0 :M
f2_9 sf
( )S
2168 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
190.727 698 M ( for PCI Bus Nodes is 2, reflecting PCI\'s 64-bit address space.)S
FmE
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 15 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
2168 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2168 0 :M
f0_12 sf
( )S
2171 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
2171 0 :M
f1_12 sf
( )S
2174 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
2174 0 :M
f2_12 sf
( )S
2177 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (11)S
FmE
2177 0 :M
f4_12 sf
( )S
2184 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
2184 0 :M
f5_9 sf
( )S
2189 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 50.667 M 0 0 25(\"reg\")FmTx
FmE
2189 0 :M
f2_10 sf
( )S
2191 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 50.667 M (S)S
FmE
2192 0 :M
f2_9 sf
( )S
2194 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 65 M (Standard )S
FmE
2194 0 :M
f3_9 sf
( )S
2196 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.238 65 M (prop-name)S
FmE
2196 0 :M
f2_9 sf
( )S
2198 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.725 65 M (  to define the package\'s unit-address.)S
96 77 M (For nodes representing PCI)S
(-t)S
(o)S
(-P)S
(CI bridges, the )S
FmE
2198 0 :M
f5_9 sf
( )S
2203 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.195 77 M 0 0 25(\"reg\")FmTx
FmE
2203 0 :M
f2_9 sf
( )S
2205 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
293.195 77 M ( property is as defined for PCI Child Nodes.  The value denotes )S
96 86 M (the Configuration Space address of the bridge\'s configuration registers.)S
96 98 M (For bridges from some other bus to PCI bus, the )S
FmE
2206 0 :M
f5_9 sf
( )S
2211 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.711 98 M 0 0 25(\"reg\")FmTx
FmE
2211 0 :M
f2_9 sf
( )S
2213 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
296.711 98 M ( property is as defined for that other bus)S
(.)S
FmE
2213 0 :M
f5_9 sf
( )S
2218 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 109.667 M 0 0 40(\"ranges\")FmTx
FmE
2218 0 :M
f2_10 sf
( )S
2220 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 109.667 M (S)S
FmE
2220 0 :M
f2_9 sf
( )S
2222 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 124 M (Standard )S
FmE
2223 0 :M
f3_9 sf
( )S
2225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.238 124 M (prop-name)S
FmE
2225 0 :M
f2_9 sf
( )S
2227 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.725 124 M (  to define the mapping of parent address to child address spaces.)S
96 136 M -0.005(This property )W
FmE
2227 0 :M
f3_9 sf
( )S
2229 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.973 136 M (shall)S
FmE
2229 0 :M
f2_9 sf
( )S
2231 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.474 136 M -0.005( be present for all PCI bus bridges.  In particular, for PCI-to-PCI bridges, this property )W
FmE
2232 0 :M
f3_9 sf
( )S
2234 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
477.524 136 M (shall)S
FmE
2234 0 :M
f2_9 sf
( )S
2236 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
495.025 136 M -0.005( indicate )W
96 145 M (the settings of the mapping registers, thus representing the addresses to which the bridge will respond.  For PCI-to-PCI )S
96 154 M -0.372(bridges, there shall be an entry in the )W
FmE
2236 0 :M
f5_9 sf
( )S
2241 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228.223 154 M 0 0 40(\"ranges\")FmTx
FmE
2241 0 :M
f2_9 sf
( )S
2243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.223 154 M -0.372( property for each of the Memory, Prefetchable Memory and/or I/O spac-)W
96 163 M (es if that address space is mapped through the bridge.)S
FmE
2243 0 :M
f0_12 sf
( )S
2246 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 195 M (3.1.2. )S
(B)S
(us-specific Properties for Bus Nodes)S
FmE
2246 0 :M
f5_9 sf
( )S
2251 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 209.667 M 0 0 85(\322clock-frequency\323)FmTx
FmE
2251 0 :M
f2_10 sf
( )S
2253 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 209.667 M (S)S
FmE
2254 0 :M
f3_9 sf
( )S
2256 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 224 M (prop-name)S
FmE
2256 0 :M
f2_9 sf
( )S
2258 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.487 224 M (, denotes frequency of PCI clock.)S
FmE
2258 0 :M
f3_9 sf
( )S
2260 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 236 M (prop-encoded-array)S
FmE
2261 0 :M
f2_9 sf
( )S
2263 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.969 236 M -0.352(:  An integer, encoded as with )W
FmE
2263 0 :M
f5_9 sf
( )S
2268 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276.466 236 M 0 0 50(encode-int)FmTx
FmE
2268 0 :M
f2_9 sf
( )S
2270 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
326.466 236 M -0.352(, that represents the clock frequency, in hertz, of the PCI )W
96 245 M (bus for which this node is the parent.)S
FmE
2270 0 :M
f5_9 sf
( )S
2275 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 258.667 M 0 0 55(\"bus-range\")FmTx
FmE
2275 0 :M
f2_10 sf
( )S
2277 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 258.667 M (S)S
FmE
2278 0 :M
f3_9 sf
( )S
2280 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 273 M (prop-name)S
FmE
2280 0 :M
f2_9 sf
( )S
2282 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.487 273 M (, denotes range of bus numbers controlled by this PCI bus.)S
FmE
2282 0 :M
f3_9 sf
( )S
2284 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 285 M (prop-encoded-array)S
FmE
2284 0 :M
f2_9 sf
( )S
2286 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.969 285 M -0.38(:  Two integers, each encoded as with )W
FmE
2287 0 :M
f5_9 sf
( )S
2292 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303.617 285 M 0 0 50(encode-int)FmTx
FmE
2292 0 :M
f2_9 sf
( )S
2294 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.617 285 M -0.38(, the first representing the bus number of the PCI )W
96 294 M -0.213(bus implemented by the bus controller represented by this node \(the )W
FmE
2294 0 :M
f3_9 sf
( )S
2296 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
340.328 294 M -0.213(secondary bus)W
FmE
2296 0 :M
f2_9 sf
( )S
2298 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
391.85 294 M -0.213( number in )W
-0.213(PCI-to-PCI b)W
-0.213(ridge nomen-)W
96 303 M -0.05(clature\), and the second representing the largest bus number of any PCI bus in the portion of the PCI domain that is sub-)W
96 312 M (ordinate to this node \(the )S
FmE
2298 0 :M
f3_9 sf
( )S
2300 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.221 312 M (subordinate bus)S
FmE
2301 0 :M
f2_9 sf
( )S
2303 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
245.968 312 M ( number in )S
(PCI-to-PCI b)S
(ridge nomenclature\).)S
FmE
2303 0 :M
f5_9 sf
( )S
2308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 323.667 M 0 0 60(\"slot-names\")FmTx
FmE
2308 0 :M
f2_10 sf
( )S
2310 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 323.667 M (S)S
FmE
2310 0 :M
f3_9 sf
( )S
2312 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 338 M (prop-name)S
FmE
2313 0 :M
f2_9 sf
( )S
2315 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.487 338 M (, describes external labeling of add-in slots.)S
FmE
2315 0 :M
f3_9 sf
( )S
2317 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 350 M (prop-encoded-array)S
FmE
2317 0 :M
f2_9 sf
( )S
2319 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.969 350 M -0.145(:  An integer, encoded as with )W
FmE
2319 0 :M
f5_9 sf
( )S
2324 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
277.912 350 M 0 0 50(encode-int)FmTx
FmE
2324 0 :M
f2_9 sf
( )S
2326 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
327.912 350 M -0.145(, followed by a list of strings, each encoded as with )W
FmE
2327 0 :M
f5_9 sf
( )S
2332 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
513 350 M 0 0 15(en-)FmTx
96 359 M 0 0 55(code-string)FmTx
FmE
2332 0 :M
f2_9 sf
( )S
2334 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151 359 M (.)S
96 371 M -0.436(The integer portion of the property value is a bitmask of available slots; for each add-in slot on the bus, the bit correspond-)W
96 380 M -0.534(ing to that slot\'s Device Number is set.  The least-significant bit corresponds to Device Number 0, the next bit corresponds )W
96 389 M (to Device Number 1, etc.  The number of following strings is the same as the number of slots; the first string gives the )S
96 398 M (label that is printed on the chassis for the slot with the smallest Device Number, and so on)S
(.)S
FmE
2334 0 :M
f5_9 sf
( )S
2339 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 409.667 M 0 0 100(\"bus-master-capable\")FmTx
FmE
2339 0 :M
f2_10 sf
( )S
2341 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 409.667 M (S)S
FmE
2341 0 :M
f3_9 sf
( )S
2343 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 424 M (prop-name)S
FmE
2344 0 :M
f2_9 sf
( )S
2346 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.487 424 M (, describes whether the device is wired to be PCI bus master capable.)S
FmE
2346 0 :M
f3_9 sf
( )S
2348 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 436 M (prop-encoded-array)S
FmE
2348 0 :M
f2_9 sf
( )S
2350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.969 436 M (:  An integer, encoded as with )S
FmE
2350 0 :M
f5_9 sf
( )S
2355 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.929 436 M 0 0 50(encode-int)FmTx
FmE
2355 0 :M
f2_9 sf
( )S
2357 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.929 436 M (.)S
96 448 M -0.428(The property value is a bitmask indicating whether the device is wired to be bus master capable.  The bit being set implies )W
96 457 M (that the device is so wired and the bit being reset implies that the device is not so wired.  The least significant bit corre-)S
96 466 M (sponds to Device Number 0, the next bit corresponds to Device Number 1, etc.)S
FmE
2358 0 :M
f0_12 sf
( )S
2361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 510 M (3.2. Methods)S
78 545 M (3.2.1. Open Firmware-defined Methods for Bus Nodes)S
FmE
2361 0 :M
f2_10 sf
( )S
2363 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 561.667 M -0.417(A Standard Package implementing the )W
FmE
2363 0 :M
f4_10 sf
( )S
2369 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
232.254 561.667 M 0 0 30(\"pci\")FmTx
FmE
2369 0 :M
f2_10 sf
( )S
2371 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.254 561.667 M -0.417( device type shall implement the following standard methods as de-)W
78 573.667 M -0.251(fined in Open Firmware, with the physical address representations as specified in section 2.1 of this standard, and)W
78 585.667 M (with additional PCI-specific semantics)S
FmE
2372 0 :M
f2_8 sf
( )S
2374 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
232.668 581.667 M (1)S
FmE
2374 0 :M
f2_10 sf
( )S
2376 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.668 585.667 M (:)S
FmE
2376 0 :M
f5_9 sf
( )S
2381 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 597 M 0 0 20(open)FmTx
FmE
2381 0 :M
f2_9 sf
( )S
2383 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.766 597 M ( \( -- okay? \))S
68.766 N (Prepare this device for subsequent use)S
FmE
78 605 450 16 rC
2383 0 :M
FrMacBegin
78 605.6 450 14.4 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
78 605.6 450 14.4 FmqF
0 FmP
87 609.416 FmB
144 0 FmL
2 0.5 FmSo
FmE
gR
gS 0 0 588 768 rC
2383 0 :M
f2_8 sf
( )S
2385 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 622.667 M (1.)S
FmE
2385 0 :M
f2_10 sf
( )S
2387 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
102 626.667 M 0.72(The method )W
FmE
2388 0 :M
f5_10 sf
( )S
2394 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.982 626.667 M 0 0 54(add-range)FmTx
FmE
2394 0 :M
f2_10 sf
( )S
2396 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
207.982 626.667 M 0.72( is reserved and shall not be implemented in future releases of OFW. The)W
96 638.667 M 0.326(presence of this method in the PCI node indicates to child nodes both that the )W
FmE
2396 0 :M
f5_10 sf
( )S
2402 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
412.753 638.667 M 0 0 36(map-in)FmTx
FmE
2402 0 :M
f2_10 sf
( )S
2404 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
448.753 638.667 M 0.326( method of this)W
96 650.667 M 0.232(bus node requires that the )W
FmE
2405 0 :M
f3_10 sf
( )S
2407 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.397 650.667 M (phys.lo)S
FmE
2407 0 :M
f2_10 sf
( )S
2409 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.003 650.667 M 0.232( address to be extracted from the )W
FmE
2410 0 :M
f4_10 sf
( )S
2416 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.613 650.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
2416 0 :M
f2_10 sf
( )S
2418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
485.613 650.667 M 0.232( prop-)W
96 662.667 M 1.061(erty  and that the )W
FmE
2418 0 :M
f5_10 sf
( )S
2424 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171 662.667 M 0 0 6(g)FmTx
0 0 126(et-inherited-property)FmTx
FmE
2424 0 :M
f2_10 sf
( )S
2426 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303 662.667 M 1.061( method does not return the )W
FmE
2427 0 :M
f4_10 sf
( )S
2433 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
421.555 662.667 M 0 0 48(prop-len)FmTx
FmE
2433 0 :M
f2_10 sf
( )S
2435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
469.555 662.667 M 1.061( \(only the)W
FmE
2435 0 :M
f4_10 sf
( )S
2441 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 674.667 M 0 0 6(p)FmTx
0 0 48(rop-addr)FmTx
FmE
2441 0 :M
f2_10 sf
( )S
2443 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 674.667 M 0.024( and )W
FmE
2444 0 :M
f4_10 sf
( )S
2450 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.487 674.667 M 0 0 30(false)FmTx
FmE
2450 0 :M
f2_10 sf
( )S
2452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
199.487 674.667 M 0.024(\) if the property is found.  The non-existence of this method indicates to child)W
96 686.667 M -0.506(nodes that the )W
FmE
2452 0 :M
f3_10 sf
( )S
2454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
152.521 686.667 M (phys.lo)S
FmE
2455 0 :M
f2_10 sf
( )S
2457 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.127 686.667 M -0.506( address is an offset relative to the base address \(when )W
FmE
2457 0 :M
f4_10 sf
( )S
2463 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
394.617 686.667 M 0 0 6(n)FmTx
FmE
2463 0 :M
f2_10 sf
( )S
2465 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.617 686.667 M -0.506(=0\) and that )W
FmE
2466 0 :M
f5_10 sf
( )S
2472 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450 686.667 M 0 0 60(get-inher-)FmTx
96 698.667 M 0 0 78(ited-property)FmTx
FmE
2472 0 :M
f2_10 sf
( )S
2474 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 698.667 M 1.054( returns three stack items \()W
FmE
2474 0 :M
f4_10 sf
( )S
2480 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285.048 698.667 M 0 0 54(prop-addr)FmTx
FmE
2480 0 :M
f2_10 sf
( )S
2482 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
339.048 698.667 M 1.054( )W
FmE
2483 0 :M
f4_10 sf
( )S
2489 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
342.602 698.667 M 0 0 48(prop-len)FmTx
FmE
2489 0 :M
f2_10 sf
( )S
2491 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
390.602 698.667 M 1.054( and )W
FmE
2491 0 :M
f4_10 sf
( )S
2497 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
412.148 698.667 M 0 0 30(false)FmTx
FmE
2497 0 :M
f2_10 sf
( )S
2499 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
442.148 698.667 M 1.054(\) if the inherited)W
96 710.667 M (property is found.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
58 392 2 89 FmqF
58 579 2 10 FmqF
58 620 2 106 FmqF
FmE
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 16 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
2500 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2500 0 :M
0 G
f0_12 sf
( )S
2503 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
2503 0 :M
f2_12 sf
( )S
2506 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (12)S
FmE
2506 0 :M
f1_12 sf
( )S
2509 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
2509 0 :M
f4_12 sf
( )S
2516 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
2516 0 :M
f5_9 sf
( )S
2521 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 50 M 0 0 25(close)FmTx
FmE
2521 0 :M
f2_9 sf
( )S
2523 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
195.76 50 M (\( -- \))S
81.76 N (Close this previously-open device)S
FmE
2523 0 :M
f5_9 sf
( )S
2528 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 62 M 0 0 30(map-in)FmTx
FmE
2528 0 :M
f2_9 sf
( )S
2530 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.767 62 M (\( phys.low phys.mid phys.hi size -- virt \))S
16.767 N (Map the specified subregion.)S
78 77 M (PCI-to-PCI b)S
(ridges pass through addresses unchanged.  Consequently, a )S
(PCI-to-PCI b)S
(ridge node\'s implementation of )S
FmE
2531 0 :M
f5_9 sf
( )S
2536 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 86 M 0 0 30(map-in)FmTx
FmE
2536 0 :M
f2_9 sf
( )S
2538 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 86 M ( typically just forwards the request to its parent.)S
78 98 M -0.28(For a master PCI bus node in \"probe state\", if the physical address is relocatable, the )W
FmE
2538 0 :M
f5_9 sf
( )S
2543 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
379.742 98 M 0 0 30(map-in)FmTx
FmE
2543 0 :M
f2_9 sf
( )S
2545 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
409.742 98 M -0.28(  method shall assign a base )W
78 107 M (address and set the appropriate base address register to that address.  Such \"probe state\" assignments are temporary and )S
78 116 M (are not necessarily valid after the corresponding )S
FmE
2545 0 :M
f5_9 sf
( )S
2550 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.159 116 M 0 0 35(map-out)FmTx
FmE
2550 0 :M
f2_9 sf
( )S
2552 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288.159 116 M (.)S
FmE
2552 0 :M
f5_9 sf
( )S
2557 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 125 M 0 0 35(map-out)FmTx
FmE
2557 0 :M
f2_9 sf
( )S
2559 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.267 125 M (\( virt size -- \))S
66.267 N (Destroy mapping from previous map-in)S
78 140 M (PCI-to-PCI b)S
(ridges pass through addresses unchanged.  Consequently, a )S
(PCI-to-PCI b)S
(ridge node\'s implementation of )S
FmE
2560 0 :M
f5_9 sf
( )S
2565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 149 M 0 0 35(map-out)FmTx
FmE
2565 0 :M
f2_9 sf
( )S
2567 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
113 149 M ( typically just forwards the request to its parent.)S
78 161 M -0.019(For a master PCI bus node in \"probe state\", if the physical address is relocatable and there are no other active mappings )W
78 170 M -0.27(within the relocatable region containing that address, the )W
FmE
2567 0 :M
f5_9 sf
( )S
2572 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.011 170 M 0 0 35(map-out)FmTx
FmE
2572 0 :M
f2_9 sf
( )S
2574 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
317.011 170 M -0.27( method shall unassign the base address of the region, )W
78 179 M -0.053(freeing the corresponding range of PCI address space for later re-use.  A Standard FCode program shall unmap \(as with )W
FmE
2574 0 :M
f5_9 sf
( )S
2579 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 188 M 0 0 35(map-out)FmTx
FmE
2579 0 :M
f2_9 sf
( )S
2581 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
113 188 M (\) all base addresses that it mapped and shall )S
(disable m)S
(emory or I/O space access in the Command Register.)S
FmE
2581 0 :M
f5_9 sf
( )S
2586 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 197 M 0 0 45(dma-alloc)FmTx
FmE
2586 0 :M
f2_9 sf
( )S
2588 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.267 197 M (\( size -- virt \))S
66.267 N (Allocate a memory region for later use)S
FmE
2589 0 :M
f5_9 sf
( )S
2594 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 209 M 0 0 40(dma-free)FmTx
FmE
2594 0 :M
f2_9 sf
( )S
2596 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.267 209 M (\( virt size -- \))S
66.267 N (Free memory allocated with dma-alloc)S
FmE
2596 0 :M
f5_9 sf
( )S
2601 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 221 M 0 0 50(dma-map-in)FmTx
FmE
2601 0 :M
f2_9 sf
( )S
2603 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.419 221 M (\( .. virt size cacheable? -- devaddr \))S
26.419 N (Convert virtual address to device bus DMA address.)S
FmE
2603 0 :M
f5_9 sf
( )S
2608 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 233 M 0 0 55(dma-map-out)FmTx
FmE
2608 0 :M
f2_9 sf
( )S
2610 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.65 233 M (\( virt devaddr size -- \))S
50.65 N (Free DMA mapping set up with dma-map-in)S
FmE
2610 0 :M
f5_9 sf
( )S
2615 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 245 M 0 0 40(dma-sync)FmTx
FmE
2615 0 :M
f2_9 sf
( )S
2617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.65 245 M (\( virt devaddr size -- \))S
50.65 N (Synchronize \(flush\) DMA memory caches)S
FmE
2618 0 :M
f5_9 sf
( )S
2623 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 257 M 0 0 50(probe-self)FmTx
0 0 5( )FmTx
FmE
2623 0 :M
f2_9 sf
( )S
2625 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115 257 M (\( arg-str arg-len reg-str reg-len fcode-str fcode-len -- \))S
(Interpret FCode, as a child of this node)S
FmE
2625 0 :M
f5_9 sf
( )S
2630 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 269 M 0 0 55(decode-unit)FmTx
FmE
2630 0 :M
f2_9 sf
( )S
2632 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.767 269 M (\( addr len -- phys.lo phys.mid phys.hi \))S
19.767 N (Convert text representation of address to numerical repre-)S
294 279 M (sentation)S
FmE
2632 0 :M
f5_9 sf
( )S
2637 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 289 M 0 0 55(encode-unit)FmTx
FmE
2637 0 :M
f2_9 sf
( )S
2639 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.767 289 M (\( phys.lo phys.mid phys.hi -- addr len \))S
19.767 N (Convert numerical representation of address to text repre-)S
294 299 M (sentation)S
FmE
2639 0 :M
f3_10 sf
( )S
2641 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 313.667 M -0.051(Note:  The PCI bus is little-endian; i.e. a byte address whose least-significant two bits are both zero uses the bus)W
60 325.667 M 0.054(byte lane containing the least-significant portion of a 32-bit quantity.  Typically, a bridge from a big-endian bus)W
60 337.667 M 0.065(to a PCI bus will swap the byte lanes so that the order of a sequence of bytes is preserved when that sequence is)W
60 349.667 M -0.45(transferred across the bridge.  As a result, the hardware changes the position of bytes within a 32-bit quantity that)W
60 361.667 M -0.096(is viewed as a 32-bit unit, rather than as a sequence of individually-addressed bytes.  In order to properly imple-)W
60 373.667 M -0.501(ment the semantics of the Open Firmware register access words \(e.g.  )W
FmE
2642 0 :M
f1_10 sf
( )S
2644 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.121 373.667 M (rl!\))S
FmE
2644 0 :M
f3_10 sf
( )S
2646 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.006 373.667 M -0.501(, the device node for such byte-swapping)W
60 385.667 M (bridges must substitute versions of those words that \"undo\" the hardware byte-swapping.)S
FmE
2647 0 :M
f0_12 sf
( )S
2650 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 420 M (3.2.2. Bus-specific Methods for Bus Nodes)S
60 455 M (3.2.3. Configuration Access Words)S
FmE
2650 0 :M
f2_10 sf
( )S
2652 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 471.667 M -0.028(The methods described below have execution semantics similar \(especially with respect to write-buffer flushing,)W
60 483.667 M 0.285(atomicity, etc.\)  to those of the register access words \(e.g., )W
FmE
2652 0 :M
f5_10 sf
( )S
2658 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.032 483.667 M 0 0 6(r)FmTx
FmE
2658 0 :M
f0_10 sf
( )S
2660 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
304.032 483.667 M (b@)S
FmE
2661 0 :M
f2_10 sf
( )S
2663 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
318.89 483.667 M 0.285(, )W
FmE
2663 0 :M
f0_10 sf
( )S
2665 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
324.175 483.667 M (rw!)S
FmE
2666 0 :M
f2_10 sf
( )S
2668 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
339.161 483.667 M 0.285(\); in most implementations, these methods)W
60 495.667 M (will be implemented via the register access words.)S
60 511.667 M -0.28(The data type \'config-addr\' refers to the \'phys.hi\' cell of the numerical representation of a Configuration Space ad-)W
60 522.666 M (dress.  The \'config-addr\' shall be aligned to the data type of the access. )S
FmE
2668 0 :M
f5_9 sf
( )S
2673 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 535.666 M 0 0 45(config-l@)FmTx
FmE
2673 0 :M
f2_9 sf
( )S
2675 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.028 535.666 M (\( config-addr -- data \))S
96 547 M (Performs a 32-bit Configuration Read.)S
FmE
2676 0 :M
f5_9 sf
( )S
2681 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 566.666 M 0 0 45(config-l!)FmTx
FmE
2681 0 :M
f2_9 sf
( )S
2683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.028 566.666 M (\( data config-addr -- \))S
96 578 M (Performs a 32-bit Configuration Write.)S
FmE
2683 0 :M
f5_9 sf
( )S
2688 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 597.666 M 0 0 45(config-w@)FmTx
FmE
2688 0 :M
f2_9 sf
( )S
2690 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.028 597.666 M (\( config-addr -- data \))S
96 609 M (Performs a 16-bit Configuration Read.)S
FmE
2690 0 :M
f5_9 sf
( )S
2695 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 628.666 M 0 0 45(config-w!)FmTx
FmE
2695 0 :M
f2_9 sf
( )S
2697 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.028 628.666 M (\( data config-addr -- \))S
96 640 M (Performs a 16-bit Configuration Write.)S
FmE
2697 0 :M
f5_9 sf
( )S
2702 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 659.666 M 0 0 45(config-b@)FmTx
FmE
2702 0 :M
f2_9 sf
( )S
2704 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.028 659.666 M (\( config-addr -- data \))S
96 671 M (Performs an 8-bit Configuration Read.)S
FmE
2705 0 :M
f5_9 sf
( )S
2710 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 690.666 M 0 0 45(config-b!)FmTx
FmE
2710 0 :M
f2_9 sf
( )S
2712 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.028 690.666 M (\( data config-addr -- \))S
96 702 M (Performs an 8-bit Configuration Write.)S
FmE
2712 0 :M
f5_9 sf
( )S
2717 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 717.666 M 0 0 120(assign-package-addresses)FmTx
FmE
2717 0 :M
f2_9 sf
( )S
2719 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288.39 717.666 M (\( phandle -- \))S
FmE
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 17 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
2719 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2719 0 :M
f0_12 sf
( )S
2722 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
2722 0 :M
f1_12 sf
( )S
2725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
2725 0 :M
f2_12 sf
( )S
2728 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (13)S
FmE
2728 0 :M
f4_12 sf
( )S
2735 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
2735 0 :M
f2_9 sf
( )S
2737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 50 M (Assigns addresses \(i.e., creates )S
FmE
2737 0 :M
f4_9 sf
( )S
2742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
227.192 50 M 0 0 100(\"assigned-addresses\")FmTx
FmE
2742 0 :M
f2_9 sf
( )S
2744 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
327.192 50 M ( property\) for the child node denoted by )S
FmE
2745 0 :M
f3_9 sf
( )S
2747 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
473.137 50 M (phandle)S
FmE
2747 0 :M
f2_9 sf
( )S
2749 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
502.132 50 M (.)S
FmE
2749 0 :M
f0_10 sf
( )S
2751 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 85.667 M (3.2.3.1. Address-less Access Words)S
FmE
2752 0 :M
f5_9 sf
( )S
2757 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 99.667 M 0 0 40(intr-ack)FmTx
FmE
2757 0 :M
f5_10 sf
( )S
2763 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118 99.667 M 0 0 6( )FmTx
FmE
2763 0 :M
f2_10 sf
( )S
2765 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124 99.667 M (      )S
FmE
2765 0 :M
f4_9 sf
( )S
2770 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
139 99.667 M 0 0 35( \( -- \))FmTx
FmE
2770 0 :M
f2_9 sf
( )S
2772 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 111 M (Performs a PCI Interrupt Acknowledge Cycle.)S
FmE
2772 0 :M
f5_9 sf
( )S
2777 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 130.667 M 0 0 45(special-!)FmTx
FmE
2777 0 :M
f2_10 sf
( )S
2779 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123 130.667 M (       )S
FmE
2780 0 :M
f4_9 sf
( )S
2785 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.5 130.667 M 0 0 80(\( data bus# -- \))FmTx
FmE
2785 0 :M
f2_9 sf
( )S
2787 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 142 M (Performs a PCI Special Cycle on the indicated )S
FmE
2787 0 :M
f4_9 sf
( )S
2792 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
265.44 142 M 0 0 20(bus#)FmTx
FmE
2792 0 :M
f2_9 sf
( )S
2794 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285.44 142 M (.)S
FmE
2794 0 :M
f3_9 sf
( )S
2796 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 157 M -0.387(Note: Standard )W
-0.387(PCI-to-PCI b)W
-0.387(ridges provide a mechanism for converting Configuration Cycles with particular addresses )W
96 166 M -0.477(to Special Cycles. Consequently, for a )W
-0.477(PCI-to-PCI b)W
-0.477(ridge, the likely implementation of )W
FmE
2797 0 :M
f5_9 sf
( )S
2802 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
404.437 166 M 0 0 45(special-!)FmTx
FmE
2802 0 :M
f3_9 sf
( )S
2804 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
449.437 166 M -0.477( involves invoking the )W
96 175 M (parent node\'s )S
FmE
2804 0 :M
f5_9 sf
( )S
2809 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.915 175 M 0 0 45(config-l!)FmTx
FmE
2809 0 :M
f3_9 sf
( )S
2811 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
191.915 175 M ( method.)S
FmE
2811 0 :M
f0_12 sf
( )S
2814 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 216 M (4. Child Nodes)S
FmE
2814 0 :M
f3_10 sf
( )S
2816 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 232.667 M 0.2(Note: A )W
0.2(PCI-to-PCI b)W
0.2(ridge is a parent of one PCI bus and a child of another. Consequently, a device node rep-)W
78 244.667 M (resenting a PCI bridge is both a Bus Node and a Child Node, with both sets of properties and methods.)S
FmE
2817 0 :M
f0_12 sf
( )S
2820 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 279 M (4.1. Properties)S
78 314 M (4.1.1. Open Firmware-defined Properties for Child Nodes)S
FmE
2820 0 :M
f2_10 sf
( )S
2822 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 330.667 M (The following properties, as defined in Open Firmware, have special meanings or interpretations for PCI.)S
FmE
2822 0 :M
f5_9 sf
( )S
2827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 344.667 M 0 0 30(\"name\")FmTx
FmE
2827 0 :M
f2_10 sf
( )S
2829 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 344.667 M (S)S
FmE
2830 0 :M
f2_9 sf
( )S
2832 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 359 M (Standard )S
FmE
2832 0 :M
f3_9 sf
( )S
2834 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.238 359 M (prop-name)S
FmE
2834 0 :M
f2_9 sf
( )S
2836 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.725 359 M (, defines device\325s name.)S
FmE
2836 0 :M
f3_9 sf
( )S
2838 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 371 M (prop-encoded-array)S
FmE
2839 0 :M
f2_9 sf
( )S
2841 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.969 371 M (:  device name, encoded as with )S
FmE
2841 0 :M
f5_9 sf
( )S
2846 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285.921 371 M 0 0 65(encode-string)FmTx
FmE
2846 0 :M
f2_9 sf
( )S
2848 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.921 371 M (.)S
96 383 M -0.28(Instead of creating their childrens devices name properties from the vendor and device IDs, PCI bus device nodes should )W
96 392 M (create them from the class code, according to the following table:)S
96 404 M (<TBD>)S
96 416 M (The )S
FmE
2848 0 :M
f5_9 sf
( )S
2853 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.242 416 M 0 0 55(\"vendor-id\")FmTx
FmE
2853 0 :M
f2_9 sf
( )S
2855 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.242 416 M ( and )S
FmE
2855 0 :M
f5_9 sf
( )S
2860 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.737 416 M 0 0 55(\"device-id\")FmTx
FmE
2860 0 :M
f2_9 sf
( )S
2862 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.737 416 M ( properties should continue to reflect the same explicit information as before.)S
96 428 M -0.258(For PCI devices without FCode drviers, the PCI bus node should automatically create a )W
FmE
2863 0 :M
f5_9 sf
( )S
2868 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
409.552 428 M 0 0 60(\"compatible\")FmTx
FmE
2868 0 :M
f2_9 sf
( )S
2870 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
469.552 428 M -0.258( property with a )W
96 437 M (single entry whose value reflects the vendor and device IDs, as previously specified for the name property.)S
96 449 M (For devices with FCode drivers, that FCode device driver shall create a)S
FmE
2870 0 :M
f5_9 sf
( )S
2875 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.397 449 M 0 0 5(\")FmTx
0 0 55(compatible\")FmTx
FmE
2875 0 :M
f2_9 sf
( )S
2877 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
412.397 449 M ( property whose first entry )S
96 458 M (uniquely identifies the function\'s programming model, as previously defined for FCode-generated )S
FmE
2877 0 :M
f5_9 sf
( )S
2882 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.498 458 M 0 0 30(\"name\")FmTx
FmE
2882 0 :M
f2_9 sf
( )S
2884 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.498 458 M ( properties.  )S
96 467 M (That )S
FmE
2884 0 :M
f5_9 sf
( )S
2889 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114.743 467 M 0 0 60(\"compatible\")FmTx
FmE
2889 0 :M
f2_9 sf
( )S
2891 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174.743 467 M ( property may have additional entries as appropriate.)S
FmE
2892 0 :M
f3_9 sf
( )S
2894 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 479 M -0.259(Note: It is better to identify the function as a whole, instead of identifying only the \"chip\" that is directly connected to the )W
96 488 M (PCI bus \(e.g.: use \"IBM,v915\" instead of \"S3,928\", because there may be numerous other display adapters that use the )S
96 497 M (same graphics chip, but which are not entirely compatible due to the presence of different support chips like DACs and )S
96 506 M (programmable clock generators.)S
FmE
2894 0 :M
f5_9 sf
( )S
2899 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 529.667 M 0 0 25(\"reg\")FmTx
FmE
2899 0 :M
f2_10 sf
( )S
2901 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 529.667 M (S)S
FmE
2901 0 :M
f2_9 sf
( )S
2903 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 544 M (S)S
(tandard )S
FmE
2904 0 :M
f3_9 sf
( )S
2906 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.238 544 M (prop-name)S
FmE
2906 0 :M
f2_9 sf
( )S
2908 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.725 544 M (, defines device\'s addressable regions.)S
FmE
2908 0 :M
f3_9 sf
( )S
2910 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 556 M (prop-encoded-array)S
FmE
2910 0 :M
f2_9 sf
( )S
2912 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.969 556 M (:  Arbitrary number of \()S
FmE
2913 0 :M
f3_9 sf
( )S
2915 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
254.177 556 M (phys-addr size)S
FmE
2915 0 :M
f2_9 sf
( )S
2917 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306.412 556 M (\) pairs.)S
FmE
2917 0 :M
f3_9 sf
( )S
2919 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 568 M (phys-addr)S
FmE
2919 0 :M
f2_9 sf
( )S
2921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.49 568 M -0.085( is \()W
FmE
2922 0 :M
f3_9 sf
( )S
2924 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145.816 568 M -0.085(phys.lo phys.mid phys.hi)W
FmE
2924 0 :M
f2_9 sf
( )S
2926 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.879 568 M -0.085(\), encoded as with )W
FmE
2926 0 :M
f5_9 sf
( )S
2931 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301.262 568 M 0 0 55(encode-phys)FmTx
FmE
2931 0 :M
f2_9 sf
( )S
2933 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.262 568 M -0.085(. )W
FmE
2933 0 :M
f3_9 sf
( )S
2935 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
360.677 568 M (size)S
FmE
2936 0 :M
f2_9 sf
( )S
2938 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
374.172 568 M -0.085( is a pair of integers, each encoded as with )W
FmE
2938 0 :M
f5_9 sf
( )S
2943 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 577 M 0 0 50(encode-int)FmTx
FmE
2943 0 :M
f2_9 sf
( )S
2945 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146 577 M ( .)S
96 589 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least )S
96 598 M (significant 32 bits thereof.)S
96 610 M -0.623(This property is mandatory for PCI Child Nodes, as defined by Open Firmware.  The property value consists of a sequence )W
96 619 M -0.373(of \()W
FmE
2945 0 :M
f3_9 sf
( )S
2947 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108.367 619 M -0.373(phys-addr, size)W
FmE
2947 0 :M
f2_9 sf
( )S
2949 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.479 619 M -0.373(\) pairs.  In the first such pair, the )W
FmE
2950 0 :M
f3_9 sf
( )S
2952 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.816 619 M (phys-addr)S
FmE
2952 0 :M
f2_9 sf
( )S
2954 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
315.306 619 M -0.373( component shall be the Configuration Space address of the )W
96 628 M (beginning of the function\'s set of configuration registers \(i.e.  the )S
FmE
2954 0 :M
f4_9 sf
( )S
2959 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
331.782 628 M 0 0 40(rrrrrrrr)FmTx
FmE
2959 0 :M
f2_9 sf
( )S
2961 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
371.782 628 M ( field is zero\) and the )S
FmE
2961 0 :M
f3_9 sf
( )S
2963 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.242 628 M (size)S
FmE
2964 0 :M
f2_9 sf
( )S
2966 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
463.738 628 M ( component shall )S
96 637 M -0.015(be zero.  Each additional \()W
FmE
2966 0 :M
f3_9 sf
( )S
2968 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
190.377 637 M -0.015(phys-addr, size)W
FmE
2968 0 :M
f2_9 sf
( )S
2970 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
244.847 637 M -0.015(\) pair shall specify the address of an addressable region of Memory Space or I/)W
96 646 M (O Space associated with the function.  In these pairs, if the \")S
FmE
2970 0 :M
f4_9 sf
( )S
2975 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.085 646 M 0 0 5(n)FmTx
FmE
2975 0 :M
f2_9 sf
( )S
2977 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
318.085 646 M (\" bit of phys.hi is 0, reflecting a relocatable address, then )S
FmE
2978 0 :M
f3_9 sf
( )S
2980 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 655 M (phys.mid)S
FmE
2980 0 :M
f2_9 sf
( )S
2982 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.243 655 M -0.086( and )W
FmE
2982 0 :M
f3_9 sf
( )S
2984 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145.565 655 M (phys.lo)S
FmE
2984 0 :M
f2_9 sf
( )S
2986 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.31 655 M -0.086( specify an address relative to the value of the associated base register. In general this value will be )W
96 664 M -0.192(zero, specifying an address range corresponding directly to the hardware\'s.  If the \")W
FmE
2987 0 :M
f4_9 sf
( )S
2992 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
391.899 664 M 0 0 5(n)FmTx
FmE
2992 0 :M
f2_9 sf
( )S
2994 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
396.899 664 M -0.192(\" bit of phys.hi is 1, reflecting a non-)W
96 673 M (relocatable address, then )S
FmE
2994 0 :M
f3_9 sf
( )S
2996 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.949 673 M (phys.mid)S
FmE
2996 0 :M
f2_9 sf
( )S
2998 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
219.192 673 M ( and )S
FmE
2998 0 :M
f3_9 sf
( )S
3000 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.687 673 M (phys.hi)S
FmE
3001 0 :M
f2_9 sf
( )S
3003 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.432 673 M ( specify an absolute PCI address.)S
96 685 M -0.559(In the event that a function has an addressable region that can be accessed relative to more than one Base Address Register )W
96 694 M -0.078(\(for example, in Memory Space relative to one Base Register, and in I/O Space relative to another\), only the primary ac-)W
96 703 M -0.266(cess path \(typically, the one in Memory Space\) shall be listed in the )W
FmE
3003 0 :M
f5_9 sf
( )S
3008 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.455 703 M 0 0 25(\"reg\")FmTx
FmE
3008 0 :M
f2_9 sf
( )S
3010 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
363.455 703 M -0.266( property, and the secondary access path shall )W
96 712 M (be listed in the )S
FmE
3010 0 :M
f5_9 sf
( )S
3015 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.987 712 M 0 0 75(\"alternate-reg\")FmTx
FmE
3015 0 :M
f2_9 sf
( )S
3017 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
225.987 712 M ( property.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
58 338 2 209 FmqF
FmE
endp
%%Page: 18 18
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 18 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
3017 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3017 0 :M
0 G
f0_12 sf
( )S
3020 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
3020 0 :M
f2_12 sf
( )S
3023 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (14)S
FmE
3023 0 :M
f1_12 sf
( )S
3026 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
3026 0 :M
f4_12 sf
( )S
3033 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
3033 0 :M
f3_9 sf
( )S
3035 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 50 M -0.12(Note:  The device FCode is free to construct the second and later pairs in any order, including or omitting references to )W
78 59 M (base address registers, hard-decoded registers, and so on.  However, for compatibility between FCode and earlier non-)S
78 68 M (FCode versions of a device and between Open Firmware and non-Open Firmware systems, it is recommended that the )S
78 77 M (device FCode construct the )S
FmE
3035 0 :M
f9_9 sf
( )S
3040 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.96 77 M 0 0 25(\"reg\")FmTx
FmE
3040 0 :M
f3_9 sf
( )S
3042 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
203.96 77 M (  property  )S
FmE
3043 0 :M
f2_9 sf
( )S
3045 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
243.95 77 M (exactly)S
FmE
3045 0 :M
f3_9 sf
( )S
3047 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.935 77 M ( as the platform firmware would have in the absence of device )S
78 86 M (FCode, as described under )S
FmE
3047 0 :M
f7_9 sf
( )S
3052 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.725 86 M 0 0 45(probe-pci)FmTx
FmE
3052 0 :M
f3_9 sf
( )S
3054 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222.725 86 M (.)S
FmE
3054 0 :M
f5_9 sf
( )S
3059 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 99.667 M 0 0 60(\"interrupts\")FmTx
FmE
3059 0 :M
f2_10 sf
( )S
3061 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 99.667 M (S)S
FmE
3062 0 :M
f3_9 sf
( )S
3064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 114 M (prop-name)S
FmE
3064 0 :M
f2_9 sf
( )S
3066 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.487 114 M (, the presence of which indicates that the function represented by this node is connected to a PCI expansion )S
78 123 M (connector\'s interrupt line.)S
FmE
3066 0 :M
f3_9 sf
( )S
3068 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 135 M (prop-encoded-array)S
FmE
3069 0 :M
f2_9 sf
( )S
3071 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 135 M -0.417(:  Integer, encoded as with )W
FmE
3071 0 :M
f5_9 sf
( )S
3076 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
245.676 135 M 0 0 50(encode-int)FmTx
FmE
3076 0 :M
f2_9 sf
( )S
3078 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
295.676 135 M -0.417(.  The integer represents the interrupt line to which this func-)W
78 144 M (tion\'s interrupt is connected; INTA=1, INTB=2, INTC=3, INTD=4.  This value is determined from the contents of the )S
78 153 M (device\'s Configuration Interrupt Pin Register. )S
FmE
3078 0 :M
f0_12 sf
( )S
3081 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 187 M (4.1.2. Bus-specific Properties for Child Nodes)S
FmE
3081 0 :M
f2_10 sf
( )S
3083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 203.667 M -0.093(Standard Packages corresponding to devices that are children of a PCI bus shall implement the following prop-)W
60 215.667 M (erties, if applicable.)S
FmE
3084 0 :M
f5_9 sf
( )S
3089 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 245.667 M 0 0 75(\"alternate-reg\")FmTx
FmE
3089 0 :M
f2_10 sf
( )S
3091 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 245.667 M (S)S
FmE
3091 0 :M
f3_9 sf
( )S
3093 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 260 M (prop-name)S
FmE
3093 0 :M
f2_9 sf
( )S
3095 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.487 260 M (, defines alternate access paths for addressable regions.)S
FmE
3096 0 :M
f3_9 sf
( )S
3098 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 272 M (prop-encoded-array)S
FmE
3098 0 :M
f2_9 sf
( )S
3100 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 272 M (: Arbitrary number of \()S
FmE
3100 0 :M
f3_9 sf
( )S
3102 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.927 272 M (phys-addr size)S
FmE
3102 0 :M
f2_9 sf
( )S
3104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
286.162 272 M (\) pairs.)S
FmE
3105 0 :M
f3_9 sf
( )S
3107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 284 M -0.23(phys-addr )W
FmE
3107 0 :M
f2_9 sf
( )S
3109 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
116.51 284 M -0.23(is \()W
FmE
3109 0 :M
f3_9 sf
( )S
3111 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.526 284 M -0.23(phys.lo phys.mid phys.hi)W
FmE
3111 0 :M
f2_9 sf
( )S
3113 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
215.3 284 M -0.23(\), encoded as with )W
FmE
3114 0 :M
f5_9 sf
( )S
3119 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.104 284 M 0 0 60(encode-phys.)FmTx
FmE
3119 0 :M
f2_9 sf
( )S
3121 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
342.104 284 M -0.23( )W
FmE
3121 0 :M
f3_9 sf
( )S
3123 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
344.124 284 M (size)S
FmE
3123 0 :M
f2_9 sf
( )S
3125 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
357.62 284 M -0.23( is a pair of integers, each encoded as with )W
FmE
3125 0 :M
f5_9 sf
( )S
3130 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 293 M 0 0 50(encode-int)FmTx
FmE
3130 0 :M
f2_9 sf
( )S
3132 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128 293 M ( .)S
78 305 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least )S
78 314 M (significant 32 bits thereof.)S
78 326 M -0.298(This property describes alternative access paths for the addressable regions described by the )W
FmE
3133 0 :M
f5_9 sf
( )S
3138 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
407.717 326 M 0 0 25(\"reg\")FmTx
FmE
3138 0 :M
f2_9 sf
( )S
3140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
432.717 326 M -0.298( property.  Typically, )W
78 335 M (an alternative access path exists when a particular part of a device can be accessed either in Memory Space or in I/O )S
78 344 M -0.308(Space, with a separate Base Address register for each of the two access paths.  The primary access paths are described by )W
78 353 M (the )S
FmE
3140 0 :M
f5_9 sf
( )S
3145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
91.245 353 M 0 0 25(\"reg\")FmTx
FmE
3145 0 :M
f2_9 sf
( )S
3147 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
116.245 353 M ( property, and the secondary access paths, if any, are described by the )S
FmE
3147 0 :M
f5_9 sf
( )S
3152 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
369.122 353 M 0 0 75(\"alternate-reg\")FmTx
FmE
3152 0 :M
f2_9 sf
( )S
3154 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
444.122 353 M ( property.)S
78 365 M -0.317(If the function has no alternative access paths, the device node shall have no )W
FmE
3154 0 :M
f5_9 sf
( )S
3159 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.196 365 M 0 0 75(\"alternate-reg\")FmTx
FmE
3159 0 :M
f2_9 sf
( )S
3161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.196 365 M -0.317( property.  If the device )W
78 374 M -0.401(has alternative access paths, each entry \(i.e. each )W
FmE
3162 0 :M
f3_9 sf
( )S
3164 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.438 374 M -0.401(phys-addr size)W
FmE
3164 0 :M
f2_9 sf
( )S
3166 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
304.273 374 M -0.401( pair\) of its value represents the secondary access path for )W
78 383 M -0.229(the addressable region whose primary access path is in the corresponding entry of the )W
FmE
3166 0 :M
f5_9 sf
( )S
3171 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
384.666 383 M 0 0 25(\"reg\")FmTx
FmE
3171 0 :M
f2_9 sf
( )S
3173 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
409.666 383 M -0.229( property value.  If the num-)W
78 392 M -0.056(ber of )W
FmE
3173 0 :M
f5_9 sf
( )S
3178 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.372 392 M 0 0 75(\"alternate-reg\")FmTx
FmE
3178 0 :M
f2_9 sf
( )S
3180 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
176.372 392 M -0.056( entries exceeds the number of )W
FmE
3181 0 :M
f5_9 sf
( )S
3186 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.98 392 M 0 0 25(\"reg\")FmTx
FmE
3186 0 :M
f2_9 sf
( )S
3188 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
312.98 392 M -0.056( property entries, the additional entries denote address-)W
78 401 M -0.349(able regions that are not represented by )W
FmE
3188 0 :M
f5_9 sf
( )S
3193 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
219.234 401 M 0 0 25(\"reg\")FmTx
FmE
3193 0 :M
f2_9 sf
( )S
3195 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
244.234 401 M -0.349( property entries, and are thus not intended to be used in normal operation; )W
78 410 M (such regions might, for example, be used for diagnostic functions. If the number of )S
FmE
3195 0 :M
f5_9 sf
( )S
3200 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
379.142 410 M 0 0 75(\"alternate-reg\")FmTx
FmE
3200 0 :M
f2_9 sf
( )S
3202 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
454.142 410 M ( entries is less )S
78 419 M -0.313(than the number of )W
FmE
3202 0 :M
f5_9 sf
( )S
3207 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.222 419 M 0 0 25(\"reg\")FmTx
FmE
3207 0 :M
f2_9 sf
( )S
3209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
172.222 419 M -0.313( entries, the regions described by the extra )W
FmE
3210 0 :M
f5_9 sf
( )S
3215 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
323.895 419 M 0 0 25(\"reg\")FmTx
FmE
3215 0 :M
f2_9 sf
( )S
3217 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
348.895 419 M -0.313( entries do not have alternative access paths.  )W
78 428 M -0.316(An )W
FmE
3217 0 :M
f5_9 sf
( )S
3222 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90.931 428 M 0 0 75(\"alternate-reg\")FmTx
FmE
3222 0 :M
f2_9 sf
( )S
3224 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.931 428 M -0.316( entry whose )W
FmE
3224 0 :M
f3_9 sf
( )S
3226 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.215 428 M -0.316(phys.hi )W
FmE
3226 0 :M
f2_9 sf
( )S
3228 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.894 428 M -0.316(component is zero indicates that the corresponding region does not have an )W
78 437 M -0.029(alternative access path; such an entry can be used as a \"place holder\" to preserve the positions of later entries relative to )W
78 446 M -0.211(the corresponding )W
FmE
3229 0 :M
f5_9 sf
( )S
3234 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.552 446 M 0 0 25(\"reg\")FmTx
FmE
3234 0 :M
f2_9 sf
( )S
3236 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.552 446 M -0.211( entries.  The first )W
FmE
3236 0 :M
f5_9 sf
( )S
3241 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.465 446 M 0 0 75(\"alternate-reg\")FmTx
FmE
3241 0 :M
f2_9 sf
( )S
3243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
309.465 446 M -0.211( entry, corresponding to the )W
FmE
3243 0 :M
f5_9 sf
( )S
3248 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
409.874 446 M 0 0 25(\"reg\")FmTx
FmE
3248 0 :M
f2_9 sf
( )S
3250 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
434.874 446 M -0.211( entry describing the )W
78 455 M (function\'s Configuration Space registers, shall have a )S
FmE
3250 0 :M
f3_9 sf
( )S
3252 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.546 455 M (phys.hi)S
FmE
3253 0 :M
f2_9 sf
( )S
3255 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297.292 455 M ( component of zero.)S
FmE
3255 0 :M
f5_9 sf
( )S
3260 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 468.667 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
3260 0 :M
f2_10 sf
( )S
3262 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 468.667 M (S)S
FmE
3262 0 :M
f3_9 sf
( )S
3264 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 483 M (prop-name)S
FmE
3265 0 :M
f2_9 sf
( )S
3267 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.487 483 M (, denotes offset of FCode image within the device\'s Expansion ROM.)S
FmE
3267 0 :M
f3_9 sf
( )S
3269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 495 M (prop-encode-)S
(array)S
FmE
3269 0 :M
f2_9 sf
( )S
3271 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.469 495 M (:)S
( one integer, encoded as with )S
FmE
3271 0 :M
f5_9 sf
( )S
3276 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.176 495 M 0 0 50(encode-int)FmTx
FmE
3276 0 :M
f2_9 sf
( )S
3278 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306.176 495 M (.)S
78 507 M (This property indicates the offset of the PCI Expansion ROM image within the device\'s Expansion ROM in which the )S
78 516 M -0.487(FCode image was found;  i.e., the offset of the 0xAA55 signature of that image\'s PCI Expansion ROM Header. This value )W
FmE
3279 0 :M
f3_9 sf
( )S
3281 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 525 M (shall)S
FmE
3281 0 :M
f2_9 sf
( )S
3283 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.501 525 M ( be generated before the FCode is evaluated.  Note that the absence of this property indicates that no FCode exists )S
78 534 M (for this device node.)S
FmE
3283 0 :M
f5_9 sf
( )S
3288 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 547.667 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3288 0 :M
f2_10 sf
( )S
3290 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 547.667 M (S)S
FmE
3291 0 :M
f3_9 sf
( )S
3293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 562 M (prop-name)S
FmE
3293 0 :M
f2_9 sf
( )S
3295 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.487 562 M (, denotes assigned physical addresses)S
FmE
3295 0 :M
f3_9 sf
( )S
3297 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 574 M (prop-encoded-array)S
FmE
3297 0 :M
f2_9 sf
( )S
3299 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 574 M (:  Zero to six \()S
FmE
3300 0 :M
f3_9 sf
( )S
3302 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.203 574 M (phys-addr size)S
FmE
3302 0 :M
f2_9 sf
( )S
3304 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
254.438 574 M (\) pairs.)S
FmE
3304 0 :M
f3_9 sf
( )S
3306 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 586 M (phys-addr)S
FmE
3306 0 :M
f2_9 sf
( )S
3308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114.49 586 M -0.085( is \()W
FmE
3309 0 :M
f3_9 sf
( )S
3311 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.816 586 M -0.085(phys.lo phys.mid phys.hi)W
FmE
3311 0 :M
f2_9 sf
( )S
3313 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
215.879 586 M -0.085(\), encoded as with )W
FmE
3313 0 :M
f5_9 sf
( )S
3318 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.262 586 M 0 0 55(encode-phys)FmTx
FmE
3318 0 :M
f2_9 sf
( )S
3320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.262 586 M -0.085(. )W
FmE
3320 0 :M
f3_9 sf
( )S
3322 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
342.677 586 M (size)S
FmE
3323 0 :M
f2_9 sf
( )S
3325 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.172 586 M -0.085( is a pair of integers, each encoded as with )W
FmE
3325 0 :M
f5_9 sf
( )S
3330 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 595 M 0 0 50(encode-int)FmTx
FmE
3330 0 :M
f2_9 sf
( )S
3332 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128 595 M ( .)S
78 607 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least)S
( )S
78 616 M (significant 32 bits thereof.)S
78 628 M (Each entry \(i.e.  each )S
FmE
3332 0 :M
f3_9 sf
( )S
3334 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156.201 628 M (phys-addr size)S
FmE
3334 0 :M
f2_9 sf
( )S
3336 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208.436 628 M ( pair\) in this property value corresponds to either one or two \(in the case 64-bit-ad-)S
78 637 M -0.178(dress Memory Space\) of the function\'s Configuration Space base address registers.  The entry indicates the physical PCI )W
78 646 M -0.253(domain address that has been assigned to that base address register \(or register pair\), and the size in bytes of the assigned )W
78 655 M -0.548(region.  The size shall be a power of two \(since the structure of PCI Base Address registers forces the decoding granularity )W
78 664 M (to powers of two\).  The \')S
FmE
3337 0 :M
f4_9 sf
( )S
3342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.337 664 M 0 0 5(n)FmTx
FmE
3342 0 :M
f2_9 sf
( )S
3344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.337 664 M (\' bit of each )S
FmE
3344 0 :M
f3_9 sf
( )S
3346 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
215.436 664 M (phys-addr)S
FmE
3346 0 :M
f2_9 sf
( )S
3348 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
251.926 664 M ( shall be set to 1, indicating that the address is absolute \(within the PCI )S
78 673 M (domain\'s address space\), not relative to the start of a relocatable region.  The type code shall not be \'00\' \(Configuration )S
78 682.667 M (Space\).  The \')S
FmE
3348 0 :M
f2_10 sf
( )S
3350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.094 682.667 M (bbbbbbbb)S
FmE
3351 0 :M
f2_9 sf
( )S
3353 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.094 682.667 M (,)S
FmE
3353 0 :M
f2_10 sf
( )S
3355 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.344 682.667 M (ddddd)S
FmE
3356 0 :M
f2_9 sf
( )S
3358 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.344 682.667 M (,)S
FmE
3358 0 :M
f2_10 sf
( )S
3360 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196.594 682.667 M (fff)S
FmE
3360 0 :M
f2_9 sf
( )S
3362 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.576 682.667 M (,)S
FmE
3363 0 :M
f2_10 sf
( )S
3365 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208.826 682.667 M (rrrrrrrr)S
FmE
3365 0 :M
f2_9 sf
( )S
3367 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
235.448 682.667 M (\' field indicates the base register to which the entry applies, and the )S
78 692 M (\')S
FmE
3367 0 :M
f4_9 sf
( )S
3372 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.619 692 M 0 0 55(hh\311hh,ll\311ll)FmTx
FmE
3372 0 :M
f2_9 sf
( )S
3374 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
134.619 692 M (\' field contains the assigned address.)S
78 704 M (If addresses have not yet been assigned to the function\'s relocatable regions, this property shall be absent.)S
FmE
endp
%%Page: 19 19
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 19 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
3375 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3375 0 :M
f0_12 sf
( )S
3378 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
3378 0 :M
f1_12 sf
( )S
3381 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
3381 0 :M
f2_12 sf
( )S
3384 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (15)S
FmE
3384 0 :M
f4_12 sf
( )S
3391 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
3391 0 :M
f2_9 sf
( )S
3393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 50 M (The values reported in )S
FmE
3393 0 :M
f5_9 sf
( )S
3398 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.962 50 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3398 0 :M
f2_9 sf
( )S
3400 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.962 50 M ( represent the physical addresses that have been assigned.  If Open )S
96 59 M -0.289(Firmware can not assign address space for a resource \(e.g., the address space has been exhausted\), that resources will not )W
96 68 M -0.397(have an entry in the )W
FmE
3401 0 :M
f5_9 sf
( )S
3406 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.234 68 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3406 0 :M
f2_9 sf
( )S
3408 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.234 68 M -0.397( property.  If no resources were assigned address space, the )W
FmE
3408 0 :M
f5_9 sf
( )S
3413 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
478 68 M 0 0 50(\"assigned-)FmTx
96 77 M 0 0 50(addresses\")FmTx
FmE
3413 0 :M
f2_9 sf
( )S
3415 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146 77 M ( property )S
FmE
3415 0 :M
f3_9 sf
( )S
3417 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.985 77 M (shall)S
FmE
3417 0 :M
f2_9 sf
( )S
3419 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.486 77 M ( have a )S
FmE
3420 0 :M
f3_9 sf
( )S
3422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.22 77 M (prop-encoded-array)S
FmE
3422 0 :M
f2_9 sf
( )S
3424 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.189 77 M ( of zero length.)S
FmE
3424 0 :M
f3_9 sf
( )S
3426 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 89 M -0.194(Note: There is no implied correspondence between the order of entries in the )W
FmE
3426 0 :M
f7_9 sf
( )S
3431 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.143 89 M 0 0 5(\")FmTx
FmE
3431 0 :M
f5_9 sf
( )S
3436 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
378.143 89 M 0 0 15(reg)FmTx
FmE
3436 0 :M
f7_9 sf
( )S
3441 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
393.143 89 M 0 0 5(\")FmTx
FmE
3441 0 :M
f3_9 sf
( )S
3443 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
398.143 89 M -0.194( property value and order of entries )W
96 98 M (in the )S
FmE
3444 0 :M
f7_9 sf
( )S
3449 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118.496 98 M 0 0 5(\")FmTx
FmE
3449 0 :M
f5_9 sf
( )S
3454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123.496 98 M 0 0 90(assigned-addresses)FmTx
FmE
3454 0 :M
f7_9 sf
( )S
3459 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.496 98 M 0 0 5(\")FmTx
FmE
3459 0 :M
f3_9 sf
( )S
3461 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.496 98 M ( property value.  The correspondence between the )S
FmE
3461 0 :M
f7_9 sf
( )S
3466 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.68 98 M 0 0 5(\")FmTx
FmE
3466 0 :M
f5_9 sf
( )S
3471 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
405.68 98 M 0 0 15(reg)FmTx
FmE
3471 0 :M
f7_9 sf
( )S
3476 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
420.68 98 M 0 0 5(\")FmTx
FmE
3476 0 :M
f3_9 sf
( )S
3478 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.68 98 M ( entries and )S
FmE
3478 0 :M
f7_9 sf
( )S
3483 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
470.42 98 M 0 0 5(\")FmTx
FmE
3483 0 :M
f5_9 sf
( )S
3488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
475.42 98 M 0 0 45(assigned-)FmTx
96 107 M 0 0 45(addresses)FmTx
FmE
3488 0 :M
f7_9 sf
( )S
3493 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141 107 M 0 0 5(\")FmTx
FmE
3493 0 :M
f3_9 sf
( )S
3495 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146 107 M ( entries is determined by matching the fields denoting the Base Address register.)S
FmE
3495 0 :M
f5_9 sf
( )S
3500 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 120.667 M 0 0 95(\"power-consumption\")FmTx
FmE
3500 0 :M
f2_10 sf
( )S
3502 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 120.667 M (S)S
FmE
3503 0 :M
f3_9 sf
( )S
3505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 135 M (prop-name)S
FmE
3505 0 :M
f2_9 sf
( )S
3507 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.487 135 M (, describes function\'s power requirements)S
FmE
3507 0 :M
f3_9 sf
( )S
3509 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 147 M (prop-encoded-array)S
FmE
3510 0 :M
f2_9 sf
( )S
3512 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.969 147 M (: list of integers, encoded as with )S
FmE
3512 0 :M
f5_9 sf
( )S
3517 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
289.928 147 M 0 0 50(encode-int)FmTx
FmE
3517 0 :M
f2_9 sf
( )S
3519 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
339.928 147 M (, describing the device\'s maximum power consump-)S
96 156 M -0.607(tion in microwatts, categorized by the various power rails and the device\'s power-management state \(standby or fully-on\).  )W
96 165 M (The ints are encoded in the following order:)S
114 177 M -0.513(unspecified standby, unspecified full-on, +5V standby, +5V full-on, +3.3V standby, +3.3V full-on, I/O pwr standby, )W
114 186 M (I/O pwr full-on, reserved standby, reserved full-on)S
96 198 M -0.321(The \"unspecified\" entries indicate that the power division among the various rails is unknown.  The \"unspecified\" entries )W
96 207 M (shall be zero if any of the other entries are non-zero.  The \"unspecified\" entries are provided so that the )S
FmE
3519 0 :M
f5_9 sf
( )S
3524 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.909 207 M 0 0 55(\"power-con-)FmTx
96 216 M 0 0 45(sumption\")FmTx
FmE
3524 0 :M
f2_9 sf
( )S
3526 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141 216 M ( property can be created for devices without FCode, from the information on the PRSNT1# and PRSNT2# )S
96 225 M (connector pins.)S
96 237 M (If the number of ints in the encoded property value is less than ten, the power consumption is zero for the cases corre-)S
96 246 M -0.27(sponding to the missing entries.  For example, if there are four ints, they correspond to the two \"unspecified\" and the two )W
96 255 M (\"+5\" numbers, and the others are zero.)S
FmE
3526 0 :M
f0_10 sf
( )S
3528 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 284.667 M (4.1.2.1. Standard PCI Configuration Properties)S
FmE
3529 0 :M
f2_10 sf
( )S
3531 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 300.667 M -0.46(The following properties are created during the probing process, after the device node has been created, but before)W
78 312.667 M 0.454(evaluating the device\'s FCode \(if any\).  They represent the values of standard PCI configuration registers. This)W
78 324.667 M (information is likely to be useful for Client and User interfaces.)S
78 340.667 M 0.013(Unless specified otherwise, each of the following properties has a )W
FmE
3531 0 :M
f3_10 sf
( )S
3533 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
343.289 340.667 M (prop-encoded-array)S
FmE
3534 0 :M
f2_10 sf
( )S
3536 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
424.365 340.667 M 0.013( whose value is an integer)W
78 352.667 M (taken directly from the corresponding hardware register, encoded as with )S
FmE
3536 0 :M
f5_10 sf
( )S
3542 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.132 352.667 M 0 0 60(encode-int)FmTx
FmE
3542 0 :M
f2_10 sf
( )S
3544 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
433.132 352.667 M (.)S
FmE
3545 0 :M
f5_9 sf
( )S
3550 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 366.667 M 0 0 55(\"vendor-id\")FmTx
FmE
3550 0 :M
f2_10 sf
( )S
3552 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 366.667 M (S)S
FmE
3552 0 :M
f5_9 sf
( )S
3557 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 380.667 M 0 0 55(\"device-id\")FmTx
FmE
3557 0 :M
f2_10 sf
( )S
3559 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 380.667 M (S)S
FmE
3560 0 :M
f5_9 sf
( )S
3565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 394.667 M 0 0 65(\"revision-id\")FmTx
FmE
3565 0 :M
f2_10 sf
( )S
3567 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 394.667 M (S)S
FmE
3567 0 :M
f5_9 sf
( )S
3572 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 408.667 M 0 0 60(\"class-code\")FmTx
FmE
3572 0 :M
f2_10 sf
( )S
3574 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 408.667 M (S)S
FmE
3575 0 :M
f5_9 sf
( )S
3580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 422.666 M 0 0 60(\"interrupts\")FmTx
FmE
3580 0 :M
f2_10 sf
( )S
3582 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 422.666 M (S)S
FmE
3582 0 :M
f2_9 sf
( )S
3584 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 437 M (This property shall be present if the Interrupt Pin register is non-zero)S
(,)S
96 446 M (a)S
(nd shall be absent otherwise.)S
FmE
3585 0 :M
f5_9 sf
( )S
3590 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 457.666 M 0 0 55(\"min-grant\")FmTx
FmE
3590 0 :M
f2_10 sf
( )S
3592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 457.666 M (S)S
FmE
3592 0 :M
f5_9 sf
( )S
3597 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 471.666 M 0 0 65(\"max-latency\")FmTx
FmE
3597 0 :M
f2_10 sf
( )S
3599 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 471.666 M (S)S
FmE
3600 0 :M
f5_9 sf
( )S
3605 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 485.666 M 0 0 70(\"devsel-speed\")FmTx
FmE
3605 0 :M
f2_10 sf
( )S
3607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 485.666 M (S)S
FmE
3607 0 :M
f5_9 sf
( )S
3612 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 499.666 M 0 0 85(\"cache-line-size\")FmTx
FmE
3612 0 :M
f2_10 sf
( )S
3614 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 499.666 M (S)S
FmE
3615 0 :M
f2_9 sf
( )S
3617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 511 M (This property shall be present if the function\'s cache line size register is set to a non-zero value,)S
96 521 M (and shall be absent otherwise.)S
FmE
3617 0 :M
f5_9 sf
( )S
3622 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 533.666 M 0 0 95(\"fast-back-to-back\")FmTx
FmE
3622 0 :M
f4_10 sf
( )S
3628 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173 533.666 M 0 0 12(  )FmTx
FmE
3628 0 :M
f2_10 sf
( )S
3630 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 533.666 M (S)S
FmE
3630 0 :M
f3_9 sf
( )S
3632 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 545 M (prop-encoded-array)S
FmE
3633 0 :M
f2_9 sf
( )S
3635 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.969 545 M (: <none>)S
96 555 M (This property shall be present if the \"Fast Back-to-Back\" bit \(bit 7\) in the function\'s Status Registe)S
(r)S
96 565 M (i)S
(s set)S
(, a)S
(nd shall be absent otherwise.)S
FmE
3635 0 :M
f5_9 sf
( )S
3640 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 577.666 M 0 0 70(\"subsystem-id\")FmTx
FmE
3640 0 :M
f2_10 sf
( )S
3642 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 577.666 M (S)S
FmE
3642 0 :M
f2_9 sf
( )S
3644 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 589 M (This property shall be present if the \"Subsystem ID\" register is non-zero)S
(,)S
96 599 M (a)S
(nd shall be absent otherwise.)S
FmE
3645 0 :M
f5_9 sf
( )S
3650 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 611.666 M 0 0 105(\"subsystem-vendor-id\")FmTx
FmE
3650 0 :M
f2_10 sf
( )S
3652 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 611.666 M (S)S
FmE
3652 0 :M
f2_9 sf
( )S
3654 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 623 M (This property shall be present if the \"Subsystem Vendor ID\" register is non-zero)S
(,)S
96 633 M (a)S
(nd shall be absent otherwise.)S
FmE
3654 0 :M
f5_9 sf
( )S
3659 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 645.666 M 0 0 75(\"66mhz-capable\")FmTx
FmE
3659 0 :M
f2_10 sf
( )S
3661 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 645.666 M (S)S
FmE
3662 0 :M
f3_9 sf
( )S
3664 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 657 M (prop-encoded-array)S
FmE
3664 0 :M
f2_9 sf
( )S
3666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.969 657 M (: <none>)S
96 667 M (This property shall be present if the \"66 MHz Capable\" bit \(bit 6\) in the function\'s Status Registe)S
(r)S
96 677 M (i)S
(s set)S
(, a)S
(nd shall be absent otherwise.)S
FmE
3666 0 :M
f5_9 sf
( )S
3671 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 689.666 M 0 0 75(\"udf-supported\")FmTx
FmE
3671 0 :M
f2_10 sf
( )S
3673 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.441 689.666 M (S)S
0.502 0.502 0 0.498 0 0 0.502 FmK
58 431 2 18 FmqF
58 493 2 31 FmqF
58 549 2 19 FmqF
58 583 2 19 FmqF
58 617 2 19 FmqF
58 661 2 19 FmqF
FmE
endp
%%Page: 20 20
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 20 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
3674 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3674 0 :M
0 G
f0_12 sf
( )S
3677 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
3677 0 :M
f2_12 sf
( )S
3680 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (16)S
FmE
3680 0 :M
f1_12 sf
( )S
3683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
3683 0 :M
f4_12 sf
( )S
3690 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
3690 0 :M
f3_9 sf
( )S
3692 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 50 M (prop-encoded-array)S
FmE
3692 0 :M
f2_9 sf
( )S
3694 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 50 M (: <none>)S
78 60 M -0.471(This property shall be present if the \"UDF Supported\" bit \(bit 5\) in the function\'s Status Register is set, and shall be absent )W
78 70 M (otherwise)S
(.)S
FmE
3695 0 :M
f0_12 sf
( )S
3698 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 103 M (4.2. Methods)S
FmE
3698 0 :M
f2_10 sf
( )S
3700 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 119.667 M -0.276(The methods of a child node depend upon its device-type programming model.  However, the standard )W
FmE
3700 0 :M
f5_10 sf
( )S
3706 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
469.337 119.667 M 0 0 24(open)FmTx
FmE
3706 0 :M
f2_10 sf
( )S
3708 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
493.337 119.667 M -0.276( and)W
FmE
3709 0 :M
f5_10 sf
( )S
3715 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 131.667 M 0 0 30(close)FmTx
FmE
3715 0 :M
f2_10 sf
( )S
3717 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 131.667 M ( methods for PCI devices have some PCI-specific details as described below.)S
FmE
3717 0 :M
f5_10 sf
( )S
3723 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 145.667 M 0 0 24(open)FmTx
FmE
3723 0 :M
f4_10 sf
( )S
3729 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255 145.667 M 0 0 114(\( -- true | false \))FmTx
FmE
3729 0 :M
f2_10 sf
( )S
3731 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 145.667 M (S)S
FmE
3732 0 :M
f2_9 sf
( )S
3734 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 160 M (Prepare the device for subsequent use.)S
78 172 M -0.279(Since the probing process leaves the decoding disabled for a PCI device, the device driver must explicitly enable the PCI )W
78 181 M -0.286(address spaces that it requires by setting the Memory Space and/or IO Space bits in the Command register;  If  the device )W
78 190 M -0.349(requires the use of bus mastering capabilities, it must also set the Bus Master bit.  The setting of these bits should be done )W
78 199 M (with read-modify-write accesses to the Command register.)S
FmE
3734 0 :M
f5_10 sf
( )S
3740 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 210.667 M 0 0 30(close)FmTx
FmE
3740 0 :M
f4_10 sf
( )S
3746 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
294 210.667 M 0 0 36(\( -- \))FmTx
FmE
3746 0 :M
f2_10 sf
( )S
3748 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 210.667 M (S)S
FmE
3748 0 :M
f2_9 sf
( )S
3750 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 225.667 M (Close this previously)S
FmE
3751 0 :M
f5_9 sf
( )S
3756 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.99 225.667 M 0 0 5( )FmTx
FmE
3756 0 :M
f5_10 sf
( )S
3762 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
158.99 225.667 M 0 0 6(o)FmTx
0 0 18(pen)FmTx
FmE
3762 0 :M
f2_9 sf
( )S
3764 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.99 225.667 M (ed device.)S
78 238.667 M -0.112(The )W
FmE
3764 0 :M
f5_10 sf
( )S
3770 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94.13 238.667 M 0 0 30(close)FmTx
FmE
3770 0 :M
f2_9 sf
( )S
3772 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.13 238.667 M -0.112( method for a PCI device must clear the Bus Master, Memory Space and IO Space bits in its Command reg-)W
78 248 M (ister.  The clearing of these bits should be done by a read-modify-write sequence to the Command register.)S
FmE
3772 0 :M
f0_12 sf
( )S
3775 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 287 M (5. Bus-specific User Interface Commands)S
FmE
3775 0 :M
f2_10 sf
( )S
3777 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 303.667 M -0.107(An Open Firmware-compliant User Interface on a system with PCI )W
FmE
3778 0 :M
f3_10 sf
( )S
3780 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
329.922 303.667 M (should)S
FmE
3780 0 :M
f2_10 sf
( )S
3782 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.589 303.667 M -0.107( implement the following PCI-specific)W
60 315.667 M (user interface commands.)S
FmE
3783 0 :M
f5_9 sf
( )S
3788 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 329.667 M 0 0 45(probe-pci)FmTx
FmE
3788 0 :M
f2_10 sf
( )S
3790 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
292.845 329.667 M (        \( -- \))S
FmE
3790 0 :M
f2_9 sf
( )S
3792 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 344 M (Interprets FCode for all built-in PCI slots in numerical order.)S
78 356 M (Enter \"probe state\", thus affecting subsequent behavior of the )S
FmE
3792 0 :M
f5_9 sf
( )S
3797 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301.251 356 M 0 0 30(map-in)FmTx
FmE
3797 0 :M
f2_9 sf
( )S
3799 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
331.251 356 M ( and )S
FmE
3800 0 :M
f5_9 sf
( )S
3805 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
348.746 356 M 0 0 35(map-out)FmTx
FmE
3805 0 :M
f2_9 sf
( )S
3807 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.746 356 M ( methods.)S
78 368 M (Scan all slots in numerical order.  For each slot, read the header type field in the configuration register set for function )S
78 377 M (number 0.  If the header type field indicates a )S
(PCI-to-PCI b)S
(ridge, perform the function described in the Probing )S
(PCI-to-)S
78 386 M -0.029(PCI b)W
-0.029(ridges section.  If the header type field indicates a multi-function device, perform the following sequence for each )W
78 395 M -0.128(of the functions that are present \(as determined by the presence of a non-FFFFh value in the Vendor ID field of the func-)W
78 404 M (tion\'s Configuration Space header\).  Otherwise, perform the following sequence for the card\'s function number 0. The )S
78 413 M -0.079(first attempted access to each function )W
FmE
3807 0 :M
f3_9 sf
( )S
3809 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
217.454 413 M (shall)S
FmE
3809 0 :M
f2_9 sf
( )S
3811 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.955 413 M -0.079( use  )W
FmE
3811 0 :M
f5_9 sf
( )S
3816 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.462 413 M 0 0 25(lpeek)FmTx
FmE
3816 0 :M
f2_9 sf
( )S
3818 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.462 413 M -0.079(, because in some systems an attempted access to a non-existent )W
78 422 M (device might result in a processor exception \(e.g. a \"bus error\"\).)S
FmE
3819 0 :M
f3_9 sf
( )S
3821 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 434 M (Note:  Although some PCI implementations will not generate processor exceptions for aborted cycles, that is not an in-)S
78 443 M -0.377(herent limitation of PCI itself, but instead an implementation choice that is appropriate for some system architectures.  A )W
78 452 M -0.126(PCI host bridge knows if it terminated a cycle with a master abort.  Since the PC system architecture lacks the notion of )W
78 461 M (a bus error, PC to PCI host bridges cannot report a bus error to the PC, so they have to complete the cycle and return )S
78 470 M (all ones to the x86 processor.  However, in a non-PC system, the PCI host bridge could terminate the processor cycle )S
78 479 M (with a bus error.  Open Firmware )S
FmE
3821 0 :M
f1_9 sf
( )S
3823 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.985 479 M (peek)S
FmE
3823 0 :M
f3_9 sf
( )S
3825 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
219.974 479 M ( and )S
FmE
3825 0 :M
f1_9 sf
( )S
3827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.974 479 M (poke)S
FmE
3828 0 :M
f3_9 sf
( )S
3830 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.469 479 M ( can behave in their normal way; if the processor can get a bus error, )S
78 488 M -0.256(peek and poke can report it.  If not, )W
FmE
3830 0 :M
f1_9 sf
( )S
3832 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204.911 488 M (peek)S
FmE
3832 0 :M
f3_9 sf
( )S
3834 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
221.9 488 M -0.256( and )W
FmE
3834 0 :M
f1_9 sf
( )S
3836 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.389 488 M (poke)S
FmE
3837 0 :M
f3_9 sf
( )S
3839 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.884 488 M -0.256( will never say they got a bus error, they will just return whatever data )W
78 497 M -0.18(the cycle yielded.  This is not a problem, because the probing process involves doing a )W
FmE
3839 0 :M
f1_9 sf
( )S
3841 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.03 497 M (peek)S
FmE
3841 0 :M
f3_9 sf
( )S
3843 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406.019 497 M -0.18( and also looking at the data )W
78 506 M (to see if it is right.)S
FmE
3843 0 :M
f2_9 sf
( )S
3845 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 518 M (Create the following properties from the information given in the configuration space header.)S
FmE
3846 0 :M
f5_9 sf
( )S
3851 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 527 M 0 0 55(\"vendor-id\")FmTx
96 539 M 0 0 55(\"device-id\")FmTx
96 551 M 0 0 65(\"revision-id\")FmTx
96 563 M 0 0 60(\"class-code\")FmTx
96 575 M 0 0 60(\"interrupts\")FmTx
96 587 M 0 0 55(\"min-grant\")FmTx
FmE
3851 0 :M
f2_9 sf
( )S
3853 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 587 M (\(Unless Header Type is 01h\))S
FmE
3853 0 :M
f5_9 sf
( )S
3858 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 599 M 0 0 65(\"max-latency\")FmTx
FmE
3858 0 :M
f2_9 sf
( )S
3860 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 599 M (\(Unless Header Type is 01h\))S
FmE
3860 0 :M
f5_9 sf
( )S
3865 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 611 M 0 0 70(\"devsel-speed\")FmTx
96 623 M 0 0 95(\"fast-back-to-back\")FmTx
96 635 M 0 0 70(\"subsystem-id\")FmTx
96 647 M 0 0 85(\"cache-line-size\")FmTx
96 659 M 0 0 105(\"subsystem-vendor-id\")FmTx
96 671 M 0 0 75(\"66mhz-capable\")FmTx
96 683 M 0 0 75(\"udf-supported\")FmTx
FmE
3865 0 :M
f3_9 sf
( )S
3867 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 698 M (Note: The feasibility of automatically creating the above properties depends on the ability to recognize the config-)S
96 707 M -0.12(uration header format. At present, there are two such formats - the base format defined by the )W
FmE
3867 0 :M
f2_9 sf
( )S
3869 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
434.631 707 M -0.12(PCI Local Bus Spec-)W
96 716 M (ification)S
FmE
3870 0 :M
f3_9 sf
( )S
3872 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.986 716 M -0.291( and the )W
-0.291(PCI-to-PCI b)W
-0.291(ridge format defined by the )W
FmE
3872 0 :M
f2_9 sf
( )S
3874 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303.565 716 M -0.291(PCI-to-PCI B)W
-0.291(ridge Architecture Specification)W
FmE
3874 0 :M
f3_9 sf
( )S
3876 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
467.372 716 M -0.291(. Those two )W
96 725 M -0.647(formats are almost, but not entirely, consistent with respect to the fields defined above \(in particular, the max-latency )W
0.502 0.502 0 0.498 0 0 0.502 FmK
40 113 2 138 FmqF
40 641 2 9 FmqF
FmE
endp
%%Page: 21 21
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 21 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
3876 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3876 0 :M
0 G
f0_12 sf
( )S
3879 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
3879 0 :M
f1_12 sf
( )S
3882 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
3882 0 :M
f2_12 sf
( )S
3885 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (17)S
FmE
3885 0 :M
f4_12 sf
( )S
3892 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
3892 0 :M
f3_9 sf
( )S
3894 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 50 M -0.153(and min-grant fields have a different meaning in the bridge header format\). If additional formats are defined in the )W
114 59 M -0.096(future, then it is possible that firmware written before those formats are defined will not be able to recognize them. )W
114 68 M (The question arises: Should the firmware assume that, with respect to the above fields, new formats are consistent )S
114 77 M -0.272(with the existing ones, creating the properties without regard to header type, or should the firmware do nothing if it )W
114 86 M (sees an unrecognized header type. The latter is, in some sense, safer, but it also precludes forwards compatibility, )S
114 95 M (which is a serious deficiency.)S
FmE
3894 0 :M
f2_9 sf
( )S
3896 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 107 M (Then determine whether or not the function has a expansion ROM image containing an FCode Program.)S
FmE
3897 0 :M
f3_9 sf
( )S
3899 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 119 M -0.055(Note: The location of the Expansion ROM Base Address Register differs between the two currently-defined header )W
114 128 M -0.216(types. Where will it be in future header types? Furthermore, the details of Expansion ROMs on )W
-0.216(PCI-to-PCI b)W
-0.216(ridges )W
114 137 M (are not specified by the current revision of the )S
(PCI-to-PCI b)S
(ridge spec.)S
FmE
3899 0 :M
f2_9 sf
( )S
3901 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 149 M (If the function has an FCode Program, evaluate the FCode Program as follows:)S
114 161 M -0.682(Copy the FCode program from expansion ROM into a temporary buffer in RAM and evaluate it as with )W
FmE
3901 0 :M
f5_9 sf
( )S
3906 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
477.613 161 M 0 0 45(byte-load)FmTx
FmE
3906 0 :M
f2_9 sf
( )S
3908 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
522.613 161 M -0.682(.  )W
114 170 M -0.505(\(The temporary RAM buffer may be deallocated afterwards.\)  Set the )W
FmE
3908 0 :M
f5_9 sf
( )S
3913 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
360.31 170 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
3913 0 :M
f2_9 sf
( )S
3915 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.31 170 M -0.505( property to the offset )W
114 179 M (of the ROM image at which the FCode was found.)S
114 191 M -0.189(When the FCode Program begins execution, )W
FmE
3916 0 :M
f5_9 sf
( )S
3921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274.572 191 M 0 0 50(my-address)FmTx
FmE
3921 0 :M
f2_9 sf
( )S
3923 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
324.572 191 M -0.189( and )W
FmE
3923 0 :M
f5_9 sf
( )S
3928 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
341.69 191 M 0 0 40(my-space)FmTx
FmE
3928 0 :M
f2_9 sf
( )S
3930 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
381.69 191 M -0.189( together return the Configuration Space )W
114 200 M (address of the device\'s configuration register set.)S
FmE
3930 0 :M
f3_9 sf
( )S
3932 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 212 M (Note: Since the phys.mid and phys.lo components of Configuration Spaces addresses must be zero, )S
FmE
3932 0 :M
f5_9 sf
( )S
3937 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
490.176 212 M 0 0 30(my-ad-)FmTx
132 221 M 0 0 25(dress)FmTx
FmE
3937 0 :M
f3_9 sf
( )S
3939 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157 221 M -0.276( returns a pair of zeros; the interesting phys.hi information, which is necessary for accessing the config-)W
132 230 M (uration registers via the )S
FmE
3940 0 :M
f5_9 sf
( )S
3945 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220.983 230 M 0 0 45(config-xx)FmTx
FmE
3945 0 :M
f3_9 sf
( )S
3947 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
265.983 230 M ( methods, is returned by )S
FmE
3947 0 :M
f5_9 sf
( )S
3952 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
354.961 230 M 0 0 40(my-space)FmTx
FmE
3952 0 :M
f3_9 sf
( )S
3954 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
394.961 230 M (.)S
FmE
3954 0 :M
f2_9 sf
( )S
3956 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 242 M (The FCode Program is responsible for creating the )S
FmE
3956 0 :M
f5_9 sf
( )S
3961 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.432 242 M 0 0 30(\"name\")FmTx
FmE
3961 0 :M
f2_9 sf
( )S
3963 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.432 242 M ( and )S
FmE
3964 0 :M
f5_9 sf
( )S
3969 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345.927 242 M 0 0 25(\"reg\")FmTx
FmE
3969 0 :M
f2_9 sf
( )S
3971 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
370.927 242 M ( properties.)S
96 254 M (If the function does not have an FCode Program:)S
114 266 M (Create the following properties from information in the device\'s Configuration Space registers:)S
FmE
3971 0 :M
f5_9 sf
( )S
3976 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 278 M 0 0 25(\"reg\")FmTx
0 0 10(  )FmTx
FmE
3976 0 :M
f2_9 sf
( )S
3978 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149 278 M (Create the following entries, in the order shown:)S
114 290 M (\245)S
14.851 N (An entry describing the Configuration Space for the device.)S
114 302 M (\245)S
14.851 N -0.562(For each active base address register, in Configuration Space order, an entry describing the entire space mapped )W
150 311 M -0.267(by that base address register \(or, register pair\).  The )W
FmE
3978 0 :M
f3_9 sf
( )S
3980 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.222 311 M (phys-mid)S
FmE
3980 0 :M
f2_9 sf
( )S
3982 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
368.21 311 M -0.267( and )W
FmE
3983 0 :M
f3_9 sf
( )S
3985 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.169 311 M (phys-lo)S
FmE
3985 0 :M
f2_9 sf
( )S
3987 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
411.66 311 M -0.267( components of these entries are )W
150 320 M -0.398(to be zero, and the size components are to be derived by probing the base address register \(or register pair\).)W
114 332 M (\245)S
14.851 N -0.147(If the device supports an Expansion ROM, an entry describing the Expansion ROM base address register, con-)W
150 341 M (structed as for normal base address registers.)S
114 353 M (\245)S
14.851 N (If applicable, \"legacy\" entries described in section )S
(7.)S
(, in the order shown.)S
FmE
3987 0 :M
f3_9 sf
( )S
3989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 365 M (Note: Without FCode, it is not possible to determine whether or not there are multiple base address registers )S
150 374.667 M (mapping the same resource, so it is not possible to create an )S
FmE
3989 0 :M
f9_9 sf
( )S
3994 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
370.203 374.667 M 0 0 70(\"alternate-reg)FmTx
FmE
3994 0 :M
f9_10 sf
( )S
4000 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
440.203 374.667 M 0 0 6(\")FmTx
FmE
4000 0 :M
f3_9 sf
( )S
4002 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
446.203 374.667 M (  property.)S
114 387 M -0.022(Note: the number of active base address registers depends in part on the header type configuration field; in partic-)W
150 396 M (ular, header types 0x01and 0x81, denoting the standard )S
(PCI-to-PCI b)S
(ridge header format, have at most )S
150 405 M -0.009(two base address registers, whereas header types 0x00 and 0x80have up to seven base address registers )W
150 414 M (\(including the Expansion ROM\'s\).)S
FmE
4003 0 :M
f5_9 sf
( )S
4008 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 426 M 0 0 30(\"name\")FmTx
FmE
4008 0 :M
f2_9 sf
( )S
4010 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 426 M -0.356(   C)W
-0.356(onstruct a name of the form )W
FmE
4010 0 :M
f5_9 sf
( )S
4015 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.503 426 M 0 0 60(pciVVVV,DDDD)FmTx
FmE
4015 0 :M
f2_9 sf
( )S
4017 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
315.503 426 M -0.356(. If the Subsystem ID field in the configuration registers for )W
150 435 M -0.442(this device is non-zero, VVVV,DDDD )W
FmE
4017 0 :M
f3_9 sf
( )S
4019 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
289.986 435 M (shall)S
FmE
4019 0 :M
f2_9 sf
( )S
4021 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
307.487 435 M -0.442( be the Subsystem Vendor ID and Subsystem ID respectively; )W
150 444 M (otherwise VVVV,DDDD )S
FmE
4022 0 :M
f3_9 sf
( )S
4024 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
243.711 444 M (shall)S
FmE
4024 0 :M
f2_9 sf
( )S
4026 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
261.212 444 M ( be the value of the Vendor ID and Device ID fields.  VVVV and DDDD )S
150 453 M (are ASCII hexadecimal numbers, lower case, without leading zeros.)S
114 465 M -0.207(Create the )W
FmE
4026 0 :M
f5_9 sf
( )S
4031 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
152.563 465 M 0 0 95(\"power-consumption\")FmTx
FmE
4031 0 :M
f2_9 sf
( )S
4033 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.563 465 M -0.207( property from the state of the PRSNT1# and PRSNT2# connector, if possible.)W
96 477 M -0.064(Disable fixed-address response by clearing the )W
-0.064(Bus Master, Memory Space and IO Space bits in the C)W
-0.064(ommand Register.)W
96 489 M -0.095(After all slots have been so probed, exit \"probe state\")W
-0.095( and a)W
-0.095(ssign base addresses \(by allocating the address space and set-)W
96 498 M -0.131(ting the base address register\) for each distinct base address register \(or register pair\))W
-0.131(.  For each base address register \(or )W
96 507 M (register pair\) l)S
(isted in any child\'s )S
FmE
4033 0 :M
f5_9 sf
( )S
4038 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.072 507 M 0 0 25(\"reg\")FmTx
FmE
4038 0 :M
f2_9 sf
( )S
4040 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
241.072 507 M ( property,)S
( c)S
(reate)S
( an)S
( )S
FmE
4041 0 :M
f5_9 sf
( )S
4046 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
312.775 507 M 0 0 105(\"assigned-addresses\" )FmTx
FmE
4046 0 :M
f2_9 sf
( )S
4048 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
417.775 507 M (properties describing those as-)S
96 516 M (signments in the corresponding child device nodes.)S
96 528 M (On the host bus, set the Cache Line Size register for each master bridge to the system cache line size if that line size is )S
96 537 M -0.178(supported by the bridge or zero otherwise.  On subordinate buses, set the Cache Line Size to the value of the Cache Line )W
96 546 M (Size register of the bridge for that bus if that line size is supported by the bridge or zero otherwise.)S
96 558 M (On each PCI bus within the domain, set the Latency Timer registers for each master to values appropriate for the other )S
96 567 M (devices on that bus, according to the values of the other device\'s MIN_GNT and MAX_LAT registers.)S
96 579 M -0.433(On each PCI bus within the domain, if all target devices on that bus have \"fast back-to-back\" capability, set the \"fast back-)W
96 588 M (to-back\" enable bits in the Command registers of master devices.)S
FmE
4048 0 :M
f5_10 sf
( )S
4054 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 599.667 M 0 0 90(make-properties)FmTx
FmE
4054 0 :M
f2_10 sf
( )S
4056 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.845 599.667 M (\( -- \))S
FmE
4056 0 :M
f2_9 sf
( )S
4058 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 614 M (Create the default PCI properties \(as described above for )S
FmE
4059 0 :M
f5_9 sf
( )S
4064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.642 614 M 0 0 45(probe-pci)FmTx
FmE
4064 0 :M
f2_9 sf
( )S
4066 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
347.642 614 M (\) for the )S
FmE
4066 0 :M
f3_9 sf
( )S
4068 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
378.872 614 M (current instance)S
FmE
4068 0 :M
f2_9 sf
( )S
4070 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
437.602 614 M (.)S
96 626 M (This user interface word is intended to be used for debugging FCode within the context of )S
FmE
4070 0 :M
f5_9 sf
( )S
4075 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
422.395 626 M 0 0 65(begin-package)FmTx
FmE
4075 0 :M
f2_9 sf
( )S
4077 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
487.395 626 M ( \311 )S
FmE
4078 0 :M
f5_9 sf
( )S
4083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
500.895 626 M 0 0 20(end-)FmTx
96 635 M 0 0 35(package)FmTx
FmE
4083 0 :M
f2_9 sf
( )S
4085 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131 635 M (.  This word )S
FmE
4085 0 :M
f3_9 sf
( )S
4087 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
176.74 635 M (should)S
FmE
4087 0 :M
f2_9 sf
( )S
4089 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.741 635 M ( be )S
(executed b)S
(efore evaluating the FCode for the node.)S
FmE
4089 0 :M
f5_10 sf
( )S
4095 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 646.667 M 0 0 96(assign-addresses)FmTx
FmE
4095 0 :M
f2_10 sf
( )S
4097 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.845 646.667 M (\( -- )S
(\))S
FmE
4098 0 :M
f2_9 sf
( )S
4100 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 661 M (A)S
(ssign addresses for the )S
FmE
4100 0 :M
f3_9 sf
( )S
4102 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
185.963 661 M (current instance)S
FmE
4102 0 :M
f2_9 sf
( )S
4104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
244.693 661 M (.)S
96 673 M (This user interface word is intended to be used for debugging Fcode within the context of )S
FmE
4105 0 :M
f5_9 sf
( )S
4110 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
420.387 673 M 0 0 65(begin-package)FmTx
FmE
4110 0 :M
f2_9 sf
( )S
4112 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
485.387 673 M ( \311 )S
FmE
4112 0 :M
f5_9 sf
( )S
4117 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
498.887 673 M 0 0 20(end-)FmTx
96 682 M 0 0 35(package)FmTx
FmE
4117 0 :M
f2_9 sf
( )S
4119 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131 682 M (.)S
-0.468(  Executing this word causes addresses to be assigned to this node \(based on the current )W
FmE
4119 0 :M
f5_9 sf
( )S
4124 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
442.433 682 M 0 0 25(\"reg\")FmTx
FmE
4124 0 :M
f2_9 sf
( )S
4126 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
467.433 682 M -0.468( property value\), )W
96 691 M (creating an )S
FmE
4126 0 :M
f5_9 sf
( )S
4131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.974 691 M 0 0 100(\"assigned-addresses\")FmTx
FmE
4131 0 :M
f2_9 sf
( )S
4133 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.974 691 M ( )S
( )S
(property )S
(reflecting t)S
(hose addresses.  This word should be executed after evalu-)S
96 700 M (ating the FCode for  the node.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
58 272 2 9 FmqF
58 420 2 9 FmqF
58 471 2 9 FmqF
58 522 2 27 FmqF
FmE
endp
%%Page: 22 22
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 22 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
4134 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4134 0 :M
0 G
f0_12 sf
( )S
4137 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
4137 0 :M
f2_12 sf
( )S
4140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (18)S
FmE
4140 0 :M
f1_12 sf
( )S
4143 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
4143 0 :M
f4_12 sf
( )S
4150 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
4150 0 :M
f0_12 sf
( )S
4153 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 52 M (6. Probing PCI-)S
(to-)S
(PCI bridges)S
FmE
4153 0 :M
f2_10 sf
( )S
4155 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 68.667 M -0.424(The recursive algorithm described in this section allows bus number and address assignment to be done in a single)W
60 80.667 M -0.314(depth-first manner.  Bus numbers are assigned on the way down the PCI bus )W
-0.314(hierarchy a)W
-0.314(nd addresses are assigned)W
60 92.667 M (to on the way back up.  Another algorithm may be used.)S
FmE
4156 0 :M
f3_10 sf
( )S
4158 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 108.667 M 0.511(Note: while this is a simple algorithm \(e.g., it does not require a \"global\" address allocation pass\), it does not)W
60 120.667 M (provide the most optimal system-wide address assignment.)S
FmE
4158 0 :M
f2_10 sf
( )S
4160 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 136.667 M 0.051(If the function is a standard )W
0.051(PCI-to-PCI b)W
0.051(ridge \(as indicated by the class code and the header type fields\), set the)W
60 148.667 M 0.5(bridge\'s Primary Bus # register to the bus number of the parent bus, assign the next bus number to that bridge,)W
60 160.667 M 0.243(setting its Secondary Bus # register to that number, set the bridge\'s Subordinate Bus # register to )W
FmE
4161 0 :M
f4_10 sf
( )S
4167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
452.482 160.667 M 0 0 24(0xFF)FmTx
FmE
4167 0 :M
f2_10 sf
( )S
4169 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
476.482 160.667 M 0.243(, and re-)W
60 172.667 M (cursively scan the slots of that bridge\'s subordinate bus.)S
60 188.667 M -0.488(When that recursive scanning process returns, set the bridge\'s Subordinate Bus # register to the largest bus number)W
60 200.667 M 0.066(assigned during the recursive scan.   At this point, bus numbers have been assigned to all subordinate buses, and)W
60 212.666 M 0.842(addresses have been assigned for all devices on the )W
0.842(subordinate b)W
0.842(uses, for this bridge within the PCI domain.)W
60 224.666 M 0.27(Then, assign addresses to all devices on the Secondary Bus and set the Memory Base, Memory Limit, I/O Base)W
60 236.666 M -0.107(and I/O Limit registers of the bridge to their appropriate values and enable Memory and I/O transactions.  Due to)W
60 248.666 M -0.165(the mapping characteristics of )W
-0.165(PCI-to-PCI b)W
-0.165(ridges, the ranges of Memory addresses for subordinate devices )W
FmE
4169 0 :M
f3_10 sf
( )S
4171 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
490.554 248.666 M (shall)S
FmE
4172 0 :M
f2_10 sf
( )S
4174 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 260.666 M (be aligned to 1 MB boundaries, and the ranges of I/O addresses )S
FmE
4174 0 :M
f3_10 sf
( )S
4176 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
316.294 260.666 M (shall)S
FmE
4177 0 :M
f2_10 sf
( )S
4179 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.74 260.666 M ( be aligned to 4 KB boundaries.)S
60 276.666 M -0.251(After setting the Memory Base, Memory Limit, I/O Base and I/O Limit registers, create a )W
FmE
4179 0 :M
f5_9 sf
( )S
4184 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
416.636 276.666 M 0 0 40(\"ranges\")FmTx
FmE
4184 0 :M
f2_10 sf
( )S
4186 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
456.636 276.666 M -0.251( property that)W
60 288.666 M (represents the Memory and I/O mappings that have been established.)S
FmE
4187 0 :M
f0_12 sf
( )S
4190 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 330 M (7. )S
(Legacy devices)S
FmE
4190 0 :M
f2_10 sf
( )S
4192 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 346.666 M 0.45(\"Legacy\" VGA and IDE devices that are implemented on PCI will typically have the same \"hard-decoded\" ad-)W
60 358.666 M -0.518(dresses as they did on ISA.  Such devices that have FCode can use explicit indication of their address requirements)W
60 370.666 M 0.566(as described above.  However, for cards that have no FCode image, Open Firmware )W
FmE
4192 0 :M
f3_10 sf
( )S
4194 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
405.833 370.666 M (shall)S
FmE
4195 0 :M
f2_10 sf
( )S
4197 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.279 370.666 M 0.566( assume the standard)W
60 382.666 M -0.022(address ranges and )W
FmE
4197 0 :M
f3_10 sf
( )S
4199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.949 382.666 M (shall)S
FmE
4200 0 :M
f2_10 sf
( )S
4202 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.395 382.666 M -0.022( create the )W
FmE
4202 0 :M
f5_10 sf
( )S
4208 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.905 382.666 M 0 0 30(\"reg\")FmTx
FmE
4208 0 :M
f2_10 sf
( )S
4210 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
230.905 382.666 M -0.022( property with these ranges, in addition to any relocatable regions that)W
60 394.666 M (have base registers.)S
60 410.666 M (For VGA devices \(class-code = )S
FmE
4211 0 :M
f4_10 sf
( )S
4217 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.633 410.666 M 0 0 48(0x000100)FmTx
FmE
4217 0 :M
f2_10 sf
( )S
4219 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.633 410.666 M ( or )S
FmE
4219 0 :M
f4_10 sf
( )S
4225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.96 410.666 M 0 0 48(0x030000)FmTx
FmE
4225 0 :M
f2_10 sf
( )S
4227 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297.96 410.666 M (\), the address ranges are:)S
FmE
4228 0 :M
f4_10 sf
( )S
4234 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 422.666 M 0 0 66(0x3B0-0x3BB)FmTx
FmE
4234 0 :M
f2_10 sf
( )S
4236 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 422.666 M (\(I/O, aliased; )S
FmE
4236 0 :M
f4_10 sf
( )S
4242 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.692 422.666 M 0 0 6(t)FmTx
FmE
4242 0 :M
f2_10 sf
( )S
4244 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
264.692 422.666 M (=1\))S
FmE
4245 0 :M
f4_10 sf
( )S
4251 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 433.666 M 0 0 66(0x3C0-0x3DF)FmTx
FmE
4251 0 :M
f2_10 sf
( )S
4253 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 433.666 M (\(I/O, aliased; )S
FmE
4253 0 :M
f4_10 sf
( )S
4259 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.692 433.666 M 0 0 6(t)FmTx
FmE
4259 0 :M
f2_10 sf
( )S
4261 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
264.692 433.666 M (=1\))S
FmE
4262 0 :M
f4_10 sf
( )S
4268 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 444.666 M 0 0 90(0xA0000-0xBFFFF)FmTx
FmE
4268 0 :M
f2_10 sf
( )S
4270 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 444.666 M (\(Memory, below 1MB, )S
FmE
4270 0 :M
f4_10 sf
( )S
4276 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.256 444.666 M 0 0 6(t)FmTx
FmE
4276 0 :M
f2_10 sf
( )S
4278 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
305.256 444.666 M (=1\))S
60 459.666 M (For IDE devices \(class-code = )S
FmE
4279 0 :M
f4_10 sf
( )S
4285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.63 459.666 M 0 0 48(0x010100)FmTx
FmE
4285 0 :M
f2_10 sf
( )S
4287 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.63 459.666 M (\), the address ranges are:)S
FmE
4287 0 :M
f4_10 sf
( )S
4293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 471.666 M 0 0 66(0x1F0-0x1F7)FmTx
FmE
4293 0 :M
f2_10 sf
( )S
4295 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 471.666 M (Primary Command Block \(I/O\))S
FmE
4296 0 :M
f4_10 sf
( )S
4302 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 482.666 M 0 0 30(0x3F6)FmTx
FmE
4302 0 :M
f2_10 sf
( )S
4304 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 482.666 M (Primary Control Block \(I/O\))S
FmE
4304 0 :M
f4_10 sf
( )S
4310 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 493.666 M 0 0 66(0x170-0x17F)FmTx
FmE
4310 0 :M
f2_10 sf
( )S
4312 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 493.666 M (Secondary Command Block \(I/O\))S
FmE
4313 0 :M
f4_10 sf
( )S
4319 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 504.666 M 0 0 30(0x376)FmTx
FmE
4319 0 :M
f2_10 sf
( )S
4321 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 504.666 M (Secondary Control Block \(I/O\))S
FmE
4321 0 :M
f0_12 sf
( )S
4324 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 545 M (8. )S
(Relationship between PCI Base Registers and Open Firmware Properties)S
FmE
4324 0 :M
f2_10 sf
( )S
4326 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 561.666 M -0.5(Especially in the case of a PCI device with onboard FCode support, there is no particular relationship between PCI)W
60 573.666 M -0.552(base registers and the )W
FmE
4327 0 :M
f5_10 sf
( )S
4333 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.079 573.666 M 0 0 30(\"reg\")FmTx
FmE
4333 0 :M
f2_10 sf
( )S
4335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
176.079 573.666 M -0.552( and )W
FmE
4335 0 :M
f5_10 sf
( )S
4341 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.413 573.666 M 0 0 114(\"assigned-addresses)FmTx
FmE
4341 0 :M
f0_10 sf
( )S
4343 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
308.413 573.666 M (\")S
FmE
4344 0 :M
f2_10 sf
( )S
4346 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.962 573.666 M -0.552( properties.  A particular base register may or may)W
60 585.666 M -0.568(not be represented in )W
FmE
4346 0 :M
f5_10 sf
( )S
4352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.801 585.666 M 0 0 24(\"reg)FmTx
FmE
4352 0 :M
f2_10 sf
( )S
4354 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.801 585.666 M -0.568(\" and )W
FmE
4355 0 :M
f5_10 sf
( )S
4361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
190.184 585.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4361 0 :M
f2_10 sf
( )S
4363 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
310.184 585.666 M -0.568(, and those properties may contain entries referring)W
60 597.666 M -0.005(to addresses not controlled by any base register.  No particular ordering is required in either the )W
FmE
4363 0 :M
f5_10 sf
( )S
4369 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
443.633 597.666 M 0 0 30(\"reg\")FmTx
FmE
4369 0 :M
f2_10 sf
( )S
4371 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
473.633 597.666 M -0.005( property)W
60 609.666 M 0.304(or the )W
FmE
4372 0 :M
f5_10 sf
( )S
4378 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
86.152 609.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4378 0 :M
f2_10 sf
( )S
4380 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.152 609.666 M 0.304( property.  A client wishing to make use of the addressing information pro-)W
60 621.666 M -0.507(vided by Open Firmware must scan the )W
FmE
4380 0 :M
f5_10 sf
( )S
4386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.118 621.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4386 0 :M
f2_10 sf
( )S
4388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.118 621.666 M -0.507( property looking for an entry specifying the)W
60 633.666 M (desired base-register field in its )S
FmE
4389 0 :M
f3_10 sf
( )S
4391 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
187.991 633.666 M (phys.hi)S
FmE
4391 0 :M
f2_10 sf
( )S
4393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.597 633.666 M (.)S
FmE
4394 0 :M
f0_12 sf
( )S
4397 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 674.999 M (9. )S
(R)S
(OM Image Format for FCode:)S
FmE
4397 0 :M
f0_10 sf
( )S
4399 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
105 691.666 M (Offset from start)S
105 703.666 M (of ROM Image)S
106.581 N (Data)S
FmE
4399 0 :M
f4_10 sf
( )S
4405 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.032 719.666 M 0 0 54(00h - 01h)FmTx
FmE
4405 0 :M
f2_10 sf
( )S
4407 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 719.666 M (ROM signature field of ROM Header \(PCI spec 6.3.1.1\))S
FmE
endp
%%Page: 23 23
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 23 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
4408 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4408 0 :M
f0_12 sf
( )S
4411 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
4411 0 :M
f1_12 sf
( )S
4414 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
4414 0 :M
f2_12 sf
( )S
4417 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (19)S
FmE
4417 0 :M
f4_12 sf
( )S
4424 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
4424 0 :M
f4_10 sf
( )S
4430 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.536 50.667 M 0 0 54(02h - 03h)FmTx
FmE
4430 0 :M
f2_10 sf
( )S
4432 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 50.667 M -0.312(Pointer to FCode program.  This is a 16-bit field that is the offset from the start of )W
204 62.667 M -0.468(the ROM image and points to the FCode Program.  The field is in little-endian for-)W
204 74.667 M (mat.  \(This field is within the \"Reserved for processor-unique data\" field of the )S
204 86.667 M (ROM Header.\))S
FmE
4433 0 :M
f4_10 sf
( )S
4439 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.536 102.667 M 0 0 54(04h - 17h)FmTx
FmE
4439 0 :M
f2_10 sf
( )S
4441 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 102.667 M (Reserved \(remainder of \"Reserved for processor-unique data\" field of the ROM )S
204 114.667 M (Header\).)S
FmE
4441 0 :M
f4_10 sf
( )S
4447 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.536 130.667 M 0 0 54(18h - 19h)FmTx
FmE
4447 0 :M
f2_10 sf
( )S
4449 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 130.667 M (\"Pointer to PCI Data Structure\" field of ROM Header.)S
FmE
4450 0 :M
f4_10 sf
( )S
4456 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.536 146.667 M 0 0 66(1Ah - FFFFh)FmTx
FmE
4456 0 :M
f2_10 sf
( )S
4458 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 146.667 M (PCI Data Structure \(PCI spec 6.3.1.2\) with \"Code Type\" = 1)S
FmE
4458 0 :M
f4_10 sf
( )S
4464 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.536 162.667 M 0 0 66(38h - FFFFh)FmTx
FmE
4464 0 :M
f2_10 sf
( )S
4466 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 162.667 M (The PCI Data Structure \(PCI spec 6.3.1.2\), Vital Product Data, and FCode Pro-)S
204 174.667 M -0.213(gram can each begin anywhere within this range, in any order.  The \"Code Type\" )W
204 186.667 M (field of the PCI Data Structure shall have the value \")S
FmE
4467 0 :M
f4_10 sf
( )S
4473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
414.659 186.667 M 0 0 6(1)FmTx
FmE
4473 0 :M
f2_10 sf
( )S
4475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
420.659 186.667 M (\".)S
204 202.666 M (The FCode Program is as described in Open Firmware; its size is given by the )S
204 214.666 M (standard Open Firmware FCode Program header.  FCode bytes shall appear at )S
204 226.666 M (consecutive byte addresses.)S
FmE
4475 0 :M
f0_12 sf
( )S
4478 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 268 M (10. Encapsulated Drivers)S
FmE
4478 0 :M
f2_10 sf
( )S
4480 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 284.666 M -0.155(This section describes a mechanism which allows the encapsulation of run-time drivers within the standard Open)W
78 296.666 M (Firmware expansion ROM.)S
78 312.666 M -0.322(The FCode contained within a PCI card\'s expansion ROM provides for Open Firmware drivers for the device.  To)W
78 324.666 M 0.216(enhance the \"plug-and-play\" of cards in common system platforms, it is desirable to be able to include run-time)W
78 336.666 M (drivers within this expansion ROM, thus eliminating the extra step of installing drivers onto the OS boot device.)S
78 352.666 M -0.283(The information about run-time drivers is encoded as additional standard properties within the device tree.  These)W
78 364.666 M -0.054(properties are created by the FCode probe code of the plug-in card, and are used by the OS to locate and load the)W
78 376.666 M 0.274(appropriate driver.  Two new properties are defined;  they differ as to how the location of the run-time driver is)W
78 388.666 M (defined.)S
FmE
4481 0 :M
f4_10 sf
( )S
4487 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 402.666 M 0 0 60(\"driver,\311\")FmTx
FmE
4487 0 :M
f2_10 sf
( )S
4489 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
138 402.666 M ( format)S
FmE
4489 0 :M
f2_9 sf
( )S
4491 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 417 M (This property, encoded as with )S
FmE
4491 0 :M
f5_9 sf
( )S
4496 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
209.46 417 M 0 0 60(encode-bytes)FmTx
FmE
4496 0 :M
f2_9 sf
( )S
4498 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.46 417 M (, contains the run-time driver.)S
FmE
4499 0 :M
f2_10 sf
( )S
4501 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 430.666 M -0.02(This format is used when the run-time driver is contained within the FCode image, itself.  The value of the prop-)W
78 442.666 M -0.589(erty )W
(is)S
95.456 443.666 FmB
6.667 0 FmL
0 0.5 FmSo
102.123 442.666 M -0.589( the encapsulated driver;  the )W
FmE
4501 0 :M
f4_10 sf
( )S
4507 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.312 442.666 M 0 0 108(prop-addr,prop-len)FmTx
FmE
4507 0 :M
f2_10 sf
( )S
4509 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
324.312 442.666 M -0.589( reported by the various \"get-property\" FCodes and/)W
78 454.666 M -0.03(or )W
FmE
4510 0 :M
f4_10 sf
( )S
4516 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88.798 454.666 M 0 0 42(getprop)FmTx
FmE
4516 0 :M
f2_10 sf
( )S
4518 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.798 454.666 M -0.03( Client interface call represent the location and size of the driver within the device tree\'s data space.)W
78 466.666 M (I.e., )S
FmE
4518 0 :M
f5_10 sf
( )S
4524 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.766 466.666 M 0 0 72(decode-bytes)FmTx
FmE
4524 0 :M
f2_10 sf
( )S
4526 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.766 466.666 M ( could be used to copy the driver into the desired run-time location.)S
FmE
4527 0 :M
f4_10 sf
( )S
4533 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 480.666 M 0 0 84(\"driver-reg,\311\")FmTx
FmE
4533 0 :M
f2_10 sf
( )S
4535 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 480.666 M ( format)S
FmE
4535 0 :M
f2_9 sf
( )S
4537 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 495 M (This property, encoded as with the )S
FmE
4537 0 :M
f5_9 sf
( )S
4542 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222.705 495 M 0 0 25(\"reg\")FmTx
FmE
4542 0 :M
f0_9 sf
( )S
4544 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.705 495 M ( )S
FmE
4545 0 :M
f2_9 sf
( )S
4547 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.955 495 M (standard property , contains a relative pointer to the run-time driver.)S
FmE
4547 0 :M
f2_10 sf
( )S
4549 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 508.666 M -0.521(This format is used when the driver is not directly contained within the FCode image, but rather, is located in some)W
78 520.666 M -0.323(other portion of the Expansion ROM.  The value is encoded in a )W
FmE
4549 0 :M
f5_9 sf
( )S
4554 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333.169 520.666 M 0 0 25(\"reg\")FmTx
FmE
4554 0 :M
f2_10 sf
( )S
4556 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
358.169 520.666 M -0.323( format, where the address is relative to the)W
78 532.666 M 0.623(expansion ROM\'s base address.  This format conserves device tree \(and, FCode\) space, but requires the OS to)W
78 544.666 M 0.235(perform the actions of mapping in the Expansion ROM, using the information supplied by this property and the)W
FmE
4557 0 :M
f5_9 sf
( )S
4562 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 556.666 M 0 0 100(\"assigned-addresses\")FmTx
FmE
4562 0 :M
f2_10 sf
( )S
4564 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 556.666 M ( for the Expansion ROM, and copying the driver, itself.)S
FmE
4564 0 :M
f3_10 sf
( )S
4566 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 572.666 M 1.061(Note:  the )W
FmE
4567 0 :M
f7_9 sf
( )S
4572 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123.114 572.666 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
4572 0 :M
f3_10 sf
( )S
4574 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.114 572.666 M 1.061( property facilitates the generation of this property within the context of the)W
78 584.666 M -0.351(FCode\'s image.  The driver can be located relative to the ROM image that contains the FCode \(but, does not have)W
78 596.666 M -0.371(to be within the FCode, itself\) without regard to the location of that ROM image relative to others within the same)W
78 608.666 M 0.061(Expansion ROM.  I.e., \"self-relocating\" images containing )W
0.061(encapsulated d)W
0.061(rivers can be created that can be )W
(con-)S
78 620.666 M 0.675(catenated w)W
0.675(ith other images without altering any data within an image \(except, of course, for the Indicator to)W
78 632.666 M (properly indicate the last image\).)S
FmE
4574 0 :M
f0_12 sf
( )S
4577 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 666.999 M (10.1. Naming conventions)S
FmE
4577 0 :M
f2_10 sf
( )S
4579 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 683.666 M 0.011(The complete property name for these encapsulated drivers is chosen to allow multiple drivers to co-exist within)W
78 695.666 M -0.257(the expansion ROM.  An OS will locate its desired driver by an exact match of its property name among any such)W
FmE
4580 0 :M
f4_10 sf
( )S
4586 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 707.666 M 0 0 54(\"driver,\")FmTx
FmE
4586 0 :M
f2_10 sf
( )S
4588 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 707.666 M -0.217( \(\")W
FmE
4588 0 :M
f4_10 sf
( )S
4594 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.69 707.666 M 0 0 72(driver-reg,\")FmTx
FmE
4594 0 :M
f2_10 sf
( )S
4596 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.69 707.666 M -0.217(\) properties contained within the device tree for this device.  The formats of the)W
78 719.666 M (complete names are:)S
FmE
endp
%%Page: 24 24
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 24 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
4597 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4597 0 :M
f0_12 sf
( )S
4600 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
4600 0 :M
f2_12 sf
( )S
4603 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (20)S
FmE
4603 0 :M
f1_12 sf
( )S
4606 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
4606 0 :M
f4_12 sf
( )S
4613 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
4613 0 :M
f4_10 sf
( )S
4619 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 50.667 M 0 0 48(\"driver,)FmTx
FmE
4619 0 :M
f9_10 sf
( )S
4625 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 50.667 M 0 0 54(OS-vendor)FmTx
FmE
4625 0 :M
f4_10 sf
( )S
4631 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 50.667 M 0 0 6(,)FmTx
FmE
4631 0 :M
f9_10 sf
( )S
4637 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 50.667 M 0 0 42(OS-type)FmTx
FmE
4637 0 :M
f4_10 sf
( )S
4643 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210 50.667 M 0 0 6(,)FmTx
FmE
4643 0 :M
f9_10 sf
( )S
4649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216 50.667 M 0 0 90(Instruction-set)FmTx
FmE
4649 0 :M
f4_10 sf
( )S
4655 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306 50.667 M 0 0 6(\")FmTx
60 62.667 M 0 0 72(\"driver-reg,)FmTx
FmE
4655 0 :M
f9_10 sf
( )S
4661 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 62.667 M 0 0 54(OS-vendor)FmTx
FmE
4661 0 :M
f4_10 sf
( )S
4667 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 62.667 M 0 0 6(,)FmTx
FmE
4667 0 :M
f9_10 sf
( )S
4673 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 62.667 M 0 0 42(OS-type)FmTx
FmE
4673 0 :M
f4_10 sf
( )S
4679 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 62.667 M 0 0 6(,)FmTx
FmE
4679 0 :M
f9_10 sf
( )S
4685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 62.667 M 0 0 90(Instruction-set)FmTx
FmE
4685 0 :M
f4_10 sf
( )S
4691 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
330 62.667 M 0 0 6(\")FmTx
FmE
4691 0 :M
f2_10 sf
( )S
4693 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 78.667 M -0.191(The OS-vendor component is as defined for device-names;  i.e., organizational unique identifier \(e.g., stock sym-)W
60 90.667 M (bol\).  The OS-type & Instruction-set components are defined by the OS-vendor.  An example would be:)S
FmE
4694 0 :M
f4_10 sf
( )S
4700 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 106.667 M 0 0 186(\"driver-reg,AAPL,MacOS,PowerPC\")FmTx
FmE
4700 0 :M
f0_12 sf
( )S
4703 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 148 M (11. )S
(Examples of )S
FmE
4703 0 :M
f5_12 sf
( )S
4710 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.988 148 M 0 0 35(\"reg\")FmTx
FmE
4710 0 :M
f0_12 sf
( )S
4713 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.988 148 M ( and )S
FmE
4713 0 :M
f5_12 sf
( )S
4720 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204.33 148 M 0 0 147(\"assigned-addresses\" )FmTx
FmE
4720 0 :M
f0_12 sf
( )S
4723 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351.33 148 M (properties)S
FmE
4723 0 :M
f2_10 sf
( )S
4725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 164.667 M -0.205(The examples in these sections demonstrate the generation and use of the )W
FmE
4725 0 :M
f5_10 sf
( )S
4731 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.972 164.667 M 0 0 30(\"reg\")FmTx
FmE
4731 0 :M
f2_10 sf
( )S
4733 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
382.972 164.667 M -0.205( and )W
FmE
4734 0 :M
f5_10 sf
( )S
4740 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
401.999 164.667 M 0 0 108(\"assigned-address-)FmTx
60 176.667 M 0 0 18(es\")FmTx
FmE
4740 0 :M
f2_10 sf
( )S
4742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 176.667 M 0.419( properties for PCI devices.  The first sections demonstrate how )W
FmE
4742 0 :M
f5_10 sf
( )S
4748 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
339.724 176.667 M 0 0 30(\"reg\")FmTx
FmE
4748 0 :M
f2_10 sf
( )S
4750 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
369.724 176.667 M 0.419( and )W
FmE
4751 0 :M
f5_10 sf
( )S
4757 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
390 176.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4757 0 :M
f2_10 sf
( )S
4759 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 188.667 M -0.391(properties get created while the last sections show how a Client can use the information to determine PCI address-)W
60 200.667 M (es of device resources.)S
60 216.667 M (In the following examples:)S
FmE
4759 0 :M
f4_10 sf
( )S
4765 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
87 228.667 M 0 0 6(x)FmTx
0 0 18(xxx)FmTx
FmE
4765 0 :M
f2_10 sf
( )S
4767 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 228.667 M (represents the bus, device, function numbers as appropriate)S
FmE
4768 0 :M
f4_10 sf
( )S
4774 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
87 240.666 M 0 0 6(h)FmTx
0 0 42(hhhhhhh)FmTx
FmE
4774 0 :M
f2_10 sf
( )S
4776 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 240.666 M (represents the high 32 bits of a PCI domain address)S
FmE
4776 0 :M
f4_10 sf
( )S
4782 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
87 252.666 M 0 0 6(l)FmTx
0 0 42(lllllll)FmTx
FmE
4782 0 :M
f2_10 sf
( )S
4784 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 252.666 M (represents the low 32 bits of a PCI domain address)S
FmE
4785 0 :M
f0_12 sf
( )S
4788 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 287 M (11.1. )S
(Creation of )S
FmE
4788 0 :M
f5_12 sf
( )S
4795 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.307 287 M 0 0 35(\"reg\")FmTx
FmE
4795 0 :M
f0_12 sf
( )S
4798 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.307 287 M ( and )S
FmE
4798 0 :M
f5_12 sf
( )S
4805 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208.648 287 M 0 0 126(\"assigned-address\")FmTx
FmE
4805 0 :M
f0_12 sf
( )S
4808 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.648 287 M ( properties)S
FmE
4808 0 :M
f2_10 sf
( )S
4810 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 303.666 M 0.643(The following sections describe several scenarios of how )W
FmE
4810 0 :M
f5_10 sf
( )S
4816 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
296.154 303.666 M 0 0 30(\"reg\")FmTx
FmE
4816 0 :M
f2_10 sf
( )S
4818 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
326.154 303.666 M 0.643( and )W
FmE
4819 0 :M
f5_10 sf
( )S
4825 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
346.879 303.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4825 0 :M
f2_10 sf
( )S
4827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.879 303.666 M 0.643( properties)W
60 315.666 M (would get created in various situations.)S
FmE
4827 0 :M
f0_12 sf
( )S
4830 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 350 M (11.1.1. )S
(A single 256-byte address base register, without FCode.)S
FmE
4830 0 :M
f2_10 sf
( )S
4832 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 366.666 M (This example device has a single a single 256-byte, non-prefetchable memory range and no Expansion ROM:)S
96 382.666 M (Base address register )S
FmE
4833 0 :M
f4_10 sf
( )S
4839 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.897 382.666 M 0 0 24(0x10)FmTx
FmE
4839 0 :M
f2_10 sf
( )S
4841 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.897 382.666 M (:)S
132 398.666 M 1.057(Discovered to be present, and requiring )W
FmE
4841 0 :M
f4_10 sf
( )S
4847 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.552 398.666 M 0 0 30(0x100)FmTx
FmE
4847 0 :M
f2_10 sf
( )S
4849 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.552 398.666 M 1.057( bytes of address space, by reading)W
FmE
4850 0 :M
f4_10 sf
( )S
4856 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 410.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
4856 0 :M
f2_10 sf
( )S
4858 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 410.666 M ( after writing )S
FmE
4858 0 :M
f4_10 sf
( )S
4864 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.692 410.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4864 0 :M
f2_10 sf
( )S
4866 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306.692 410.666 M (.)S
96 426.666 M (Base address register 0x14:)S
132 442.666 M 6.16(Not present, as discovered by reading back )W
FmE
4867 0 :M
f4_10 sf
( )S
4873 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
349.487 442.666 M 0 0 60(0x00000000)FmTx
FmE
4873 0 :M
f2_10 sf
( )S
4875 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
409.487 442.666 M 6.16( after writing)W
FmE
4875 0 :M
f4_10 sf
( )S
4881 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 454.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4881 0 :M
f2_10 sf
( )S
4883 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 454.666 M (.)S
96 470.666 M (\(same for 0x18, 0x1C, 0x20, 0x24, and 0x30\))S
FmE
4884 0 :M
f5_10 sf
( )S
4890 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 486.666 M 0 0 30(\"reg\")FmTx
FmE
4890 0 :M
f2_10 sf
( )S
4892 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 486.666 M ( property \(created during probing\))S
FmE
4892 0 :M
f4_10 sf
( )S
4898 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 498.666 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
96 510.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
96 520.666 M 0 0 264(02xxxx10 00000000 00000000 00000000 00000100)FmTx
FmE
4898 0 :M
f5_10 sf
( )S
4904 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 534.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4904 0 :M
f2_10 sf
( )S
4906 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 534.666 M ( property \(created after probing, during address assignment\))S
FmE
4907 0 :M
f4_10 sf
( )S
4913 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 548.666 M 0 0 264(82xxxx10 00000000 llllll00 00000000 00000100)FmTx
FmE
4913 0 :M
f2_10 sf
( )S
4915 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 564.666 M (with the resulting base address registers contents:)S
FmE
4915 0 :M
f4_10 sf
( )S
4921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 580.666 M 0 0 30(0x10:)FmTx
42 N 0 0 48(llllll00)FmTx
FmE
4921 0 :M
f0_12 sf
( )S
4924 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 615 M (11.1.2. )S
(A simple VGA device, without FCode.)S
FmE
4924 0 :M
f2_10 sf
( )S
4926 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 631.666 M -0.596(This example consists of a simple VGA device, with no relocatable regions and a 4K non-FCode Expansion ROM.)W
96 647.666 M (Base address register 0x10:)S
132 663.666 M 1.48(Discovered to be not implemented by reading back a )W
FmE
4927 0 :M
f4_10 sf
( )S
4933 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
358.848 663.666 M 0 0 60(0x00000000)FmTx
FmE
4933 0 :M
f2_10 sf
( )S
4935 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
418.848 663.666 M 1.48( after writing)W
FmE
4935 0 :M
f4_10 sf
( )S
4941 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 675.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4941 0 :M
f2_10 sf
( )S
4943 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 675.666 M (.)S
96 691.666 M (\(same for 0x14, 0x18, 0x1C, 0x20, 0x24\))S
96 707.666 M (Expansion ROM base address register \(0x30\):)S
132 723.666 M -0.034(Discovered to be present, and requiring 0x1000 bytes by reading back a 0xFFFFF000)W
FmE
endp
%%Page: 25 25
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 25 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
4944 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4944 0 :M
f0_12 sf
( )S
4947 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
4947 0 :M
f1_12 sf
( )S
4950 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
4950 0 :M
f2_12 sf
( )S
4953 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (21)S
FmE
4953 0 :M
f4_12 sf
( )S
4960 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
4960 0 :M
f2_10 sf
( )S
4962 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 50.667 M (after writing 0xFFFFFFFF.)S
FmE
4963 0 :M
f5_10 sf
( )S
4969 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 66.667 M 0 0 30(\"reg\")FmTx
FmE
4969 0 :M
f2_10 sf
( )S
4971 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 66.667 M ( property \(created during probing\))S
FmE
4971 0 :M
f4_10 sf
( )S
4977 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 78.667 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
114 90.667 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
114 100.667 M 0 0 264(02xxxx30 00000000 00000000 00000000 00001000)FmTx
114 110.667 M 0 0 144(81xxxx00 00000000 000003)FmTx
0 0 12(B0)FmTx
0 0 102( 00000000 0000000)FmTx
0 0 6(C)FmTx
114 120.667 M 0 0 144(81xxxx00 00000000 000003)FmTx
0 0 12(C0)FmTx
0 0 108( 00000000 00000020)FmTx
114 130.667 M 0 0 126(82xxxx00 00000000 000)FmTx
0 0 12(A0)FmTx
0 0 126(000 00000000 00020000)FmTx
FmE
4977 0 :M
f5_10 sf
( )S
4983 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 144.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4983 0 :M
f2_10 sf
( )S
4985 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 144.667 M ( property \(created after probing, during address assignment\))S
FmE
4986 0 :M
f4_10 sf
( )S
4992 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 160.667 M 0 0 264(82xxxx30 00000000 lllll000 00000000 00001000)FmTx
FmE
4992 0 :M
f2_10 sf
( )S
4994 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 176.667 M (with the resulting base address registers:)S
FmE
4994 0 :M
f4_10 sf
( )S
5000 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 192.666 M 0 0 30(0x30:)FmTx
42 N 0 0 48(lllll000)FmTx
FmE
5000 0 :M
f0_12 sf
( )S
5003 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 227 M (11.1.3. )S
(A single 256 resource, Memory and I/O accessible, without FCode)S
FmE
5003 0 :M
f2_10 sf
( )S
5005 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 243.666 M 0.404(This example consists of a device that has a single resource, requiring 256 bytes of address space, but which is)W
78 255.666 M 0.346(accessible as either I/O or Memory mapping;  i.e., it contains two address base registers, one for I/O Space and)W
78 267.666 M -0.377(one for Memory Space.  For this example, no Expansion ROM base address register is implemented;  hence, there)W
78 279.666 M (is no FCode.)S
114 295.666 M (Base address register 0x10:)S
150 311.666 M -0.624(Discovered to be a Memory base address register, requiring 256 bytes of address space,)W
150 323.666 M (by reading back a )S
FmE
5006 0 :M
f4_10 sf
( )S
5012 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
223.298 323.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
5012 0 :M
f2_10 sf
( )S
5014 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.298 323.666 M ( after writing )S
FmE
5014 0 :M
f4_10 sf
( )S
5020 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
337.991 323.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5020 0 :M
f2_10 sf
( )S
5022 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
397.991 323.666 M (.)S
114 339.666 M (Base address register 0x14:)S
150 355.666 M 0.035(Discovered to be a I/O base address register, requiring 256 bytes of address space, by)W
150 367.666 M (reading back a )S
FmE
5023 0 :M
f4_10 sf
( )S
5029 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.798 367.666 M 0 0 60(0xFFFFFF01)FmTx
FmE
5029 0 :M
f2_10 sf
( )S
5031 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270.798 367.666 M ( after writing )S
FmE
5031 0 :M
f4_10 sf
( )S
5037 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.491 367.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5037 0 :M
f2_10 sf
( )S
5039 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.491 367.666 M (.)S
114 383.666 M (Base address registers 0x18, 0x1C 0x20, 0x24 and 0x30:)S
150 399.666 M 1.48(Discovered to be not implemented by reading back a )W
FmE
5040 0 :M
f4_10 sf
( )S
5046 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
376.848 399.666 M 0 0 60(0x00000000)FmTx
FmE
5046 0 :M
f2_10 sf
( )S
5048 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
436.848 399.666 M 1.48( after writing)W
FmE
5048 0 :M
f4_10 sf
( )S
5054 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 411.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5054 0 :M
f2_10 sf
( )S
5056 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210 411.666 M (.)S
FmE
5057 0 :M
f5_10 sf
( )S
5063 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 427.666 M 0 0 30(\"reg\")FmTx
FmE
5063 0 :M
f2_10 sf
( )S
5065 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 427.666 M ( property \(created during probing\))S
FmE
5065 0 :M
f4_10 sf
( )S
5071 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 443.666 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
114 455.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
114 465.666 M 0 0 264(02xxxx10 00000000 00000000 00000000 00000100)FmTx
114 475.666 M 0 0 264(01xxxx14 00000000 00000000 00000000 00000100)FmTx
FmE
5071 0 :M
f5_10 sf
( )S
5077 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 499.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5077 0 :M
f2_10 sf
( )S
5079 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 499.666 M ( property \(created after probing, during address assignment\))S
FmE
5080 0 :M
f4_10 sf
( )S
5086 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 511.666 M 0 0 264(81xxxx14 00000000 llllll00 00000000 00000100)FmTx
114 521.666 M 0 0 108(82xxxx10 00000000 )FmTx
0 0 42(mmmmmm0)FmTx
0 0 114(0 00000000 00000100)FmTx
FmE
5086 0 :M
f2_10 sf
( )S
5088 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 535.666 M (with the resulting base registers:)S
FmE
5088 0 :M
f4_10 sf
( )S
5094 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 547.666 M 0 0 30(0x10:)FmTx
42 N 0 0 42(mmmmmm0)FmTx
0 0 6(0)FmTx
FmE
5094 0 :M
f2_10 sf
( )S
5096 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 547.666 M (\(a memory address\))S
FmE
5097 0 :M
f4_10 sf
( )S
5103 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 557.666 M 0 0 30(0x14:)FmTx
42 N 0 0 48(llllll01)FmTx
FmE
5103 0 :M
f2_10 sf
( )S
5105 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 557.666 M (\(an I/O address\))S
FmE
5105 0 :M
f3_10 sf
( )S
5107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 571.666 M -0.081(Note that this platform appears to allocate I/O space first, yielding an assigned-addresses property in a different)W
78 583.666 M (order from the reg property.)S
FmE
5108 0 :M
f0_12 sf
( )S
5111 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 617.999 M (11.1.4. )S
(A single 256 resource, Memory and I/O accessible, with FCode.)S
FmE
5111 0 :M
f2_10 sf
( )S
5113 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 634.666 M -0.044(The same function as in 11.4, but with 4K of FCode that reveals that the first 32 bytes of the registers are unused)W
78 646.666 M (and the second 32 bytes are used only for diagnostic purposes:)S
114 678.666 M (Base address register 0x10:)S
150 694.666 M -0.624(Discovered to be a Memory base address register, requiring 256 bytes of address space,)W
150 706.666 M (by reading back a )S
FmE
5113 0 :M
f4_10 sf
( )S
5119 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
223.298 706.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
5119 0 :M
f2_10 sf
( )S
5121 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.298 706.666 M ( after writing )S
FmE
5122 0 :M
f4_10 sf
( )S
5128 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
337.991 706.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5128 0 :M
f2_10 sf
( )S
5130 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
397.991 706.666 M (.)S
114 722.666 M (Base address register 0x14:)S
0.502 0.502 0 0.498 0 0 0.502 FmK
58 515 2 10 FmqF
58 540.999 2 10 FmqF
FmE
endp
%%Page: 26 26
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 26 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
5130 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
5130 0 :M
0 G
f0_12 sf
( )S
5133 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
5133 0 :M
f2_12 sf
( )S
5136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (22)S
FmE
5136 0 :M
f1_12 sf
( )S
5139 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
5139 0 :M
f4_12 sf
( )S
5146 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
5146 0 :M
f2_10 sf
( )S
5148 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 50.667 M 0.035(Discovered to be a I/O base address register, requiring 256 bytes of address space, by)W
132 62.667 M (reading back a )S
FmE
5149 0 :M
f4_10 sf
( )S
5155 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.798 62.667 M 0 0 60(0xFFFFFF01)FmTx
FmE
5155 0 :M
f2_10 sf
( )S
5157 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.798 62.667 M ( after writing )S
FmE
5157 0 :M
f4_10 sf
( )S
5163 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
307.491 62.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5163 0 :M
f2_10 sf
( )S
5165 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
367.491 62.667 M (.)S
96 78.667 M (Base address registers 0x18, 0x1C 0x20, 0x24:)S
132 94.667 M 1.48(Discovered to be not implemented by reading back a )W
FmE
5166 0 :M
f4_10 sf
( )S
5172 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
358.848 94.667 M 0 0 60(0x00000000)FmTx
FmE
5172 0 :M
f2_10 sf
( )S
5174 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
418.848 94.667 M 1.48( after writing)W
FmE
5174 0 :M
f4_10 sf
( )S
5180 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 106.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5180 0 :M
f2_10 sf
( )S
5182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 106.667 M (.)S
96 122.667 M (Expansion ROM base address register \(0x30\):)S
132 138.667 M 0.557(Discovered to be present, and requiring )W
FmE
5183 0 :M
f4_10 sf
( )S
5189 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
295.552 138.667 M 0 0 36(0x1000)FmTx
FmE
5189 0 :M
f2_10 sf
( )S
5191 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
331.552 138.667 M 0.557( bytes of address space, by reading)W
FmE
5191 0 :M
f4_10 sf
( )S
5197 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 150.667 M 0 0 60(0xFFFFF000)FmTx
FmE
5197 0 :M
f2_10 sf
( )S
5199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 150.667 M ( after writing )S
FmE
5200 0 :M
f4_10 sf
( )S
5206 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.692 150.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5206 0 :M
f2_10 sf
( )S
5208 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306.692 150.667 M (.)S
60 166.667 M 0.455(The Expansion ROM is discovered to contain a valid FCode image which is evaluated.  This FCode creates its)W
60 178.667 M (own )S
FmE
5208 0 :M
f5_9 sf
( )S
5213 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.719 178.667 M 0 0 25(\"reg\")FmTx
FmE
5213 0 :M
f2_10 sf
( )S
5215 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.719 178.667 M ( property, reflecting knowledge of the intended usage of the addressable resource.)S
FmE
5216 0 :M
f5_10 sf
( )S
5222 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 194.667 M 0 0 30(\"reg\")FmTx
FmE
5222 0 :M
f2_10 sf
( )S
5224 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 194.667 M ( property \(created during probing by the FCode program\))S
FmE
5224 0 :M
f4_10 sf
( )S
5230 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 210.666 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
96 222.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
96 232.666 M 0 0 264(02xxxx10 00000000 00000040 00000000 000000C0)FmTx
FmE
5230 0 :M
f5_10 sf
( )S
5236 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 256.666 M 0 0 90(\"alternate-reg\")FmTx
FmE
5236 0 :M
f2_10 sf
( )S
5238 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 256.666 M ( property \(created during probing by the FCode program)S
(\))S
FmE
5239 0 :M
f4_10 sf
( )S
5245 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 272.666 M 0 0 264(00000000 00000000 00000000 00000000 00000000)FmTx
96 282.666 M 0 0 252(01xxxx14 00000000 00000040 00000000 000000)FmTx
0 0 12(C0)FmTx
0 0 18( *1)FmTx
96 292.666 M 0 0 282(02xxxx10 00000000 00000020 00000000 00000020 *2)FmTx
96 302.666 M 0 0 276(01xxxx14 00000000 00000020 00000000 00000020 *)FmTx
0 0 6(3)FmTx
FmE
5245 0 :M
f5_10 sf
( )S
5251 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 318.666 M 0 0 60(    Notes:)FmTx
FmE
5251 0 :M
f4_10 sf
( )S
5257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 334.666 M 0 0 288(    *1 Secondary access to operational registers)FmTx
96 344.666 M 0 0 270(    *2 Primary access to diagnostic registers)FmTx
96 354.666 M 0 0 282(    *3 Secondary access to diagnostic registers)FmTx
FmE
5257 0 :M
f5_10 sf
( )S
5263 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 368.666 M 0 0 6(\")FmTx
0 0 120(assigned-addresses\" )FmTx
FmE
5263 0 :M
f2_10 sf
( )S
5265 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 368.666 M (property \(created after probing, during address assignment\))S
FmE
5265 0 :M
f4_10 sf
( )S
5271 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 380.666 M 0 0 264(81xxxx14 00000000 llllll00 00000000 00000100)FmTx
96 390.666 M 0 0 108(82xxxx10 00000000 )FmTx
0 0 42(mmmmmm0)FmTx
0 0 114(0 00000000 00000100)FmTx
FmE
5271 0 :M
f2_10 sf
( )S
5273 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 414.666 M (with the resulting base registers:)S
FmE
5274 0 :M
f4_10 sf
( )S
5280 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 426.666 M 0 0 30(0x10:)FmTx
42 N 0 0 42(mmmmmm0)FmTx
0 0 6(0)FmTx
FmE
5280 0 :M
f2_10 sf
( )S
5282 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 426.666 M (\(a memory address\))S
FmE
5282 0 :M
f4_10 sf
( )S
5288 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 436.666 M 0 0 30(0x14:)FmTx
42 N 0 0 48(llllll01)FmTx
FmE
5288 0 :M
f2_10 sf
( )S
5290 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 436.666 M (\(an I/O address)S
(\))S
FmE
5291 0 :M
f0_12 sf
( )S
5294 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 469 M (11.2. )S
(Computing PCI addresses from )S
FmE
5294 0 :M
f5_12 sf
( )S
5301 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.29 469 M 0 0 35(\"reg\")FmTx
FmE
5301 0 :M
f0_12 sf
( )S
5304 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.29 469 M ( and )S
FmE
5304 0 :M
f5_12 sf
( )S
5311 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
312.632 469 M 0 0 140(\"assigned-addresses\")FmTx
FmE
5311 0 :M
f2_10 sf
( )S
5313 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 485.666 M 0.646(The following sections show how a device driver or Client program could use the information provided in the)W
FmE
5313 0 :M
f5_10 sf
( )S
5319 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 497.666 M 0 0 30(\"reg\")FmTx
FmE
5319 0 :M
f2_10 sf
( )S
5321 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 497.666 M ( and )S
FmE
5322 0 :M
f5_10 sf
( )S
5328 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.438 497.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5328 0 :M
f2_10 sf
( )S
5330 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
229.438 497.666 M ( properties.)S
60 513.666 M 0.214(The phrases \"PCI address space\" or \"PCI domain\" indicate an address is the PCI physical address space as used)W
60 525.666 M 0.243(on the PCI bus in question.  This PCI physical address space is not necessarily the same as the physical address)W
60 537.666 M -0.56(space in which a processor would access the PCI resource.  Especially in the case of PCI I/O space, host PCI bridg-)W
60 549.666 M 0.405(es \(i.e., PCI bridges that are attached to the processor bus\) may perform an address translation function.  In the)W
60 561.666 M -0.393(following examples, another sequence of steps is, in general, necessary to determine the appropriate processor ad-)W
60 573.666 M (dress to use.  The information necessary for these steps is contained in the )S
FmE
5330 0 :M
f5_10 sf
( )S
5336 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
358.494 573.666 M 0 0 48(\"ranges\")FmTx
FmE
5336 0 :M
f2_10 sf
( )S
5338 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406.494 573.666 M ( properties of bus nodes.)S
FmE
5339 0 :M
f0_12 sf
( )S
5342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 607.999 M (11.2.1. )S
(Determining the address of a register of example in Section )S
(11.1.4.)S
FmE
5342 0 :M
f2_10 sf
( )S
5344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 624.666 M 0.436(Problem: Given the last device described in Section )W
(11.1.4.)S
0.436(, determine the physical address associated with the)W
60 636.666 M (3rd byte of its operational registers.)S
60 652.666 M 0.36(1.  Extract the second )W
FmE
5344 0 :M
f3_10 sf
( )S
5346 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.653 652.666 M (phys-addr,size)S
FmE
5347 0 :M
f2_10 sf
( )S
5349 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208.692 652.666 M 0.36( pair from the )W
FmE
5349 0 :M
f5_10 sf
( )S
5355 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.327 652.666 M 0 0 30(\"reg\")FmTx
FmE
5355 0 :M
f2_10 sf
( )S
5357 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297.327 652.666 M 0.36( property.  \(We know to use the second pair because)W
60 664.666 M -0.186(the first pair is the Configuration Space entry and the device documentation tells us that the second pair is the op-)W
60 676.666 M (erational registers.\))S
60 692.666 M (2.  Note that the \325)S
FmE
5358 0 :M
f4_10 sf
( )S
5364 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.976 692.666 M 0 0 6(n)FmTx
FmE
5364 0 :M
f2_10 sf
( )S
5366 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.976 692.666 M (\325 bit is zero, indicating a relocatable region.  Note that the )S
FmE
5366 0 :M
f4_10 sf
( )S
5372 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
369.208 692.666 M 0 0 48(rrrrrrrr)FmTx
FmE
5372 0 :M
f2_10 sf
( )S
5374 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
417.208 692.666 M ( field is )S
FmE
5375 0 :M
f4_10 sf
( )S
5381 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
449.698 692.666 M 0 0 24(0x10)FmTx
FmE
5381 0 :M
f2_10 sf
( )S
5383 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
473.698 692.666 M (.)S
60 708.666 M 0.203(3.  Search the )W
FmE
5383 0 :M
f5_10 sf
( )S
5389 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.73 708.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5389 0 :M
f2_10 sf
( )S
5391 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.73 708.666 M 0.203(  property for an entry with an )W
FmE
5392 0 :M
f4_10 sf
( )S
5398 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
362.078 708.666 M 0 0 48(rrrrrrrr)FmTx
FmE
5398 0 :M
f2_10 sf
( )S
5400 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
410.078 708.666 M 0.203( field of )W
FmE
5400 0 :M
f4_10 sf
( )S
5406 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
444.837 708.666 M 0 0 24(0x10)FmTx
FmE
5406 0 :M
f2_10 sf
( )S
5408 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.837 708.666 M 0.203(.  Find the)W
60 720.666 M (second entry.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
40 226 2 34 FmqF
40 276 2 10 FmqF
40 296 2 26 FmqF
40 362 2 10 FmqF
40 384 2 10 FmqF
40 420 2 20 FmqF
FmE
endp
%%Page: 27 27
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 27 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
5409 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
5409 0 :M
0 G
f0_12 sf
( )S
5412 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 25 M (Revision 1.7)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
5412 0 :M
f1_12 sf
( )S
5415 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 755 M (Unapproved Draft)S
FmE
5415 0 :M
f2_12 sf
( )S
5418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (23)S
FmE
5418 0 :M
f4_12 sf
( )S
5425 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
33 53 M 0 0 14( 1)FmTx
33 65 M 0 0 14( 2)FmTx
33 77 M 0 0 14( 3)FmTx
33 89 M 0 0 14( 4)FmTx
33 101 M 0 0 14( 5)FmTx
33 113 M 0 0 14( 6)FmTx
33 125 M 0 0 14( 7)FmTx
33 137 M 0 0 14( 8)FmTx
33 149 M 0 0 14( 9)FmTx
33 161 M 0 0 14(10)FmTx
33 173 M 0 0 14(11)FmTx
33 185 M 0 0 14(12)FmTx
33 197 M 0 0 14(13)FmTx
33 209 M 0 0 14(14)FmTx
33 221 M 0 0 14(15)FmTx
33 233 M 0 0 14(16)FmTx
33 245 M 0 0 14(17)FmTx
33 257 M 0 0 14(18)FmTx
33 269 M 0 0 14(19)FmTx
33 281 M 0 0 14(20)FmTx
33 293 M 0 0 14(21)FmTx
33 305 M 0 0 14(22)FmTx
33 317 M 0 0 14(23)FmTx
33 329 M 0 0 14(24)FmTx
33 341 M 0 0 14(25)FmTx
33 353 M 0 0 14(26)FmTx
33 365 M 0 0 14(27)FmTx
33 377 M 0 0 14(28)FmTx
33 389 M 0 0 14(29)FmTx
33 401 M 0 0 14(30)FmTx
33 413 M 0 0 14(31)FmTx
33 425 M 0 0 14(32)FmTx
33 437 M 0 0 14(33)FmTx
33 449 M 0 0 14(34)FmTx
33 461 M 0 0 14(35)FmTx
33 473 M 0 0 14(36)FmTx
33 485 M 0 0 14(37)FmTx
33 497 M 0 0 14(38)FmTx
33 509 M 0 0 14(39)FmTx
33 521 M 0 0 14(40)FmTx
33 533 M 0 0 14(41)FmTx
33 545 M 0 0 14(42)FmTx
33 557 M 0 0 14(43)FmTx
33 569 M 0 0 14(44)FmTx
33 581 M 0 0 14(45)FmTx
33 593 M 0 0 14(46)FmTx
33 605 M 0 0 14(47)FmTx
33 617 M 0 0 14(48)FmTx
33 629 M 0 0 14(49)FmTx
33 641 M 0 0 14(50)FmTx
33 653 M 0 0 14(51)FmTx
33 665 M 0 0 14(52)FmTx
33 677 M 0 0 14(53)FmTx
33 689 M 0 0 14(54)FmTx
33 701 M 0 0 14(55)FmTx
33 713 M 0 0 14(56)FmTx
33 725 M 0 0 14(57)FmTx
FmE
5425 0 :M
f2_10 sf
( )S
5427 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 50.667 M 0.092(4.  Add the )W
FmE
5428 0 :M
f3_10 sf
( )S
5430 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.306 50.667 M (phys_mid,phys_lo)S
FmE
5430 0 :M
f2_10 sf
( )S
5432 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.237 50.667 M 0.092( value from the )W
FmE
5433 0 :M
f5_10 sf
( )S
5439 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.912 50.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5439 0 :M
f2_10 sf
( )S
5441 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
380.912 50.667 M 0.092( entry to the )W
FmE
5441 0 :M
f3_10 sf
( )S
5443 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
431.821 50.667 M (phys_mid,phys_lo)S
FmE
5444 0 :M
f2_10 sf
( )S
5446 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
503.752 50.667 M 0.092( value)W
78 62.667 M 0.511(\(0x40\) from the )W
FmE
5446 0 :M
f5_10 sf
( )S
5452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145.339 62.667 M 0 0 30(\"reg\")FmTx
FmE
5452 0 :M
f2_10 sf
( )S
5454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.339 62.667 M 0.511( entry.  This yields the physical base \(in PCI address space\) of the device\'s operational)W
78 74.667 M (registers.)S
78 90.667 M -0.045(5.  Add this value to the desired register offset, 3.  This yields the \(PCI domain\325s\) physical address of the desired)W
78 102.667 M (register.)S
FmE
5455 0 :M
f0_12 sf
( )S
5458 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 137 M (11.2.2. )S
(Determining the address of a register of example in Section )S
(11.1.2.)S
FmE
5458 0 :M
f2_10 sf
( )S
5460 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 153.667 M -0.119(Problem: Given the VGA device described above \(in Section )W
(11.1.2.)S
-0.119(\), determine the PCI address associated with)W
78 165.667 M (the sequencer index register \(I/O address )S
FmE
5460 0 :M
f4_10 sf
( )S
5466 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
244.018 165.667 M 0 0 30(0x3C4)FmTx
FmE
5466 0 :M
f2_10 sf
( )S
5468 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274.018 165.667 M ( in the documentation\).)S
78 181.667 M (\(Of course, we could \"just know\" that the answer is )S
FmE
5469 0 :M
f4_10 sf
( )S
5475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
286.359 181.667 M 0 0 30(0x3C4)FmTx
FmE
5475 0 :M
f2_10 sf
( )S
5477 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
316.359 181.667 M (, but let\'s do it according to the book.\))S
78 197.667 M -0.177(1.  Extract the fourth )W
FmE
5477 0 :M
f3_10 sf
( )S
5479 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.636 197.667 M (phys-addr,size)S
FmE
5480 0 :M
f2_10 sf
( )S
5482 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220.676 197.667 M -0.177(  pair from the )W
FmE
5482 0 :M
f5_10 sf
( )S
5488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.487 197.667 M 0 0 30(\"reg\")FmTx
FmE
5488 0 :M
f2_10 sf
( )S
5490 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
309.487 197.667 M -0.177( property.  \(We know to use the fourth pair because the)W
78 209.667 M -0.478(first pair is the Configuration Space entry, the second pair is the ROM, the third pair is the monochrome I/O range,)W
78 221.667 M (the fourth pair is the color I/O range, and the fifth pair is the video memory.\))S
78 237.666 M (2.  Note that the \325)S
FmE
5491 0 :M
f4_10 sf
( )S
5497 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.976 237.666 M 0 0 6(n)FmTx
FmE
5497 0 :M
f2_10 sf
( )S
5499 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.976 237.666 M (\325 bit is one, indicating a non-relocatable region.)S
78 253.666 M -0.327(3.  Add the )W
FmE
5499 0 :M
f3_10 sf
( )S
5501 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123.629 253.666 M (phys_mid,phys_lo)S
FmE
5502 0 :M
f2_10 sf
( )S
5504 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
195.56 253.666 M -0.327( values from this )W
FmE
5504 0 :M
f5_10 sf
( )S
5510 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.677 253.666 M 0 0 30(\"reg\")FmTx
FmE
5510 0 :M
f2_10 sf
( )S
5512 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
293.677 253.666 M -0.327( entry to the desired register offset, 4.  This yields the phys-)W
78 265.666 M (ical address \(in the PCI domain\) of the sequencer index register.)S
FmE
5513 0 :M
f0_12 sf
( )S
5516 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 307 M (12. )S
(Use of the )S
FmE
5516 0 :M
f5_10 sf
( )S
5522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.64 307 M 0 0 48(\"ranges\")FmTx
FmE
5522 0 :M
f0_12 sf
( )S
5525 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.64 307 M ( property)S
FmE
5525 0 :M
f2_10 sf
( )S
5527 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 323.666 M 0.373(The )W
FmE
5527 0 :M
f5_10 sf
( )S
5533 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96.42 323.666 M 0 0 48(\"ranges\")FmTx
FmE
5533 0 :M
f2_10 sf
( )S
5535 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.42 323.666 M 0.373( property of Open Firmware represents how address transformation is done across bus bridges.)W
78 335.666 M 0.224(The )W
FmE
5536 0 :M
f5_10 sf
( )S
5542 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96.271 335.666 M 0 0 48(\"ranges\")FmTx
FmE
5542 0 :M
f2_10 sf
( )S
5544 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.271 335.666 M 0.224( property conveys this information for PCI, but the use of the property is not as straightforward)W
78 347.666 M (as on some other busses.)S
78 363.666 M 0.366(In particular, the )W
FmE
5544 0 :M
f3_10 sf
( )S
5546 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.95 363.666 M (phys.hi)S
FmE
5547 0 :M
f2_10 sf
( )S
5549 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
176.555 363.666 M 0.366( fields of the child address spaces in the )W
FmE
5549 0 :M
f5_10 sf
( )S
5555 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
341.177 363.666 M 0 0 48(\"ranges\")FmTx
FmE
5555 0 :M
f2_10 sf
( )S
5557 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.177 363.666 M 0.366( property for PCI does not contain)W
78 375.666 M 1.347(the same information as )W
FmE
5558 0 :M
f5_10 sf
( )S
5564 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.684 375.666 M 0 0 30(\"reg\")FmTx
FmE
5564 0 :M
f2_10 sf
( )S
5566 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
211.684 375.666 M 1.347( property entries within PCI nodes.  The only information that is present in)W
FmE
5566 0 :M
f5_10 sf
( )S
5572 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 387.666 M 0 0 48(\"ranges\")FmTx
FmE
5572 0 :M
f2_10 sf
( )S
5574 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 387.666 M -0.246( )W
FmE
5575 0 :M
f3_10 sf
( )S
5577 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.254 387.666 M (phys.hi)S
FmE
5577 0 :M
f2_10 sf
( )S
5579 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156.86 387.666 M -0.246(  entries are the non-relocatable, prefetchable and the PCI address space bits for which the en-)W
78 399.666 M -0.523(try applies.  I.e., only the )W
FmE
5580 0 :M
f4_10 sf
( )S
5586 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.053 399.666 M 0 0 6(n)FmTx
FmE
5586 0 :M
f5_9 sf
( )S
5591 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.053 399.666 M -1.046 0 10(, )FmTx
FmE
5591 0 :M
f4_10 sf
( )S
5597 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.007 399.666 M 0 0 6(p)FmTx
FmE
5597 0 :M
f2_10 sf
( )S
5599 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.007 399.666 M -0.523( and )W
FmE
5599 0 :M
f4_10 sf
( )S
5605 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.4 399.666 M 0 0 12(ss)FmTx
FmE
5605 0 :M
f2_10 sf
( )S
5607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228.4 399.666 M -0.523( bits are present; the )W
FmE
5608 0 :M
f4_10 sf
( )S
5614 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
308.804 399.666 M 0 0 48(bbbbbbbb)FmTx
FmE
5614 0 :M
f2_10 sf
( )S
5616 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.804 399.666 M -0.523(, )W
FmE
5616 0 :M
f4_10 sf
( )S
5622 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
361.281 399.666 M 0 0 30(ddddd)FmTx
FmE
5622 0 :M
f2_10 sf
( )S
5624 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
391.281 399.666 M -0.523(, )W
FmE
5625 0 :M
f4_10 sf
( )S
5631 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
395.758 399.666 M 0 0 18(fff)FmTx
FmE
5631 0 :M
f2_10 sf
( )S
5633 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.758 399.666 M -0.523( and )W
FmE
5633 0 :M
f4_10 sf
( )S
5639 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
432.151 399.666 M 0 0 48(rrrrrrrr)FmTx
FmE
5639 0 :M
f2_10 sf
( )S
5641 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.151 399.666 M -0.523( fields are 0.)W
78 415.666 M 0.205(When an address is to be mapped through a PCI bus bridge node, the )W
FmE
5642 0 :M
f3_10 sf
( )S
5644 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
359.402 415.666 M (phys.hi)S
FmE
5644 0 :M
f2_10 sf
( )S
5646 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
388.008 415.666 M 0.205( value of the address to be mapped)W
78 427.666 M 0.107(and the child field of a )W
FmE
5647 0 :M
f5_10 sf
( )S
5653 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.381 427.666 M 0 0 48(\"ranges\")FmTx
FmE
5653 0 :M
f2_10 sf
( )S
5655 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
219.381 427.666 M 0.107( entry should be masked so that only the )W
FmE
5655 0 :M
f4_10 sf
( )S
5661 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.918 427.666 M 0 0 12(ss)FmTx
FmE
5661 0 :M
f2_10 sf
( )S
5663 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
395.918 427.666 M 0.107( bits are compared.  I.e., the only)W
78 439.666 M (portion of )S
FmE
5664 0 :M
f3_10 sf
( )S
5666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
120.212 439.666 M (phys.hi)S
FmE
5666 0 :M
f2_10 sf
( )S
5668 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.818 439.666 M ( that should participate in the range determination is the address space indicator \(the )S
FmE
5669 0 :M
f4_10 sf
( )S
5675 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
487.565 439.666 M 0 0 12(ss)FmTx
FmE
5675 0 :M
f2_10 sf
( )S
5677 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
499.565 439.666 M ( bits\).)S
FmE
5677 0 :M
f0_12 sf
( )S
5680 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 481 M (13. )S
(Example of use of add-ranges check)S
FmE
5680 0 :M
f4_9 sf
( )S
5685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 493 M 0 0 325(   \\ Flag is true if the parent\'s map-in method doesn\'t work with)FmTx
78 502 M 0 0 135(   \\ relocatable addresses.)FmTx
78 511 M 0 0 15(   )FmTx
78 520 M 0 0 160(   : map-in-broken?  \( -- flag \))FmTx
78 529 M 0 0 335(      \\ Look for the method that is present when the bug is present)FmTx
78 538 M 0 0 340(      \" add-range\"  my-parent  ihandle>phandle   \( adr len phandle \))FmTx
78 547 M 0 0 410(      find-method  dup  if  nip  then            \( flag \)  \\ Discard xt if present)FmTx
78 556 M 0 0 20(   ;)FmTx
78 565 M 0 0 15(   )FmTx
78 574 M 0 0 15(   )FmTx
78 583 M 0 0 400(   \\ Return phys.lo and phys.mid of the address assigned to the PCI base address)FmTx
78 592 M 0 0 180(   \\ register indicated by phys.hi .)FmTx
78 601 M 0 0 15(   )FmTx
78 610 M 0 0 310(   : get-base-address  \( phys.hi -- phys.lo phys.mid phys.hi \))FmTx
78 619 M 0 0 15(   )FmTx
78 628 M 0 0 305(      \" assigned-addresses\" get-my-property  if   \( phys.hi \))FmTx
78 637 M 0 0 210(         .\" No address property found!\" cr)FmTx
78 646 M 0 0 310(         0 0 rot  exit                            \\ Error exit)FmTx
78 655 M 0 0 255(      then                      \( phys.hi adr len \))FmTx
78 664 M 0 0 15(   )FmTx
78 673 M 0 0 295(      rot >r                    \( adr len \)  \( r: phys.hi \))FmTx
78 682 M 0 0 225(      \\ Found assigned-addresses, get address)FmTx
78 691 M 0 0 325(      begin  dup  while         \( adr len\' \)  \\ Loop over entries)FmTx
78 700 M 0 0 345(         decode-phys            \( adr len\' phys.lo phys.mid phys.hi \))FmTx
78 709 M 0 0 415(         h# ff and  r@ h# ff and  =  if  \( adr len\' phys.lo phys.mid \)  \\ This one?)FmTx
78 718 M 0 0 395(            2swap 2drop         \( phys.lo phys.mid \)          \\ This is the one)FmTx
0.502 0.502 0 0.498 0 0 0.502 FmK
58 299 2 422 FmqF
FmE
endp
%%Page: 28 28
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 28 of 28)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 .5 :F
5685 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
5685 0 :M
0 G
f0_12 sf
( )S
5688 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 25 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.7)S
FmE
5688 0 :M
f2_12 sf
( )S
5691 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 755 M (24)S
FmE
5691 0 :M
f1_12 sf
( )S
5694 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
419.689 755 M (Unapproved Draft)S
FmE
5694 0 :M
f4_12 sf
( )S
5701 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 53 M 0 0 14( 1)FmTx
15 65 M 0 0 14( 2)FmTx
15 77 M 0 0 14( 3)FmTx
15 89 M 0 0 14( 4)FmTx
15 101 M 0 0 14( 5)FmTx
15 113 M 0 0 14( 6)FmTx
15 125 M 0 0 14( 7)FmTx
15 137 M 0 0 14( 8)FmTx
15 149 M 0 0 14( 9)FmTx
15 161 M 0 0 14(10)FmTx
15 173 M 0 0 14(11)FmTx
15 185 M 0 0 14(12)FmTx
15 197 M 0 0 14(13)FmTx
15 209 M 0 0 14(14)FmTx
15 221 M 0 0 14(15)FmTx
15 233 M 0 0 14(16)FmTx
15 245 M 0 0 14(17)FmTx
15 257 M 0 0 14(18)FmTx
15 269 M 0 0 14(19)FmTx
15 281 M 0 0 14(20)FmTx
15 293 M 0 0 14(21)FmTx
15 305 M 0 0 14(22)FmTx
15 317 M 0 0 14(23)FmTx
15 329 M 0 0 14(24)FmTx
15 341 M 0 0 14(25)FmTx
15 353 M 0 0 14(26)FmTx
15 365 M 0 0 14(27)FmTx
15 377 M 0 0 14(28)FmTx
15 389 M 0 0 14(29)FmTx
15 401 M 0 0 14(30)FmTx
15 413 M 0 0 14(31)FmTx
15 425 M 0 0 14(32)FmTx
15 437 M 0 0 14(33)FmTx
15 449 M 0 0 14(34)FmTx
15 461 M 0 0 14(35)FmTx
15 473 M 0 0 14(36)FmTx
15 485 M 0 0 14(37)FmTx
15 497 M 0 0 14(38)FmTx
15 509 M 0 0 14(39)FmTx
15 521 M 0 0 14(40)FmTx
15 533 M 0 0 14(41)FmTx
15 545 M 0 0 14(42)FmTx
15 557 M 0 0 14(43)FmTx
15 569 M 0 0 14(44)FmTx
15 581 M 0 0 14(45)FmTx
15 593 M 0 0 14(46)FmTx
15 605 M 0 0 14(47)FmTx
15 617 M 0 0 14(48)FmTx
15 629 M 0 0 14(49)FmTx
15 641 M 0 0 14(50)FmTx
15 653 M 0 0 14(51)FmTx
15 665 M 0 0 14(52)FmTx
15 677 M 0 0 14(53)FmTx
15 689 M 0 0 14(54)FmTx
15 701 M 0 0 14(55)FmTx
15 713 M 0 0 14(56)FmTx
15 725 M 0 0 14(57)FmTx
FmE
5701 0 :M
f4_9 sf
( )S
5706 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 50 M 0 0 300(            r> exit             \( phys.lo phys.mid phys.hi \))FmTx
60 59 M 0 0 380(         else                   \( adr len\' phys.lo phys.mid \) \\ Not this one)FmTx
60 68 M 0 0 220(            2drop               \( adr len\' \))FmTx
60 77 M 0 0 220(         then                   \( adr len\' \))FmTx
60 86 M 0 0 355(         decode-int drop decode-int drop        \\ Discard boring fields)FmTx
60 95 M 0 0 60(      repeat)FmTx
60 104 M 0 0 175(      2drop                     \( \))FmTx
60 113 M 0 0 15(   )FmTx
60 122 M 0 0 195(      .\" Base address not assigned!\" cr)FmTx
60 131 M 0 0 15(   )FmTx
60 140 M 0 0 235(      0 0 r>                    \( 0 0 phys.hi \))FmTx
60 149 M 0 0 20(   ;)FmTx
60 158 M 0 0 15(   )FmTx
60 167 M 0 0 15(   )FmTx
60 176 M 0 0 390(   \\ Example code to compute the phys.lo..hi arguments for \"map-in\", using the)FmTx
60 185 M 0 0 370(   \\ above functions so that the code works both on systems that implement)FmTx
60 194 M 0 0 380(   \\ map-in according to the PCI binding document, and also on systems whose)FmTx
60 203 M 0 0 385(   \\ PCI map-in method requires phys.lo,phys.mid to contain the assigned base)FmTx
60 212 M 0 0 65(   \\ address.)FmTx
60 221 M 0 0 15(   )FmTx
60 230 M 0 0 355(      \\ Compute entire phys.lo..hi address for base address register 10)FmTx
60 239 M 0 0 120(      map-in-broken?  if)FmTx
60 248 M 0 0 380(         my-space h# 8200.0010 +  get-base-address        \( phys.lo,mid,hi \))FmTx
60 257 M 0 0 50(      else)FmTx
60 266 M 0 0 380(         0 0  my-space h# 200.0010 +                      \( phys.lo,mid,hi \))FmTx
60 275 M 0 0 380(      then                                                \( phys.lo,mid,hi \))FmTx
60 284 M 0 0 15(   )FmTx
60 293 M 0 0 15(   )FmTx
60 302 M 0 0 380(   \\ An FCode driver that need not work on systems with the map-in bug could)FmTx
60 311 M 0 0 365(   \\ use the following code, omitting the definitions of \"map-in-broken?\")FmTx
60 320 M 0 0 140(   \\ and \"get-base-address\".)FmTx
60 329 M 0 0 20(   \\)FmTx
60 338 M 0 0 375(   \\    0 0  my-space h# 200.0010 +                      \( phys.lo,mid,hi \))FmTx
0.502 0.502 0 0.498 0 0 0.502 FmK
40 44 2 311 FmqF
FmE
endp
%%Trailer
end
%%EOF
