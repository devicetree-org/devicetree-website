%!PS-Adobe-3.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - 0091A002.DOC
%%BoundingBox: 18 17 597 776
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand
16#8A/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright
16#93/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#98/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright
16#9C/oe 16#9F/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency
16#A5/yen 16#A6/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright
16#AA/ordfeminine 16#AB/guillemotleft 16#AC/logicalnot 16#AD/hyphen
16#AE/registered 16#AF/macron 16#B0/degree 16#B1/plusminus 16#B2/twosuperior
16#B3/threesuperior 16#B4/acute 16#B5/mu 16#B6/paragraph 16#B7/periodcentered
16#B8/cedilla 16#B9/onesuperior 16#BA/ordmasculine 16#BB/guillemotright
16#BC/onequarter 16#BD/onehalf 16#BE/threequarters 16#BF/questiondown
16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex 16#C3/Atilde 16#C4/Adieresis
16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA
/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex
16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4
/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute
16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex
16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8
/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave
16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde
16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis
16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex
16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis ] def/reencdict
12 dict def/IsChar{basefontdict/CharStrings get exch known}bd/MapCh{dup
IsChar not{pop/bullet}if newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0
/degree IsChar{/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar
IsChar{/brokenbar}{/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname
ed/basefontname ed FontDirectory newfontname known not{/basefontdict
basefontname findfont def/newfont basefontdict maxlength dict def basefontdict{exch
dup/FID ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll
put}{exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont
/FontName newfontname put 127 1 159{newfont/Encoding get exch/bullet
put}for ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree
MapBB newfontname newfont definefont pop}if newfontname end}bd/SB{FC
/ULlen ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed
/dxGdi ed/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1
mul x1 x1 mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch
y1 mul cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra
ed/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
statusdict begin 0 setjobtimeout end
statusdict begin statusdict /jobname (Microsoft Word - 0091A002.DOC) put end
/oldDictCnt countdictstack def {statusdict begin userdict begin /lms {0 setpapertray}bd lms /lmp where {pop lmp}if end end
}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
/oldDictCnt countdictstack def {
statusdict begin userdict begin /lms where {pop}{/lms {3 setpapertray}bd}ifelse /lmp {letter}bd lms lmp end end
}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
[{}
/exec load currenttransfer /exec load] cvx settransfer
/fPP true def
statusdict begin /setresolution where { pop 300 setresolution } if end
%%EndSetup
%%Page: 1 1
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2229 2997 21 (1) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 117 117 0 0 0 108 /Helvetica-Bold /font18 ANSIFont font
739 533 1071 (PC Card Binding to) 1071 SB
543 800 1464 (IEEE Standard  1275-1994,) 1464 SB
778 1067 993 (Standard for Boot) 993 SB
498 1334 1554 (\(Initialization Configuration\)) 1554 SB
996 1601 557 ( Firmware) 557 SB
/fm 256 def
1961 8 294 1815 B
1 F
n
32 0 0 67 67 0 0 0 62 /Helvetica-Bold /font18 ANSIFont font
981 1956 588 (Draft Revision: 1.2) 588 SB
1052 2173 446 (Date: 03/08/95) 446 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-Roman
%%Page: 2 2
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2229 2997 21 (2) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1021 183 508 (This page intentionally blank.) 508 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 3 3
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2229 2997 21 (3) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 183 209 (Introduction) 209 SB
375 233 1831 (Firmware is the ROM-based software that controls a computer between the time it is turned on and the time) 1831 SB
375 283 1804 (the primary operating system takes control of the machine. Firmware\222s responsibilities include testing and) 1804 SB
375 333 1849 (initializing the hardware, determining the hardware configuration, loading \(or booting\) the operating system,) 1849 SB
375 383 1439 (and providing interactive debugging facilities in case of faulty hardware or software.) 1439 SB
300 533 373 (Historical Perspective) 373 SB
375 583 1821 (Historically, firmware designs have been proprietary and often specific to a particular bus or instruction set) 1821 SB
375 633 1769 (architecture \(ISA\). This need not be the case. Firmware can be designed to be machine-independent and) 1769 SB
375 683 1867 (easily portable to different hardware. There is a strong analogy with operating systems in this respect. Prior to) 1867 SB
375 733 1754 (the advent of the portable UNIX operating system in the mid-seventies, the prevailing wisdom was that) 1754 SB
375 783 1703 (operating systems must be heavily tuned to a particular computer system design and thus effectively) 1703 SB
375 833 683 (proprietary to the vendor of that system.) 683 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 905 1802 (IEEE Standard 1275-1994 Standard for Boot \(Initialization Configuration\) Firmware, Core Requirements) 1802 SB
375 957 234 (and Practices) 234 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
609 958 1401 ( \(referred to in the remainder of this document as Open Firmware\) is based on Sun) 1401 SB
375 1010 1782 (Microsystems\222s OpenBoot firmware. The OpenBoot design effort began in 1988, when Sun was building) 1782 SB
375 1060 1797 (computers based on three different processor families; thus, OpenBoot was designed from the outset to be) 1797 SB
375 1110 1733 (ISA-independent \(independent of the Instruction Set Architecture\). The first version of OpenBoot was) 1733 SB
375 1160 1875 (introduced on Sun\222s SPARCstation 1 computers. Based on experience with those machines, OpenBoot version) 1875 SB
375 1210 1824 (2 was developed, and was first shipped on SPARCstation 2 computers. This standard is based on OpenBoot) 1824 SB
375 1260 167 (version 2.) 167 SB
300 1411 982 (Purpose and Features of the Open Firmware Specification) 982 SB
375 1461 728 (Open Firmware has the following features:) 728 SB

%%BeginResource: font MSTT31c1f8
/GreNewFont{10 dict dup 3 1 roll def dup begin 6 1 roll/FontType 3
def/FontMatrix exch def/FontBBox exch def/FontInfo 2 dict def FontInfo
/UnderlinePosition 3 -1 roll put FontInfo/UnderlineThickness 3 -1
roll put/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
/CharProcs 256 dict def CharProcs/.notdef{}put/Metrics 256 dict def
Metrics/.notdef 3 -1 roll put/BuildChar{/char exch def/fontdict exch
def/charname fontdict/Encoding get char get def fontdict/Metrics get
charname get aload pop setcachedevice fontdict begin Encoding char
get CharProcs exch get end exec}def end definefont pop}def/AddChar{begin
Encoding 3 1 roll put CharProcs 3 1 roll put Metrics 3 1 roll put end}def
/MSTT31c1f8 [33.0 0 0 0 0 0] 60 -90 [-33.0 -33.0 33.0 33.0] [1 33 div 0 0 1 33 div 0 0] /MSTT31c1f8 GreNewFont
/G1e [17.0 0.0 2.0 0.0 14.0 24.0]
/G1e {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  30 /G1e MSTT31c1f8 AddChar
/G1f [17.0 0.0 2.0 0.0 14.0 24.0]
/G1f {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  31 /G1f MSTT31c1f8 AddChar
/G20 [33.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c1f8 AddChar
/G21 [34.0 0.0 1.0 -1.0 32.0 24.0]
/G21 {
    31 25 true [1 0 0 -1 -1.0 24.0] {<000000300000004c00000084000001020000070200000f86000017c8000027d00000dbe0000125c0
00024900000c92000013640000249800004920000192400003e48000049b00000966000008680000
10b0000020600000238000007c000000c0000000>} imagemask 
  }
  33 /G21 MSTT31c1f8 AddChar
/G22 [38.0 0.0 2.0 0.0 35.0 24.0]
/G22 {
    33 24 true [1 0 0 -1 -2.0 24.0] {<7800000000c600001f008300003f00810000fc00c10001f800710007e0001f000f800007803f0000
01e07c00000079f000000033e00000000d800000001a000000003ce000000031f8000000e07c0000
01e03f000006200fc000082003e000302001f8004060007e0080c0003f008300000f007c00000000
>} imagemask 
  }
  34 /G22 MSTT31c1f8 AddChar
/G23 [43.0 0.0 2.0 0.0 40.0 26.0]
/G23 {
    38 26 true [1 0 0 -1 -2.0 26.0] {<007800000000cc0000000084000000008200000000c200000000420000000066000000003c000000
001c000000000c0000000006000000000700000000078003e000000ffff0000ffffff8001f3fff80
1ffff8000078100000008010700000802038000080203c000060c01c00001f000e000000000e0000
00000700000000078000>} imagemask 
  }
  35 /G23 MSTT31c1f8 AddChar
/G24 [44.0 0.0 1.0 0.0 43.0 17.0]
/G24 {
    42 17 true [1 0 0 -1 -1.0 17.0] {<003c00000f000042000030800081000060400301000080400601000100400c010002004018000004
0000300000080000603c00180000c02200300000ffe3ffe000008022004000008022008000004042
008000004041010000003080c20000000f007c000000>} imagemask 
  }
  36 /G24 MSTT31c1f8 AddChar
/G25 [29.0 0.0 2.0 -1.0 27.0 24.0]
/G25 {
    25 25 true [1 0 0 -1 -2.0 24.0] {<001c0000003e000000c1800003006000020020000400100004001000080008000800080008000800
08000800080008000800080008000800100004001000040021ffc2003fc03e0067c0030087c00080
83800080c0000180600003001e003c0001ffc000>} imagemask 
  }
  37 /G25 MSTT31c1f8 AddChar
/G26 [40.0 0.0 3.0 0.0 38.0 26.0]
/G26 {
    35 26 true [1 0 0 -1 -3.0 26.0] {<01fc07f0000e03180e000800a002001800c00300e8004003e0a8004002a0a8004002a0a8004002a0
a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0
a8004002a0a8004002a0a9fc4ffaa0ae035006a0b000e002a0b0004001a0b07f5fc0a0bf80e03fa0
803e0fc020ffc1f03fe0>} imagemask 
  }
  38 /G26 MSTT31c1f8 AddChar
/G27 [15.0 0.0 3.0 -1.0 12.0 24.0]
/G27 {
    9 25 true [1 0 0 -1 -3.0 24.0] {<0800140016001200210041004100410062001c007f00c980c880bf80808080808080808080808080
808080808080c1803f00>} imagemask 
  }
  39 /G27 MSTT31c1f8 AddChar
/G28 [36.0 0.0 3.0 0.0 33.0 24.0]
/G28 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<007ff80007ffffc03ffffff07ffffff87f800ff8fe0003fcfce01dfc02e01e00fefffffcfefffdfc
7dfffef803c78f0003ffff0007c78f8007ffff800fc78fc00fffffc01fffffe01fffffe01fffffe0
1fffffe01fffffe01fffffe01fffffe0>} imagemask 
  }
  40 /G28 MSTT31c1f8 AddChar
/G29 [29.0 0.0 3.0 0.0 27.0 24.0]
/G29 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff000381c0047020086c18106e08206e04403602400702c0070380070180070180070180070180
0701800701c00703400702403602206e04106e08086c100468200381c000ff00>} imagemask 
  }
  41 /G29 MSTT31c1f8 AddChar
/G2a [37.0 0.0 3.0 0.0 35.0 24.0]
/G2a {
    32 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffc0000003a000000590000009880000118400002182000041810000818080010180400201
80200401801008018018180180242401804242018081810181000081820000418400002188000011
90000009a0000005c0000003ffffffff>} imagemask 
  }
  42 /G2a MSTT31c1f8 AddChar
/G2b [37.0 0.0 3.0 0.0 35.0 24.0]
/G2b {
    32 24 true [1 0 0 -1 -3.0 24.0] {<ffffffff800000018000000180000071800000718000007180000071800000718000000180000001
80000001803ff0018000000180000001800ffc0180000001800000018007fe018000000180000001
800000018000000180000001ffffffff>} imagemask 
  }
  43 /G2b MSTT31c1f8 AddChar
/G2c [39.0 0.0 3.0 0.0 36.0 24.0]
/G2c {
    33 24 true [1 0 0 -1 -3.0 24.0] {<000001f00000001e0c000001e00200001e00010001e00001000f8000008018600000802010000080
4008000080c00c00008080040006808004007e808f8407fe808f847ffe8080047e7e808004607e80
8004007e808004007c8080040040808004000f00800400f00080040f00008004f00000ffff000000
>} imagemask 
  }
  44 /G2c MSTT31c1f8 AddChar
/G2d [39.0 0.0 3.0 0.0 36.0 26.0]
/G2d {
    33 26 true [1 0 0 -1 -3.0 26.0] {<000003000000007f000000007ff00000007f0c000000ff0200000f7f010000f07f01000780780080
186070008020107000804008700080c008700080800470008080047000808f847000808f84700080
800470008080044000808004000080800400008080040000808004000f00800400f00080040f0000
8004f00000ffff000000>} imagemask 
  }
  45 /G2d MSTT31c1f8 AddChar
/G2e [48.0 0.0 3.0 0.0 45.0 26.0]
/G2e {
    42 26 true [1 0 0 -1 -3.0 26.0] {<0000000380000000007f80000000007ff8000000007f8600000000ff810000000f7f80800000707f
80800007c078004000083070004000100870004000200470004000601e7000400040e27000403e41
0270004041c10670004080623a700040803222700040800c42000040478642000040638342000040
3001c200004008004200078004002600780003001a07800001800a78000000ffff800000>} imagemask 
  }
  46 /G2e MSTT31c1f8 AddChar
/G2f [48.0 0.0 3.0 0.0 45.0 24.0]
/G2f {
    42 24 true [1 0 0 -1 -3.0 24.0] {<00000000f8000000000f0600000000f0010000000f0000800000700000800007e0000040000c3000
00400010080000400020040000400060060000400040020003403e4002003f4041c00203ff408060
023fff408030023f3f40800802203f40478402003f40638302003e403001820030400800c2000780
04002200780002001207800001800a78000000ffff800000>} imagemask 
  }
  47 /G2f MSTT31c1f8 AddChar
/G30 [36.0 0.0 3.0 0.0 34.0 24.0]
/G30 {
    31 24 true [1 0 0 -1 -3.0 24.0] {<07fe00000401000008010000fffffffe800000028000000280000002800000028000000280000002
80000002800000028000000280000002800000028000000280000002800000028000000280000002
800000028000000280000002fffffffe>} imagemask 
  }
  48 /G30 MSTT31c1f8 AddChar
/G31 [44.0 0.0 3.0 0.0 42.0 24.0]
/G31 {
    39 24 true [1 0 0 -1 -3.0 24.0] {<07fe00000004010000000801000000f801fffe00800000020080000002008000000200807ffffffe
80800000028080000004810000000481000000088200000008820000001084000000108800000020
880000002090000000409000000040a000000080a000000080c000000100c000000100fffffffe00
>} imagemask 
  }
  49 /G31 MSTT31c1f8 AddChar
/G32 [23.0 0.0 3.0 0.0 20.0 24.0]
/G32 {
    17 24 true [1 0 0 -1 -3.0 24.0] {<fff000803800802c009e26008023008021809e3f808000808000808000809ffc808000808000809f
fc808000808000809ffc808000808000809ffc80800080800080800080ffff80>} imagemask 
  }
  50 /G32 MSTT31c1f8 AddChar
/G33 [23.0 0.0 3.0 0.0 20.0 24.0]
/G33 {
    17 24 true [1 0 0 -1 -3.0 24.0] {<ffff808000808000809ffc808000808000809ffc808000808000808000809ffc808000808000809f
fc808000808000809ffc808000808000809ffc80800080800080800080ffff80>} imagemask 
  }
  51 /G33 MSTT31c1f8 AddChar
/G34 [29.0 0.0 3.0 -6.0 27.0 24.0]
/G34 {
    24 30 true [1 0 0 -1 -3.0 24.0] {<01ffff0100010100011ffff9100009100009ffffc98000498000499ffc498000498000498000499f
fc498000498000499ffc498000498000499ffc498000498000499ffc4980004f8000489ffc488000
78800040800040ffffc0>} imagemask 
  }
  52 /G34 MSTT31c1f8 AddChar
/G35 [18.0 0.0 3.0 0.0 17.0 23.0]
/G35 {
    14 23 true [1 0 0 -1 -3.0 23.0] {<fffc800480048f8488848f8480048204800480048004fffc800480048f8488848f84800483048004
80048004fffc>} imagemask 
  }
  53 /G35 MSTT31c1f8 AddChar
/G36 [20.0 0.0 3.0 -1.0 17.0 24.0]
/G36 {
    14 25 true [1 0 0 -1 -3.0 24.0] {<3ff0c01c8004e01c9fe48004800470282fd017a01b600fc006800cc0186010202010400880048784
9fe4bff4ffe460181fe0>} imagemask 
  }
  54 /G36 MSTT31c1f8 AddChar
/G37 [35.0 0.0 3.0 0.0 33.0 24.0]
/G37 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<00001000000030000000300001f0e00003ffc000070f80000e0000000c0000000c0000007ffffff8
80000004800000048cccccc48cccccc483333304833333048cccccc48cccccc48000000480fffc04
80fffc0480000004800000047ffffff8>} imagemask 
  }
  55 /G37 MSTT31c1f8 AddChar
/G38 [31.0 0.0 1.0 -1.0 28.0 27.0]
/G38 {
    27 28 true [1 0 0 -1 -1.0 27.0] {<0001f0000007f800000f0800000c040000180400001804000030ffc0003104200071042080610420
c0e10420c0c1ffe061c100203f8100201e0100200001002000010020000100200001002000010020
00010020000100200001002000010020000080400000c0c00000618000001e00>} imagemask 
  }
  56 /G38 MSTT31c1f8 AddChar
/G39 [36.0 0.0 1.0 0.0 32.0 20.0]
/G39 {
    31 20 true [1 0 0 -1 -1.0 20.0] {<3c000000fe000000c7000f8003003060030040100300a01803014714030158d40302974a0302afaa
0303afae03022fa203062fa2038e174201fe18c200f207020002000200020002000200020003fffe
>} imagemask 
  }
  57 /G39 MSTT31c1f8 AddChar
/G3a [31.0 0.0 3.0 0.0 29.0 24.0]
/G3a {
    26 24 true [1 0 0 -1 -3.0 24.0] {<1fffff001000010017fffd0014000500140005001400050014000500140005001400050014000500
14000500140005001400050017fffd00100001001fffff001fffff00200000804d89cc80437630c0
8dcdcc408000004080000040ffffffc0>} imagemask 
  }
  58 /G3a MSTT31c1f8 AddChar
/G3b [29.0 0.0 3.0 0.0 26.0 11.0]
/G3b {
    23 11 true [1 0 0 -1 -3.0 11.0] {<fffffe8000028000028000029ffff28000029ffff28000028c0002800002fffffe>} imagemask 
  }
  59 /G3b MSTT31c1f8 AddChar
/G3c [29.0 0.0 3.0 0.0 27.0 24.0]
/G3c {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffff8800118800118800118800118800118800118800118800118800118800118ffff180000180
000180000183ffc1820fc1820fc1820fc1820fc1820fc1420fc1220fc11fffff>} imagemask 
  }
  60 /G3c MSTT31c1f8 AddChar
/G3d [29.0 0.0 3.0 0.0 27.0 24.0]
/G3d {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffc0003fc0003fc0003fc0003cc0003cffffffffffffffc3ffff81ffff81ffff81ffff
81ffffc3ffffffffffffffffe7ffffe7ffffe7ffffe7ffffe7ffffffffffffff>} imagemask 
  }
  61 /G3d MSTT31c1f8 AddChar
/G3e [29.0 0.0 3.0 0.0 26.0 25.0]
/G3e {
    23 25 true [1 0 0 -1 -3.0 25.0] {<00fe0003838004004008382010381020380860380c40380440000480000280300280780280780283
79028733c28f87e24f03e44400c460000c20000810001008002004004003838000fe00>} imagemask 
  }
  62 /G3e MSTT31c1f8 AddChar
/G3f [30.0 0.0 1.0 0.0 29.0 18.0]
/G3f {
    28 18 true [1 0 0 -1 -1.0 18.0] {<0000003000000070000001c000300700004fdc00008038000110e000013f900002470800025e0400
04f2020007ee010003f00100040001001c0001003bf0030060af3e0080f9e600>} imagemask 
  }
  63 /G3f MSTT31c1f8 AddChar
/G40 [30.0 0.0 1.0 0.0 29.0 18.0]
/G40 {
    28 18 true [1 0 0 -1 -1.0 18.0] {<c0000000e0000000380000000e00c00003bf200001c0100000708800009fc800010e24000207a400
0404f40008077e000800fc0008000200080003800c00fdc007cf50600679f010>} imagemask 
  }
  64 /G40 MSTT31c1f8 AddChar
/G41 [19.0 0.0 3.0 0.0 17.0 26.0]
/G41 {
    14 26 true [1 0 0 -1 -3.0 26.0] {<1c00140c1214122412240a28094809480948099008103f902c502630e7b094909290ca10ce10b010
402040202040204020401f80>} imagemask 
  }
  65 /G41 MSTT31c1f8 AddChar
/G42 [26.0 0.0 3.0 -1.0 25.0 26.0]
/G42 {
    22 27 true [1 0 0 -1 -3.0 26.0] {<020000050000050c00e4940094a400ce640046240031240008d4000434000ffc00100c0020060043
02004c81004840805040807ec04021002060001018001007c0080020040018040007880000500000
20>} imagemask 
  }
  66 /G42 MSTT31c1f8 AddChar
/G43 [22.0 0.0 3.0 4.0 20.0 25.0]
/G43 {
    17 21 true [1 0 0 -1 -3.0 25.0] {<0200000e00000900000900000880000440000460000220000210003e08004007008e008091008043
00807c80804180803e40802187001e480008f00007e000>} imagemask 
  }
  67 /G43 MSTT31c1f8 AddChar
/G44 [22.0 0.0 2.0 -1.0 19.0 20.0]
/G44 {
    17 21 true [1 0 0 -1 -2.0 20.0] {<03f0000588000b3c0070c200813e0080c100809f00806100804080803c80700100083e0004200002
2000031000011000008800004800004800005800002000>} imagemask 
  }
  68 /G44 MSTT31c1f8 AddChar
/G45 [31.0 0.0 3.0 7.0 30.0 20.0]
/G45 {
    27 13 true [1 0 0 -1 -3.0 20.0] {<000fc0007ff03800802007c08047c0207ff9c020003e402000206020001fa020001030200010e1c0
000f920000047c000003f800>} imagemask 
  }
  69 /G45 MSTT31c1f8 AddChar
/G46 [31.0 0.0 1.0 7.0 28.0 20.0]
/G46 {
    27 13 true [1 0 0 -1 -1.0 20.0] {<007e00000381ffc07c008020807c402080b3ffc0804f800080c0800080bf00008181000070e10000
093e000006c4000003f80000>} imagemask 
  }
  70 /G46 MSTT31c1f8 AddChar
/G47 [18.0 0.0 3.0 -2.0 16.0 25.0]
/G47 {
    13 27 true [1 0 0 -1 -3.0 25.0] {<00600090009000900090009000900090009000d003b01d9025886548a548a4c8b4c8d348de90e810
c010402020201020102010200fc0>} imagemask 
  }
  71 /G47 MSTT31c1f8 AddChar
/G48 [18.0 0.0 2.0 0.0 15.0 27.0]
/G48 {
    13 27 true [1 0 0 -1 -2.0 27.0] {<1f8020402040204020202010401840b883d89e589a689928a52895308d204dc06e00580048004800
4800480048004800480048003000>} imagemask 
  }
  72 /G48 MSTT31c1f8 AddChar
/G49 [29.0 0.0 3.0 0.0 27.0 26.0]
/G49 {
    24 26 true [1 0 0 -1 -3.0 26.0] {<0030000e48000b48e00949a0094920e5c920a4ca4094ca404cca404acc80264c8026408013008e10
01110800a20801c408020808041008002008004004008004030002060001040001040000f800>} imagemask 
  }
  73 /G49 MSTT31c1f8 AddChar
/G4a [28.0 0.0 1.0 -1.0 26.0 24.0]
/G4a {
    25 25 true [1 0 0 -1 -1.0 24.0] {<007f000003ffe0000780f0000e0038001c001c0038000e00700007006080830061c1c300c1c1c180
c0808180c0000180c0000180c4001180c6003180c20021806300630061c1c30070ff8700383e0e00
1c001c000e0038000780f00003ffe000007f0000>} imagemask 
  }
  74 /G4a MSTT31c1f8 AddChar
/G4b [28.0 0.0 1.0 -1.0 27.0 24.0]
/G4b {
    26 25 true [1 0 0 -1 -1.0 24.0] {<007f800001ffe00007c0f8000e001c001c000e0038000700300003006080418061c0e180c1c0e0c0
c08040c0c00000c0c00000c0c00000c0c00000c0c3fff0c063fff180600001803000030038000700
1c000e000e001c0007c0f80001ffe000007f8000>} imagemask 
  }
  75 /G4b MSTT31c1f8 AddChar
/G4c [28.0 0.0 1.0 -1.0 26.0 24.0]
/G4c {
    25 25 true [1 0 0 -1 -1.0 24.0] {<007f000003ffe0000780f0000e0038001c001c0038000e00700007006080830061c1c300c1c1c180
c0808180c0000180c03e0180c0ff8180c1c1c180c300618062002300660033007400170038000e00
1c001c000e0038000780f00003ffe000007f0000>} imagemask 
  }
  76 /G4c MSTT31c1f8 AddChar
/G4d [37.0 0.0 3.0 -1.0 36.0 24.0]
/G4d {
    33 25 true [1 0 0 -1 -3.0 24.0] {<0000084200003c084400007f04480000e382500000c1c1100000c060010003f038c60003f01fc000
03f00788000ffc0124001fff0123003fff0120807fff8110007fffc21000ffffc20000ffffc00000
ffffc00000ffffc00000ffffc000007fff8000007fff8000003fff0000001ffe0000000ffc000000
03f0000000>} imagemask 
  }
  77 /G4d MSTT31c1f8 AddChar
/G4e [22.0 0.0 3.0 -1.0 19.0 24.0]
/G4e {
    16 25 true [1 0 0 -1 -3.0 24.0] {<03e00ff80ff81ffc1ffc1ffc188c188808880f780f7003e003e001c060837007780fcf3b03c001c0
07703c1cf80ff00f3004>} imagemask 
  }
  78 /G4e MSTT31c1f8 AddChar
/G4f [28.0 0.0 3.0 -3.0 26.0 26.0]
/G4f {
    23 29 true [1 0 0 -1 -3.0 26.0] {<c00000c00000c3f000cc1800f00c00c00400c00400c00400c00402c0041ec007e2c00402c00402c0
0402c00402c3f402cc2c02f02402c02c02c03802c02002c02002c0180cc007f0c00000c00000c000
00c00000c00000>} imagemask 
  }
  79 /G4f MSTT31c1f8 AddChar
/G50 [36.0 0.0 3.0 0.0 34.0 27.0]
/G50 {
    31 27 true [1 0 0 -1 -3.0 27.0] {<800000008000000080000000c7e00000dff80000fc1c0000e00c0000400400004004000040040000
60080000600c000063ef00006ffbe00e7c98fff830901ff020a000e020c0038030803f0030fff800
303fc000300000003000000010000000180000001800000018000000>} imagemask 
  }
  80 /G50 MSTT31c1f8 AddChar
/G51 [29.0 0.0 3.0 0.0 27.0 23.0]
/G51 {
    24 23 true [1 0 0 -1 -3.0 23.0] {<006000007000003800003800003c00001e00001e00000f00c00f806007807ffffc3fffff67fffc60
0780c00f80000f00001e00001e00003c00003800003800007000006000>} imagemask 
  }
  81 /G51 MSTT31c1f8 AddChar
/G52 [29.0 0.0 4.0 1.0 26.0 24.0]
/G52 {
    22 23 true [1 0 0 -1 -4.0 24.0] {<0000000030000030000c78c00f7bc00f87c00e01c004008008004070003870003830003010002010
00401000201800603c00f03e01f003030001fe0001ce00018600010200>} imagemask 
  }
  82 /G52 MSTT31c1f8 AddChar
/G53 [21.0 0.0 3.0 0.0 19.0 24.0]
/G53 {
    16 24 true [1 0 0 -1 -3.0 24.0] {<0000010001800180018003c003c007e00ff01ff83ffc3ffc7ffe7ffeffffffffffffffffffff7ffe
7ffe3ffc1ff807e0>} imagemask 
  }
  83 /G53 MSTT31c1f8 AddChar
/G54 [27.0 0.0 3.0 0.0 24.0 24.0]
/G54 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<00200000200003260001fc00087080082080c820983820e01c21c0762370c1ac18007000007000c1
ac187623701c21c03820e0c8209808208008708001fc00032600002000002000>} imagemask 
  }
  84 /G54 MSTT31c1f8 AddChar
/G55 [25.0 0.0 3.0 0.0 21.0 24.0]
/G55 {
    18 24 true [1 0 0 -1 -3.0 24.0] {<03f00003f000033000033000033000033000033000ff3fc0ff3fc0c000c0c000c0ff3fc0ff3fc003
300003300003300003300003300003300003300003300003300003f00003f000>} imagemask 
  }
  85 /G55 MSTT31c1f8 AddChar
/G56 [25.0 0.0 3.0 0.0 23.0 23.0]
/G56 {
    20 23 true [1 0 0 -1 -3.0 23.0] {<03f80003fc00031c00031c00031c00ff1fe0ff1ff0c00070c00070c00070ff1ff0ff1ff0031ff003
1c00031c00031c00031c00031c00031c00031c0003fc0003fc0001fc00>} imagemask 
  }
  86 /G56 MSTT31c1f8 AddChar
/G57 [24.0 0.0 3.0 0.0 22.0 24.0]
/G57 {
    19 24 true [1 0 0 -1 -3.0 24.0] {<00e00000e00000e00003f8000ffe000eee001ce700184300feefe0ffffe0feefe01843001ce7000e
ee0007fc0003f80000e00000e00000e00000e00000e00000e00000e00000e000>} imagemask 
  }
  87 /G57 MSTT31c1f8 AddChar
/G58 [23.0 0.0 3.0 3.0 21.0 22.0]
/G58 {
    18 19 true [1 0 0 -1 -3.0 22.0] {<1ffe0007f80003f00081e04081e040c0c0c0e0c1c0f0c3c0fedfc0ffffc0fedfc0f0c3c0e0c1c0c0
c0c081e04081e04003f00007f8001ffe00>} imagemask 
  }
  88 /G58 MSTT31c1f8 AddChar
/G59 [26.0 0.0 3.0 0.0 24.0 24.0]
/G59 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<00200000200000700000d80000d800018c00fffff87ffff06306303603601c01c01c01c01c01c01c
01c03603606306307ffff0fffff8018c0000d80000d800007000002000002000>} imagemask 
  }
  89 /G59 MSTT31c1f8 AddChar
/G5a [29.0 0.0 3.0 0.0 27.0 24.0]
/G5a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00fe0003ff8007f0600f80001f00003e00007c0000780000f80010f00010f00030f001fef00078f0
0078f0004cf800807800007c00003e00001f00000f800007f02003ffc000fe00>} imagemask 
  }
  90 /G5a MSTT31c1f8 AddChar
/G5b [29.0 0.0 3.0 0.0 27.0 23.0]
/G5b {
    24 23 true [1 0 0 -1 -3.0 23.0] {<00ff000381c004002018001830000c2000044f80025fc002bfe001ffe001f8f0e1f8f0e1f8f0e1ff
f001fff8037ffc067ffe0e3ffffc3ffffc1ffff807ffe003ffc000ff00>} imagemask 
  }
  91 /G5b MSTT31c1f8 AddChar
/G5c [30.0 0.0 3.0 -1.0 27.0 24.0]
/G5c {
    24 25 true [1 0 0 -1 -3.0 24.0] {<000c00001e0000040000c380007f80003f000f1e001fc03c0fc07e0820fe002087002703006f8181
ff8181dc81818881400c814004836006c63006fe380efc1e1e780ffc0007fc0001f000>} imagemask 
  }
  92 /G5c MSTT31c1f8 AddChar
/G5d [29.0 0.0 3.0 0.0 28.0 25.0]
/G5d {
    25 25 true [1 0 0 -1 -3.0 25.0] {<001c0000001c0000003e00001cff9c001dffdc001fddfc00071c70000f9cf8001ddddc003cff9e00
38630e00ffc1ff80ffc1ff80ffc1ff8038630e001cff9c001ddddc000f9cf800071c70001fddfc00
1dffdc001cff9c00003e0000001c0000001c0000>} imagemask 
  }
  93 /G5d MSTT31c1f8 AddChar
/G5e [38.0 0.0 3.0 -6.0 36.0 25.0]
/G5e {
    33 31 true [1 0 0 -1 -3.0 25.0] {<0f000078003fc001fe007fe0038f0078f0070700f070060380e0380e0380e0380c0380e01c1c0380
e01c180380e00c180380700e380700700e3007003006300600000630000000077000000007700000
00036000000003600000000360000000036000000003e000000003e000000001c000000001c00000
0001c000000001c000000001c000000001c000000001c000000001c000000001c00000>} imagemask 
  }
  94 /G5e MSTT31c1f8 AddChar
/G5f [35.0 0.0 3.0 -7.0 32.0 24.0]
/G5f {
    29 31 true [1 0 0 -1 -3.0 24.0] {<e0000038f80000f8380000e01c0001c00e0003800e000380070007000780070003800e0001c01c00
00f07800007ff00000fff80001f03c0003c01e000300070006000300060003000c0001800c000180
0c0001800c0001800c0001800c00018006000300060003000300060001c01c0000f07800007ff000
001fc000>} imagemask 
  }
  95 /G5f MSTT31c1f8 AddChar
/G60 [32.0 0.0 3.0 -1.0 29.0 25.0]
/G60 {
    26 26 true [1 0 0 -1 -3.0 25.0] {<e00001c0ffffffc01ffffe0003807000038070000380700003807000038070000380700003807000
03807000038070000380700003807000038070000380700003807000038070000380700003807000
0380700003807000038070000ffffc00ffffffc0f00003c0>} imagemask 
  }
  96 /G60 MSTT31c1f8 AddChar
/G61 [36.0 0.0 3.0 0.0 33.0 24.0]
/G61 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<001ff80001ffff8007ffffe01fc007f83f80007c70c0000c60600000c0300000c0300000c03003c0
c0300ff060701c3870e038183fc0300c0f00300c0000300c0000300c00001818c0000c38f80007f0
7f800fe01fffff8007fffe00007fe000>} imagemask 
  }
  97 /G61 MSTT31c1f8 AddChar
/G62 [31.0 0.0 3.0 -7.0 29.0 26.0]
/G62 {
    26 33 true [1 0 0 -1 -3.0 26.0] {<000fc000007ff00000f07c0001e01c0001c00e0003800e0003800700038007000380070003800700
0180070001c0070000c00f000fe00e003fe00e0070701c0060301c00c0103c00c0183800c0187800
c0187000c01870006030e0007070e0003fe0e0000f81c0000001c0000001c0000001c0000001c080
0000e3c000007f8000003e00>} imagemask 
  }
  98 /G62 MSTT31c1f8 AddChar
/G63 [31.0 0.0 3.0 -6.0 28.0 25.0]
/G63 {
    25 31 true [1 0 0 -1 -3.0 25.0] {<e1c3800071e3c00073e7c0003a74e0003e7ce0003c78e0003c78ee003c78ee003870ef003870ff00
3870f3003870f3803870e3803870e3803870e3803870e3803870e3803870e3803870e7003870e700
3870e6003870ee003870ec003870fc003870f8000000f0000003e000000f7000000c700000003000
00001800>} imagemask 
  }
  99 /G63 MSTT31c1f8 AddChar
/G64 [31.0 0.0 3.0 2.0 29.0 24.0]
/G64 {
    26 22 true [1 0 0 -1 -3.0 24.0] {<003f000000ffc00003fff00007c0f800078078000f003c000e001c000e001c000e001c000e001c00
0700380003807000ffc0ffc0ffc0ffc0ffc0ffc000000000000000000000000000000000ffffffc0
ffffffc0ffffffc0>} imagemask 
  }
  100 /G64 MSTT31c1f8 AddChar
/G65 [34.0 0.0 3.0 -6.0 31.0 25.0]
/G65 {
    28 31 true [1 0 0 -1 -3.0 25.0] {<e1c3800071e3c00073e7c0003a74e0003e7ce0003c78e0003c78e0003c78e0003870e0003870e000
3870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e000
3870e0003870e0003870e0003870e0003870e000000070000000784000003fe000001ff000000060
00000040>} imagemask 
  }
  101 /G65 MSTT31c1f8 AddChar
/G66 [31.0 0.0 3.0 -1.0 28.0 24.0]
/G66 {
    25 25 true [1 0 0 -1 -3.0 24.0] {<000e0000001ffc00000ffe0000001f0000001f0000003f00000073000000e3000001c30000038300
180703801c0e03800e1c03800738010003f0000001e0000001e0000003f00000073800000e1c0000
1c0e00003806000070000000e000000040000000>} imagemask 
  }
  102 /G66 MSTT31c1f8 AddChar
/G67 [36.0 0.0 3.0 -5.0 33.0 24.0]
/G67 {
    30 29 true [1 0 0 -1 -3.0 24.0] {<00020000f00f0000f81f00003c1b00001c3380000e7380000e6180000661800007c1800007c18000
07c1800007c1c0000381c3e00380c7f00380ce380380d81c0380f80c0000f00c0000700c0000700c
000078180000fc380000cff00000c3e00001c0000001800000078000003f0000003e0000>} imagemask 
  }
  103 /G67 MSTT31c1f8 AddChar
/G68 [35.0 0.0 3.0 2.0 32.0 22.0]
/G68 {
    29 20 true [1 0 0 -1 -3.0 22.0] {<008040400181c0e007c3e1e00ecf67b03c7c6e3070783c30e0603018000020000000000000000000
0000000000000000000040000180c06003c3c1e00fc763e01cde6f3078787c30e070381840202010
>} imagemask 
  }
  104 /G68 MSTT31c1f8 AddChar
/G69 [26.0 0.0 3.0 -1.0 23.0 24.0]
/G69 {
    20 25 true [1 0 0 -1 -3.0 24.0] {<e000707000e03801c01801801c03800c03000e07000e0700070e00070e00070e00fffff0fffff007
0e00070e00070e000606000e07000e07000c03001c03801801803000c07000e0e00070>} imagemask 
  }
  105 /G69 MSTT31c1f8 AddChar
/G6a [35.0 0.0 3.0 -3.0 36.0 19.0]
/G6a {
    33 22 true [1 0 0 -1 -3.0 19.0] {<000000008000f000018003f8000380063cf801801c1dff0100181fffc100301e0ffe00701807f800
70300f0000e0600f0000e1c00e0000fe001e0000e0003e0000e0007e0000f000dc000070011c0000
7c0e1c00003ff81c00000fe03c0000000038000000003800000000200000>} imagemask 
  }
  106 /G6a MSTT31c1f8 AddChar
/G6b [42.0 0.0 2.0 -5.0 41.0 25.0]
/G6b {
    39 30 true [1 0 0 -1 -2.0 25.0] {<001f00000000238000000061c0001800c1c0001c01c1c0001c01c1c0000c01c380000c01c3800008
01ee00003800fc1fffe000e07fffc007e1fffe000cf3c0c0003873018000307c0180006038030000
e03c060018e01c04001ce01e08001ee00e30001ef00f60000e780780000e7c0fc0000e3ff9e0000c
0fe0f0001c00007c001800003e003000001fc0e0000007ffc0000000fe00>} imagemask 
  }
  107 /G6b MSTT31c1f8 AddChar
/G6c [25.0 0.0 3.0 2.0 22.0 21.0]
/G6c {
    19 19 true [1 0 0 -1 -3.0 21.0] {<03f0000ffe001fff003fff807fffc07fffc07fffe0ffffe0ffffe0ffffe0ffffe0ffffe07fffe07f
ffc07fffc03fff801fff000ffe0001f000>} imagemask 
  }
  108 /G6c MSTT31c1f8 AddChar
/G6d [31.0 0.0 3.0 0.0 29.0 24.0]
/G6d {
    26 24 true [1 0 0 -1 -3.0 24.0] {<00fc000003ff80000f81e0001e00780038001c0030000e0070000f0060000780e0000780c00003c0
c00003c0c00003c0c00003c0c00003c0e00007c0600007c060000f8030000f8018001f000e007f00
0781fe0001fffc00007ff000000fc000>} imagemask 
  }
  109 /G6d MSTT31c1f8 AddChar
/G6e [25.0 0.0 3.0 2.0 22.0 21.0]
/G6e {
    19 19 true [1 0 0 -1 -3.0 21.0] {<ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ff
ffe0ffffe0ffffe0ffffe0ffffe0ffffe0>} imagemask 
  }
  110 /G6e MSTT31c1f8 AddChar
/G6f [29.0 0.0 3.0 0.0 27.0 24.0]
/G6f {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007e00007e00007e00007ffffffffffffffffff>} imagemask 
  }
  111 /G6f MSTT31c1f8 AddChar
/G70 [29.0 0.0 3.0 0.0 27.0 24.0]
/G70 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<fffffffffffffffffffffffffffffff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0
000ff0000ff0000ff0000ff0000ff0000fffffffffffffffffffffffffffffff>} imagemask 
  }
  112 /G70 MSTT31c1f8 AddChar
/G71 [29.0 0.0 3.0 0.0 27.0 24.0]
/G71 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<fffffcfffffcc0000ec0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0
000fc0000fc0000fc0000fc0000fc0000fffffffffffff7fffff3fffff1fffff>} imagemask 
  }
  113 /G71 MSTT31c1f8 AddChar
/G72 [29.0 0.0 3.0 0.0 27.0 24.0]
/G72 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<1fffff3fffff7fffffffffffffffffc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0
000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000efffffcfffffc>} imagemask 
  }
  114 /G72 MSTT31c1f8 AddChar
/G73 [15.0 0.0 3.0 5.0 13.0 19.0]
/G73 {
    10 14 true [1 0 0 -1 -3.0 19.0] {<00000c001e003f003f007f80ffc0ffc07f803f003f001e000c000000>} imagemask 
  }
  115 /G73 MSTT31c1f8 AddChar
/G74 [25.0 0.0 3.0 -2.0 22.0 25.0]
/G74 {
    19 27 true [1 0 0 -1 -3.0 25.0] {<00400000e00000e00001f00003f80003f80007fc000ffe000ffe001fff003fff807fffc07fffc0ff
ffe07fffc07fffc03fff801fff000ffe000ffe0007fc0003f80003f80001f00000e00000e0000040
00>} imagemask 
  }
  116 /G74 MSTT31c1f8 AddChar
/G75 [33.0 0.0 3.0 -2.0 30.0 25.0]
/G75 {
    27 27 true [1 0 0 -1 -3.0 25.0] {<00040000000e0000001f0000003f8000007fc00000ffe00001fff00003fff80007fffc000ffffe00
1fffff003fffff807fffffc0ffffffe07fffffc03fffff801fffff000ffffe0007fffc0003fff800
01fff00000ffe000007fc000003f8000001f0000000e000000040000>} imagemask 
  }
  117 /G75 MSTT31c1f8 AddChar
/G76 [29.0 0.0 3.0 0.0 27.0 24.0]
/G76 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000ff0001ff8000ff00007e00083c101c18383e007c7f00feff81ffff81ff7f
00fe3e007c1c1838083c10007e0000ff0001ff8000ff00007e00003c00001800>} imagemask 
  }
  118 /G76 MSTT31c1f8 AddChar
/G77 [19.0 0.0 3.0 5.0 16.0 19.0]
/G77 {
    13 14 true [1 0 0 -1 -3.0 19.0] {<020007000f801fc03fe07ff0fff8fff87ff03fe01fc00f8007000200>} imagemask 
  }
  119 /G77 MSTT31c1f8 AddChar
/G78 [35.0 0.0 3.0 0.0 32.0 24.0]
/G78 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fffffff8fffffff8fffffff8e0000038e0000038e0c01838e0e03838e0707038e038e038e01dc038
e00f8038e0070038e00f8038e01dc038e038e038e0707038e0e03838e1c01c38e0c00838e0000038
e0000038fffffff8fffffff8fffffff8>} imagemask 
  }
  120 /G78 MSTT31c1f8 AddChar
/G79 [35.0 0.0 3.0 0.0 32.0 24.0]
/G79 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fffffff8fffffff8fffffff8e0000038e0000038e0020038e0070038e00f8038e01dc038e038e038
e0707038e0e03838e1c01c38e3800e38e7000738e6000338e0000038e0000038e0000038e0000038
e0000038fffffff8fffffff8fffffff8>} imagemask 
  }
  121 /G79 MSTT31c1f8 AddChar
/G7a [29.0 0.0 3.0 0.0 27.0 24.0]
/G7a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<1e00787f81fe7f81fef3c3cfe1c387e1c387f1c38f7ffffe7ffffe1ffff801c38001c38001c38001
c3801ffff87ffffe7ffffef1c38fe1c387e1c387f3c3cf7f81fe7f81fe1e0078>} imagemask 
  }
  122 /G7a MSTT31c1f8 AddChar
/G7b [29.0 0.0 3.0 1.0 26.0 23.0]
/G7b {
    23 22 true [1 0 0 -1 -3.0 23.0] {<01c7000339800200801e00f032009821010820820820100860780c404c0480b60280b402c2cc863c
7c781000102000082010083010181c107002108001298001e700>} imagemask 
  }
  123 /G7b MSTT31c1f8 AddChar
/G7c [29.0 0.0 3.0 1.0 27.0 24.0]
/G7c {
    24 23 true [1 0 0 -1 -3.0 24.0] {<00e38001ffc001ffc001ffc01dfff83ffffc3ffffc3ffffc3ff7fc7fddfeff3efffff7ffffffff7f
bdfe0fddf01ffff83ffffc3ffffc3ffffc0ff7f803f7c001f7c000e380>} imagemask 
  }
  124 /G7c MSTT31c1f8 AddChar
/G7d [18.0 0.0 1.0 14.0 16.0 25.0]
/G7d {
    15 11 true [1 0 0 -1 -1.0 25.0] {<1c0e3c1e7038e070e070fc7efc7efc7efc7efc7efc7e>} imagemask 
  }
  125 /G7d MSTT31c1f8 AddChar
/G7e [18.0 0.0 1.0 14.0 16.0 25.0]
/G7e {
    15 11 true [1 0 0 -1 -1.0 25.0] {<fc7efc7efc7efc7efc7efc7e1c0e1c0e381cf078e070>} imagemask 
  }
  126 /G7e MSTT31c1f8 AddChar
/G7f [17.0 0.0 2.0 0.0 14.0 24.0]
/G7f {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  127 /G7f MSTT31c1f8 AddChar
/G80 [29.0 0.0 3.0 0.0 27.0 24.0]
/G80 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c18307e0c70e70e60c306e18187c18183c18183c18183c18183c1
8183c18183e1818760c30670e70e307e0c183c180e00700781e003ffc000ff00>} imagemask 
  }
  128 /G80 MSTT31c1f8 AddChar
/G81 [29.0 0.0 3.0 0.0 27.0 24.0]
/G81 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018300c0c703c0e600c06e00c07c00c03c00c03c00c03c00c03c0
0c03c00c03e00c07600c06700c0e300c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  129 /G81 MSTT31c1f8 AddChar
/G82 [29.0 0.0 3.0 0.0 27.0 24.0]
/G82 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078187c1830fe0c70870e600306e00307c00303c00603c00603c00c03c0
1803c03003e0600760e00670ff0e30ff0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  130 /G82 MSTT31c1f8 AddChar
/G83 [29.0 0.0 3.0 0.0 27.0 24.0]
/G83 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078187e1830ff0c70838e600186e00187c00303c03c03c03e03c00703c0
0183c00183e0018760018670830e30ff0c187c180e00700781e003ffc000ff00>} imagemask 
  }
  131 /G83 MSTT31c1f8 AddChar
/G84 [29.0 0.0 3.0 0.0 27.0 24.0]
/G84 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018300c0c701c0e603c06e03c07c06c03c0cc03c0cc03c18c03c3
ff03c3ff03e00c07600c06700c0e300c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  132 /G84 MSTT31c1f8 AddChar
/G85 [29.0 0.0 3.0 0.0 27.0 24.0]
/G85 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018307f8c70600e606006e06007c07803c07e03c00603c00303c0
0303c00303e00307600706707e0e307c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  133 /G85 MSTT31c1f8 AddChar
/G86 [29.0 0.0 3.0 0.0 27.0 24.0]
/G86 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078181e18307f0c70e10e60c006e1c007c18003c19e03c1bf03c1e383c1
c183c18183e1818760c18670e30e307f0c183c180e00700781e003ffc000ff00>} imagemask 
  }
  134 /G86 MSTT31c1f8 AddChar
/G87 [29.0 0.0 3.0 0.0 27.0 24.0]
/G87 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e007818001830ff8c70ff8e600186e00307c00203c00603c00403c00c03c0
1803c01803e0300760300670300e30600c1860180e00700781e003ffc000ff00>} imagemask 
  }
  135 /G87 MSTT31c1f8 AddChar
/G88 [29.0 0.0 3.0 0.0 27.0 24.0]
/G88 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c18307e0c70e70e60c306e0c307c0e203c07603c03c03c0ee03c0
c703c18383e1818761818671c38e30ff0c187c180e00700781e003ffc000ff00>} imagemask 
  }
  136 /G88 MSTT31c1f8 AddChar
/G89 [29.0 0.0 3.0 0.0 27.0 24.0]
/G89 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c1830fe0c70c30e618306e18187c18183c18383c0c783c0fd83c0
7983c00183e0030760030670860e30fe0c1878180e00700781e003ffc000ff00>} imagemask 
  }
  137 /G89 MSTT31c1f8 AddChar
/G8a [29.0 0.0 3.0 0.0 27.0 24.0]
/G8a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e007818c71833cf8c70d8ce60d8c6e0f067c0f063c0f063c0f063c0f063c0
f063c0f063e0f06760d8c670d8ce30cf8c1807180e00700781e003ffc000ff00>} imagemask 
  }
  138 /G8a MSTT31c1f8 AddChar
/G8b [29.0 0.0 3.0 0.0 27.0 24.0]
/G8b {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fc3fc7f00fe7e3c7efe3c7ffc7e3ffc7e3ffc7e3ffc7e3ffc
7e3ffc7e3ffe3c7f7e3c7e7f00fe3fc3fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  139 /G8b MSTT31c1f8 AddChar
/G8c [29.0 0.0 3.0 0.0 27.0 24.0]
/G8c {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fe3fc7f83fe7f83feffe3ffffe3ffffe3ffffe3ffffe3ffff
e3ffffe3ffffe3ff7fe3fe7fe3fe3fe3fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  140 /G8c MSTT31c1f8 AddChar
/G8d [29.0 0.0 3.0 0.0 27.0 24.0]
/G8d {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f01fc7e007e7e7c3efffe3ffffe3ffffc7ffff87fffe0ffff
c3ffff8fffff3fff7e003e7e003e3e003c1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  141 /G8d MSTT31c1f8 AddChar
/G8e [29.0 0.0 3.0 0.0 27.0 24.0]
/G8e {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f80fc7f003e7f7c3efffe3ffffc7fffc0ffffc0fffffc7fff
fe3ffffe3ffffe3f7f7c3e7f007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  142 /G8e MSTT31c1f8 AddChar
/G8f [29.0 0.0 3.0 0.0 27.0 24.0]
/G8f {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81fe1f83fe1fc7fc1fe7f81feff11ffff31fffe71fffc71fff8f1fff8
007ff8007ff8007f7ff1fe7ff1fe3ff1fc1ff1f80ffff007ffe003ffc000ff00>} imagemask 
  }
  143 /G8f MSTT31c1f8 AddChar
/G90 [29.0 0.0 3.0 0.0 27.0 24.0]
/G90 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f007c7f007e7f3ffeff3fffff3fffff03ffff01fffff0ffff
fc7ffffc7ffffc7f7f787e7f00fe3f83fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  144 /G90 MSTT31c1f8 AddChar
/G91 [29.0 0.0 3.0 0.0 27.0 24.0]
/G91 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fc0fc7f007e7e1f7efe3ffffc7ffffc61fffc007ffc3c3ffc
7e3ffc7e3ffe7e3f7e3c7e7f007e3fc1fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  145 /G91 MSTT31c1f8 AddChar
/G92 [29.0 0.0 3.0 0.0 27.0 24.0]
/G92 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83e003c7e003e7e003efffe3ffffc7ffff8fffff1fffff3ffff
e7ffffc7ffff8fff7f8ffe7f1ffe3f1ffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  146 /G92 MSTT31c1f8 AddChar
/G93 [29.0 0.0 3.0 0.0 27.0 24.0]
/G93 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f81fc7f00fe7e3c7efe3c7ffe1cffff00ffff81ffff00fffe
387ffc7e3ffc7e3f7c3c3e7e007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  147 /G93 MSTT31c1f8 AddChar
/G94 [29.0 0.0 3.0 0.0 27.0 24.0]
/G94 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81fc1f83f00fc7f1c7e7e3e7efe3e3ffe3e3ffe3e3fff1c3fff003fff
863ffffe3ffffc7f7ffc7e7ef8fe3e01fc1e03f80ffff007ffe003ffc000ff00>} imagemask 
  }
  148 /G94 MSTT31c1f8 AddChar
/G95 [29.0 0.0 3.0 0.0 27.0 24.0]
/G95 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff838f83c60f01e60e38ef8e38ff8c7c7f8c7c7f8c7c7f8c7c7f8
c7c7f8c7c7f8e38f78e38e78f01e3ff83c1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  149 /G95 MSTT31c1f8 AddChar
/G96 [33.0 0.0 1.0 0.0 31.0 18.0]
/G96 {
    30 18 true [1 0 0 -1 -1.0 18.0] {<038000fc0e00073838000c7030079070700fd0e0e01fe0e0e018e1e0e0106380e0106fc0e0007870
f000e0307000c038780380383e0f20381ffc207807e030f000001fe0000007c0>} imagemask 
  }
  150 /G96 MSTT31c1f8 AddChar
/G97 [33.0 0.0 2.0 0.0 32.0 18.0]
/G97 {
    30 18 true [1 0 0 -1 -2.0 18.0] {<fc000700738001c038c00070382780301c2fc0381c1fe01c1e1c601c0718201c0fd8201c3878001c
301c003c700c0038700700787013c1f07810ffe03c301f801fe000000f800000>} imagemask 
  }
  151 /G97 MSTT31c1f8 AddChar
/G98 [33.0 0.0 1.0 0.0 31.0 18.0]
/G98 {
    30 18 true [1 0 0 -1 -1.0 18.0] {<0f8000001fe000003c303f807810ffe07003c1f070070078700c0038301c003c3878001c0fd8201c
0718201c1e1c601c1c1fe01c1c2fc0383823803038c00070738001c0fc000700>} imagemask 
  }
  152 /G98 MSTT31c1f8 AddChar
/G99 [33.0 0.0 2.0 0.0 32.0 18.0]
/G99 {
    30 18 true [1 0 0 -1 -2.0 18.0] {<000007c000001fe007f030f01ffc20783e070038780380387000c038f000e030e0007870e0106fc0
e0106380e018e1e0e01fe0e0700fd0e03007107038000c700e000738038000fc>} imagemask 
  }
  153 /G99 MSTT31c1f8 AddChar
/G9a [33.0 0.0 1.0 0.0 32.0 18.0]
/G9a {
    31 18 true [1 0 0 -1 -1.0 18.0] {<01e0000003f8000003fc0000038e00000183000003fd80000fffc0f81f81e3fc3f0037fe7e381ffe
fc3c3f0ef87c7ffcf870fef8f861fc00f863f800783ff0001c1fe000000f8000>} imagemask 
  }
  154 /G9a MSTT31c1f8 AddChar
/G9b [33.0 0.0 1.0 0.0 32.0 18.0]
/G9b {
    31 18 true [1 0 0 -1 -1.0 18.0] {<00000f0000003f8000007f800000e3800001830000037f803e07ffe07f8f03f0ffd801f8fff038fc
e1f8787e7ffc7c3e3efe1c3e007f0c3e003f8c3e001ff83c000ff0700003e000>} imagemask 
  }
  155 /G9b MSTT31c1f8 AddChar
/G9c [33.0 0.0 1.0 0.0 32.0 18.0]
/G9c {
    31 18 true [1 0 0 -1 -1.0 18.0] {<0003e000000ff070001ff83c003f8c3e007f0c3e3efe1c3e7ffc7c3ee1f8787ee7f038fcfff801f8
7f8f03f03e07ffe000037f80000183000000e38000007f8000003f8000000f00>} imagemask 
  }
  156 /G9c MSTT31c1f8 AddChar
/G9d [33.0 0.0 1.0 0.0 32.0 18.0]
/G9d {
    31 18 true [1 0 0 -1 -1.0 18.0] {<000f80001c1fe000783ff000f863f800f861fc00f870fef8f87c7ffcfc3c3f0e7e381fce3f003ffe
1f81e3fc0fffc0f803fd800001830000038e000003fc000003f8000001e00000>} imagemask 
  }
  157 /G9d MSTT31c1f8 AddChar
/G9e [10.0 0.0 3.0 10.0 7.0 15.0]
/G9e {
    4 5 true [1 0 0 -1 -3.0 15.0] {<60f0f0f060>} imagemask 
  }
  158 /G9e MSTT31c1f8 AddChar
/G9f [15.0 0.0 3.0 7.0 13.0 17.0]
/G9f {
    10 10 true [1 0 0 -1 -3.0 17.0] {<1e007f807f80ffc0ffc0ffc0ffc07f807f801e00>} imagemask 
  }
  159 /G9f MSTT31c1f8 AddChar
/Ga0 [10.0 0.0 3.0 10.0 7.0 15.0]
/Ga0 {
    4 5 true [1 0 0 -1 -3.0 15.0] {<f0f0f0f0f0>} imagemask 
  }
  160 /Ga0 MSTT31c1f8 AddChar
/Ga1 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga1 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c003c78001e70000ef0000fe00007e00007e00007e00007e0
0007e00007f0000f70000e78001e3c003c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  161 /Ga1 MSTT31c1f8 AddChar
/Ga2 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga2 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f81fc7e007e7c003ef8001ff8001ff0000ff0000ff0000ff0
000ff8001ff8001f7c003e7e007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  162 /Ga2 MSTT31c1f8 AddChar
/Ga3 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga3 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83ffffc7ffffe7fc3feff00ffff00fffe007ffe007ffe007ffe
007fff00ffff00ff7fc3fe7ffffe3ffffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  163 /Ga3 MSTT31c1f8 AddChar
/Ga4 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga4 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c003c78001e70000ef03c0fe07e07e0ff07e0ff07e0ff07e0
ff07e07e07f03c0f70000e78001e3c003c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  164 /Ga4 MSTT31c1f8 AddChar
/Ga5 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga5 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c7e3c78ff1e71ff8ef3c3cfe781e7e718e7e73ce7e73ce7e7
18e7e781e7f3c3cf71ff8e78ff1e3c7e3c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  165 /Ga5 MSTT31c1f8 AddChar
/Ga6 [31.0 0.0 3.0 0.0 29.0 24.0]
/Ga6 {
    26 24 true [1 0 0 -1 -3.0 24.0] {<000fc000007ff00001fffc000781fe000e007f0018001f0030000f8060000780600007c0e00007c0
c00003c0c00003c0c00003c0c00003c0c00003c0e00007806000078070000f0030000e0038001c00
1e0078000f81e00003ff800000fc0000>} imagemask 
  }
  166 /Ga6 MSTT31c1f8 AddChar
/Ga7 [15.0 0.0 3.0 7.0 13.0 17.0]
/Ga7 {
    10 10 true [1 0 0 -1 -3.0 17.0] {<ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0>} imagemask 
  }
  167 /Ga7 MSTT31c1f8 AddChar
/Ga8 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga8 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007e00007e00007e00007ffffffffffffffffff>} imagemask 
  }
  168 /Ga8 MSTT31c1f8 AddChar
/Ga9 [29.0 0.0 4.0 6.0 25.0 24.0]
/Ga9 {
    21 18 true [1 0 0 -1 -4.0 24.0] {<00200000200000200000200000700000700000700000700000f80000f80000f80001fc0003fe0007
ff000fff801f8fc03800e0400010>} imagemask 
  }
  169 /Ga9 MSTT31c1f8 AddChar
/Gaa [29.0 0.0 3.0 0.0 27.0 24.0]
/Gaa {
    24 24 true [1 0 0 -1 -3.0 24.0] {<000000001800001800001800003c00003c00003c00007e00007e0001ff800ffff07ffffe7ffffe0f
fff001ff80007e00007e00003c00003c00003c00001800001800001800000000>} imagemask 
  }
  170 /Gaa MSTT31c1f8 AddChar
/Gab [29.0 0.0 3.0 2.0 26.0 24.0]
/Gab {
    23 22 true [1 0 0 -1 -3.0 24.0] {<001000001000001000003800003800003800007c00007c007ffffc3ffff81ffff00fffe003ff8001
ff0001ff0003ff8003ff8003ef800383800701c0040040080040>} imagemask 
  }
  171 /Gab MSTT31c1f8 AddChar
/Gac [29.0 0.0 4.0 0.0 25.0 24.0]
/Gac {
    21 24 true [1 0 0 -1 -4.0 24.0] {<002000002000002000007000007000007000c0f8187efbf03fffe01fffc00fff8007ff0007ff000f
ff801fffc03fffe07efbf0c0f818007000007000007000002000002000002000>} imagemask 
  }
  172 /Gac MSTT31c1f8 AddChar
/Gad [29.0 0.0 3.0 0.0 27.0 24.0]
/Gad {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000018000018000c3c300f3cf007ffe007ffe003ffc003ffc00ffff07ffffe7ffffe0f
fff003ffc003ffc007ffe007ffe00f3cf00c3c30001800001800001800000000>} imagemask 
  }
  173 /Gad MSTT31c1f8 AddChar
/Gae [29.0 0.0 3.0 0.0 27.0 24.0]
/Gae {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000318c003bdc003ffc003ffc03ffffc3ffffc1ffff80ffff01ffff87ffffe7ffffe1f
fff80ffff01ffff83ffffc3ffffc03ffc003ffc003bdc00318c0001800000000>} imagemask 
  }
  174 /Gae MSTT31c1f8 AddChar
/Gaf [29.0 0.0 3.0 0.0 27.0 24.0]
/Gaf {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000018000028000c2c300f2cf007cf6005cce004e9c0026bc00f2f307ff80e601ffe1c
f4f003d6400397400733a00673e00fb4f00c3430001800001800001800000000>} imagemask 
  }
  175 /Gaf MSTT31c1f8 AddChar
/Gb0 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb0 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0010000010000010000010000010000fffe0081020081020081020081020081020ffc7fe08102008
10200810200810200810200fffe0001000001000001000001000001000>} imagemask 
  }
  176 /Gb0 MSTT31c1f8 AddChar
/Gb1 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb1 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<001000001000001000001000001000007c00019300031180021080041040041040ffeffe04104004
1040021080031180019300007c00001000001000001000001000001000>} imagemask 
  }
  177 /Gb1 MSTT31c1f8 AddChar
/Gb2 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb2 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800001800001800003c00003c00007e0000660000c30001c3800781e01e0078f8003ff8001f1e
00780700e001818000c300006600006e00003c00003c00001800001800001800>} imagemask 
  }
  178 /Gb2 MSTT31c1f8 AddChar
/Gb3 [29.0 0.0 6.0 3.0 24.0 21.0]
/Gb3 {
    18 18 true [1 0 0 -1 -6.0 21.0] {<400080e001c07c0f803fff0033f30030030018060018060018060018060018060018060030030033
f3003fff007c0f80e001c0400080>} imagemask 
  }
  179 /Gb3 MSTT31c1f8 AddChar
/Gb4 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb4 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000e70001c3800381c00700e00e00701c7e3838ff1c70860ee00c07e0180770
300e38001c1c00380e30700730e00381c001c38000e700007e00003c00001800>} imagemask 
  }
  180 /Gb4 MSTT31c1f8 AddChar
/Gb5 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb5 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003e7c007e7e01fe7f81fc3f83fc3fc7fc3fe7f81fe800001e00007f0000ff8001ffe007fff
00fffe007f7e007e7e007e7c183e3c7e3c1cff3809ff9007ffe003ffc0007e00>} imagemask 
  }
  181 /Gb5 MSTT31c1f8 AddChar
/Gb6 [29.0 0.0 2.0 2.0 27.0 24.0]
/Gb6 {
    25 22 true [1 0 0 -1 -2.0 24.0] {<001c0000001c0000003e0000002e0000002e0000004f000000470000004700007f87ff0020001e00
10003c000c0078000200e0000101c0000201c0000201e0000230e000024ce0000482f00007017000
0400f00008003800>} imagemask 
  }
  182 /Gb6 MSTT31c1f8 AddChar
/Gb7 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb7 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501214401e04801602801802801802a0100a80100280
30028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  183 /Gb7 MSTT31c1f8 AddChar
/Gb8 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb8 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801382801302801c02a0180a80300280
10028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  184 /Gb8 MSTT31c1f8 AddChar
/Gb9 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb9 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b1130301018201008501014401004801002801002801102a03fca80100280
00028000025000145000142000083000181b01300c106003018000fe00>} imagemask 
  }
  185 /Gb9 MSTT31c1f8 AddChar
/Gba [29.0 0.0 3.0 0.0 26.0 23.0]
/Gba {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002803002a0300a801c0280
17028003824000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  186 /Gba MSTT31c1f8 AddChar
/Gbb [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbb {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002803002a0100a80180280
1802800c024006045006142000083000181b01b00c106003018000fe00>} imagemask 
  }
  187 /Gbb MSTT31c1f8 AddChar
/Gbc [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbc {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801002a0100a80100280
10028010024010045010142010083000181b01b00c106003018000fe00>} imagemask 
  }
  188 /Gbc MSTT31c1f8 AddChar
/Gbd [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbd {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801802a0100a80300280
300280600240c00450c0142000083000181b01b00c106003018000fe00>} imagemask 
  }
  189 /Gbd MSTT31c1f8 AddChar
/Gbe [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbe {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801802a0180a80700281
d0028380024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  190 /Gbe MSTT31c1f8 AddChar
/Gbf [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbf {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601911b0301018201008501014401004801002801002811002a7f80a80100280
00028000025000145000142000083000181901b00c106003018000fe00>} imagemask 
  }
  191 /Gbf MSTT31c1f8 AddChar
/Gc0 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc0 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004839002819002807002a0300a80180280
10028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  192 /Gc0 MSTT31c1f8 AddChar
/Gc1 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc1 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b030101820100850901440f00480d002803002803002a0100a80100280
18028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  193 /Gc1 MSTT31c1f8 AddChar
/Gc2 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc2 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601a18b0301018201008501014401004801002801002801002a0100a80100280
10028000024000045000142000083000181a00b00c106003018000fe00>} imagemask 
  }
  194 /Gc2 MSTT31c1f8 AddChar
/Gc3 [29.0 0.0 3.0 -3.0 27.0 26.0]
/Gc3 {
    24 29 true [1 0 0 -1 -3.0 26.0] {<0002010003030003870003cf00037b00033300030300030300030300230300630300e30301e30703
630e067ffe0c7ffc1800383000706000e06001c03003801807000c7e00067c0003600001e00000e0
00006000002000>} imagemask 
  }
  195 /Gc3 MSTT31c1f8 AddChar
/Gc4 [29.0 0.0 3.0 -3.0 27.0 26.0]
/Gc4 {
    24 29 true [1 0 0 -1 -3.0 26.0] {<804000c0c000e1c000f3c000dec000ccc000c0c000c0c000c0c000c0c400c0c600c0c700e0c78070
c6c07ffe603ffe301c00180e000c07000603800601c00c00e018007e30003e600006c00007800007
00000600000400>} imagemask 
  }
  196 /Gc4 MSTT31c1f8 AddChar
/Gc5 [29.0 0.0 2.0 -3.0 26.0 26.0]
/Gc5 {
    24 29 true [1 0 0 -1 -2.0 26.0] {<00200000600000e00001e000036000067c000c7e001807003003806001c06000e03000701800380c
7ffc067ffe03630e01e30700e30300630300230300030300030300030300033300037b0003cf0003
87000303000201>} imagemask 
  }
  197 /Gc5 MSTT31c1f8 AddChar
/Gc6 [29.0 0.0 2.0 -3.0 26.0 26.0]
/Gc6 {
    24 29 true [1 0 0 -1 -2.0 26.0] {<0004000006000007000007800006c0003e60007e3000e01801c00c0380060700060e000c1c00183f
fe307ffe6070c6c0e0c780c0c700c0c600c0c400c0c000c0c000c0c000ccc000dec000f3c000e1c0
00c0c000804000>} imagemask 
  }
  198 /Gc6 MSTT31c1f8 AddChar
/Gc7 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc7 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<000000000060000000f0000001980000030c0000060600000c030000180180003000c0007e07e000
fe07f0000606000006060000070600000387fff801c7fff000e60060007600c0003e0180001e0180
000f00c0000780600003fff00000fff8>} imagemask 
  }
  199 /Gc7 MSTT31c1f8 AddChar
/Gc8 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc8 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<0000000000003000000078000000cc00000186000003030000060180000c00c000180060003f03f0
007f03f8000303000003030000030700ffff0e007fff1c0030033800180370000c03e0000c03c000
18078000300f00007ffe0000fff80000>} imagemask 
  }
  200 /Gc8 MSTT31c1f8 AddChar
/Gc9 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc9 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<0000fff80003fff000078060000f00c0001e0180003e0180007600c000e6006001c7fff00387fff8
070600000606000006060000fe07f0007e07e0003000c000180180000c03000006060000030c0000
0198000000f000000060000000000000>} imagemask 
  }
  201 /Gc9 MSTT31c1f8 AddChar
/Gca [35.0 0.0 3.0 0.0 32.0 24.0]
/Gca {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fff800007ffe0000300f0000180780000c03c0000c03e00018037000300338007fff1c00ffff0e00
000307000003030000030300007f03f8003f03f000180060000c00c0000601800003030000018600
0000cc00000078000000300000000000>} imagemask 
  }
  202 /Gca MSTT31c1f8 AddChar
/Gcb [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcb {
    31 31 true [1 0 0 -1 -1.0 25.0] {<e800000eee00007eef8001fe77c007f073e00f8e71f01f1c38f03e3c3c783c781c3878f80e1c71f0
0f9ce3e007dc1fc001eeff0000eefc00002ee00000000000000ee800007eee0001feef0007f07fc0
0f8e73e01f1c71f03e3c38f03c383c7878781e3871f00f3cf3e00f9c1fc007dcff0001eefc0000ee
e000002e>} imagemask 
  }
  203 /Gcb MSTT31c1f8 AddChar
/Gcc [33.0 0.0 0.0 -7.0 34.0 27.0]
/Gcc {
    34 34 true [1 0 0 -1 0.0 27.0] {<ffffffffc08bfffffc4088ffffe040883fff8040c41ffe03c0c60ffc1c40c707f838c0e3c7f070c0
e1c3f0e1c0f0e1e1c1c0f071c383c0f831c707c0fc10f80fc0fe08c03fc0ff88c0ffc0ffe8c7ffc0
ffffffffc0ffffffffc0fff0c4ffc0ff80c47fc0ff00c41fc0fc0fc20fc0f830e307c0f071e1c3c0
e1e1f1e3c0e3c3f0e1c0c383f871c0c707f838c08e0ffc18c0f01ffe08c0807fff044081ffffc440
8fffffe440ffffffffc0>} imagemask 
  }
  204 /Gcc MSTT31c1f8 AddChar
/Gcd [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcd {
    31 31 true [1 0 0 -1 -1.0 25.0] {<00f8003003fe00f80fff81fc1fffc3fe1f83eff83e00ffc03c007f007800fc007801f0007007c000
700f8000701e1800703c3e0070781f0070f00f0071e007803b8003803f0003803e0003801e200780
1c780f003c3fff007e1ffe007e03f8007e000000fe000000fe000000fe000000fc000000fc000000
78000000>} imagemask 
  }
  205 /Gcd MSTT31c1f8 AddChar
/Gce [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gce {
    31 31 true [1 0 0 -1 -1.0 25.0] {<7c000000ff81ff00ffcfffc0fffffff0fffe03f87ffc00fc1f9e007c0007003c0003803e0021c01e
0071e01e00e0f01e00e0781e00c03c1c01c01c3c01c00e3801c00f7801c007f001c023e001c073c0
01e0f1e000f1e1e000ffe0f0007fc0f8001f007c0000007c0000003e0000003e0000003c00000018
00000010>} imagemask 
  }
  206 /Gce MSTT31c1f8 AddChar
/Gcf [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcf {
    31 31 true [1 0 0 -1 -1.0 25.0] {<100000003000000078000000f8000000f80000007c0000007c01f0003e07fc001e0ffe000f0f1e00
0f1e0f00079c07000f8807001fc007003de0070038e007007870070070780600f03c0e00f01e0e00
f00f1c00f0070800f80380007801c0007c00f3f03e007ffc3f80fffe1ffffffe07ffe7fe01ff03fe
0000007c>} imagemask 
  }
  207 /Gcf MSTT31c1f8 AddChar
/Gd0 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd0 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<0000003c0000007e0000007e000000fe000000fe000000fe000000fc003f80fc00fff0fc01fff878
01e03c7003c008f0038000f8038001f8038003b803c00f1c01e01e1c01f03c1c00f8781c0030f01c
0003e01c0007c01c001f003c007e003c01fc007807fe00f83fef83f0ff87fff07f03ffe03e00ffc0
18003e00>} imagemask 
  }
  208 /Gd0 MSTT31c1f8 AddChar
/Gd1 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd1 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<78000000fc000000fc000000fe000000fe000000fe0000007e0000007e03f8007e1ffe003c3fff00
1c780f001e2007803e0003803f0003803b80038071e0078070f00f0070781f00703c3e00701e1800
700f80007007c0007801f0007800fc003c007f003e00ffc01f83eff81fffc3fe0fff81fc03fe00f8
00f80030>} imagemask 
  }
  209 /Gd1 MSTT31c1f8 AddChar
/Gd2 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd2 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<00000010000000180000003c0000003e0000003e0000007c001f007c007fc0f800ffe0f000f1e1e0
01e0f1e001c073c001c023e001c007f001c00f7801c00e3801c01c3c00c03c1c00e0781e00e0f01e
0071e01e0021c01e0003803e0007003c1f9e007c7ffc00fcfffe03f8fffffff0ffcfffc0ff81ff00
7c000000>} imagemask 
  }
  210 /Gd2 MSTT31c1f8 AddChar
/Gd3 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd3 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<0000007c01ff03fe07ffe7fe1ffffffe3f80fffe3e007ffc7c00f3f07801c000f8038000f0070800
f00f1c00f01e0e00f03c0e00707806007870070038e007003de007001fc007000f880700079c0700
0f1e0f000f0f1e001e0ffe003e07fc007c01f0007c000000f8000000f80000007800000030000000
10000000>} imagemask 
  }
  211 /Gd3 MSTT31c1f8 AddChar
/Gd4 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd4 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<18003e003e00ffc07f03ffe0ff87fff03fef83f007fe00f801fc0078007e003c001f003c0007c01c
0003e01c0030f01c00f8781c01f03c1c01e01e1c03c00f1c038003b8038001f8038000f803c008f0
01e03c7001fff87800fff0fc003f80fc000000fc000000fe000000fe000000fe0000007e0000007e
0000003c>} imagemask 
  }
  212 /Gd4 MSTT31c1f8 AddChar
/Gd5 [41.0 0.0 3.0 0.0 39.0 24.0]
/Gd5 {
    36 24 true [1 0 0 -1 -3.0 24.0] {<001ffffff0003ffffff0007ffffff000e000007001c0000070038100107007038038700e01c07070
1c00e0e07038007bc07070003f8070e0001f0070e0001f007070003b8070380071c0701c00e0e070
0e01c070700703803870038100107001c000007000e0000070007ffffff0003ffffff0001ffffff0
>} imagemask 
  }
  213 /Gd5 MSTT31c1f8 AddChar
/Gd6 [41.0 0.0 2.0 0.0 38.0 24.0]
/Gd6 {
    36 24 true [1 0 0 -1 -2.0 24.0] {<ffffff0000ffffff8000ffffffc000e000006000e000003000e080081800e1c01c0c00e0e0380600
e070700300e03de00180e01fc000c0e00f800060e00f800060e01dc000c0e038e00180e070700300
e0e0380600e1c01c0c00e080081800e000003000e000006000ffffffc000ffffff8000ffffff0000
>} imagemask 
  }
  214 /Gd6 MSTT31c1f8 AddChar
/Gd7 [26.0 0.0 3.0 0.0 24.0 24.0]
/Gd7 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<0000080000300000500001a000064000184000208000c0800301000c02001002006004007ffc001f
fe000ffe0003ff0000ff80003f80001fc00007c00001e0000070000030000008>} imagemask 
  }
  215 /Gd7 MSTT31c1f8 AddChar
/Gd8 [26.0 0.0 2.0 0.0 23.0 24.0]
/Gd8 {
    21 24 true [1 0 0 -1 -2.0 24.0] {<8000006000005000002c000013000010c00008200008180004060002018002004001003001fff003
ffc003ff8007fe000ff8000fe0001fc0001f00003c0000700000600000800000>} imagemask 
  }
  216 /Gd8 MSTT31c1f8 AddChar
/Gd9 [29.0 0.0 3.0 3.0 27.0 24.0]
/Gd9 {
    24 21 true [1 0 0 -1 -3.0 24.0] {<00000000180000180000340000720000720000f10000f10001f08001f08003f04007f02007f0200f
f8100fe6101f81081f00c83c003470000a600006800001>} imagemask 
  }
  217 /Gd9 MSTT31c1f8 AddChar
/Gda [29.0 0.0 3.0 0.0 27.0 21.0]
/Gda {
    24 21 true [1 0 0 -1 -3.0 21.0] {<80000160000650000e2c003c1300f81081f80867f0081ff0040fe0040fe0020fc0010f80010f8000
8f00008f00004e00004e00002c00001800001800000000>} imagemask 
  }
  218 /Gda MSTT31c1f8 AddChar
/Gdb [29.0 0.0 3.0 0.0 26.0 24.0]
/Gdb {
    23 24 true [1 0 0 -1 -3.0 24.0] {<00fe0003ffc007ffe01ffff01ffff83e7ffc7c7ffc787ffef00000e00000c00000800000800000c0
0000e00000f00000787ffe7c7ffc3e7ffc1ffff81ffff007ffe003ffc000fe00>} imagemask 
  }
  219 /Gdb MSTT31c1f8 AddChar
/Gdc [29.0 0.0 3.0 0.0 26.0 24.0]
/Gdc {
    23 24 true [1 0 0 -1 -3.0 24.0] {<00fe0007ff800fffc01ffff03ffff07ffcf87ffc7cfffc3c00001e00000e00000600000200000200
000600000e00001efffc3c7ffc7c7ffcf83ffff01ffff00fffc007ff8000fe00>} imagemask 
  }
  220 /Gdc MSTT31c1f8 AddChar
/Gdd [29.0 0.0 3.0 1.0 27.0 24.0]
/Gdd {
    24 23 true [1 0 0 -1 -3.0 24.0] {<00ff0003e7c007c3e01f81f81f00f83e007c7c003e78001ef8001fff00ffff00ffff00ffff00ffff
00ffff00ff7f00fe7f00fe7f00fe3f00fc1f00f80f00f00700e0010080>} imagemask 
  }
  221 /Gdd MSTT31c1f8 AddChar
/Gde [29.0 0.0 3.0 0.0 27.0 23.0]
/Gde {
    24 23 true [1 0 0 -1 -3.0 23.0] {<0100800700e00f00f01f00f83f00fc7f00fe7f00fe7f00feff00ffff00ffff00ffff00ffff00ffff
00fff8001f78001e7c003e3e007c1f00f81f81f807c3e003e7c000ff00>} imagemask 
  }
  222 /Gde MSTT31c1f8 AddChar
/Gdf [32.0 0.0 3.0 0.0 30.0 23.0]
/Gdf {
    27 23 true [1 0 0 -1 -3.0 23.0] {<000e0000003c00000078000000f0000001e0000003c00000078000000f0000001e0000003c000000
7fffffe0ffffffe07fffffe03c0000001e0000000f0000000780000003c0000001e0000000f00000
00780000003c0000000e0000>} imagemask 
  }
  223 /Gdf MSTT31c1f8 AddChar
/Ge0 [32.0 0.0 2.0 0.0 29.0 23.0]
/Ge0 {
    27 23 true [1 0 0 -1 -2.0 23.0] {<000e0000000780000003c0000001e0000000f0000000780000003c0000001e0000000f0000000780
ffffffc0ffffffe0ffffffc00000078000000f0000001e0000003c00000078000000f0000001e000
0003c00000078000000e0000>} imagemask 
  }
  224 /Ge0 MSTT31c1f8 AddChar
/Ge1 [29.0 0.0 3.0 -3.0 26.0 24.0]
/Ge1 {
    23 27 true [1 0 0 -1 -3.0 24.0] {<001000003800007c0000fe0001ff0003ff8007bbc00f39e01e38f03c387878383c70381ce0380ec0
38068038020038000038000038000038000038000038000038000038000038000038000038000038
00>} imagemask 
  }
  225 /Ge1 MSTT31c1f8 AddChar
/Ge2 [29.0 0.0 4.0 0.0 27.0 27.0]
/Ge2 {
    23 27 true [1 0 0 -1 -4.0 27.0] {<003800003800003800003800003800003800003800003800003800003800003800003800803802c0
3806e0380e70381c78383c3c38781e38f00f39e007bbc003ff8001ff0000fe00007c000038000010
00>} imagemask 
  }
  226 /Ge2 MSTT31c1f8 AddChar
/Ge3 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge3 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<ffff80ffffc0fffff0f80000fc0000fe0000ef0000e78000e3c000e1e000e0f000e07800e03c00e0
1e00e00f00e00780e003c06001e02000e0000040>} imagemask 
  }
  227 /Ge3 MSTT31c1f8 AddChar
/Ge4 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge4 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<1ffff03ffff0fffff00001f00003f00007f0000f70001e70003c7000787000f07001e07003c07007
80700f00701e00703c0070780060700040200000>} imagemask 
  }
  228 /Ge4 MSTT31c1f8 AddChar
/Ge5 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge5 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<0000002000606000f0e001e0e003c0e00780e00f00e01e00e03c00e07800e0f000e1e000e3c000e7
8000ef0000fe0000fc0000ffffe0ffffc0ffff80>} imagemask 
  }
  229 /Ge5 MSTT31c1f8 AddChar
/Ge6 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge6 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<000000600040f000607800703c00701e00700f007007807003c07001e07000f070007870003c7000
1e70000f700007f00003f07ffff03ffff01ffff0>} imagemask 
  }
  230 /Ge6 MSTT31c1f8 AddChar
/Ge7 [35.0 0.0 3.0 0.0 32.0 24.0]
/Ge7 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<001fe000003fc000007f800000ff000001fe000003fc000007f800000ff000001fe000003ffffff8
7ffffff8fffffff8fffffff87ffffff83ffffff81fe000000ff0000007f8000003fc000001fe0000
00ff0000007f8000003fc000001fe000>} imagemask 
  }
  231 /Ge7 MSTT31c1f8 AddChar
/Ge8 [35.0 0.0 3.0 0.0 32.0 24.0]
/Ge8 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<003fc000001fe000000ff0000007f8000003fc000001fe000000ff0000007f8000003fc0ffffffe0
fffffff0fffffff8fffffff8fffffff0ffffffe000003fc000007f800000ff000001fe000003fc00
0007f800000ff000001fe000003fc000>} imagemask 
  }
  232 /Ge8 MSTT31c1f8 AddChar
/Ge9 [29.0 0.0 3.0 -5.0 27.0 24.0]
/Ge9 {
    24 29 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000ff0001ff8003ffc007ffe00ffff01ffff83ffffc7ffffeff7efffe7e7ffc
7e3ff87e1ff07e0fe07e07c07e03807e01007e00007e00007e00007e00007e00007e00007e00007e
00007e00007e00>} imagemask 
  }
  233 /Ge9 MSTT31c1f8 AddChar
/Gea [29.0 0.0 3.0 0.0 27.0 29.0]
/Gea {
    24 29 true [1 0 0 -1 -3.0 29.0] {<007e00007e00007e00007e00007e00007e00007e00007e00007e00007e00807e01c07e03e07e07f0
7e0ff87e1ffc7e3ffe7e7fff7eff7ffffe3ffffc1ffff80ffff007ffe003ffc001ff8000ff00007e
00003c00001800>} imagemask 
  }
  234 /Gea MSTT31c1f8 AddChar
/Geb [29.0 0.0 3.0 0.0 26.0 23.0]
/Geb {
    23 23 true [1 0 0 -1 -3.0 23.0] {<ffff80ffffc0ffffe0fffff0fffff8fffffcffc000ffe000fff000fff800fffc00fdfe00fcff00fc
7f80fc3fc0fc1fe0fc0ff07c07f83c03fc1c01fc0c00f8040070000020>} imagemask 
  }
  235 /Geb MSTT31c1f8 AddChar
/Gec [29.0 0.0 3.0 0.0 26.0 23.0]
/Gec {
    23 23 true [1 0 0 -1 -3.0 23.0] {<03fffe07fffe0ffffe1ffffe3ffffe7ffffe0007fe000ffe001ffe003ffe007ffe00ff7e01fe7e03
fc7e07f87e0ff07e1fe07e3fc07c7f80787f00703e00601c0040080000>} imagemask 
  }
  236 /Gec MSTT31c1f8 AddChar
/Ged [29.0 0.0 3.0 0.0 26.0 23.0]
/Ged {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0000000400300c00781c00fc3c01fe7c03fcfc07f8fc0ff0fc1fe0fc3fc0fc7f80fcff00fdfe00ff
fc00fff800fff000ffe000fffffcfffff8fffff0ffffe0ffffc0ffff80>} imagemask 
  }
  237 /Ged MSTT31c1f8 AddChar
/Gee [29.0 0.0 3.0 0.0 26.0 23.0]
/Gee {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0000001800403c00607e0070ff00787f807c3fc07e1fe07e0ff07e07f87e03fc7e01fe7e00ff7e00
7ffe003ffe001ffe000ffe7ffffe3ffffe1ffffe0ffffe07fffe03fffe>} imagemask 
  }
  238 /Gee MSTT31c1f8 AddChar
/Gef [29.0 0.0 3.0 2.0 27.0 24.0]
/Gef {
    24 22 true [1 0 0 -1 -3.0 24.0] {<00200000600000e00001e0000360000660000c7fff187fff300003600003c00003c0000360000330
0003187fff0c7fff06600003600001e00000e000006000002000>} imagemask 
  }
  239 /Gef MSTT31c1f8 AddChar
/Gf0 [29.0 0.0 2.0 2.0 26.0 24.0]
/Gf0 {
    24 22 true [1 0 0 -1 -2.0 24.0] {<000000000400000600000700000680000640fffe20fffe10c00008c00004c00002c00002c00004c0
0008fffe10fffe20000640000680000700000600000400000000>} imagemask 
  }
  240 /Gf0 MSTT31c1f8 AddChar
/Gf1 [27.0 0.0 3.0 0.0 25.0 24.0]
/Gf1 {
    22 24 true [1 0 0 -1 -3.0 24.0] {<00300000780000cc000186000303000601800c00c01800603000307f03f8ff03fc03030003030003
030003030003030003030003030003030003030003030003030003ff0003ff00>} imagemask 
  }
  241 /Gf1 MSTT31c1f8 AddChar
/Gf2 [27.0 0.0 1.0 0.0 23.0 24.0]
/Gf2 {
    22 24 true [1 0 0 -1 -1.0 24.0] {<03ff0003ff00030300030300030300030300030300030300030300030300030300030300030300ff
03fc7f03f83000301800600c00c006018003030001860000cc00007800003000>} imagemask 
  }
  242 /Gf2 MSTT31c1f8 AddChar
/Gf3 [35.0 0.0 3.0 2.0 33.0 22.0]
/Gf3 {
    30 20 true [1 0 0 -1 -3.0 22.0] {<002010000060180000e01c0001e01e0003601b00067ff9800c7ff8c0180000603000003060000018
6000001830000030180000600c7ff8c0067ff98003601b0001e01e0000e01c000060180000201000
>} imagemask 
  }
  243 /Gf3 MSTT31c1f8 AddChar
/Gf4 [27.0 0.0 3.0 -6.0 23.0 24.0]
/Gf4 {
    20 30 true [1 0 0 -1 -3.0 24.0] {<00000000600000f000019800030c000606000c03001801803000c07e07e0fe07f006060006060006
0600060600060600060600060600060600fe07f07e07e03000c01801800c0300060600030c000198
0000f000006000000000>} imagemask 
  }
  244 /Gf4 MSTT31c1f8 AddChar
/Gf5 [26.0 0.0 3.0 4.0 23.0 24.0]
/Gf5 {
    20 20 true [1 0 0 -1 -3.0 24.0] {<fffc00fff800c03000c06000c06000c03000c01800c00c00c00600d80300fc0180e600c0c3006081
803000c0600060c0003180001b00000e00000400>} imagemask 
  }
  245 /Gf5 MSTT31c1f8 AddChar
/Gf6 [26.0 0.0 3.0 4.0 23.0 24.0]
/Gf6 {
    20 20 true [1 0 0 -1 -3.0 24.0] {<03fff001fff000c03000603000603000c0300180300300300600300c01b01803f0300670600c30c0
181060300030600018c0000d8000070000020000>} imagemask 
  }
  246 /Gf6 MSTT31c1f8 AddChar
/Gf7 [26.0 0.0 3.0 0.0 24.0 20.0]
/Gf7 {
    21 20 true [1 0 0 -1 -3.0 20.0] {<000400000f000019800030c000606000c030818030c30060e600c0fc0180d80300c00600c00c00c0
1800c03000c06000c06000c03000fff800fffc00>} imagemask 
  }
  247 /Gf7 MSTT31c1f8 AddChar
/Gf8 [26.0 0.0 2.0 0.0 23.0 20.0]
/Gf8 {
    21 20 true [1 0 0 -1 -2.0 20.0] {<0100000780000cc000186000303000601800600c083006181803380c01f80600d803001801801800
c01800601800301800301800601800fff801fff8>} imagemask 
  }
  248 /Gf8 MSTT31c1f8 AddChar
/Gf9 [16.0 0.0 2.0 7.0 15.0 17.0]
/Gf9 {
    13 10 true [1 0 0 -1 -2.0 17.0] {<fff8fff8c018c018c018c018c018c018fff8fff8>} imagemask 
  }
  249 /Gf9 MSTT31c1f8 AddChar
/Gfa [13.0 0.0 2.0 7.0 12.0 17.0]
/Gfa {
    10 10 true [1 0 0 -1 -2.0 17.0] {<ffc0ffc0c0c0c0c0c0c0c0c0c0c0c0c0ffc0ffc0>} imagemask 
  }
  250 /Gfa MSTT31c1f8 AddChar
/Gfb [21.0 0.0 2.0 5.0 18.0 20.0]
/Gfb {
    16 15 true [1 0 0 -1 -2.0 20.0] {<000008001c1c1c3e1e7e1efc0ff007e007c007f00ff83e7ffe3e7c1c3800>} imagemask 
  }
  251 /Gfb MSTT31c1f8 AddChar
/Gfc [26.0 0.0 2.0 4.0 24.0 25.0]
/Gfc {
    22 21 true [1 0 0 -1 -2.0 25.0] {<0000040000180000300000600001c0000380000700000e00001e00001c00003800307000f8f00078
e0003dc0001fc0001f80000f80000f00000e0000040000>} imagemask 
  }
  252 /Gfc MSTT31c1f8 AddChar
/Gfd [29.0 0.0 3.0 0.0 27.0 24.0]
/Gfd {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e08007e1c1c7e1c3e7e1e7e7e1ef87e0ff07e07e07e07c07e0
7e07e0ff87e3e7e7e7e3e7e7c1c7e38007e00007e00007ffffffffffffffffff>} imagemask 
  }
  253 /Gfd MSTT31c1f8 AddChar
/Gfe [29.0 0.0 3.0 0.0 29.0 25.0]
/Gfe {
    26 25 true [1 0 0 -1 -3.0 25.0] {<000000c0ffffff80ffffff00ffffff00e0001f00e0003f00e0007700e000e700e001c700e0038700
e0078700e7070700ef8e0700e79e0700e3dc0700e1f80700e1f80700e0f00700e0e00700e0400700
e0000700e0000700ffffff00ffffff00ffffff00>} imagemask 
  }
  254 /Gfe MSTT31c1f8 AddChar
/Gff [34.0 0.0 1.0 0.0 32.0 25.0]
/Gff {
    31 25 true [1 0 0 -1 -1.0 25.0] {<00003fe00001fffca00ffffe0dbfc61e09be060e802b060e249f060e09bf060e802b060e241f060e
0dbf1fee8125fffe201fe61e0dbf060e8135060e200f060e0dbf060e01b7060e8007060e2dbf3ffe
09befffe8043fffe24bfe00e0dbf00020020000e>} imagemask 
  }
  255 /Gff MSTT31c1f8 AddChar
%%EndResource

32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1545 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1536 1637 (A mechanism for loading and executing programs \(such as operating systems\) from disks, tapes,) 1637 SB
600 1586 644 (network interfaces, and other devices.) 644 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1670 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1661 894 (An ISA-independent method for identifying devices ) 894 SB
1494 1661 19 (\223) 19 SB
1513 1661 183 (plugged-in) 183 SB
1696 1661 19 (\224) 19 SB
1715 1661 473 ( to expansion buses, and for) 473 SB
600 1711 1038 (providing firmware and diagnostics drivers for these devices.) 1038 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1795 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1786 1647 (An extensible and programmable command language based on the Forth programming language.) 1647 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1870 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1861 1366 (Methods for managing user-configurable options stored in non-volatile memory.) 1366 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1945 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1936 41 (A ) 41 SB
641 1936 19 (\223) 19 SB
660 1936 153 (call back) 153 SB
813 1936 19 (\224) 19 SB
832 1936 1282 ( interface allowing other programs to make use of Open Firmware services.) 1282 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 2020 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2011 1368 (Debugging tools for hardware, firmware, firmware drivers, and system software.) 1368 SB
300 2186 476 (Purpose of this Bus Binding) 476 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 2258 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2249 1580 (This document specifies the application of Open Firmware to the PC Card Bus, including PC) 1580 SB
600 2299 1562 (Card-specific requirements and practices for address format, interrupts, probing, and related) 1562 SB
600 2349 406 (properties and methods.) 406 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 2433 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2424 1471 (The core requirements and practices specified by the Open Firmware standard must be) 1471 SB
600 2474 1596 (augmented by system-specific requirements to form a complete specification for the firmware) 1596 SB
600 2524 1640 (for a particular system. This document establishes such additional requirements pertaining to PC) 1640 SB
600 2574 93 (Card.) 93 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font MSTT31c1f8
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 4 4
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2229 2997 21 (4) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 258 370 (Task Group Members) 370 SB
375 308 1729 (The following individuals were members of the Task Group that produced the first document version:) 1729 SB

%%BeginResource: font MSTT31c1f8
/GreNewFont{10 dict dup 3 1 roll def dup begin 6 1 roll/FontType 3
def/FontMatrix exch def/FontBBox exch def/FontInfo 2 dict def FontInfo
/UnderlinePosition 3 -1 roll put FontInfo/UnderlineThickness 3 -1
roll put/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
/CharProcs 256 dict def CharProcs/.notdef{}put/Metrics 256 dict def
Metrics/.notdef 3 -1 roll put/BuildChar{/char exch def/fontdict exch
def/charname fontdict/Encoding get char get def fontdict/Metrics get
charname get aload pop setcachedevice fontdict begin Encoding char
get CharProcs exch get end exec}def end definefont pop}def/AddChar{begin
Encoding 3 1 roll put CharProcs 3 1 roll put Metrics 3 1 roll put end}def
/MSTT31c1f8 [33.0 0 0 0 0 0] 60 -90 [-33.0 -33.0 33.0 33.0] [1 33 div 0 0 1 33 div 0 0] /MSTT31c1f8 GreNewFont
/G1e [17.0 0.0 2.0 0.0 14.0 24.0]
/G1e {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  30 /G1e MSTT31c1f8 AddChar
/G1f [17.0 0.0 2.0 0.0 14.0 24.0]
/G1f {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  31 /G1f MSTT31c1f8 AddChar
/G20 [33.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c1f8 AddChar
/G21 [34.0 0.0 1.0 -1.0 32.0 24.0]
/G21 {
    31 25 true [1 0 0 -1 -1.0 24.0] {<000000300000004c00000084000001020000070200000f86000017c8000027d00000dbe0000125c0
00024900000c92000013640000249800004920000192400003e48000049b00000966000008680000
10b0000020600000238000007c000000c0000000>} imagemask 
  }
  33 /G21 MSTT31c1f8 AddChar
/G22 [38.0 0.0 2.0 0.0 35.0 24.0]
/G22 {
    33 24 true [1 0 0 -1 -2.0 24.0] {<7800000000c600001f008300003f00810000fc00c10001f800710007e0001f000f800007803f0000
01e07c00000079f000000033e00000000d800000001a000000003ce000000031f8000000e07c0000
01e03f000006200fc000082003e000302001f8004060007e0080c0003f008300000f007c00000000
>} imagemask 
  }
  34 /G22 MSTT31c1f8 AddChar
/G23 [43.0 0.0 2.0 0.0 40.0 26.0]
/G23 {
    38 26 true [1 0 0 -1 -2.0 26.0] {<007800000000cc0000000084000000008200000000c200000000420000000066000000003c000000
001c000000000c0000000006000000000700000000078003e000000ffff0000ffffff8001f3fff80
1ffff8000078100000008010700000802038000080203c000060c01c00001f000e000000000e0000
00000700000000078000>} imagemask 
  }
  35 /G23 MSTT31c1f8 AddChar
/G24 [44.0 0.0 1.0 0.0 43.0 17.0]
/G24 {
    42 17 true [1 0 0 -1 -1.0 17.0] {<003c00000f000042000030800081000060400301000080400601000100400c010002004018000004
0000300000080000603c00180000c02200300000ffe3ffe000008022004000008022008000004042
008000004041010000003080c20000000f007c000000>} imagemask 
  }
  36 /G24 MSTT31c1f8 AddChar
/G25 [29.0 0.0 2.0 -1.0 27.0 24.0]
/G25 {
    25 25 true [1 0 0 -1 -2.0 24.0] {<001c0000003e000000c1800003006000020020000400100004001000080008000800080008000800
08000800080008000800080008000800100004001000040021ffc2003fc03e0067c0030087c00080
83800080c0000180600003001e003c0001ffc000>} imagemask 
  }
  37 /G25 MSTT31c1f8 AddChar
/G26 [40.0 0.0 3.0 0.0 38.0 26.0]
/G26 {
    35 26 true [1 0 0 -1 -3.0 26.0] {<01fc07f0000e03180e000800a002001800c00300e8004003e0a8004002a0a8004002a0a8004002a0
a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0
a8004002a0a8004002a0a9fc4ffaa0ae035006a0b000e002a0b0004001a0b07f5fc0a0bf80e03fa0
803e0fc020ffc1f03fe0>} imagemask 
  }
  38 /G26 MSTT31c1f8 AddChar
/G27 [15.0 0.0 3.0 -1.0 12.0 24.0]
/G27 {
    9 25 true [1 0 0 -1 -3.0 24.0] {<0800140016001200210041004100410062001c007f00c980c880bf80808080808080808080808080
808080808080c1803f00>} imagemask 
  }
  39 /G27 MSTT31c1f8 AddChar
/G28 [36.0 0.0 3.0 0.0 33.0 24.0]
/G28 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<007ff80007ffffc03ffffff07ffffff87f800ff8fe0003fcfce01dfc02e01e00fefffffcfefffdfc
7dfffef803c78f0003ffff0007c78f8007ffff800fc78fc00fffffc01fffffe01fffffe01fffffe0
1fffffe01fffffe01fffffe01fffffe0>} imagemask 
  }
  40 /G28 MSTT31c1f8 AddChar
/G29 [29.0 0.0 3.0 0.0 27.0 24.0]
/G29 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff000381c0047020086c18106e08206e04403602400702c0070380070180070180070180070180
0701800701c00703400702403602206e04106e08086c100468200381c000ff00>} imagemask 
  }
  41 /G29 MSTT31c1f8 AddChar
/G2a [37.0 0.0 3.0 0.0 35.0 24.0]
/G2a {
    32 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffc0000003a000000590000009880000118400002182000041810000818080010180400201
80200401801008018018180180242401804242018081810181000081820000418400002188000011
90000009a0000005c0000003ffffffff>} imagemask 
  }
  42 /G2a MSTT31c1f8 AddChar
/G2b [37.0 0.0 3.0 0.0 35.0 24.0]
/G2b {
    32 24 true [1 0 0 -1 -3.0 24.0] {<ffffffff800000018000000180000071800000718000007180000071800000718000000180000001
80000001803ff0018000000180000001800ffc0180000001800000018007fe018000000180000001
800000018000000180000001ffffffff>} imagemask 
  }
  43 /G2b MSTT31c1f8 AddChar
/G2c [39.0 0.0 3.0 0.0 36.0 24.0]
/G2c {
    33 24 true [1 0 0 -1 -3.0 24.0] {<000001f00000001e0c000001e00200001e00010001e00001000f8000008018600000802010000080
4008000080c00c00008080040006808004007e808f8407fe808f847ffe8080047e7e808004607e80
8004007e808004007c8080040040808004000f00800400f00080040f00008004f00000ffff000000
>} imagemask 
  }
  44 /G2c MSTT31c1f8 AddChar
/G2d [39.0 0.0 3.0 0.0 36.0 26.0]
/G2d {
    33 26 true [1 0 0 -1 -3.0 26.0] {<000003000000007f000000007ff00000007f0c000000ff0200000f7f010000f07f01000780780080
186070008020107000804008700080c008700080800470008080047000808f847000808f84700080
800470008080044000808004000080800400008080040000808004000f00800400f00080040f0000
8004f00000ffff000000>} imagemask 
  }
  45 /G2d MSTT31c1f8 AddChar
/G2e [48.0 0.0 3.0 0.0 45.0 26.0]
/G2e {
    42 26 true [1 0 0 -1 -3.0 26.0] {<0000000380000000007f80000000007ff8000000007f8600000000ff810000000f7f80800000707f
80800007c078004000083070004000100870004000200470004000601e7000400040e27000403e41
0270004041c10670004080623a700040803222700040800c42000040478642000040638342000040
3001c200004008004200078004002600780003001a07800001800a78000000ffff800000>} imagemask 
  }
  46 /G2e MSTT31c1f8 AddChar
/G2f [48.0 0.0 3.0 0.0 45.0 24.0]
/G2f {
    42 24 true [1 0 0 -1 -3.0 24.0] {<00000000f8000000000f0600000000f0010000000f0000800000700000800007e0000040000c3000
00400010080000400020040000400060060000400040020003403e4002003f4041c00203ff408060
023fff408030023f3f40800802203f40478402003f40638302003e403001820030400800c2000780
04002200780002001207800001800a78000000ffff800000>} imagemask 
  }
  47 /G2f MSTT31c1f8 AddChar
/G30 [36.0 0.0 3.0 0.0 34.0 24.0]
/G30 {
    31 24 true [1 0 0 -1 -3.0 24.0] {<07fe00000401000008010000fffffffe800000028000000280000002800000028000000280000002
80000002800000028000000280000002800000028000000280000002800000028000000280000002
800000028000000280000002fffffffe>} imagemask 
  }
  48 /G30 MSTT31c1f8 AddChar
/G31 [44.0 0.0 3.0 0.0 42.0 24.0]
/G31 {
    39 24 true [1 0 0 -1 -3.0 24.0] {<07fe00000004010000000801000000f801fffe00800000020080000002008000000200807ffffffe
80800000028080000004810000000481000000088200000008820000001084000000108800000020
880000002090000000409000000040a000000080a000000080c000000100c000000100fffffffe00
>} imagemask 
  }
  49 /G31 MSTT31c1f8 AddChar
/G32 [23.0 0.0 3.0 0.0 20.0 24.0]
/G32 {
    17 24 true [1 0 0 -1 -3.0 24.0] {<fff000803800802c009e26008023008021809e3f808000808000808000809ffc808000808000809f
fc808000808000809ffc808000808000809ffc80800080800080800080ffff80>} imagemask 
  }
  50 /G32 MSTT31c1f8 AddChar
/G33 [23.0 0.0 3.0 0.0 20.0 24.0]
/G33 {
    17 24 true [1 0 0 -1 -3.0 24.0] {<ffff808000808000809ffc808000808000809ffc808000808000808000809ffc808000808000809f
fc808000808000809ffc808000808000809ffc80800080800080800080ffff80>} imagemask 
  }
  51 /G33 MSTT31c1f8 AddChar
/G34 [29.0 0.0 3.0 -6.0 27.0 24.0]
/G34 {
    24 30 true [1 0 0 -1 -3.0 24.0] {<01ffff0100010100011ffff9100009100009ffffc98000498000499ffc498000498000498000499f
fc498000498000499ffc498000498000499ffc498000498000499ffc4980004f8000489ffc488000
78800040800040ffffc0>} imagemask 
  }
  52 /G34 MSTT31c1f8 AddChar
/G35 [18.0 0.0 3.0 0.0 17.0 23.0]
/G35 {
    14 23 true [1 0 0 -1 -3.0 23.0] {<fffc800480048f8488848f8480048204800480048004fffc800480048f8488848f84800483048004
80048004fffc>} imagemask 
  }
  53 /G35 MSTT31c1f8 AddChar
/G36 [20.0 0.0 3.0 -1.0 17.0 24.0]
/G36 {
    14 25 true [1 0 0 -1 -3.0 24.0] {<3ff0c01c8004e01c9fe48004800470282fd017a01b600fc006800cc0186010202010400880048784
9fe4bff4ffe460181fe0>} imagemask 
  }
  54 /G36 MSTT31c1f8 AddChar
/G37 [35.0 0.0 3.0 0.0 33.0 24.0]
/G37 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<00001000000030000000300001f0e00003ffc000070f80000e0000000c0000000c0000007ffffff8
80000004800000048cccccc48cccccc483333304833333048cccccc48cccccc48000000480fffc04
80fffc0480000004800000047ffffff8>} imagemask 
  }
  55 /G37 MSTT31c1f8 AddChar
/G38 [31.0 0.0 1.0 -1.0 28.0 27.0]
/G38 {
    27 28 true [1 0 0 -1 -1.0 27.0] {<0001f0000007f800000f0800000c040000180400001804000030ffc0003104200071042080610420
c0e10420c0c1ffe061c100203f8100201e0100200001002000010020000100200001002000010020
00010020000100200001002000010020000080400000c0c00000618000001e00>} imagemask 
  }
  56 /G38 MSTT31c1f8 AddChar
/G39 [36.0 0.0 1.0 0.0 32.0 20.0]
/G39 {
    31 20 true [1 0 0 -1 -1.0 20.0] {<3c000000fe000000c7000f8003003060030040100300a01803014714030158d40302974a0302afaa
0303afae03022fa203062fa2038e174201fe18c200f207020002000200020002000200020003fffe
>} imagemask 
  }
  57 /G39 MSTT31c1f8 AddChar
/G3a [31.0 0.0 3.0 0.0 29.0 24.0]
/G3a {
    26 24 true [1 0 0 -1 -3.0 24.0] {<1fffff001000010017fffd0014000500140005001400050014000500140005001400050014000500
14000500140005001400050017fffd00100001001fffff001fffff00200000804d89cc80437630c0
8dcdcc408000004080000040ffffffc0>} imagemask 
  }
  58 /G3a MSTT31c1f8 AddChar
/G3b [29.0 0.0 3.0 0.0 26.0 11.0]
/G3b {
    23 11 true [1 0 0 -1 -3.0 11.0] {<fffffe8000028000028000029ffff28000029ffff28000028c0002800002fffffe>} imagemask 
  }
  59 /G3b MSTT31c1f8 AddChar
/G3c [29.0 0.0 3.0 0.0 27.0 24.0]
/G3c {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffff8800118800118800118800118800118800118800118800118800118800118ffff180000180
000180000183ffc1820fc1820fc1820fc1820fc1820fc1420fc1220fc11fffff>} imagemask 
  }
  60 /G3c MSTT31c1f8 AddChar
/G3d [29.0 0.0 3.0 0.0 27.0 24.0]
/G3d {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffc0003fc0003fc0003fc0003cc0003cffffffffffffffc3ffff81ffff81ffff81ffff
81ffffc3ffffffffffffffffe7ffffe7ffffe7ffffe7ffffe7ffffffffffffff>} imagemask 
  }
  61 /G3d MSTT31c1f8 AddChar
/G3e [29.0 0.0 3.0 0.0 26.0 25.0]
/G3e {
    23 25 true [1 0 0 -1 -3.0 25.0] {<00fe0003838004004008382010381020380860380c40380440000480000280300280780280780283
79028733c28f87e24f03e44400c460000c20000810001008002004004003838000fe00>} imagemask 
  }
  62 /G3e MSTT31c1f8 AddChar
/G3f [30.0 0.0 1.0 0.0 29.0 18.0]
/G3f {
    28 18 true [1 0 0 -1 -1.0 18.0] {<0000003000000070000001c000300700004fdc00008038000110e000013f900002470800025e0400
04f2020007ee010003f00100040001001c0001003bf0030060af3e0080f9e600>} imagemask 
  }
  63 /G3f MSTT31c1f8 AddChar
/G40 [30.0 0.0 1.0 0.0 29.0 18.0]
/G40 {
    28 18 true [1 0 0 -1 -1.0 18.0] {<c0000000e0000000380000000e00c00003bf200001c0100000708800009fc800010e24000207a400
0404f40008077e000800fc0008000200080003800c00fdc007cf50600679f010>} imagemask 
  }
  64 /G40 MSTT31c1f8 AddChar
/G41 [19.0 0.0 3.0 0.0 17.0 26.0]
/G41 {
    14 26 true [1 0 0 -1 -3.0 26.0] {<1c00140c1214122412240a28094809480948099008103f902c502630e7b094909290ca10ce10b010
402040202040204020401f80>} imagemask 
  }
  65 /G41 MSTT31c1f8 AddChar
/G42 [26.0 0.0 3.0 -1.0 25.0 26.0]
/G42 {
    22 27 true [1 0 0 -1 -3.0 26.0] {<020000050000050c00e4940094a400ce640046240031240008d4000434000ffc00100c0020060043
02004c81004840805040807ec04021002060001018001007c0080020040018040007880000500000
20>} imagemask 
  }
  66 /G42 MSTT31c1f8 AddChar
/G43 [22.0 0.0 3.0 4.0 20.0 25.0]
/G43 {
    17 21 true [1 0 0 -1 -3.0 25.0] {<0200000e00000900000900000880000440000460000220000210003e08004007008e008091008043
00807c80804180803e40802187001e480008f00007e000>} imagemask 
  }
  67 /G43 MSTT31c1f8 AddChar
/G44 [22.0 0.0 2.0 -1.0 19.0 20.0]
/G44 {
    17 21 true [1 0 0 -1 -2.0 20.0] {<03f0000588000b3c0070c200813e0080c100809f00806100804080803c80700100083e0004200002
2000031000011000008800004800004800005800002000>} imagemask 
  }
  68 /G44 MSTT31c1f8 AddChar
/G45 [31.0 0.0 3.0 7.0 30.0 20.0]
/G45 {
    27 13 true [1 0 0 -1 -3.0 20.0] {<000fc0007ff03800802007c08047c0207ff9c020003e402000206020001fa020001030200010e1c0
000f920000047c000003f800>} imagemask 
  }
  69 /G45 MSTT31c1f8 AddChar
/G46 [31.0 0.0 1.0 7.0 28.0 20.0]
/G46 {
    27 13 true [1 0 0 -1 -1.0 20.0] {<007e00000381ffc07c008020807c402080b3ffc0804f800080c0800080bf00008181000070e10000
093e000006c4000003f80000>} imagemask 
  }
  70 /G46 MSTT31c1f8 AddChar
/G47 [18.0 0.0 3.0 -2.0 16.0 25.0]
/G47 {
    13 27 true [1 0 0 -1 -3.0 25.0] {<00600090009000900090009000900090009000d003b01d9025886548a548a4c8b4c8d348de90e810
c010402020201020102010200fc0>} imagemask 
  }
  71 /G47 MSTT31c1f8 AddChar
/G48 [18.0 0.0 2.0 0.0 15.0 27.0]
/G48 {
    13 27 true [1 0 0 -1 -2.0 27.0] {<1f8020402040204020202010401840b883d89e589a689928a52895308d204dc06e00580048004800
4800480048004800480048003000>} imagemask 
  }
  72 /G48 MSTT31c1f8 AddChar
/G49 [29.0 0.0 3.0 0.0 27.0 26.0]
/G49 {
    24 26 true [1 0 0 -1 -3.0 26.0] {<0030000e48000b48e00949a0094920e5c920a4ca4094ca404cca404acc80264c8026408013008e10
01110800a20801c408020808041008002008004004008004030002060001040001040000f800>} imagemask 
  }
  73 /G49 MSTT31c1f8 AddChar
/G4a [28.0 0.0 1.0 -1.0 26.0 24.0]
/G4a {
    25 25 true [1 0 0 -1 -1.0 24.0] {<007f000003ffe0000780f0000e0038001c001c0038000e00700007006080830061c1c300c1c1c180
c0808180c0000180c0000180c4001180c6003180c20021806300630061c1c30070ff8700383e0e00
1c001c000e0038000780f00003ffe000007f0000>} imagemask 
  }
  74 /G4a MSTT31c1f8 AddChar
/G4b [28.0 0.0 1.0 -1.0 27.0 24.0]
/G4b {
    26 25 true [1 0 0 -1 -1.0 24.0] {<007f800001ffe00007c0f8000e001c001c000e0038000700300003006080418061c0e180c1c0e0c0
c08040c0c00000c0c00000c0c00000c0c00000c0c3fff0c063fff180600001803000030038000700
1c000e000e001c0007c0f80001ffe000007f8000>} imagemask 
  }
  75 /G4b MSTT31c1f8 AddChar
/G4c [28.0 0.0 1.0 -1.0 26.0 24.0]
/G4c {
    25 25 true [1 0 0 -1 -1.0 24.0] {<007f000003ffe0000780f0000e0038001c001c0038000e00700007006080830061c1c300c1c1c180
c0808180c0000180c03e0180c0ff8180c1c1c180c300618062002300660033007400170038000e00
1c001c000e0038000780f00003ffe000007f0000>} imagemask 
  }
  76 /G4c MSTT31c1f8 AddChar
/G4d [37.0 0.0 3.0 -1.0 36.0 24.0]
/G4d {
    33 25 true [1 0 0 -1 -3.0 24.0] {<0000084200003c084400007f04480000e382500000c1c1100000c060010003f038c60003f01fc000
03f00788000ffc0124001fff0123003fff0120807fff8110007fffc21000ffffc20000ffffc00000
ffffc00000ffffc00000ffffc000007fff8000007fff8000003fff0000001ffe0000000ffc000000
03f0000000>} imagemask 
  }
  77 /G4d MSTT31c1f8 AddChar
/G4e [22.0 0.0 3.0 -1.0 19.0 24.0]
/G4e {
    16 25 true [1 0 0 -1 -3.0 24.0] {<03e00ff80ff81ffc1ffc1ffc188c188808880f780f7003e003e001c060837007780fcf3b03c001c0
07703c1cf80ff00f3004>} imagemask 
  }
  78 /G4e MSTT31c1f8 AddChar
/G4f [28.0 0.0 3.0 -3.0 26.0 26.0]
/G4f {
    23 29 true [1 0 0 -1 -3.0 26.0] {<c00000c00000c3f000cc1800f00c00c00400c00400c00400c00402c0041ec007e2c00402c00402c0
0402c00402c3f402cc2c02f02402c02c02c03802c02002c02002c0180cc007f0c00000c00000c000
00c00000c00000>} imagemask 
  }
  79 /G4f MSTT31c1f8 AddChar
/G50 [36.0 0.0 3.0 0.0 34.0 27.0]
/G50 {
    31 27 true [1 0 0 -1 -3.0 27.0] {<800000008000000080000000c7e00000dff80000fc1c0000e00c0000400400004004000040040000
60080000600c000063ef00006ffbe00e7c98fff830901ff020a000e020c0038030803f0030fff800
303fc000300000003000000010000000180000001800000018000000>} imagemask 
  }
  80 /G50 MSTT31c1f8 AddChar
/G51 [29.0 0.0 3.0 0.0 27.0 23.0]
/G51 {
    24 23 true [1 0 0 -1 -3.0 23.0] {<006000007000003800003800003c00001e00001e00000f00c00f806007807ffffc3fffff67fffc60
0780c00f80000f00001e00001e00003c00003800003800007000006000>} imagemask 
  }
  81 /G51 MSTT31c1f8 AddChar
/G52 [29.0 0.0 4.0 1.0 26.0 24.0]
/G52 {
    22 23 true [1 0 0 -1 -4.0 24.0] {<0000000030000030000c78c00f7bc00f87c00e01c004008008004070003870003830003010002010
00401000201800603c00f03e01f003030001fe0001ce00018600010200>} imagemask 
  }
  82 /G52 MSTT31c1f8 AddChar
/G53 [21.0 0.0 3.0 0.0 19.0 24.0]
/G53 {
    16 24 true [1 0 0 -1 -3.0 24.0] {<0000010001800180018003c003c007e00ff01ff83ffc3ffc7ffe7ffeffffffffffffffffffff7ffe
7ffe3ffc1ff807e0>} imagemask 
  }
  83 /G53 MSTT31c1f8 AddChar
/G54 [27.0 0.0 3.0 0.0 24.0 24.0]
/G54 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<00200000200003260001fc00087080082080c820983820e01c21c0762370c1ac18007000007000c1
ac187623701c21c03820e0c8209808208008708001fc00032600002000002000>} imagemask 
  }
  84 /G54 MSTT31c1f8 AddChar
/G55 [25.0 0.0 3.0 0.0 21.0 24.0]
/G55 {
    18 24 true [1 0 0 -1 -3.0 24.0] {<03f00003f000033000033000033000033000033000ff3fc0ff3fc0c000c0c000c0ff3fc0ff3fc003
300003300003300003300003300003300003300003300003300003f00003f000>} imagemask 
  }
  85 /G55 MSTT31c1f8 AddChar
/G56 [25.0 0.0 3.0 0.0 23.0 23.0]
/G56 {
    20 23 true [1 0 0 -1 -3.0 23.0] {<03f80003fc00031c00031c00031c00ff1fe0ff1ff0c00070c00070c00070ff1ff0ff1ff0031ff003
1c00031c00031c00031c00031c00031c00031c0003fc0003fc0001fc00>} imagemask 
  }
  86 /G56 MSTT31c1f8 AddChar
/G57 [24.0 0.0 3.0 0.0 22.0 24.0]
/G57 {
    19 24 true [1 0 0 -1 -3.0 24.0] {<00e00000e00000e00003f8000ffe000eee001ce700184300feefe0ffffe0feefe01843001ce7000e
ee0007fc0003f80000e00000e00000e00000e00000e00000e00000e00000e000>} imagemask 
  }
  87 /G57 MSTT31c1f8 AddChar
/G58 [23.0 0.0 3.0 3.0 21.0 22.0]
/G58 {
    18 19 true [1 0 0 -1 -3.0 22.0] {<1ffe0007f80003f00081e04081e040c0c0c0e0c1c0f0c3c0fedfc0ffffc0fedfc0f0c3c0e0c1c0c0
c0c081e04081e04003f00007f8001ffe00>} imagemask 
  }
  88 /G58 MSTT31c1f8 AddChar
/G59 [26.0 0.0 3.0 0.0 24.0 24.0]
/G59 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<00200000200000700000d80000d800018c00fffff87ffff06306303603601c01c01c01c01c01c01c
01c03603606306307ffff0fffff8018c0000d80000d800007000002000002000>} imagemask 
  }
  89 /G59 MSTT31c1f8 AddChar
/G5a [29.0 0.0 3.0 0.0 27.0 24.0]
/G5a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00fe0003ff8007f0600f80001f00003e00007c0000780000f80010f00010f00030f001fef00078f0
0078f0004cf800807800007c00003e00001f00000f800007f02003ffc000fe00>} imagemask 
  }
  90 /G5a MSTT31c1f8 AddChar
/G5b [29.0 0.0 3.0 0.0 27.0 23.0]
/G5b {
    24 23 true [1 0 0 -1 -3.0 23.0] {<00ff000381c004002018001830000c2000044f80025fc002bfe001ffe001f8f0e1f8f0e1f8f0e1ff
f001fff8037ffc067ffe0e3ffffc3ffffc1ffff807ffe003ffc000ff00>} imagemask 
  }
  91 /G5b MSTT31c1f8 AddChar
/G5c [30.0 0.0 3.0 -1.0 27.0 24.0]
/G5c {
    24 25 true [1 0 0 -1 -3.0 24.0] {<000c00001e0000040000c380007f80003f000f1e001fc03c0fc07e0820fe002087002703006f8181
ff8181dc81818881400c814004836006c63006fe380efc1e1e780ffc0007fc0001f000>} imagemask 
  }
  92 /G5c MSTT31c1f8 AddChar
/G5d [29.0 0.0 3.0 0.0 28.0 25.0]
/G5d {
    25 25 true [1 0 0 -1 -3.0 25.0] {<001c0000001c0000003e00001cff9c001dffdc001fddfc00071c70000f9cf8001ddddc003cff9e00
38630e00ffc1ff80ffc1ff80ffc1ff8038630e001cff9c001ddddc000f9cf800071c70001fddfc00
1dffdc001cff9c00003e0000001c0000001c0000>} imagemask 
  }
  93 /G5d MSTT31c1f8 AddChar
/G5e [38.0 0.0 3.0 -6.0 36.0 25.0]
/G5e {
    33 31 true [1 0 0 -1 -3.0 25.0] {<0f000078003fc001fe007fe0038f0078f0070700f070060380e0380e0380e0380c0380e01c1c0380
e01c180380e00c180380700e380700700e3007003006300600000630000000077000000007700000
00036000000003600000000360000000036000000003e000000003e000000001c000000001c00000
0001c000000001c000000001c000000001c000000001c000000001c000000001c00000>} imagemask 
  }
  94 /G5e MSTT31c1f8 AddChar
/G5f [35.0 0.0 3.0 -7.0 32.0 24.0]
/G5f {
    29 31 true [1 0 0 -1 -3.0 24.0] {<e0000038f80000f8380000e01c0001c00e0003800e000380070007000780070003800e0001c01c00
00f07800007ff00000fff80001f03c0003c01e000300070006000300060003000c0001800c000180
0c0001800c0001800c0001800c00018006000300060003000300060001c01c0000f07800007ff000
001fc000>} imagemask 
  }
  95 /G5f MSTT31c1f8 AddChar
/G60 [32.0 0.0 3.0 -1.0 29.0 25.0]
/G60 {
    26 26 true [1 0 0 -1 -3.0 25.0] {<e00001c0ffffffc01ffffe0003807000038070000380700003807000038070000380700003807000
03807000038070000380700003807000038070000380700003807000038070000380700003807000
0380700003807000038070000ffffc00ffffffc0f00003c0>} imagemask 
  }
  96 /G60 MSTT31c1f8 AddChar
/G61 [36.0 0.0 3.0 0.0 33.0 24.0]
/G61 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<001ff80001ffff8007ffffe01fc007f83f80007c70c0000c60600000c0300000c0300000c03003c0
c0300ff060701c3870e038183fc0300c0f00300c0000300c0000300c00001818c0000c38f80007f0
7f800fe01fffff8007fffe00007fe000>} imagemask 
  }
  97 /G61 MSTT31c1f8 AddChar
/G62 [31.0 0.0 3.0 -7.0 29.0 26.0]
/G62 {
    26 33 true [1 0 0 -1 -3.0 26.0] {<000fc000007ff00000f07c0001e01c0001c00e0003800e0003800700038007000380070003800700
0180070001c0070000c00f000fe00e003fe00e0070701c0060301c00c0103c00c0183800c0187800
c0187000c01870006030e0007070e0003fe0e0000f81c0000001c0000001c0000001c0000001c080
0000e3c000007f8000003e00>} imagemask 
  }
  98 /G62 MSTT31c1f8 AddChar
/G63 [31.0 0.0 3.0 -6.0 28.0 25.0]
/G63 {
    25 31 true [1 0 0 -1 -3.0 25.0] {<e1c3800071e3c00073e7c0003a74e0003e7ce0003c78e0003c78ee003c78ee003870ef003870ff00
3870f3003870f3803870e3803870e3803870e3803870e3803870e3803870e3803870e7003870e700
3870e6003870ee003870ec003870fc003870f8000000f0000003e000000f7000000c700000003000
00001800>} imagemask 
  }
  99 /G63 MSTT31c1f8 AddChar
/G64 [31.0 0.0 3.0 2.0 29.0 24.0]
/G64 {
    26 22 true [1 0 0 -1 -3.0 24.0] {<003f000000ffc00003fff00007c0f800078078000f003c000e001c000e001c000e001c000e001c00
0700380003807000ffc0ffc0ffc0ffc0ffc0ffc000000000000000000000000000000000ffffffc0
ffffffc0ffffffc0>} imagemask 
  }
  100 /G64 MSTT31c1f8 AddChar
/G65 [34.0 0.0 3.0 -6.0 31.0 25.0]
/G65 {
    28 31 true [1 0 0 -1 -3.0 25.0] {<e1c3800071e3c00073e7c0003a74e0003e7ce0003c78e0003c78e0003c78e0003870e0003870e000
3870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e000
3870e0003870e0003870e0003870e0003870e000000070000000784000003fe000001ff000000060
00000040>} imagemask 
  }
  101 /G65 MSTT31c1f8 AddChar
/G66 [31.0 0.0 3.0 -1.0 28.0 24.0]
/G66 {
    25 25 true [1 0 0 -1 -3.0 24.0] {<000e0000001ffc00000ffe0000001f0000001f0000003f00000073000000e3000001c30000038300
180703801c0e03800e1c03800738010003f0000001e0000001e0000003f00000073800000e1c0000
1c0e00003806000070000000e000000040000000>} imagemask 
  }
  102 /G66 MSTT31c1f8 AddChar
/G67 [36.0 0.0 3.0 -5.0 33.0 24.0]
/G67 {
    30 29 true [1 0 0 -1 -3.0 24.0] {<00020000f00f0000f81f00003c1b00001c3380000e7380000e6180000661800007c1800007c18000
07c1800007c1c0000381c3e00380c7f00380ce380380d81c0380f80c0000f00c0000700c0000700c
000078180000fc380000cff00000c3e00001c0000001800000078000003f0000003e0000>} imagemask 
  }
  103 /G67 MSTT31c1f8 AddChar
/G68 [35.0 0.0 3.0 2.0 32.0 22.0]
/G68 {
    29 20 true [1 0 0 -1 -3.0 22.0] {<008040400181c0e007c3e1e00ecf67b03c7c6e3070783c30e0603018000020000000000000000000
0000000000000000000040000180c06003c3c1e00fc763e01cde6f3078787c30e070381840202010
>} imagemask 
  }
  104 /G68 MSTT31c1f8 AddChar
/G69 [26.0 0.0 3.0 -1.0 23.0 24.0]
/G69 {
    20 25 true [1 0 0 -1 -3.0 24.0] {<e000707000e03801c01801801c03800c03000e07000e0700070e00070e00070e00fffff0fffff007
0e00070e00070e000606000e07000e07000c03001c03801801803000c07000e0e00070>} imagemask 
  }
  105 /G69 MSTT31c1f8 AddChar
/G6a [35.0 0.0 3.0 -3.0 36.0 19.0]
/G6a {
    33 22 true [1 0 0 -1 -3.0 19.0] {<000000008000f000018003f8000380063cf801801c1dff0100181fffc100301e0ffe00701807f800
70300f0000e0600f0000e1c00e0000fe001e0000e0003e0000e0007e0000f000dc000070011c0000
7c0e1c00003ff81c00000fe03c0000000038000000003800000000200000>} imagemask 
  }
  106 /G6a MSTT31c1f8 AddChar
/G6b [42.0 0.0 2.0 -5.0 41.0 25.0]
/G6b {
    39 30 true [1 0 0 -1 -2.0 25.0] {<001f00000000238000000061c0001800c1c0001c01c1c0001c01c1c0000c01c380000c01c3800008
01ee00003800fc1fffe000e07fffc007e1fffe000cf3c0c0003873018000307c0180006038030000
e03c060018e01c04001ce01e08001ee00e30001ef00f60000e780780000e7c0fc0000e3ff9e0000c
0fe0f0001c00007c001800003e003000001fc0e0000007ffc0000000fe00>} imagemask 
  }
  107 /G6b MSTT31c1f8 AddChar
/G6c [25.0 0.0 3.0 2.0 22.0 21.0]
/G6c {
    19 19 true [1 0 0 -1 -3.0 21.0] {<03f0000ffe001fff003fff807fffc07fffc07fffe0ffffe0ffffe0ffffe0ffffe0ffffe07fffe07f
ffc07fffc03fff801fff000ffe0001f000>} imagemask 
  }
  108 /G6c MSTT31c1f8 AddChar
/G6d [31.0 0.0 3.0 0.0 29.0 24.0]
/G6d {
    26 24 true [1 0 0 -1 -3.0 24.0] {<00fc000003ff80000f81e0001e00780038001c0030000e0070000f0060000780e0000780c00003c0
c00003c0c00003c0c00003c0c00003c0e00007c0600007c060000f8030000f8018001f000e007f00
0781fe0001fffc00007ff000000fc000>} imagemask 
  }
  109 /G6d MSTT31c1f8 AddChar
/G6e [25.0 0.0 3.0 2.0 22.0 21.0]
/G6e {
    19 19 true [1 0 0 -1 -3.0 21.0] {<ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ff
ffe0ffffe0ffffe0ffffe0ffffe0ffffe0>} imagemask 
  }
  110 /G6e MSTT31c1f8 AddChar
/G6f [29.0 0.0 3.0 0.0 27.0 24.0]
/G6f {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007e00007e00007e00007ffffffffffffffffff>} imagemask 
  }
  111 /G6f MSTT31c1f8 AddChar
/G70 [29.0 0.0 3.0 0.0 27.0 24.0]
/G70 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<fffffffffffffffffffffffffffffff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0
000ff0000ff0000ff0000ff0000ff0000fffffffffffffffffffffffffffffff>} imagemask 
  }
  112 /G70 MSTT31c1f8 AddChar
/G71 [29.0 0.0 3.0 0.0 27.0 24.0]
/G71 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<fffffcfffffcc0000ec0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0
000fc0000fc0000fc0000fc0000fc0000fffffffffffff7fffff3fffff1fffff>} imagemask 
  }
  113 /G71 MSTT31c1f8 AddChar
/G72 [29.0 0.0 3.0 0.0 27.0 24.0]
/G72 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<1fffff3fffff7fffffffffffffffffc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0
000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000efffffcfffffc>} imagemask 
  }
  114 /G72 MSTT31c1f8 AddChar
/G73 [15.0 0.0 3.0 5.0 13.0 19.0]
/G73 {
    10 14 true [1 0 0 -1 -3.0 19.0] {<00000c001e003f003f007f80ffc0ffc07f803f003f001e000c000000>} imagemask 
  }
  115 /G73 MSTT31c1f8 AddChar
/G74 [25.0 0.0 3.0 -2.0 22.0 25.0]
/G74 {
    19 27 true [1 0 0 -1 -3.0 25.0] {<00400000e00000e00001f00003f80003f80007fc000ffe000ffe001fff003fff807fffc07fffc0ff
ffe07fffc07fffc03fff801fff000ffe000ffe0007fc0003f80003f80001f00000e00000e0000040
00>} imagemask 
  }
  116 /G74 MSTT31c1f8 AddChar
/G75 [33.0 0.0 3.0 -2.0 30.0 25.0]
/G75 {
    27 27 true [1 0 0 -1 -3.0 25.0] {<00040000000e0000001f0000003f8000007fc00000ffe00001fff00003fff80007fffc000ffffe00
1fffff003fffff807fffffc0ffffffe07fffffc03fffff801fffff000ffffe0007fffc0003fff800
01fff00000ffe000007fc000003f8000001f0000000e000000040000>} imagemask 
  }
  117 /G75 MSTT31c1f8 AddChar
/G76 [29.0 0.0 3.0 0.0 27.0 24.0]
/G76 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000ff0001ff8000ff00007e00083c101c18383e007c7f00feff81ffff81ff7f
00fe3e007c1c1838083c10007e0000ff0001ff8000ff00007e00003c00001800>} imagemask 
  }
  118 /G76 MSTT31c1f8 AddChar
/G77 [19.0 0.0 3.0 5.0 16.0 19.0]
/G77 {
    13 14 true [1 0 0 -1 -3.0 19.0] {<020007000f801fc03fe07ff0fff8fff87ff03fe01fc00f8007000200>} imagemask 
  }
  119 /G77 MSTT31c1f8 AddChar
/G78 [35.0 0.0 3.0 0.0 32.0 24.0]
/G78 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fffffff8fffffff8fffffff8e0000038e0000038e0c01838e0e03838e0707038e038e038e01dc038
e00f8038e0070038e00f8038e01dc038e038e038e0707038e0e03838e1c01c38e0c00838e0000038
e0000038fffffff8fffffff8fffffff8>} imagemask 
  }
  120 /G78 MSTT31c1f8 AddChar
/G79 [35.0 0.0 3.0 0.0 32.0 24.0]
/G79 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fffffff8fffffff8fffffff8e0000038e0000038e0020038e0070038e00f8038e01dc038e038e038
e0707038e0e03838e1c01c38e3800e38e7000738e6000338e0000038e0000038e0000038e0000038
e0000038fffffff8fffffff8fffffff8>} imagemask 
  }
  121 /G79 MSTT31c1f8 AddChar
/G7a [29.0 0.0 3.0 0.0 27.0 24.0]
/G7a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<1e00787f81fe7f81fef3c3cfe1c387e1c387f1c38f7ffffe7ffffe1ffff801c38001c38001c38001
c3801ffff87ffffe7ffffef1c38fe1c387e1c387f3c3cf7f81fe7f81fe1e0078>} imagemask 
  }
  122 /G7a MSTT31c1f8 AddChar
/G7b [29.0 0.0 3.0 1.0 26.0 23.0]
/G7b {
    23 22 true [1 0 0 -1 -3.0 23.0] {<01c7000339800200801e00f032009821010820820820100860780c404c0480b60280b402c2cc863c
7c781000102000082010083010181c107002108001298001e700>} imagemask 
  }
  123 /G7b MSTT31c1f8 AddChar
/G7c [29.0 0.0 3.0 1.0 27.0 24.0]
/G7c {
    24 23 true [1 0 0 -1 -3.0 24.0] {<00e38001ffc001ffc001ffc01dfff83ffffc3ffffc3ffffc3ff7fc7fddfeff3efffff7ffffffff7f
bdfe0fddf01ffff83ffffc3ffffc3ffffc0ff7f803f7c001f7c000e380>} imagemask 
  }
  124 /G7c MSTT31c1f8 AddChar
/G7d [18.0 0.0 1.0 14.0 16.0 25.0]
/G7d {
    15 11 true [1 0 0 -1 -1.0 25.0] {<1c0e3c1e7038e070e070fc7efc7efc7efc7efc7efc7e>} imagemask 
  }
  125 /G7d MSTT31c1f8 AddChar
/G7e [18.0 0.0 1.0 14.0 16.0 25.0]
/G7e {
    15 11 true [1 0 0 -1 -1.0 25.0] {<fc7efc7efc7efc7efc7efc7e1c0e1c0e381cf078e070>} imagemask 
  }
  126 /G7e MSTT31c1f8 AddChar
/G7f [17.0 0.0 2.0 0.0 14.0 24.0]
/G7f {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  127 /G7f MSTT31c1f8 AddChar
/G80 [29.0 0.0 3.0 0.0 27.0 24.0]
/G80 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c18307e0c70e70e60c306e18187c18183c18183c18183c18183c1
8183c18183e1818760c30670e70e307e0c183c180e00700781e003ffc000ff00>} imagemask 
  }
  128 /G80 MSTT31c1f8 AddChar
/G81 [29.0 0.0 3.0 0.0 27.0 24.0]
/G81 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018300c0c703c0e600c06e00c07c00c03c00c03c00c03c00c03c0
0c03c00c03e00c07600c06700c0e300c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  129 /G81 MSTT31c1f8 AddChar
/G82 [29.0 0.0 3.0 0.0 27.0 24.0]
/G82 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078187c1830fe0c70870e600306e00307c00303c00603c00603c00c03c0
1803c03003e0600760e00670ff0e30ff0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  130 /G82 MSTT31c1f8 AddChar
/G83 [29.0 0.0 3.0 0.0 27.0 24.0]
/G83 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078187e1830ff0c70838e600186e00187c00303c03c03c03e03c00703c0
0183c00183e0018760018670830e30ff0c187c180e00700781e003ffc000ff00>} imagemask 
  }
  131 /G83 MSTT31c1f8 AddChar
/G84 [29.0 0.0 3.0 0.0 27.0 24.0]
/G84 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018300c0c701c0e603c06e03c07c06c03c0cc03c0cc03c18c03c3
ff03c3ff03e00c07600c06700c0e300c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  132 /G84 MSTT31c1f8 AddChar
/G85 [29.0 0.0 3.0 0.0 27.0 24.0]
/G85 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018307f8c70600e606006e06007c07803c07e03c00603c00303c0
0303c00303e00307600706707e0e307c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  133 /G85 MSTT31c1f8 AddChar
/G86 [29.0 0.0 3.0 0.0 27.0 24.0]
/G86 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078181e18307f0c70e10e60c006e1c007c18003c19e03c1bf03c1e383c1
c183c18183e1818760c18670e30e307f0c183c180e00700781e003ffc000ff00>} imagemask 
  }
  134 /G86 MSTT31c1f8 AddChar
/G87 [29.0 0.0 3.0 0.0 27.0 24.0]
/G87 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e007818001830ff8c70ff8e600186e00307c00203c00603c00403c00c03c0
1803c01803e0300760300670300e30600c1860180e00700781e003ffc000ff00>} imagemask 
  }
  135 /G87 MSTT31c1f8 AddChar
/G88 [29.0 0.0 3.0 0.0 27.0 24.0]
/G88 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c18307e0c70e70e60c306e0c307c0e203c07603c03c03c0ee03c0
c703c18383e1818761818671c38e30ff0c187c180e00700781e003ffc000ff00>} imagemask 
  }
  136 /G88 MSTT31c1f8 AddChar
/G89 [29.0 0.0 3.0 0.0 27.0 24.0]
/G89 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c1830fe0c70c30e618306e18187c18183c18383c0c783c0fd83c0
7983c00183e0030760030670860e30fe0c1878180e00700781e003ffc000ff00>} imagemask 
  }
  137 /G89 MSTT31c1f8 AddChar
/G8a [29.0 0.0 3.0 0.0 27.0 24.0]
/G8a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e007818c71833cf8c70d8ce60d8c6e0f067c0f063c0f063c0f063c0f063c0
f063c0f063e0f06760d8c670d8ce30cf8c1807180e00700781e003ffc000ff00>} imagemask 
  }
  138 /G8a MSTT31c1f8 AddChar
/G8b [29.0 0.0 3.0 0.0 27.0 24.0]
/G8b {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fc3fc7f00fe7e3c7efe3c7ffc7e3ffc7e3ffc7e3ffc7e3ffc
7e3ffc7e3ffe3c7f7e3c7e7f00fe3fc3fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  139 /G8b MSTT31c1f8 AddChar
/G8c [29.0 0.0 3.0 0.0 27.0 24.0]
/G8c {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fe3fc7f83fe7f83feffe3ffffe3ffffe3ffffe3ffffe3ffff
e3ffffe3ffffe3ff7fe3fe7fe3fe3fe3fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  140 /G8c MSTT31c1f8 AddChar
/G8d [29.0 0.0 3.0 0.0 27.0 24.0]
/G8d {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f01fc7e007e7e7c3efffe3ffffe3ffffc7ffff87fffe0ffff
c3ffff8fffff3fff7e003e7e003e3e003c1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  141 /G8d MSTT31c1f8 AddChar
/G8e [29.0 0.0 3.0 0.0 27.0 24.0]
/G8e {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f80fc7f003e7f7c3efffe3ffffc7fffc0ffffc0fffffc7fff
fe3ffffe3ffffe3f7f7c3e7f007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  142 /G8e MSTT31c1f8 AddChar
/G8f [29.0 0.0 3.0 0.0 27.0 24.0]
/G8f {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81fe1f83fe1fc7fc1fe7f81feff11ffff31fffe71fffc71fff8f1fff8
007ff8007ff8007f7ff1fe7ff1fe3ff1fc1ff1f80ffff007ffe003ffc000ff00>} imagemask 
  }
  143 /G8f MSTT31c1f8 AddChar
/G90 [29.0 0.0 3.0 0.0 27.0 24.0]
/G90 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f007c7f007e7f3ffeff3fffff3fffff03ffff01fffff0ffff
fc7ffffc7ffffc7f7f787e7f00fe3f83fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  144 /G90 MSTT31c1f8 AddChar
/G91 [29.0 0.0 3.0 0.0 27.0 24.0]
/G91 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fc0fc7f007e7e1f7efe3ffffc7ffffc61fffc007ffc3c3ffc
7e3ffc7e3ffe7e3f7e3c7e7f007e3fc1fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  145 /G91 MSTT31c1f8 AddChar
/G92 [29.0 0.0 3.0 0.0 27.0 24.0]
/G92 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83e003c7e003e7e003efffe3ffffc7ffff8fffff1fffff3ffff
e7ffffc7ffff8fff7f8ffe7f1ffe3f1ffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  146 /G92 MSTT31c1f8 AddChar
/G93 [29.0 0.0 3.0 0.0 27.0 24.0]
/G93 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f81fc7f00fe7e3c7efe3c7ffe1cffff00ffff81ffff00fffe
387ffc7e3ffc7e3f7c3c3e7e007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  147 /G93 MSTT31c1f8 AddChar
/G94 [29.0 0.0 3.0 0.0 27.0 24.0]
/G94 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81fc1f83f00fc7f1c7e7e3e7efe3e3ffe3e3ffe3e3fff1c3fff003fff
863ffffe3ffffc7f7ffc7e7ef8fe3e01fc1e03f80ffff007ffe003ffc000ff00>} imagemask 
  }
  148 /G94 MSTT31c1f8 AddChar
/G95 [29.0 0.0 3.0 0.0 27.0 24.0]
/G95 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff838f83c60f01e60e38ef8e38ff8c7c7f8c7c7f8c7c7f8c7c7f8
c7c7f8c7c7f8e38f78e38e78f01e3ff83c1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  149 /G95 MSTT31c1f8 AddChar
/G96 [33.0 0.0 1.0 0.0 31.0 18.0]
/G96 {
    30 18 true [1 0 0 -1 -1.0 18.0] {<038000fc0e00073838000c7030079070700fd0e0e01fe0e0e018e1e0e0106380e0106fc0e0007870
f000e0307000c038780380383e0f20381ffc207807e030f000001fe0000007c0>} imagemask 
  }
  150 /G96 MSTT31c1f8 AddChar
/G97 [33.0 0.0 2.0 0.0 32.0 18.0]
/G97 {
    30 18 true [1 0 0 -1 -2.0 18.0] {<fc000700738001c038c00070382780301c2fc0381c1fe01c1e1c601c0718201c0fd8201c3878001c
301c003c700c0038700700787013c1f07810ffe03c301f801fe000000f800000>} imagemask 
  }
  151 /G97 MSTT31c1f8 AddChar
/G98 [33.0 0.0 1.0 0.0 31.0 18.0]
/G98 {
    30 18 true [1 0 0 -1 -1.0 18.0] {<0f8000001fe000003c303f807810ffe07003c1f070070078700c0038301c003c3878001c0fd8201c
0718201c1e1c601c1c1fe01c1c2fc0383823803038c00070738001c0fc000700>} imagemask 
  }
  152 /G98 MSTT31c1f8 AddChar
/G99 [33.0 0.0 2.0 0.0 32.0 18.0]
/G99 {
    30 18 true [1 0 0 -1 -2.0 18.0] {<000007c000001fe007f030f01ffc20783e070038780380387000c038f000e030e0007870e0106fc0
e0106380e018e1e0e01fe0e0700fd0e03007107038000c700e000738038000fc>} imagemask 
  }
  153 /G99 MSTT31c1f8 AddChar
/G9a [33.0 0.0 1.0 0.0 32.0 18.0]
/G9a {
    31 18 true [1 0 0 -1 -1.0 18.0] {<01e0000003f8000003fc0000038e00000183000003fd80000fffc0f81f81e3fc3f0037fe7e381ffe
fc3c3f0ef87c7ffcf870fef8f861fc00f863f800783ff0001c1fe000000f8000>} imagemask 
  }
  154 /G9a MSTT31c1f8 AddChar
/G9b [33.0 0.0 1.0 0.0 32.0 18.0]
/G9b {
    31 18 true [1 0 0 -1 -1.0 18.0] {<00000f0000003f8000007f800000e3800001830000037f803e07ffe07f8f03f0ffd801f8fff038fc
e1f8787e7ffc7c3e3efe1c3e007f0c3e003f8c3e001ff83c000ff0700003e000>} imagemask 
  }
  155 /G9b MSTT31c1f8 AddChar
/G9c [33.0 0.0 1.0 0.0 32.0 18.0]
/G9c {
    31 18 true [1 0 0 -1 -1.0 18.0] {<0003e000000ff070001ff83c003f8c3e007f0c3e3efe1c3e7ffc7c3ee1f8787ee7f038fcfff801f8
7f8f03f03e07ffe000037f80000183000000e38000007f8000003f8000000f00>} imagemask 
  }
  156 /G9c MSTT31c1f8 AddChar
/G9d [33.0 0.0 1.0 0.0 32.0 18.0]
/G9d {
    31 18 true [1 0 0 -1 -1.0 18.0] {<000f80001c1fe000783ff000f863f800f861fc00f870fef8f87c7ffcfc3c3f0e7e381fce3f003ffe
1f81e3fc0fffc0f803fd800001830000038e000003fc000003f8000001e00000>} imagemask 
  }
  157 /G9d MSTT31c1f8 AddChar
/G9e [10.0 0.0 3.0 10.0 7.0 15.0]
/G9e {
    4 5 true [1 0 0 -1 -3.0 15.0] {<60f0f0f060>} imagemask 
  }
  158 /G9e MSTT31c1f8 AddChar
/G9f [15.0 0.0 3.0 7.0 13.0 17.0]
/G9f {
    10 10 true [1 0 0 -1 -3.0 17.0] {<1e007f807f80ffc0ffc0ffc0ffc07f807f801e00>} imagemask 
  }
  159 /G9f MSTT31c1f8 AddChar
/Ga0 [10.0 0.0 3.0 10.0 7.0 15.0]
/Ga0 {
    4 5 true [1 0 0 -1 -3.0 15.0] {<f0f0f0f0f0>} imagemask 
  }
  160 /Ga0 MSTT31c1f8 AddChar
/Ga1 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga1 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c003c78001e70000ef0000fe00007e00007e00007e00007e0
0007e00007f0000f70000e78001e3c003c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  161 /Ga1 MSTT31c1f8 AddChar
/Ga2 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga2 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f81fc7e007e7c003ef8001ff8001ff0000ff0000ff0000ff0
000ff8001ff8001f7c003e7e007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  162 /Ga2 MSTT31c1f8 AddChar
/Ga3 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga3 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83ffffc7ffffe7fc3feff00ffff00fffe007ffe007ffe007ffe
007fff00ffff00ff7fc3fe7ffffe3ffffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  163 /Ga3 MSTT31c1f8 AddChar
/Ga4 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga4 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c003c78001e70000ef03c0fe07e07e0ff07e0ff07e0ff07e0
ff07e07e07f03c0f70000e78001e3c003c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  164 /Ga4 MSTT31c1f8 AddChar
/Ga5 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga5 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c7e3c78ff1e71ff8ef3c3cfe781e7e718e7e73ce7e73ce7e7
18e7e781e7f3c3cf71ff8e78ff1e3c7e3c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  165 /Ga5 MSTT31c1f8 AddChar
/Ga6 [31.0 0.0 3.0 0.0 29.0 24.0]
/Ga6 {
    26 24 true [1 0 0 -1 -3.0 24.0] {<000fc000007ff00001fffc000781fe000e007f0018001f0030000f8060000780600007c0e00007c0
c00003c0c00003c0c00003c0c00003c0c00003c0e00007806000078070000f0030000e0038001c00
1e0078000f81e00003ff800000fc0000>} imagemask 
  }
  166 /Ga6 MSTT31c1f8 AddChar
/Ga7 [15.0 0.0 3.0 7.0 13.0 17.0]
/Ga7 {
    10 10 true [1 0 0 -1 -3.0 17.0] {<ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0>} imagemask 
  }
  167 /Ga7 MSTT31c1f8 AddChar
/Ga8 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga8 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007e00007e00007e00007ffffffffffffffffff>} imagemask 
  }
  168 /Ga8 MSTT31c1f8 AddChar
/Ga9 [29.0 0.0 4.0 6.0 25.0 24.0]
/Ga9 {
    21 18 true [1 0 0 -1 -4.0 24.0] {<00200000200000200000200000700000700000700000700000f80000f80000f80001fc0003fe0007
ff000fff801f8fc03800e0400010>} imagemask 
  }
  169 /Ga9 MSTT31c1f8 AddChar
/Gaa [29.0 0.0 3.0 0.0 27.0 24.0]
/Gaa {
    24 24 true [1 0 0 -1 -3.0 24.0] {<000000001800001800001800003c00003c00003c00007e00007e0001ff800ffff07ffffe7ffffe0f
fff001ff80007e00007e00003c00003c00003c00001800001800001800000000>} imagemask 
  }
  170 /Gaa MSTT31c1f8 AddChar
/Gab [29.0 0.0 3.0 2.0 26.0 24.0]
/Gab {
    23 22 true [1 0 0 -1 -3.0 24.0] {<001000001000001000003800003800003800007c00007c007ffffc3ffff81ffff00fffe003ff8001
ff0001ff0003ff8003ff8003ef800383800701c0040040080040>} imagemask 
  }
  171 /Gab MSTT31c1f8 AddChar
/Gac [29.0 0.0 4.0 0.0 25.0 24.0]
/Gac {
    21 24 true [1 0 0 -1 -4.0 24.0] {<002000002000002000007000007000007000c0f8187efbf03fffe01fffc00fff8007ff0007ff000f
ff801fffc03fffe07efbf0c0f818007000007000007000002000002000002000>} imagemask 
  }
  172 /Gac MSTT31c1f8 AddChar
/Gad [29.0 0.0 3.0 0.0 27.0 24.0]
/Gad {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000018000018000c3c300f3cf007ffe007ffe003ffc003ffc00ffff07ffffe7ffffe0f
fff003ffc003ffc007ffe007ffe00f3cf00c3c30001800001800001800000000>} imagemask 
  }
  173 /Gad MSTT31c1f8 AddChar
/Gae [29.0 0.0 3.0 0.0 27.0 24.0]
/Gae {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000318c003bdc003ffc003ffc03ffffc3ffffc1ffff80ffff01ffff87ffffe7ffffe1f
fff80ffff01ffff83ffffc3ffffc03ffc003ffc003bdc00318c0001800000000>} imagemask 
  }
  174 /Gae MSTT31c1f8 AddChar
/Gaf [29.0 0.0 3.0 0.0 27.0 24.0]
/Gaf {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000018000028000c2c300f2cf007cf6005cce004e9c0026bc00f2f307ff80e601ffe1c
f4f003d6400397400733a00673e00fb4f00c3430001800001800001800000000>} imagemask 
  }
  175 /Gaf MSTT31c1f8 AddChar
/Gb0 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb0 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0010000010000010000010000010000fffe0081020081020081020081020081020ffc7fe08102008
10200810200810200810200fffe0001000001000001000001000001000>} imagemask 
  }
  176 /Gb0 MSTT31c1f8 AddChar
/Gb1 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb1 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<001000001000001000001000001000007c00019300031180021080041040041040ffeffe04104004
1040021080031180019300007c00001000001000001000001000001000>} imagemask 
  }
  177 /Gb1 MSTT31c1f8 AddChar
/Gb2 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb2 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800001800001800003c00003c00007e0000660000c30001c3800781e01e0078f8003ff8001f1e
00780700e001818000c300006600006e00003c00003c00001800001800001800>} imagemask 
  }
  178 /Gb2 MSTT31c1f8 AddChar
/Gb3 [29.0 0.0 6.0 3.0 24.0 21.0]
/Gb3 {
    18 18 true [1 0 0 -1 -6.0 21.0] {<400080e001c07c0f803fff0033f30030030018060018060018060018060018060018060030030033
f3003fff007c0f80e001c0400080>} imagemask 
  }
  179 /Gb3 MSTT31c1f8 AddChar
/Gb4 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb4 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000e70001c3800381c00700e00e00701c7e3838ff1c70860ee00c07e0180770
300e38001c1c00380e30700730e00381c001c38000e700007e00003c00001800>} imagemask 
  }
  180 /Gb4 MSTT31c1f8 AddChar
/Gb5 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb5 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003e7c007e7e01fe7f81fc3f83fc3fc7fc3fe7f81fe800001e00007f0000ff8001ffe007fff
00fffe007f7e007e7e007e7c183e3c7e3c1cff3809ff9007ffe003ffc0007e00>} imagemask 
  }
  181 /Gb5 MSTT31c1f8 AddChar
/Gb6 [29.0 0.0 2.0 2.0 27.0 24.0]
/Gb6 {
    25 22 true [1 0 0 -1 -2.0 24.0] {<001c0000001c0000003e0000002e0000002e0000004f000000470000004700007f87ff0020001e00
10003c000c0078000200e0000101c0000201c0000201e0000230e000024ce0000482f00007017000
0400f00008003800>} imagemask 
  }
  182 /Gb6 MSTT31c1f8 AddChar
/Gb7 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb7 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501214401e04801602801802801802a0100a80100280
30028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  183 /Gb7 MSTT31c1f8 AddChar
/Gb8 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb8 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801382801302801c02a0180a80300280
10028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  184 /Gb8 MSTT31c1f8 AddChar
/Gb9 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb9 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b1130301018201008501014401004801002801002801102a03fca80100280
00028000025000145000142000083000181b01300c106003018000fe00>} imagemask 
  }
  185 /Gb9 MSTT31c1f8 AddChar
/Gba [29.0 0.0 3.0 0.0 26.0 23.0]
/Gba {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002803002a0300a801c0280
17028003824000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  186 /Gba MSTT31c1f8 AddChar
/Gbb [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbb {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002803002a0100a80180280
1802800c024006045006142000083000181b01b00c106003018000fe00>} imagemask 
  }
  187 /Gbb MSTT31c1f8 AddChar
/Gbc [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbc {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801002a0100a80100280
10028010024010045010142010083000181b01b00c106003018000fe00>} imagemask 
  }
  188 /Gbc MSTT31c1f8 AddChar
/Gbd [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbd {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801802a0100a80300280
300280600240c00450c0142000083000181b01b00c106003018000fe00>} imagemask 
  }
  189 /Gbd MSTT31c1f8 AddChar
/Gbe [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbe {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801802a0180a80700281
d0028380024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  190 /Gbe MSTT31c1f8 AddChar
/Gbf [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbf {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601911b0301018201008501014401004801002801002811002a7f80a80100280
00028000025000145000142000083000181901b00c106003018000fe00>} imagemask 
  }
  191 /Gbf MSTT31c1f8 AddChar
/Gc0 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc0 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004839002819002807002a0300a80180280
10028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  192 /Gc0 MSTT31c1f8 AddChar
/Gc1 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc1 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b030101820100850901440f00480d002803002803002a0100a80100280
18028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  193 /Gc1 MSTT31c1f8 AddChar
/Gc2 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc2 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601a18b0301018201008501014401004801002801002801002a0100a80100280
10028000024000045000142000083000181a00b00c106003018000fe00>} imagemask 
  }
  194 /Gc2 MSTT31c1f8 AddChar
/Gc3 [29.0 0.0 3.0 -3.0 27.0 26.0]
/Gc3 {
    24 29 true [1 0 0 -1 -3.0 26.0] {<0002010003030003870003cf00037b00033300030300030300030300230300630300e30301e30703
630e067ffe0c7ffc1800383000706000e06001c03003801807000c7e00067c0003600001e00000e0
00006000002000>} imagemask 
  }
  195 /Gc3 MSTT31c1f8 AddChar
/Gc4 [29.0 0.0 3.0 -3.0 27.0 26.0]
/Gc4 {
    24 29 true [1 0 0 -1 -3.0 26.0] {<804000c0c000e1c000f3c000dec000ccc000c0c000c0c000c0c000c0c400c0c600c0c700e0c78070
c6c07ffe603ffe301c00180e000c07000603800601c00c00e018007e30003e600006c00007800007
00000600000400>} imagemask 
  }
  196 /Gc4 MSTT31c1f8 AddChar
/Gc5 [29.0 0.0 2.0 -3.0 26.0 26.0]
/Gc5 {
    24 29 true [1 0 0 -1 -2.0 26.0] {<00200000600000e00001e000036000067c000c7e001807003003806001c06000e03000701800380c
7ffc067ffe03630e01e30700e30300630300230300030300030300030300033300037b0003cf0003
87000303000201>} imagemask 
  }
  197 /Gc5 MSTT31c1f8 AddChar
/Gc6 [29.0 0.0 2.0 -3.0 26.0 26.0]
/Gc6 {
    24 29 true [1 0 0 -1 -2.0 26.0] {<0004000006000007000007800006c0003e60007e3000e01801c00c0380060700060e000c1c00183f
fe307ffe6070c6c0e0c780c0c700c0c600c0c400c0c000c0c000c0c000ccc000dec000f3c000e1c0
00c0c000804000>} imagemask 
  }
  198 /Gc6 MSTT31c1f8 AddChar
/Gc7 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc7 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<000000000060000000f0000001980000030c0000060600000c030000180180003000c0007e07e000
fe07f0000606000006060000070600000387fff801c7fff000e60060007600c0003e0180001e0180
000f00c0000780600003fff00000fff8>} imagemask 
  }
  199 /Gc7 MSTT31c1f8 AddChar
/Gc8 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc8 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<0000000000003000000078000000cc00000186000003030000060180000c00c000180060003f03f0
007f03f8000303000003030000030700ffff0e007fff1c0030033800180370000c03e0000c03c000
18078000300f00007ffe0000fff80000>} imagemask 
  }
  200 /Gc8 MSTT31c1f8 AddChar
/Gc9 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc9 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<0000fff80003fff000078060000f00c0001e0180003e0180007600c000e6006001c7fff00387fff8
070600000606000006060000fe07f0007e07e0003000c000180180000c03000006060000030c0000
0198000000f000000060000000000000>} imagemask 
  }
  201 /Gc9 MSTT31c1f8 AddChar
/Gca [35.0 0.0 3.0 0.0 32.0 24.0]
/Gca {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fff800007ffe0000300f0000180780000c03c0000c03e00018037000300338007fff1c00ffff0e00
000307000003030000030300007f03f8003f03f000180060000c00c0000601800003030000018600
0000cc00000078000000300000000000>} imagemask 
  }
  202 /Gca MSTT31c1f8 AddChar
/Gcb [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcb {
    31 31 true [1 0 0 -1 -1.0 25.0] {<e800000eee00007eef8001fe77c007f073e00f8e71f01f1c38f03e3c3c783c781c3878f80e1c71f0
0f9ce3e007dc1fc001eeff0000eefc00002ee00000000000000ee800007eee0001feef0007f07fc0
0f8e73e01f1c71f03e3c38f03c383c7878781e3871f00f3cf3e00f9c1fc007dcff0001eefc0000ee
e000002e>} imagemask 
  }
  203 /Gcb MSTT31c1f8 AddChar
/Gcc [33.0 0.0 0.0 -7.0 34.0 27.0]
/Gcc {
    34 34 true [1 0 0 -1 0.0 27.0] {<ffffffffc08bfffffc4088ffffe040883fff8040c41ffe03c0c60ffc1c40c707f838c0e3c7f070c0
e1c3f0e1c0f0e1e1c1c0f071c383c0f831c707c0fc10f80fc0fe08c03fc0ff88c0ffc0ffe8c7ffc0
ffffffffc0ffffffffc0fff0c4ffc0ff80c47fc0ff00c41fc0fc0fc20fc0f830e307c0f071e1c3c0
e1e1f1e3c0e3c3f0e1c0c383f871c0c707f838c08e0ffc18c0f01ffe08c0807fff044081ffffc440
8fffffe440ffffffffc0>} imagemask 
  }
  204 /Gcc MSTT31c1f8 AddChar
/Gcd [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcd {
    31 31 true [1 0 0 -1 -1.0 25.0] {<00f8003003fe00f80fff81fc1fffc3fe1f83eff83e00ffc03c007f007800fc007801f0007007c000
700f8000701e1800703c3e0070781f0070f00f0071e007803b8003803f0003803e0003801e200780
1c780f003c3fff007e1ffe007e03f8007e000000fe000000fe000000fe000000fc000000fc000000
78000000>} imagemask 
  }
  205 /Gcd MSTT31c1f8 AddChar
/Gce [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gce {
    31 31 true [1 0 0 -1 -1.0 25.0] {<7c000000ff81ff00ffcfffc0fffffff0fffe03f87ffc00fc1f9e007c0007003c0003803e0021c01e
0071e01e00e0f01e00e0781e00c03c1c01c01c3c01c00e3801c00f7801c007f001c023e001c073c0
01e0f1e000f1e1e000ffe0f0007fc0f8001f007c0000007c0000003e0000003e0000003c00000018
00000010>} imagemask 
  }
  206 /Gce MSTT31c1f8 AddChar
/Gcf [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcf {
    31 31 true [1 0 0 -1 -1.0 25.0] {<100000003000000078000000f8000000f80000007c0000007c01f0003e07fc001e0ffe000f0f1e00
0f1e0f00079c07000f8807001fc007003de0070038e007007870070070780600f03c0e00f01e0e00
f00f1c00f0070800f80380007801c0007c00f3f03e007ffc3f80fffe1ffffffe07ffe7fe01ff03fe
0000007c>} imagemask 
  }
  207 /Gcf MSTT31c1f8 AddChar
/Gd0 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd0 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<0000003c0000007e0000007e000000fe000000fe000000fe000000fc003f80fc00fff0fc01fff878
01e03c7003c008f0038000f8038001f8038003b803c00f1c01e01e1c01f03c1c00f8781c0030f01c
0003e01c0007c01c001f003c007e003c01fc007807fe00f83fef83f0ff87fff07f03ffe03e00ffc0
18003e00>} imagemask 
  }
  208 /Gd0 MSTT31c1f8 AddChar
/Gd1 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd1 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<78000000fc000000fc000000fe000000fe000000fe0000007e0000007e03f8007e1ffe003c3fff00
1c780f001e2007803e0003803f0003803b80038071e0078070f00f0070781f00703c3e00701e1800
700f80007007c0007801f0007800fc003c007f003e00ffc01f83eff81fffc3fe0fff81fc03fe00f8
00f80030>} imagemask 
  }
  209 /Gd1 MSTT31c1f8 AddChar
/Gd2 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd2 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<00000010000000180000003c0000003e0000003e0000007c001f007c007fc0f800ffe0f000f1e1e0
01e0f1e001c073c001c023e001c007f001c00f7801c00e3801c01c3c00c03c1c00e0781e00e0f01e
0071e01e0021c01e0003803e0007003c1f9e007c7ffc00fcfffe03f8fffffff0ffcfffc0ff81ff00
7c000000>} imagemask 
  }
  210 /Gd2 MSTT31c1f8 AddChar
/Gd3 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd3 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<0000007c01ff03fe07ffe7fe1ffffffe3f80fffe3e007ffc7c00f3f07801c000f8038000f0070800
f00f1c00f01e0e00f03c0e00707806007870070038e007003de007001fc007000f880700079c0700
0f1e0f000f0f1e001e0ffe003e07fc007c01f0007c000000f8000000f80000007800000030000000
10000000>} imagemask 
  }
  211 /Gd3 MSTT31c1f8 AddChar
/Gd4 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd4 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<18003e003e00ffc07f03ffe0ff87fff03fef83f007fe00f801fc0078007e003c001f003c0007c01c
0003e01c0030f01c00f8781c01f03c1c01e01e1c03c00f1c038003b8038001f8038000f803c008f0
01e03c7001fff87800fff0fc003f80fc000000fc000000fe000000fe000000fe0000007e0000007e
0000003c>} imagemask 
  }
  212 /Gd4 MSTT31c1f8 AddChar
/Gd5 [41.0 0.0 3.0 0.0 39.0 24.0]
/Gd5 {
    36 24 true [1 0 0 -1 -3.0 24.0] {<001ffffff0003ffffff0007ffffff000e000007001c0000070038100107007038038700e01c07070
1c00e0e07038007bc07070003f8070e0001f0070e0001f007070003b8070380071c0701c00e0e070
0e01c070700703803870038100107001c000007000e0000070007ffffff0003ffffff0001ffffff0
>} imagemask 
  }
  213 /Gd5 MSTT31c1f8 AddChar
/Gd6 [41.0 0.0 2.0 0.0 38.0 24.0]
/Gd6 {
    36 24 true [1 0 0 -1 -2.0 24.0] {<ffffff0000ffffff8000ffffffc000e000006000e000003000e080081800e1c01c0c00e0e0380600
e070700300e03de00180e01fc000c0e00f800060e00f800060e01dc000c0e038e00180e070700300
e0e0380600e1c01c0c00e080081800e000003000e000006000ffffffc000ffffff8000ffffff0000
>} imagemask 
  }
  214 /Gd6 MSTT31c1f8 AddChar
/Gd7 [26.0 0.0 3.0 0.0 24.0 24.0]
/Gd7 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<0000080000300000500001a000064000184000208000c0800301000c02001002006004007ffc001f
fe000ffe0003ff0000ff80003f80001fc00007c00001e0000070000030000008>} imagemask 
  }
  215 /Gd7 MSTT31c1f8 AddChar
/Gd8 [26.0 0.0 2.0 0.0 23.0 24.0]
/Gd8 {
    21 24 true [1 0 0 -1 -2.0 24.0] {<8000006000005000002c000013000010c00008200008180004060002018002004001003001fff003
ffc003ff8007fe000ff8000fe0001fc0001f00003c0000700000600000800000>} imagemask 
  }
  216 /Gd8 MSTT31c1f8 AddChar
/Gd9 [29.0 0.0 3.0 3.0 27.0 24.0]
/Gd9 {
    24 21 true [1 0 0 -1 -3.0 24.0] {<00000000180000180000340000720000720000f10000f10001f08001f08003f04007f02007f0200f
f8100fe6101f81081f00c83c003470000a600006800001>} imagemask 
  }
  217 /Gd9 MSTT31c1f8 AddChar
/Gda [29.0 0.0 3.0 0.0 27.0 21.0]
/Gda {
    24 21 true [1 0 0 -1 -3.0 21.0] {<80000160000650000e2c003c1300f81081f80867f0081ff0040fe0040fe0020fc0010f80010f8000
8f00008f00004e00004e00002c00001800001800000000>} imagemask 
  }
  218 /Gda MSTT31c1f8 AddChar
/Gdb [29.0 0.0 3.0 0.0 26.0 24.0]
/Gdb {
    23 24 true [1 0 0 -1 -3.0 24.0] {<00fe0003ffc007ffe01ffff01ffff83e7ffc7c7ffc787ffef00000e00000c00000800000800000c0
0000e00000f00000787ffe7c7ffc3e7ffc1ffff81ffff007ffe003ffc000fe00>} imagemask 
  }
  219 /Gdb MSTT31c1f8 AddChar
/Gdc [29.0 0.0 3.0 0.0 26.0 24.0]
/Gdc {
    23 24 true [1 0 0 -1 -3.0 24.0] {<00fe0007ff800fffc01ffff03ffff07ffcf87ffc7cfffc3c00001e00000e00000600000200000200
000600000e00001efffc3c7ffc7c7ffcf83ffff01ffff00fffc007ff8000fe00>} imagemask 
  }
  220 /Gdc MSTT31c1f8 AddChar
/Gdd [29.0 0.0 3.0 1.0 27.0 24.0]
/Gdd {
    24 23 true [1 0 0 -1 -3.0 24.0] {<00ff0003e7c007c3e01f81f81f00f83e007c7c003e78001ef8001fff00ffff00ffff00ffff00ffff
00ffff00ff7f00fe7f00fe7f00fe3f00fc1f00f80f00f00700e0010080>} imagemask 
  }
  221 /Gdd MSTT31c1f8 AddChar
/Gde [29.0 0.0 3.0 0.0 27.0 23.0]
/Gde {
    24 23 true [1 0 0 -1 -3.0 23.0] {<0100800700e00f00f01f00f83f00fc7f00fe7f00fe7f00feff00ffff00ffff00ffff00ffff00ffff
00fff8001f78001e7c003e3e007c1f00f81f81f807c3e003e7c000ff00>} imagemask 
  }
  222 /Gde MSTT31c1f8 AddChar
/Gdf [32.0 0.0 3.0 0.0 30.0 23.0]
/Gdf {
    27 23 true [1 0 0 -1 -3.0 23.0] {<000e0000003c00000078000000f0000001e0000003c00000078000000f0000001e0000003c000000
7fffffe0ffffffe07fffffe03c0000001e0000000f0000000780000003c0000001e0000000f00000
00780000003c0000000e0000>} imagemask 
  }
  223 /Gdf MSTT31c1f8 AddChar
/Ge0 [32.0 0.0 2.0 0.0 29.0 23.0]
/Ge0 {
    27 23 true [1 0 0 -1 -2.0 23.0] {<000e0000000780000003c0000001e0000000f0000000780000003c0000001e0000000f0000000780
ffffffc0ffffffe0ffffffc00000078000000f0000001e0000003c00000078000000f0000001e000
0003c00000078000000e0000>} imagemask 
  }
  224 /Ge0 MSTT31c1f8 AddChar
/Ge1 [29.0 0.0 3.0 -3.0 26.0 24.0]
/Ge1 {
    23 27 true [1 0 0 -1 -3.0 24.0] {<001000003800007c0000fe0001ff0003ff8007bbc00f39e01e38f03c387878383c70381ce0380ec0
38068038020038000038000038000038000038000038000038000038000038000038000038000038
00>} imagemask 
  }
  225 /Ge1 MSTT31c1f8 AddChar
/Ge2 [29.0 0.0 4.0 0.0 27.0 27.0]
/Ge2 {
    23 27 true [1 0 0 -1 -4.0 27.0] {<003800003800003800003800003800003800003800003800003800003800003800003800803802c0
3806e0380e70381c78383c3c38781e38f00f39e007bbc003ff8001ff0000fe00007c000038000010
00>} imagemask 
  }
  226 /Ge2 MSTT31c1f8 AddChar
/Ge3 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge3 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<ffff80ffffc0fffff0f80000fc0000fe0000ef0000e78000e3c000e1e000e0f000e07800e03c00e0
1e00e00f00e00780e003c06001e02000e0000040>} imagemask 
  }
  227 /Ge3 MSTT31c1f8 AddChar
/Ge4 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge4 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<1ffff03ffff0fffff00001f00003f00007f0000f70001e70003c7000787000f07001e07003c07007
80700f00701e00703c0070780060700040200000>} imagemask 
  }
  228 /Ge4 MSTT31c1f8 AddChar
/Ge5 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge5 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<0000002000606000f0e001e0e003c0e00780e00f00e01e00e03c00e07800e0f000e1e000e3c000e7
8000ef0000fe0000fc0000ffffe0ffffc0ffff80>} imagemask 
  }
  229 /Ge5 MSTT31c1f8 AddChar
/Ge6 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge6 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<000000600040f000607800703c00701e00700f007007807003c07001e07000f070007870003c7000
1e70000f700007f00003f07ffff03ffff01ffff0>} imagemask 
  }
  230 /Ge6 MSTT31c1f8 AddChar
/Ge7 [35.0 0.0 3.0 0.0 32.0 24.0]
/Ge7 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<001fe000003fc000007f800000ff000001fe000003fc000007f800000ff000001fe000003ffffff8
7ffffff8fffffff8fffffff87ffffff83ffffff81fe000000ff0000007f8000003fc000001fe0000
00ff0000007f8000003fc000001fe000>} imagemask 
  }
  231 /Ge7 MSTT31c1f8 AddChar
/Ge8 [35.0 0.0 3.0 0.0 32.0 24.0]
/Ge8 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<003fc000001fe000000ff0000007f8000003fc000001fe000000ff0000007f8000003fc0ffffffe0
fffffff0fffffff8fffffff8fffffff0ffffffe000003fc000007f800000ff000001fe000003fc00
0007f800000ff000001fe000003fc000>} imagemask 
  }
  232 /Ge8 MSTT31c1f8 AddChar
/Ge9 [29.0 0.0 3.0 -5.0 27.0 24.0]
/Ge9 {
    24 29 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000ff0001ff8003ffc007ffe00ffff01ffff83ffffc7ffffeff7efffe7e7ffc
7e3ff87e1ff07e0fe07e07c07e03807e01007e00007e00007e00007e00007e00007e00007e00007e
00007e00007e00>} imagemask 
  }
  233 /Ge9 MSTT31c1f8 AddChar
/Gea [29.0 0.0 3.0 0.0 27.0 29.0]
/Gea {
    24 29 true [1 0 0 -1 -3.0 29.0] {<007e00007e00007e00007e00007e00007e00007e00007e00007e00007e00807e01c07e03e07e07f0
7e0ff87e1ffc7e3ffe7e7fff7eff7ffffe3ffffc1ffff80ffff007ffe003ffc001ff8000ff00007e
00003c00001800>} imagemask 
  }
  234 /Gea MSTT31c1f8 AddChar
/Geb [29.0 0.0 3.0 0.0 26.0 23.0]
/Geb {
    23 23 true [1 0 0 -1 -3.0 23.0] {<ffff80ffffc0ffffe0fffff0fffff8fffffcffc000ffe000fff000fff800fffc00fdfe00fcff00fc
7f80fc3fc0fc1fe0fc0ff07c07f83c03fc1c01fc0c00f8040070000020>} imagemask 
  }
  235 /Geb MSTT31c1f8 AddChar
/Gec [29.0 0.0 3.0 0.0 26.0 23.0]
/Gec {
    23 23 true [1 0 0 -1 -3.0 23.0] {<03fffe07fffe0ffffe1ffffe3ffffe7ffffe0007fe000ffe001ffe003ffe007ffe00ff7e01fe7e03
fc7e07f87e0ff07e1fe07e3fc07c7f80787f00703e00601c0040080000>} imagemask 
  }
  236 /Gec MSTT31c1f8 AddChar
/Ged [29.0 0.0 3.0 0.0 26.0 23.0]
/Ged {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0000000400300c00781c00fc3c01fe7c03fcfc07f8fc0ff0fc1fe0fc3fc0fc7f80fcff00fdfe00ff
fc00fff800fff000ffe000fffffcfffff8fffff0ffffe0ffffc0ffff80>} imagemask 
  }
  237 /Ged MSTT31c1f8 AddChar
/Gee [29.0 0.0 3.0 0.0 26.0 23.0]
/Gee {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0000001800403c00607e0070ff00787f807c3fc07e1fe07e0ff07e07f87e03fc7e01fe7e00ff7e00
7ffe003ffe001ffe000ffe7ffffe3ffffe1ffffe0ffffe07fffe03fffe>} imagemask 
  }
  238 /Gee MSTT31c1f8 AddChar
/Gef [29.0 0.0 3.0 2.0 27.0 24.0]
/Gef {
    24 22 true [1 0 0 -1 -3.0 24.0] {<00200000600000e00001e0000360000660000c7fff187fff300003600003c00003c0000360000330
0003187fff0c7fff06600003600001e00000e000006000002000>} imagemask 
  }
  239 /Gef MSTT31c1f8 AddChar
/Gf0 [29.0 0.0 2.0 2.0 26.0 24.0]
/Gf0 {
    24 22 true [1 0 0 -1 -2.0 24.0] {<000000000400000600000700000680000640fffe20fffe10c00008c00004c00002c00002c00004c0
0008fffe10fffe20000640000680000700000600000400000000>} imagemask 
  }
  240 /Gf0 MSTT31c1f8 AddChar
/Gf1 [27.0 0.0 3.0 0.0 25.0 24.0]
/Gf1 {
    22 24 true [1 0 0 -1 -3.0 24.0] {<00300000780000cc000186000303000601800c00c01800603000307f03f8ff03fc03030003030003
030003030003030003030003030003030003030003030003030003ff0003ff00>} imagemask 
  }
  241 /Gf1 MSTT31c1f8 AddChar
/Gf2 [27.0 0.0 1.0 0.0 23.0 24.0]
/Gf2 {
    22 24 true [1 0 0 -1 -1.0 24.0] {<03ff0003ff00030300030300030300030300030300030300030300030300030300030300030300ff
03fc7f03f83000301800600c00c006018003030001860000cc00007800003000>} imagemask 
  }
  242 /Gf2 MSTT31c1f8 AddChar
/Gf3 [35.0 0.0 3.0 2.0 33.0 22.0]
/Gf3 {
    30 20 true [1 0 0 -1 -3.0 22.0] {<002010000060180000e01c0001e01e0003601b00067ff9800c7ff8c0180000603000003060000018
6000001830000030180000600c7ff8c0067ff98003601b0001e01e0000e01c000060180000201000
>} imagemask 
  }
  243 /Gf3 MSTT31c1f8 AddChar
/Gf4 [27.0 0.0 3.0 -6.0 23.0 24.0]
/Gf4 {
    20 30 true [1 0 0 -1 -3.0 24.0] {<00000000600000f000019800030c000606000c03001801803000c07e07e0fe07f006060006060006
0600060600060600060600060600060600fe07f07e07e03000c01801800c0300060600030c000198
0000f000006000000000>} imagemask 
  }
  244 /Gf4 MSTT31c1f8 AddChar
/Gf5 [26.0 0.0 3.0 4.0 23.0 24.0]
/Gf5 {
    20 20 true [1 0 0 -1 -3.0 24.0] {<fffc00fff800c03000c06000c06000c03000c01800c00c00c00600d80300fc0180e600c0c3006081
803000c0600060c0003180001b00000e00000400>} imagemask 
  }
  245 /Gf5 MSTT31c1f8 AddChar
/Gf6 [26.0 0.0 3.0 4.0 23.0 24.0]
/Gf6 {
    20 20 true [1 0 0 -1 -3.0 24.0] {<03fff001fff000c03000603000603000c0300180300300300600300c01b01803f0300670600c30c0
181060300030600018c0000d8000070000020000>} imagemask 
  }
  246 /Gf6 MSTT31c1f8 AddChar
/Gf7 [26.0 0.0 3.0 0.0 24.0 20.0]
/Gf7 {
    21 20 true [1 0 0 -1 -3.0 20.0] {<000400000f000019800030c000606000c030818030c30060e600c0fc0180d80300c00600c00c00c0
1800c03000c06000c06000c03000fff800fffc00>} imagemask 
  }
  247 /Gf7 MSTT31c1f8 AddChar
/Gf8 [26.0 0.0 2.0 0.0 23.0 20.0]
/Gf8 {
    21 20 true [1 0 0 -1 -2.0 20.0] {<0100000780000cc000186000303000601800600c083006181803380c01f80600d803001801801800
c01800601800301800301800601800fff801fff8>} imagemask 
  }
  248 /Gf8 MSTT31c1f8 AddChar
/Gf9 [16.0 0.0 2.0 7.0 15.0 17.0]
/Gf9 {
    13 10 true [1 0 0 -1 -2.0 17.0] {<fff8fff8c018c018c018c018c018c018fff8fff8>} imagemask 
  }
  249 /Gf9 MSTT31c1f8 AddChar
/Gfa [13.0 0.0 2.0 7.0 12.0 17.0]
/Gfa {
    10 10 true [1 0 0 -1 -2.0 17.0] {<ffc0ffc0c0c0c0c0c0c0c0c0c0c0c0c0ffc0ffc0>} imagemask 
  }
  250 /Gfa MSTT31c1f8 AddChar
/Gfb [21.0 0.0 2.0 5.0 18.0 20.0]
/Gfb {
    16 15 true [1 0 0 -1 -2.0 20.0] {<000008001c1c1c3e1e7e1efc0ff007e007c007f00ff83e7ffe3e7c1c3800>} imagemask 
  }
  251 /Gfb MSTT31c1f8 AddChar
/Gfc [26.0 0.0 2.0 4.0 24.0 25.0]
/Gfc {
    22 21 true [1 0 0 -1 -2.0 25.0] {<0000040000180000300000600001c0000380000700000e00001e00001c00003800307000f8f00078
e0003dc0001fc0001f80000f80000f00000e0000040000>} imagemask 
  }
  252 /Gfc MSTT31c1f8 AddChar
/Gfd [29.0 0.0 3.0 0.0 27.0 24.0]
/Gfd {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e08007e1c1c7e1c3e7e1e7e7e1ef87e0ff07e07e07e07c07e0
7e07e0ff87e3e7e7e7e3e7e7c1c7e38007e00007e00007ffffffffffffffffff>} imagemask 
  }
  253 /Gfd MSTT31c1f8 AddChar
/Gfe [29.0 0.0 3.0 0.0 29.0 25.0]
/Gfe {
    26 25 true [1 0 0 -1 -3.0 25.0] {<000000c0ffffff80ffffff00ffffff00e0001f00e0003f00e0007700e000e700e001c700e0038700
e0078700e7070700ef8e0700e79e0700e3dc0700e1f80700e1f80700e0f00700e0e00700e0400700
e0000700e0000700ffffff00ffffff00ffffff00>} imagemask 
  }
  254 /Gfe MSTT31c1f8 AddChar
/Gff [34.0 0.0 1.0 0.0 32.0 25.0]
/Gff {
    31 25 true [1 0 0 -1 -1.0 25.0] {<00003fe00001fffca00ffffe0dbfc61e09be060e802b060e249f060e09bf060e802b060e241f060e
0dbf1fee8125fffe201fe61e0dbf060e8135060e200f060e0dbf060e01b7060e8007060e2dbf3ffe
09befffe8043fffe24bfe00e0dbf00020020000e>} imagemask 
  }
  255 /Gff MSTT31c1f8 AddChar
%%EndResource

32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 405 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 396 739 (William M. Bradley, President, FirmWorks) 739 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 480 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 471 771 (Yongjae Rim, Draft Editor, IBM Corporation) 771 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 555 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 546 1488 (John Beidl, Task Group Leader of RIPL in PC Card Host Service Working Group, IBM) 1488 SB
600 596 204 (Corporation) 204 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 680 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 671 678 (Ron Hochsprung, Apple Computer, Inc.) 678 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 755 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 746 182 (John Rible) 182 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 830 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 821 787 (David L. Paktor, HaL Computer Systems, Inc.) 787 SB
375 921 1765 (The following individuals were added to the Task Group to produce the Document Revisions 1.1 & 1.2:) 1765 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1018 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1009 1412 (Robert Coffin/Mike Segapeli, Draft Editors - Revision 1.1 & 1.2, IBM Corporation) 1412 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1093 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1084 991 (Robert Coffin, Secretary of Task Group, IBM Corporation) 991 SB
32 0 0 46 46 0 0 0 41 /Times-Roman /font36 ANSIFont font
300 1267 218 (Trademarks) 218 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1343 58 (n ) 75 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
600 1331 328 (Sun Microsystems) 328 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
928 1334 1303 ( is a registered trademark of Sun Microsystems, Inc. in the United States and) 1303 SB
600 1385 264 (other countries.) 264 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1469 58 (n ) 75 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
600 1457 182 (OpenBoot) 182 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
782 1460 708 ( is a trademark of Sun Microsystems, Inc.) 708 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1545 58 (n ) 75 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
600 1533 106 (UNIX) 106 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
706 1536 1038 ( is a registered trademark of UNIX System Laboratories, Inc.) 1038 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1621 58 (n ) 75 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
600 1609 139 (SPARC) 139 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
739 1612 1436 ( is a registered trademark of SPARC International, Inc. Products bearing the SPARC) 1436 SB
600 1663 1306 (trademark are based on an architecture developed by Sun Microsystems, Inc.) 1306 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1747 58 (n ) 75 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
600 1735 260 (SPARCstation) 260 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
860 1738 1241 ( is a trademark of SPARC International, Inc., licensed exclusively to Sun) 1241 SB
600 1789 323 (Microsystems, Inc.) 323 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1873 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1864 1548 (All other products or services mentioned in this document are identified by the trademarks,) 1548 SB
600 1914 1575 (service marks, or product names as designated by the companies who market those products.) 1575 SB
600 1964 1401 (Inquiries concerning such trademarks should be made directly to those companies.) 1401 SB
300 2143 188 (References) 188 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 2190 1805 ([1] IEEE Standard 1275-1994, Standard for Boot \(Initialization Configuration\) Firmware, Core Practices) 1805 SB
375 2240 317 (and Requirements.) 317 SB
375 2315 1856 ([2] PC Card Standard, January 1995 published by PCMCIA\(Personal Computer Memory Card International) 1856 SB
375 2365 211 (Association\)) 211 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font MSTT31c1f8
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 5 5
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2229 2997 21 (5) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font18 ANSIFont font
300 232 64 (1. ) 78 SB
378 232 700 (Overview and References) 700 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 327 1729 (This specification describes the application of Open Firmware to computer systems that use PC Cards) 1729 SB
375 377 252 (conforming to ) 252 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
627 376 582 (PC Card Standard, January 1995 ) 582 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1209 377 888 (and is to be used in conjunction with that document.) 888 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
300 478 42 (1.) 42 SB
342 478 42 (1 ) 58 SB
400 478 486 (Definitions of Terms) 486 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 562 334 (Attribute Memory) 334 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
784 565 673 (: PC Card memory area accessed when ) 673 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1457 562 112 (REG#) 112 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1569 565 679 ( is asserted. This space includes the CIS) 679 SB
450 616 631 (data and card configuration registers.) 631 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 688 149 (Adapter) 149 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
599 691 1315 (: The hardware that connects a host computer bus to 68-pin PC Card Sockets.) 1315 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 764 171 (Bus Node) 171 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
621 767 784 (: Device node that represents the interface, or ) 784 SB
1405 767 19 (\223) 19 SB
1424 767 119 (bridge,) 119 SB
1543 767 19 (\224) 19 SB
1562 767 598 ( between a PC Card and its host. In) 598 SB
450 818 315 (general, the terms ) 315 SB
765 818 19 (\223) 19 SB
784 818 167 (Bus Node) 167 SB
951 818 19 (\224) 19 SB
970 818 83 ( and ) 83 SB
1053 818 19 (\223) 19 SB
1072 818 136 (Adapter) 136 SB
1208 818 19 (\224) 19 SB
1227 818 527 ( may be used interchangeably. ) 527 SB
1754 818 19 (\223) 19 SB
1773 818 158 (Bus node) 158 SB
1931 818 19 (\224) 19 SB
1950 818 287 ( is typically used) 287 SB
450 868 1123 (when the emphasis is on the node as a part of the device tree, and ) 1123 SB
1573 868 19 (\223) 19 SB
1592 868 136 (Adapter) 136 SB
1728 868 19 (\224) 19 SB
1747 868 497 ( is used with emphasis on the) 497 SB
450 918 446 (hardware implementation.) 446 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 990 88 (BVD) 88 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
538 993 645 (: Acronym for Battery Voltage Detect) 645 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 1066 331 (CardBus PC Card) 331 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
781 1069 1447 (: A computer system interconnect specification that is similar to 16-bit PC Cards  but) 1447 SB
450 1120 1130 (has a 32-bit synchronous interface with bus mastering capabilities.) 1130 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 1192 69 (CIS) 69 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
519 1195 1018 (: Acronym for Card Information Structure:  the metaformat.) 1018 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 1268 218 (Child Node:) 218 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
668 1271 1544 ( An Open Firmware device node that represents a PC Card. Note that for multifunction 16-) 1544 SB
450 1322 738 (bit PC Cards and CardBus Cards that imple) 738 SB
1188 1322 1026 (ment multiple functions, each individual function is realized) 1026 SB
450 1372 473 (as a node in the device tree.) 473 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 1444 331 (Common Memory) 331 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
781 1447 673 (: PC Card memory area accessed when ) 673 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1454 1444 112 (REG#) 112 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1566 1447 492 ( is not asserted. This space is) 492 SB
450 1498 487 (conventional memory space.) 487 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 1570 84 (Host) 84 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
534 1573 1039 (: A system which contains an Adapter with PC Card Sockets.) 1039 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 1646 164 (Interface) 164 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
614 1649 1043 (: A set of signals used to implement a PC Card bus protocols.) 1043 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 1722 77 (LFS) 77 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
527 1725 541 (: Acronym for Linear File Store) 541 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1068 1722 11 (.) 11 SB
450 1798 174 (PC Card:) 174 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
624 1801 1589 ( A memory and/or I/O device that is compatible with the PC Card Standard. A PC Card plugs) 1589 SB
450 1852 1288 (into a PC Card Socket. When a PC Card device has one function, the terms ) 1288 SB
1738 1852 19 (\223) 19 SB
1757 1852 296 (PC Card function) 296 SB
2053 1852 19 (\224) 19 SB
2072 1852 83 ( and ) 83 SB
2155 1852 19 (\223) 19 SB
2174 1852 51 (PC) 51 SB
450 1902 204 (Card device) 204 SB
654 1902 19 (\224) 19 SB
673 1902 502 ( can be used interchangeably.) 502 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 1974 172 (PCMCIA) 172 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
622 1977 1276 (: Acronym for Personal Computer Memory Card International Association.) 1276 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 2050 290 (16-bit PC Card:) 290 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
740 2053 1303 ( A card compliant with the 16-bit PC Card defined by the PC Card Standard.) 1303 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 2126 137 (REG#: ) 137 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
587 2129 1634 (A negative active input signal on pin 61 of the PC Card Socket which selects Attribute memory.) 1634 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 2202 373 (Relocatable Region: ) 373 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
823 2205 1415 (A range of the PC Card address space whose base address is established by a single) 1415 SB
450 2256 361 (base address register.) 361 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 2328 119 (Socket) 119 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
569 2331 900 (: The 68-pin socket into which a PC Card is inserted.) 900 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 2404 105 (Tuple) 105 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
555 2407 1694 (: An elemental data block of the CIS. A tuple is composed of three fields: tuple code, tuple link and) 1694 SB
450 2458 1778 (data field. The tuple code indicates the type of information contained within the data field; the tuple link) 1778 SB
450 2508 1746 (is the pointer to the next tuple in the tuple chain; and the data field has the data for that tuple. The data) 1746 SB
450 2558 884 (field might not exist depending on the type of tuple.) 884 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 2630 68 (WP) 68 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
518 2633 484 (: Acronym for Write-Protect) 484 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 2706 72 (XIP) 72 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
522 2709 582 (: Acronym for eXecution-In-Place) 582 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
450 2782 151 (Window) 151 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
601 2785 1616 (: An area in a host computer memory or I/O space through which a PC Card may be addressed.) 1616 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 6 6
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2229 2997 21 (6) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font18 ANSIFont font
300 232 64 (2. ) 78 SB
378 232 662 (PC Card Characteristics) 662 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 327 1818 (A PC Card is a device that plugs into a PC Card Socket. The PC Card Socket is a connector that provides a) 1818 SB
375 377 1760 (physical interface conforming to the PC Card Standard[2]. The PC Card Standard defines three types of) 1760 SB
375 427 1816 (interfaces: Memory-Only, I/O and CardBus interfaces. The Memory-Only interface defines the signals that) 1816 SB
375 477 1044 (support memory cards, but does not contain the I/O interface.) 1044 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
600 549 1366 (Note: The I/O interface was added by Release 2.0 of the PC Card Standard.  PC) 1366 SB
600 599 1363 (Card\222s default to  the Memory-Only interface to be compatible with pre-Release) 1363 SB
600 649 227 (2.0 hardware) 227 SB
32 0 0 42 42 0 0 0 39 /Palatino-Roman /font31 ANSIFont font
827 649 11 (.) 11 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 728 1844 (The I/O interface requires that the Memory-Only interface also be implemented within the same Socket, and) 1844 SB
375 778 1809 (that the Memory-Only interface be selected following the initial application of Vcc to the PC Card. A host) 1809 SB
375 828 1813 (must identify the I/O device by reading the CIS and configuring the I/O device appropriately before its I/O) 1813 SB
375 878 1654 (interface becomes active. The configuration information is stored in Configuration Table Entries.) 1654 SB
375 953 1831 (Although the CardBus protocol is significantly different from that of Memory-Only and I/O due to different) 1831 SB
375 1003 1842 (functional requirements, CardBus supports the Memory-Only and I/O interfaces for backward compatibility.) 1842 SB
375 1053 343 (CardBus defines the) 343 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
718 1050 122 ( CCD#) 122 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
840 1053 484 ( \(CardBus Card Detect\) and ) 484 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1324 1050 104 (CVS#) 104 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1428 1053 807 ( \(Card Voltage Sense\) signals to detect the type) 807 SB
375 1104 789 (of device, and establishes the proper interface.) 789 SB
375 1179 786 (16-bit PC Card and CardBus differ as follows:) 786 SB

%%BeginResource: font MSTT31c1f8
/GreNewFont{10 dict dup 3 1 roll def dup begin 6 1 roll/FontType 3
def/FontMatrix exch def/FontBBox exch def/FontInfo 2 dict def FontInfo
/UnderlinePosition 3 -1 roll put FontInfo/UnderlineThickness 3 -1
roll put/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
/CharProcs 256 dict def CharProcs/.notdef{}put/Metrics 256 dict def
Metrics/.notdef 3 -1 roll put/BuildChar{/char exch def/fontdict exch
def/charname fontdict/Encoding get char get def fontdict/Metrics get
charname get aload pop setcachedevice fontdict begin Encoding char
get CharProcs exch get end exec}def end definefont pop}def/AddChar{begin
Encoding 3 1 roll put CharProcs 3 1 roll put Metrics 3 1 roll put end}def
/MSTT31c1f8 [33.0 0 0 0 0 0] 60 -90 [-33.0 -33.0 33.0 33.0] [1 33 div 0 0 1 33 div 0 0] /MSTT31c1f8 GreNewFont
/G1e [17.0 0.0 2.0 0.0 14.0 24.0]
/G1e {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  30 /G1e MSTT31c1f8 AddChar
/G1f [17.0 0.0 2.0 0.0 14.0 24.0]
/G1f {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  31 /G1f MSTT31c1f8 AddChar
/G20 [33.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c1f8 AddChar
/G21 [34.0 0.0 1.0 -1.0 32.0 24.0]
/G21 {
    31 25 true [1 0 0 -1 -1.0 24.0] {<000000300000004c00000084000001020000070200000f86000017c8000027d00000dbe0000125c0
00024900000c92000013640000249800004920000192400003e48000049b00000966000008680000
10b0000020600000238000007c000000c0000000>} imagemask 
  }
  33 /G21 MSTT31c1f8 AddChar
/G22 [38.0 0.0 2.0 0.0 35.0 24.0]
/G22 {
    33 24 true [1 0 0 -1 -2.0 24.0] {<7800000000c600001f008300003f00810000fc00c10001f800710007e0001f000f800007803f0000
01e07c00000079f000000033e00000000d800000001a000000003ce000000031f8000000e07c0000
01e03f000006200fc000082003e000302001f8004060007e0080c0003f008300000f007c00000000
>} imagemask 
  }
  34 /G22 MSTT31c1f8 AddChar
/G23 [43.0 0.0 2.0 0.0 40.0 26.0]
/G23 {
    38 26 true [1 0 0 -1 -2.0 26.0] {<007800000000cc0000000084000000008200000000c200000000420000000066000000003c000000
001c000000000c0000000006000000000700000000078003e000000ffff0000ffffff8001f3fff80
1ffff8000078100000008010700000802038000080203c000060c01c00001f000e000000000e0000
00000700000000078000>} imagemask 
  }
  35 /G23 MSTT31c1f8 AddChar
/G24 [44.0 0.0 1.0 0.0 43.0 17.0]
/G24 {
    42 17 true [1 0 0 -1 -1.0 17.0] {<003c00000f000042000030800081000060400301000080400601000100400c010002004018000004
0000300000080000603c00180000c02200300000ffe3ffe000008022004000008022008000004042
008000004041010000003080c20000000f007c000000>} imagemask 
  }
  36 /G24 MSTT31c1f8 AddChar
/G25 [29.0 0.0 2.0 -1.0 27.0 24.0]
/G25 {
    25 25 true [1 0 0 -1 -2.0 24.0] {<001c0000003e000000c1800003006000020020000400100004001000080008000800080008000800
08000800080008000800080008000800100004001000040021ffc2003fc03e0067c0030087c00080
83800080c0000180600003001e003c0001ffc000>} imagemask 
  }
  37 /G25 MSTT31c1f8 AddChar
/G26 [40.0 0.0 3.0 0.0 38.0 26.0]
/G26 {
    35 26 true [1 0 0 -1 -3.0 26.0] {<01fc07f0000e03180e000800a002001800c00300e8004003e0a8004002a0a8004002a0a8004002a0
a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0
a8004002a0a8004002a0a9fc4ffaa0ae035006a0b000e002a0b0004001a0b07f5fc0a0bf80e03fa0
803e0fc020ffc1f03fe0>} imagemask 
  }
  38 /G26 MSTT31c1f8 AddChar
/G27 [15.0 0.0 3.0 -1.0 12.0 24.0]
/G27 {
    9 25 true [1 0 0 -1 -3.0 24.0] {<0800140016001200210041004100410062001c007f00c980c880bf80808080808080808080808080
808080808080c1803f00>} imagemask 
  }
  39 /G27 MSTT31c1f8 AddChar
/G28 [36.0 0.0 3.0 0.0 33.0 24.0]
/G28 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<007ff80007ffffc03ffffff07ffffff87f800ff8fe0003fcfce01dfc02e01e00fefffffcfefffdfc
7dfffef803c78f0003ffff0007c78f8007ffff800fc78fc00fffffc01fffffe01fffffe01fffffe0
1fffffe01fffffe01fffffe01fffffe0>} imagemask 
  }
  40 /G28 MSTT31c1f8 AddChar
/G29 [29.0 0.0 3.0 0.0 27.0 24.0]
/G29 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff000381c0047020086c18106e08206e04403602400702c0070380070180070180070180070180
0701800701c00703400702403602206e04106e08086c100468200381c000ff00>} imagemask 
  }
  41 /G29 MSTT31c1f8 AddChar
/G2a [37.0 0.0 3.0 0.0 35.0 24.0]
/G2a {
    32 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffc0000003a000000590000009880000118400002182000041810000818080010180400201
80200401801008018018180180242401804242018081810181000081820000418400002188000011
90000009a0000005c0000003ffffffff>} imagemask 
  }
  42 /G2a MSTT31c1f8 AddChar
/G2b [37.0 0.0 3.0 0.0 35.0 24.0]
/G2b {
    32 24 true [1 0 0 -1 -3.0 24.0] {<ffffffff800000018000000180000071800000718000007180000071800000718000000180000001
80000001803ff0018000000180000001800ffc0180000001800000018007fe018000000180000001
800000018000000180000001ffffffff>} imagemask 
  }
  43 /G2b MSTT31c1f8 AddChar
/G2c [39.0 0.0 3.0 0.0 36.0 24.0]
/G2c {
    33 24 true [1 0 0 -1 -3.0 24.0] {<000001f00000001e0c000001e00200001e00010001e00001000f8000008018600000802010000080
4008000080c00c00008080040006808004007e808f8407fe808f847ffe8080047e7e808004607e80
8004007e808004007c8080040040808004000f00800400f00080040f00008004f00000ffff000000
>} imagemask 
  }
  44 /G2c MSTT31c1f8 AddChar
/G2d [39.0 0.0 3.0 0.0 36.0 26.0]
/G2d {
    33 26 true [1 0 0 -1 -3.0 26.0] {<000003000000007f000000007ff00000007f0c000000ff0200000f7f010000f07f01000780780080
186070008020107000804008700080c008700080800470008080047000808f847000808f84700080
800470008080044000808004000080800400008080040000808004000f00800400f00080040f0000
8004f00000ffff000000>} imagemask 
  }
  45 /G2d MSTT31c1f8 AddChar
/G2e [48.0 0.0 3.0 0.0 45.0 26.0]
/G2e {
    42 26 true [1 0 0 -1 -3.0 26.0] {<0000000380000000007f80000000007ff8000000007f8600000000ff810000000f7f80800000707f
80800007c078004000083070004000100870004000200470004000601e7000400040e27000403e41
0270004041c10670004080623a700040803222700040800c42000040478642000040638342000040
3001c200004008004200078004002600780003001a07800001800a78000000ffff800000>} imagemask 
  }
  46 /G2e MSTT31c1f8 AddChar
/G2f [48.0 0.0 3.0 0.0 45.0 24.0]
/G2f {
    42 24 true [1 0 0 -1 -3.0 24.0] {<00000000f8000000000f0600000000f0010000000f0000800000700000800007e0000040000c3000
00400010080000400020040000400060060000400040020003403e4002003f4041c00203ff408060
023fff408030023f3f40800802203f40478402003f40638302003e403001820030400800c2000780
04002200780002001207800001800a78000000ffff800000>} imagemask 
  }
  47 /G2f MSTT31c1f8 AddChar
/G30 [36.0 0.0 3.0 0.0 34.0 24.0]
/G30 {
    31 24 true [1 0 0 -1 -3.0 24.0] {<07fe00000401000008010000fffffffe800000028000000280000002800000028000000280000002
80000002800000028000000280000002800000028000000280000002800000028000000280000002
800000028000000280000002fffffffe>} imagemask 
  }
  48 /G30 MSTT31c1f8 AddChar
/G31 [44.0 0.0 3.0 0.0 42.0 24.0]
/G31 {
    39 24 true [1 0 0 -1 -3.0 24.0] {<07fe00000004010000000801000000f801fffe00800000020080000002008000000200807ffffffe
80800000028080000004810000000481000000088200000008820000001084000000108800000020
880000002090000000409000000040a000000080a000000080c000000100c000000100fffffffe00
>} imagemask 
  }
  49 /G31 MSTT31c1f8 AddChar
/G32 [23.0 0.0 3.0 0.0 20.0 24.0]
/G32 {
    17 24 true [1 0 0 -1 -3.0 24.0] {<fff000803800802c009e26008023008021809e3f808000808000808000809ffc808000808000809f
fc808000808000809ffc808000808000809ffc80800080800080800080ffff80>} imagemask 
  }
  50 /G32 MSTT31c1f8 AddChar
/G33 [23.0 0.0 3.0 0.0 20.0 24.0]
/G33 {
    17 24 true [1 0 0 -1 -3.0 24.0] {<ffff808000808000809ffc808000808000809ffc808000808000808000809ffc808000808000809f
fc808000808000809ffc808000808000809ffc80800080800080800080ffff80>} imagemask 
  }
  51 /G33 MSTT31c1f8 AddChar
/G34 [29.0 0.0 3.0 -6.0 27.0 24.0]
/G34 {
    24 30 true [1 0 0 -1 -3.0 24.0] {<01ffff0100010100011ffff9100009100009ffffc98000498000499ffc498000498000498000499f
fc498000498000499ffc498000498000499ffc498000498000499ffc4980004f8000489ffc488000
78800040800040ffffc0>} imagemask 
  }
  52 /G34 MSTT31c1f8 AddChar
/G35 [18.0 0.0 3.0 0.0 17.0 23.0]
/G35 {
    14 23 true [1 0 0 -1 -3.0 23.0] {<fffc800480048f8488848f8480048204800480048004fffc800480048f8488848f84800483048004
80048004fffc>} imagemask 
  }
  53 /G35 MSTT31c1f8 AddChar
/G36 [20.0 0.0 3.0 -1.0 17.0 24.0]
/G36 {
    14 25 true [1 0 0 -1 -3.0 24.0] {<3ff0c01c8004e01c9fe48004800470282fd017a01b600fc006800cc0186010202010400880048784
9fe4bff4ffe460181fe0>} imagemask 
  }
  54 /G36 MSTT31c1f8 AddChar
/G37 [35.0 0.0 3.0 0.0 33.0 24.0]
/G37 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<00001000000030000000300001f0e00003ffc000070f80000e0000000c0000000c0000007ffffff8
80000004800000048cccccc48cccccc483333304833333048cccccc48cccccc48000000480fffc04
80fffc0480000004800000047ffffff8>} imagemask 
  }
  55 /G37 MSTT31c1f8 AddChar
/G38 [31.0 0.0 1.0 -1.0 28.0 27.0]
/G38 {
    27 28 true [1 0 0 -1 -1.0 27.0] {<0001f0000007f800000f0800000c040000180400001804000030ffc0003104200071042080610420
c0e10420c0c1ffe061c100203f8100201e0100200001002000010020000100200001002000010020
00010020000100200001002000010020000080400000c0c00000618000001e00>} imagemask 
  }
  56 /G38 MSTT31c1f8 AddChar
/G39 [36.0 0.0 1.0 0.0 32.0 20.0]
/G39 {
    31 20 true [1 0 0 -1 -1.0 20.0] {<3c000000fe000000c7000f8003003060030040100300a01803014714030158d40302974a0302afaa
0303afae03022fa203062fa2038e174201fe18c200f207020002000200020002000200020003fffe
>} imagemask 
  }
  57 /G39 MSTT31c1f8 AddChar
/G3a [31.0 0.0 3.0 0.0 29.0 24.0]
/G3a {
    26 24 true [1 0 0 -1 -3.0 24.0] {<1fffff001000010017fffd0014000500140005001400050014000500140005001400050014000500
14000500140005001400050017fffd00100001001fffff001fffff00200000804d89cc80437630c0
8dcdcc408000004080000040ffffffc0>} imagemask 
  }
  58 /G3a MSTT31c1f8 AddChar
/G3b [29.0 0.0 3.0 0.0 26.0 11.0]
/G3b {
    23 11 true [1 0 0 -1 -3.0 11.0] {<fffffe8000028000028000029ffff28000029ffff28000028c0002800002fffffe>} imagemask 
  }
  59 /G3b MSTT31c1f8 AddChar
/G3c [29.0 0.0 3.0 0.0 27.0 24.0]
/G3c {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffff8800118800118800118800118800118800118800118800118800118800118ffff180000180
000180000183ffc1820fc1820fc1820fc1820fc1820fc1420fc1220fc11fffff>} imagemask 
  }
  60 /G3c MSTT31c1f8 AddChar
/G3d [29.0 0.0 3.0 0.0 27.0 24.0]
/G3d {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffc0003fc0003fc0003fc0003cc0003cffffffffffffffc3ffff81ffff81ffff81ffff
81ffffc3ffffffffffffffffe7ffffe7ffffe7ffffe7ffffe7ffffffffffffff>} imagemask 
  }
  61 /G3d MSTT31c1f8 AddChar
/G3e [29.0 0.0 3.0 0.0 26.0 25.0]
/G3e {
    23 25 true [1 0 0 -1 -3.0 25.0] {<00fe0003838004004008382010381020380860380c40380440000480000280300280780280780283
79028733c28f87e24f03e44400c460000c20000810001008002004004003838000fe00>} imagemask 
  }
  62 /G3e MSTT31c1f8 AddChar
/G3f [30.0 0.0 1.0 0.0 29.0 18.0]
/G3f {
    28 18 true [1 0 0 -1 -1.0 18.0] {<0000003000000070000001c000300700004fdc00008038000110e000013f900002470800025e0400
04f2020007ee010003f00100040001001c0001003bf0030060af3e0080f9e600>} imagemask 
  }
  63 /G3f MSTT31c1f8 AddChar
/G40 [30.0 0.0 1.0 0.0 29.0 18.0]
/G40 {
    28 18 true [1 0 0 -1 -1.0 18.0] {<c0000000e0000000380000000e00c00003bf200001c0100000708800009fc800010e24000207a400
0404f40008077e000800fc0008000200080003800c00fdc007cf50600679f010>} imagemask 
  }
  64 /G40 MSTT31c1f8 AddChar
/G41 [19.0 0.0 3.0 0.0 17.0 26.0]
/G41 {
    14 26 true [1 0 0 -1 -3.0 26.0] {<1c00140c1214122412240a28094809480948099008103f902c502630e7b094909290ca10ce10b010
402040202040204020401f80>} imagemask 
  }
  65 /G41 MSTT31c1f8 AddChar
/G42 [26.0 0.0 3.0 -1.0 25.0 26.0]
/G42 {
    22 27 true [1 0 0 -1 -3.0 26.0] {<020000050000050c00e4940094a400ce640046240031240008d4000434000ffc00100c0020060043
02004c81004840805040807ec04021002060001018001007c0080020040018040007880000500000
20>} imagemask 
  }
  66 /G42 MSTT31c1f8 AddChar
/G43 [22.0 0.0 3.0 4.0 20.0 25.0]
/G43 {
    17 21 true [1 0 0 -1 -3.0 25.0] {<0200000e00000900000900000880000440000460000220000210003e08004007008e008091008043
00807c80804180803e40802187001e480008f00007e000>} imagemask 
  }
  67 /G43 MSTT31c1f8 AddChar
/G44 [22.0 0.0 2.0 -1.0 19.0 20.0]
/G44 {
    17 21 true [1 0 0 -1 -2.0 20.0] {<03f0000588000b3c0070c200813e0080c100809f00806100804080803c80700100083e0004200002
2000031000011000008800004800004800005800002000>} imagemask 
  }
  68 /G44 MSTT31c1f8 AddChar
/G45 [31.0 0.0 3.0 7.0 30.0 20.0]
/G45 {
    27 13 true [1 0 0 -1 -3.0 20.0] {<000fc0007ff03800802007c08047c0207ff9c020003e402000206020001fa020001030200010e1c0
000f920000047c000003f800>} imagemask 
  }
  69 /G45 MSTT31c1f8 AddChar
/G46 [31.0 0.0 1.0 7.0 28.0 20.0]
/G46 {
    27 13 true [1 0 0 -1 -1.0 20.0] {<007e00000381ffc07c008020807c402080b3ffc0804f800080c0800080bf00008181000070e10000
093e000006c4000003f80000>} imagemask 
  }
  70 /G46 MSTT31c1f8 AddChar
/G47 [18.0 0.0 3.0 -2.0 16.0 25.0]
/G47 {
    13 27 true [1 0 0 -1 -3.0 25.0] {<00600090009000900090009000900090009000d003b01d9025886548a548a4c8b4c8d348de90e810
c010402020201020102010200fc0>} imagemask 
  }
  71 /G47 MSTT31c1f8 AddChar
/G48 [18.0 0.0 2.0 0.0 15.0 27.0]
/G48 {
    13 27 true [1 0 0 -1 -2.0 27.0] {<1f8020402040204020202010401840b883d89e589a689928a52895308d204dc06e00580048004800
4800480048004800480048003000>} imagemask 
  }
  72 /G48 MSTT31c1f8 AddChar
/G49 [29.0 0.0 3.0 0.0 27.0 26.0]
/G49 {
    24 26 true [1 0 0 -1 -3.0 26.0] {<0030000e48000b48e00949a0094920e5c920a4ca4094ca404cca404acc80264c8026408013008e10
01110800a20801c408020808041008002008004004008004030002060001040001040000f800>} imagemask 
  }
  73 /G49 MSTT31c1f8 AddChar
/G4a [28.0 0.0 1.0 -1.0 26.0 24.0]
/G4a {
    25 25 true [1 0 0 -1 -1.0 24.0] {<007f000003ffe0000780f0000e0038001c001c0038000e00700007006080830061c1c300c1c1c180
c0808180c0000180c0000180c4001180c6003180c20021806300630061c1c30070ff8700383e0e00
1c001c000e0038000780f00003ffe000007f0000>} imagemask 
  }
  74 /G4a MSTT31c1f8 AddChar
/G4b [28.0 0.0 1.0 -1.0 27.0 24.0]
/G4b {
    26 25 true [1 0 0 -1 -1.0 24.0] {<007f800001ffe00007c0f8000e001c001c000e0038000700300003006080418061c0e180c1c0e0c0
c08040c0c00000c0c00000c0c00000c0c00000c0c3fff0c063fff180600001803000030038000700
1c000e000e001c0007c0f80001ffe000007f8000>} imagemask 
  }
  75 /G4b MSTT31c1f8 AddChar
/G4c [28.0 0.0 1.0 -1.0 26.0 24.0]
/G4c {
    25 25 true [1 0 0 -1 -1.0 24.0] {<007f000003ffe0000780f0000e0038001c001c0038000e00700007006080830061c1c300c1c1c180
c0808180c0000180c03e0180c0ff8180c1c1c180c300618062002300660033007400170038000e00
1c001c000e0038000780f00003ffe000007f0000>} imagemask 
  }
  76 /G4c MSTT31c1f8 AddChar
/G4d [37.0 0.0 3.0 -1.0 36.0 24.0]
/G4d {
    33 25 true [1 0 0 -1 -3.0 24.0] {<0000084200003c084400007f04480000e382500000c1c1100000c060010003f038c60003f01fc000
03f00788000ffc0124001fff0123003fff0120807fff8110007fffc21000ffffc20000ffffc00000
ffffc00000ffffc00000ffffc000007fff8000007fff8000003fff0000001ffe0000000ffc000000
03f0000000>} imagemask 
  }
  77 /G4d MSTT31c1f8 AddChar
/G4e [22.0 0.0 3.0 -1.0 19.0 24.0]
/G4e {
    16 25 true [1 0 0 -1 -3.0 24.0] {<03e00ff80ff81ffc1ffc1ffc188c188808880f780f7003e003e001c060837007780fcf3b03c001c0
07703c1cf80ff00f3004>} imagemask 
  }
  78 /G4e MSTT31c1f8 AddChar
/G4f [28.0 0.0 3.0 -3.0 26.0 26.0]
/G4f {
    23 29 true [1 0 0 -1 -3.0 26.0] {<c00000c00000c3f000cc1800f00c00c00400c00400c00400c00402c0041ec007e2c00402c00402c0
0402c00402c3f402cc2c02f02402c02c02c03802c02002c02002c0180cc007f0c00000c00000c000
00c00000c00000>} imagemask 
  }
  79 /G4f MSTT31c1f8 AddChar
/G50 [36.0 0.0 3.0 0.0 34.0 27.0]
/G50 {
    31 27 true [1 0 0 -1 -3.0 27.0] {<800000008000000080000000c7e00000dff80000fc1c0000e00c0000400400004004000040040000
60080000600c000063ef00006ffbe00e7c98fff830901ff020a000e020c0038030803f0030fff800
303fc000300000003000000010000000180000001800000018000000>} imagemask 
  }
  80 /G50 MSTT31c1f8 AddChar
/G51 [29.0 0.0 3.0 0.0 27.0 23.0]
/G51 {
    24 23 true [1 0 0 -1 -3.0 23.0] {<006000007000003800003800003c00001e00001e00000f00c00f806007807ffffc3fffff67fffc60
0780c00f80000f00001e00001e00003c00003800003800007000006000>} imagemask 
  }
  81 /G51 MSTT31c1f8 AddChar
/G52 [29.0 0.0 4.0 1.0 26.0 24.0]
/G52 {
    22 23 true [1 0 0 -1 -4.0 24.0] {<0000000030000030000c78c00f7bc00f87c00e01c004008008004070003870003830003010002010
00401000201800603c00f03e01f003030001fe0001ce00018600010200>} imagemask 
  }
  82 /G52 MSTT31c1f8 AddChar
/G53 [21.0 0.0 3.0 0.0 19.0 24.0]
/G53 {
    16 24 true [1 0 0 -1 -3.0 24.0] {<0000010001800180018003c003c007e00ff01ff83ffc3ffc7ffe7ffeffffffffffffffffffff7ffe
7ffe3ffc1ff807e0>} imagemask 
  }
  83 /G53 MSTT31c1f8 AddChar
/G54 [27.0 0.0 3.0 0.0 24.0 24.0]
/G54 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<00200000200003260001fc00087080082080c820983820e01c21c0762370c1ac18007000007000c1
ac187623701c21c03820e0c8209808208008708001fc00032600002000002000>} imagemask 
  }
  84 /G54 MSTT31c1f8 AddChar
/G55 [25.0 0.0 3.0 0.0 21.0 24.0]
/G55 {
    18 24 true [1 0 0 -1 -3.0 24.0] {<03f00003f000033000033000033000033000033000ff3fc0ff3fc0c000c0c000c0ff3fc0ff3fc003
300003300003300003300003300003300003300003300003300003f00003f000>} imagemask 
  }
  85 /G55 MSTT31c1f8 AddChar
/G56 [25.0 0.0 3.0 0.0 23.0 23.0]
/G56 {
    20 23 true [1 0 0 -1 -3.0 23.0] {<03f80003fc00031c00031c00031c00ff1fe0ff1ff0c00070c00070c00070ff1ff0ff1ff0031ff003
1c00031c00031c00031c00031c00031c00031c0003fc0003fc0001fc00>} imagemask 
  }
  86 /G56 MSTT31c1f8 AddChar
/G57 [24.0 0.0 3.0 0.0 22.0 24.0]
/G57 {
    19 24 true [1 0 0 -1 -3.0 24.0] {<00e00000e00000e00003f8000ffe000eee001ce700184300feefe0ffffe0feefe01843001ce7000e
ee0007fc0003f80000e00000e00000e00000e00000e00000e00000e00000e000>} imagemask 
  }
  87 /G57 MSTT31c1f8 AddChar
/G58 [23.0 0.0 3.0 3.0 21.0 22.0]
/G58 {
    18 19 true [1 0 0 -1 -3.0 22.0] {<1ffe0007f80003f00081e04081e040c0c0c0e0c1c0f0c3c0fedfc0ffffc0fedfc0f0c3c0e0c1c0c0
c0c081e04081e04003f00007f8001ffe00>} imagemask 
  }
  88 /G58 MSTT31c1f8 AddChar
/G59 [26.0 0.0 3.0 0.0 24.0 24.0]
/G59 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<00200000200000700000d80000d800018c00fffff87ffff06306303603601c01c01c01c01c01c01c
01c03603606306307ffff0fffff8018c0000d80000d800007000002000002000>} imagemask 
  }
  89 /G59 MSTT31c1f8 AddChar
/G5a [29.0 0.0 3.0 0.0 27.0 24.0]
/G5a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00fe0003ff8007f0600f80001f00003e00007c0000780000f80010f00010f00030f001fef00078f0
0078f0004cf800807800007c00003e00001f00000f800007f02003ffc000fe00>} imagemask 
  }
  90 /G5a MSTT31c1f8 AddChar
/G5b [29.0 0.0 3.0 0.0 27.0 23.0]
/G5b {
    24 23 true [1 0 0 -1 -3.0 23.0] {<00ff000381c004002018001830000c2000044f80025fc002bfe001ffe001f8f0e1f8f0e1f8f0e1ff
f001fff8037ffc067ffe0e3ffffc3ffffc1ffff807ffe003ffc000ff00>} imagemask 
  }
  91 /G5b MSTT31c1f8 AddChar
/G5c [30.0 0.0 3.0 -1.0 27.0 24.0]
/G5c {
    24 25 true [1 0 0 -1 -3.0 24.0] {<000c00001e0000040000c380007f80003f000f1e001fc03c0fc07e0820fe002087002703006f8181
ff8181dc81818881400c814004836006c63006fe380efc1e1e780ffc0007fc0001f000>} imagemask 
  }
  92 /G5c MSTT31c1f8 AddChar
/G5d [29.0 0.0 3.0 0.0 28.0 25.0]
/G5d {
    25 25 true [1 0 0 -1 -3.0 25.0] {<001c0000001c0000003e00001cff9c001dffdc001fddfc00071c70000f9cf8001ddddc003cff9e00
38630e00ffc1ff80ffc1ff80ffc1ff8038630e001cff9c001ddddc000f9cf800071c70001fddfc00
1dffdc001cff9c00003e0000001c0000001c0000>} imagemask 
  }
  93 /G5d MSTT31c1f8 AddChar
/G5e [38.0 0.0 3.0 -6.0 36.0 25.0]
/G5e {
    33 31 true [1 0 0 -1 -3.0 25.0] {<0f000078003fc001fe007fe0038f0078f0070700f070060380e0380e0380e0380c0380e01c1c0380
e01c180380e00c180380700e380700700e3007003006300600000630000000077000000007700000
00036000000003600000000360000000036000000003e000000003e000000001c000000001c00000
0001c000000001c000000001c000000001c000000001c000000001c000000001c00000>} imagemask 
  }
  94 /G5e MSTT31c1f8 AddChar
/G5f [35.0 0.0 3.0 -7.0 32.0 24.0]
/G5f {
    29 31 true [1 0 0 -1 -3.0 24.0] {<e0000038f80000f8380000e01c0001c00e0003800e000380070007000780070003800e0001c01c00
00f07800007ff00000fff80001f03c0003c01e000300070006000300060003000c0001800c000180
0c0001800c0001800c0001800c00018006000300060003000300060001c01c0000f07800007ff000
001fc000>} imagemask 
  }
  95 /G5f MSTT31c1f8 AddChar
/G60 [32.0 0.0 3.0 -1.0 29.0 25.0]
/G60 {
    26 26 true [1 0 0 -1 -3.0 25.0] {<e00001c0ffffffc01ffffe0003807000038070000380700003807000038070000380700003807000
03807000038070000380700003807000038070000380700003807000038070000380700003807000
0380700003807000038070000ffffc00ffffffc0f00003c0>} imagemask 
  }
  96 /G60 MSTT31c1f8 AddChar
/G61 [36.0 0.0 3.0 0.0 33.0 24.0]
/G61 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<001ff80001ffff8007ffffe01fc007f83f80007c70c0000c60600000c0300000c0300000c03003c0
c0300ff060701c3870e038183fc0300c0f00300c0000300c0000300c00001818c0000c38f80007f0
7f800fe01fffff8007fffe00007fe000>} imagemask 
  }
  97 /G61 MSTT31c1f8 AddChar
/G62 [31.0 0.0 3.0 -7.0 29.0 26.0]
/G62 {
    26 33 true [1 0 0 -1 -3.0 26.0] {<000fc000007ff00000f07c0001e01c0001c00e0003800e0003800700038007000380070003800700
0180070001c0070000c00f000fe00e003fe00e0070701c0060301c00c0103c00c0183800c0187800
c0187000c01870006030e0007070e0003fe0e0000f81c0000001c0000001c0000001c0000001c080
0000e3c000007f8000003e00>} imagemask 
  }
  98 /G62 MSTT31c1f8 AddChar
/G63 [31.0 0.0 3.0 -6.0 28.0 25.0]
/G63 {
    25 31 true [1 0 0 -1 -3.0 25.0] {<e1c3800071e3c00073e7c0003a74e0003e7ce0003c78e0003c78ee003c78ee003870ef003870ff00
3870f3003870f3803870e3803870e3803870e3803870e3803870e3803870e3803870e7003870e700
3870e6003870ee003870ec003870fc003870f8000000f0000003e000000f7000000c700000003000
00001800>} imagemask 
  }
  99 /G63 MSTT31c1f8 AddChar
/G64 [31.0 0.0 3.0 2.0 29.0 24.0]
/G64 {
    26 22 true [1 0 0 -1 -3.0 24.0] {<003f000000ffc00003fff00007c0f800078078000f003c000e001c000e001c000e001c000e001c00
0700380003807000ffc0ffc0ffc0ffc0ffc0ffc000000000000000000000000000000000ffffffc0
ffffffc0ffffffc0>} imagemask 
  }
  100 /G64 MSTT31c1f8 AddChar
/G65 [34.0 0.0 3.0 -6.0 31.0 25.0]
/G65 {
    28 31 true [1 0 0 -1 -3.0 25.0] {<e1c3800071e3c00073e7c0003a74e0003e7ce0003c78e0003c78e0003c78e0003870e0003870e000
3870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e000
3870e0003870e0003870e0003870e0003870e000000070000000784000003fe000001ff000000060
00000040>} imagemask 
  }
  101 /G65 MSTT31c1f8 AddChar
/G66 [31.0 0.0 3.0 -1.0 28.0 24.0]
/G66 {
    25 25 true [1 0 0 -1 -3.0 24.0] {<000e0000001ffc00000ffe0000001f0000001f0000003f00000073000000e3000001c30000038300
180703801c0e03800e1c03800738010003f0000001e0000001e0000003f00000073800000e1c0000
1c0e00003806000070000000e000000040000000>} imagemask 
  }
  102 /G66 MSTT31c1f8 AddChar
/G67 [36.0 0.0 3.0 -5.0 33.0 24.0]
/G67 {
    30 29 true [1 0 0 -1 -3.0 24.0] {<00020000f00f0000f81f00003c1b00001c3380000e7380000e6180000661800007c1800007c18000
07c1800007c1c0000381c3e00380c7f00380ce380380d81c0380f80c0000f00c0000700c0000700c
000078180000fc380000cff00000c3e00001c0000001800000078000003f0000003e0000>} imagemask 
  }
  103 /G67 MSTT31c1f8 AddChar
/G68 [35.0 0.0 3.0 2.0 32.0 22.0]
/G68 {
    29 20 true [1 0 0 -1 -3.0 22.0] {<008040400181c0e007c3e1e00ecf67b03c7c6e3070783c30e0603018000020000000000000000000
0000000000000000000040000180c06003c3c1e00fc763e01cde6f3078787c30e070381840202010
>} imagemask 
  }
  104 /G68 MSTT31c1f8 AddChar
/G69 [26.0 0.0 3.0 -1.0 23.0 24.0]
/G69 {
    20 25 true [1 0 0 -1 -3.0 24.0] {<e000707000e03801c01801801c03800c03000e07000e0700070e00070e00070e00fffff0fffff007
0e00070e00070e000606000e07000e07000c03001c03801801803000c07000e0e00070>} imagemask 
  }
  105 /G69 MSTT31c1f8 AddChar
/G6a [35.0 0.0 3.0 -3.0 36.0 19.0]
/G6a {
    33 22 true [1 0 0 -1 -3.0 19.0] {<000000008000f000018003f8000380063cf801801c1dff0100181fffc100301e0ffe00701807f800
70300f0000e0600f0000e1c00e0000fe001e0000e0003e0000e0007e0000f000dc000070011c0000
7c0e1c00003ff81c00000fe03c0000000038000000003800000000200000>} imagemask 
  }
  106 /G6a MSTT31c1f8 AddChar
/G6b [42.0 0.0 2.0 -5.0 41.0 25.0]
/G6b {
    39 30 true [1 0 0 -1 -2.0 25.0] {<001f00000000238000000061c0001800c1c0001c01c1c0001c01c1c0000c01c380000c01c3800008
01ee00003800fc1fffe000e07fffc007e1fffe000cf3c0c0003873018000307c0180006038030000
e03c060018e01c04001ce01e08001ee00e30001ef00f60000e780780000e7c0fc0000e3ff9e0000c
0fe0f0001c00007c001800003e003000001fc0e0000007ffc0000000fe00>} imagemask 
  }
  107 /G6b MSTT31c1f8 AddChar
/G6c [25.0 0.0 3.0 2.0 22.0 21.0]
/G6c {
    19 19 true [1 0 0 -1 -3.0 21.0] {<03f0000ffe001fff003fff807fffc07fffc07fffe0ffffe0ffffe0ffffe0ffffe0ffffe07fffe07f
ffc07fffc03fff801fff000ffe0001f000>} imagemask 
  }
  108 /G6c MSTT31c1f8 AddChar
/G6d [31.0 0.0 3.0 0.0 29.0 24.0]
/G6d {
    26 24 true [1 0 0 -1 -3.0 24.0] {<00fc000003ff80000f81e0001e00780038001c0030000e0070000f0060000780e0000780c00003c0
c00003c0c00003c0c00003c0c00003c0e00007c0600007c060000f8030000f8018001f000e007f00
0781fe0001fffc00007ff000000fc000>} imagemask 
  }
  109 /G6d MSTT31c1f8 AddChar
/G6e [25.0 0.0 3.0 2.0 22.0 21.0]
/G6e {
    19 19 true [1 0 0 -1 -3.0 21.0] {<ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ff
ffe0ffffe0ffffe0ffffe0ffffe0ffffe0>} imagemask 
  }
  110 /G6e MSTT31c1f8 AddChar
/G6f [29.0 0.0 3.0 0.0 27.0 24.0]
/G6f {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007e00007e00007e00007ffffffffffffffffff>} imagemask 
  }
  111 /G6f MSTT31c1f8 AddChar
/G70 [29.0 0.0 3.0 0.0 27.0 24.0]
/G70 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<fffffffffffffffffffffffffffffff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0
000ff0000ff0000ff0000ff0000ff0000fffffffffffffffffffffffffffffff>} imagemask 
  }
  112 /G70 MSTT31c1f8 AddChar
/G71 [29.0 0.0 3.0 0.0 27.0 24.0]
/G71 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<fffffcfffffcc0000ec0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0
000fc0000fc0000fc0000fc0000fc0000fffffffffffff7fffff3fffff1fffff>} imagemask 
  }
  113 /G71 MSTT31c1f8 AddChar
/G72 [29.0 0.0 3.0 0.0 27.0 24.0]
/G72 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<1fffff3fffff7fffffffffffffffffc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0
000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000efffffcfffffc>} imagemask 
  }
  114 /G72 MSTT31c1f8 AddChar
/G73 [15.0 0.0 3.0 5.0 13.0 19.0]
/G73 {
    10 14 true [1 0 0 -1 -3.0 19.0] {<00000c001e003f003f007f80ffc0ffc07f803f003f001e000c000000>} imagemask 
  }
  115 /G73 MSTT31c1f8 AddChar
/G74 [25.0 0.0 3.0 -2.0 22.0 25.0]
/G74 {
    19 27 true [1 0 0 -1 -3.0 25.0] {<00400000e00000e00001f00003f80003f80007fc000ffe000ffe001fff003fff807fffc07fffc0ff
ffe07fffc07fffc03fff801fff000ffe000ffe0007fc0003f80003f80001f00000e00000e0000040
00>} imagemask 
  }
  116 /G74 MSTT31c1f8 AddChar
/G75 [33.0 0.0 3.0 -2.0 30.0 25.0]
/G75 {
    27 27 true [1 0 0 -1 -3.0 25.0] {<00040000000e0000001f0000003f8000007fc00000ffe00001fff00003fff80007fffc000ffffe00
1fffff003fffff807fffffc0ffffffe07fffffc03fffff801fffff000ffffe0007fffc0003fff800
01fff00000ffe000007fc000003f8000001f0000000e000000040000>} imagemask 
  }
  117 /G75 MSTT31c1f8 AddChar
/G76 [29.0 0.0 3.0 0.0 27.0 24.0]
/G76 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000ff0001ff8000ff00007e00083c101c18383e007c7f00feff81ffff81ff7f
00fe3e007c1c1838083c10007e0000ff0001ff8000ff00007e00003c00001800>} imagemask 
  }
  118 /G76 MSTT31c1f8 AddChar
/G77 [19.0 0.0 3.0 5.0 16.0 19.0]
/G77 {
    13 14 true [1 0 0 -1 -3.0 19.0] {<020007000f801fc03fe07ff0fff8fff87ff03fe01fc00f8007000200>} imagemask 
  }
  119 /G77 MSTT31c1f8 AddChar
/G78 [35.0 0.0 3.0 0.0 32.0 24.0]
/G78 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fffffff8fffffff8fffffff8e0000038e0000038e0c01838e0e03838e0707038e038e038e01dc038
e00f8038e0070038e00f8038e01dc038e038e038e0707038e0e03838e1c01c38e0c00838e0000038
e0000038fffffff8fffffff8fffffff8>} imagemask 
  }
  120 /G78 MSTT31c1f8 AddChar
/G79 [35.0 0.0 3.0 0.0 32.0 24.0]
/G79 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fffffff8fffffff8fffffff8e0000038e0000038e0020038e0070038e00f8038e01dc038e038e038
e0707038e0e03838e1c01c38e3800e38e7000738e6000338e0000038e0000038e0000038e0000038
e0000038fffffff8fffffff8fffffff8>} imagemask 
  }
  121 /G79 MSTT31c1f8 AddChar
/G7a [29.0 0.0 3.0 0.0 27.0 24.0]
/G7a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<1e00787f81fe7f81fef3c3cfe1c387e1c387f1c38f7ffffe7ffffe1ffff801c38001c38001c38001
c3801ffff87ffffe7ffffef1c38fe1c387e1c387f3c3cf7f81fe7f81fe1e0078>} imagemask 
  }
  122 /G7a MSTT31c1f8 AddChar
/G7b [29.0 0.0 3.0 1.0 26.0 23.0]
/G7b {
    23 22 true [1 0 0 -1 -3.0 23.0] {<01c7000339800200801e00f032009821010820820820100860780c404c0480b60280b402c2cc863c
7c781000102000082010083010181c107002108001298001e700>} imagemask 
  }
  123 /G7b MSTT31c1f8 AddChar
/G7c [29.0 0.0 3.0 1.0 27.0 24.0]
/G7c {
    24 23 true [1 0 0 -1 -3.0 24.0] {<00e38001ffc001ffc001ffc01dfff83ffffc3ffffc3ffffc3ff7fc7fddfeff3efffff7ffffffff7f
bdfe0fddf01ffff83ffffc3ffffc3ffffc0ff7f803f7c001f7c000e380>} imagemask 
  }
  124 /G7c MSTT31c1f8 AddChar
/G7d [18.0 0.0 1.0 14.0 16.0 25.0]
/G7d {
    15 11 true [1 0 0 -1 -1.0 25.0] {<1c0e3c1e7038e070e070fc7efc7efc7efc7efc7efc7e>} imagemask 
  }
  125 /G7d MSTT31c1f8 AddChar
/G7e [18.0 0.0 1.0 14.0 16.0 25.0]
/G7e {
    15 11 true [1 0 0 -1 -1.0 25.0] {<fc7efc7efc7efc7efc7efc7e1c0e1c0e381cf078e070>} imagemask 
  }
  126 /G7e MSTT31c1f8 AddChar
/G7f [17.0 0.0 2.0 0.0 14.0 24.0]
/G7f {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  127 /G7f MSTT31c1f8 AddChar
/G80 [29.0 0.0 3.0 0.0 27.0 24.0]
/G80 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c18307e0c70e70e60c306e18187c18183c18183c18183c18183c1
8183c18183e1818760c30670e70e307e0c183c180e00700781e003ffc000ff00>} imagemask 
  }
  128 /G80 MSTT31c1f8 AddChar
/G81 [29.0 0.0 3.0 0.0 27.0 24.0]
/G81 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018300c0c703c0e600c06e00c07c00c03c00c03c00c03c00c03c0
0c03c00c03e00c07600c06700c0e300c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  129 /G81 MSTT31c1f8 AddChar
/G82 [29.0 0.0 3.0 0.0 27.0 24.0]
/G82 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078187c1830fe0c70870e600306e00307c00303c00603c00603c00c03c0
1803c03003e0600760e00670ff0e30ff0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  130 /G82 MSTT31c1f8 AddChar
/G83 [29.0 0.0 3.0 0.0 27.0 24.0]
/G83 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078187e1830ff0c70838e600186e00187c00303c03c03c03e03c00703c0
0183c00183e0018760018670830e30ff0c187c180e00700781e003ffc000ff00>} imagemask 
  }
  131 /G83 MSTT31c1f8 AddChar
/G84 [29.0 0.0 3.0 0.0 27.0 24.0]
/G84 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018300c0c701c0e603c06e03c07c06c03c0cc03c0cc03c18c03c3
ff03c3ff03e00c07600c06700c0e300c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  132 /G84 MSTT31c1f8 AddChar
/G85 [29.0 0.0 3.0 0.0 27.0 24.0]
/G85 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018307f8c70600e606006e06007c07803c07e03c00603c00303c0
0303c00303e00307600706707e0e307c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  133 /G85 MSTT31c1f8 AddChar
/G86 [29.0 0.0 3.0 0.0 27.0 24.0]
/G86 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078181e18307f0c70e10e60c006e1c007c18003c19e03c1bf03c1e383c1
c183c18183e1818760c18670e30e307f0c183c180e00700781e003ffc000ff00>} imagemask 
  }
  134 /G86 MSTT31c1f8 AddChar
/G87 [29.0 0.0 3.0 0.0 27.0 24.0]
/G87 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e007818001830ff8c70ff8e600186e00307c00203c00603c00403c00c03c0
1803c01803e0300760300670300e30600c1860180e00700781e003ffc000ff00>} imagemask 
  }
  135 /G87 MSTT31c1f8 AddChar
/G88 [29.0 0.0 3.0 0.0 27.0 24.0]
/G88 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c18307e0c70e70e60c306e0c307c0e203c07603c03c03c0ee03c0
c703c18383e1818761818671c38e30ff0c187c180e00700781e003ffc000ff00>} imagemask 
  }
  136 /G88 MSTT31c1f8 AddChar
/G89 [29.0 0.0 3.0 0.0 27.0 24.0]
/G89 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c1830fe0c70c30e618306e18187c18183c18383c0c783c0fd83c0
7983c00183e0030760030670860e30fe0c1878180e00700781e003ffc000ff00>} imagemask 
  }
  137 /G89 MSTT31c1f8 AddChar
/G8a [29.0 0.0 3.0 0.0 27.0 24.0]
/G8a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e007818c71833cf8c70d8ce60d8c6e0f067c0f063c0f063c0f063c0f063c0
f063c0f063e0f06760d8c670d8ce30cf8c1807180e00700781e003ffc000ff00>} imagemask 
  }
  138 /G8a MSTT31c1f8 AddChar
/G8b [29.0 0.0 3.0 0.0 27.0 24.0]
/G8b {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fc3fc7f00fe7e3c7efe3c7ffc7e3ffc7e3ffc7e3ffc7e3ffc
7e3ffc7e3ffe3c7f7e3c7e7f00fe3fc3fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  139 /G8b MSTT31c1f8 AddChar
/G8c [29.0 0.0 3.0 0.0 27.0 24.0]
/G8c {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fe3fc7f83fe7f83feffe3ffffe3ffffe3ffffe3ffffe3ffff
e3ffffe3ffffe3ff7fe3fe7fe3fe3fe3fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  140 /G8c MSTT31c1f8 AddChar
/G8d [29.0 0.0 3.0 0.0 27.0 24.0]
/G8d {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f01fc7e007e7e7c3efffe3ffffe3ffffc7ffff87fffe0ffff
c3ffff8fffff3fff7e003e7e003e3e003c1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  141 /G8d MSTT31c1f8 AddChar
/G8e [29.0 0.0 3.0 0.0 27.0 24.0]
/G8e {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f80fc7f003e7f7c3efffe3ffffc7fffc0ffffc0fffffc7fff
fe3ffffe3ffffe3f7f7c3e7f007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  142 /G8e MSTT31c1f8 AddChar
/G8f [29.0 0.0 3.0 0.0 27.0 24.0]
/G8f {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81fe1f83fe1fc7fc1fe7f81feff11ffff31fffe71fffc71fff8f1fff8
007ff8007ff8007f7ff1fe7ff1fe3ff1fc1ff1f80ffff007ffe003ffc000ff00>} imagemask 
  }
  143 /G8f MSTT31c1f8 AddChar
/G90 [29.0 0.0 3.0 0.0 27.0 24.0]
/G90 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f007c7f007e7f3ffeff3fffff3fffff03ffff01fffff0ffff
fc7ffffc7ffffc7f7f787e7f00fe3f83fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  144 /G90 MSTT31c1f8 AddChar
/G91 [29.0 0.0 3.0 0.0 27.0 24.0]
/G91 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fc0fc7f007e7e1f7efe3ffffc7ffffc61fffc007ffc3c3ffc
7e3ffc7e3ffe7e3f7e3c7e7f007e3fc1fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  145 /G91 MSTT31c1f8 AddChar
/G92 [29.0 0.0 3.0 0.0 27.0 24.0]
/G92 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83e003c7e003e7e003efffe3ffffc7ffff8fffff1fffff3ffff
e7ffffc7ffff8fff7f8ffe7f1ffe3f1ffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  146 /G92 MSTT31c1f8 AddChar
/G93 [29.0 0.0 3.0 0.0 27.0 24.0]
/G93 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f81fc7f00fe7e3c7efe3c7ffe1cffff00ffff81ffff00fffe
387ffc7e3ffc7e3f7c3c3e7e007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  147 /G93 MSTT31c1f8 AddChar
/G94 [29.0 0.0 3.0 0.0 27.0 24.0]
/G94 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81fc1f83f00fc7f1c7e7e3e7efe3e3ffe3e3ffe3e3fff1c3fff003fff
863ffffe3ffffc7f7ffc7e7ef8fe3e01fc1e03f80ffff007ffe003ffc000ff00>} imagemask 
  }
  148 /G94 MSTT31c1f8 AddChar
/G95 [29.0 0.0 3.0 0.0 27.0 24.0]
/G95 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff838f83c60f01e60e38ef8e38ff8c7c7f8c7c7f8c7c7f8c7c7f8
c7c7f8c7c7f8e38f78e38e78f01e3ff83c1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  149 /G95 MSTT31c1f8 AddChar
/G96 [33.0 0.0 1.0 0.0 31.0 18.0]
/G96 {
    30 18 true [1 0 0 -1 -1.0 18.0] {<038000fc0e00073838000c7030079070700fd0e0e01fe0e0e018e1e0e0106380e0106fc0e0007870
f000e0307000c038780380383e0f20381ffc207807e030f000001fe0000007c0>} imagemask 
  }
  150 /G96 MSTT31c1f8 AddChar
/G97 [33.0 0.0 2.0 0.0 32.0 18.0]
/G97 {
    30 18 true [1 0 0 -1 -2.0 18.0] {<fc000700738001c038c00070382780301c2fc0381c1fe01c1e1c601c0718201c0fd8201c3878001c
301c003c700c0038700700787013c1f07810ffe03c301f801fe000000f800000>} imagemask 
  }
  151 /G97 MSTT31c1f8 AddChar
/G98 [33.0 0.0 1.0 0.0 31.0 18.0]
/G98 {
    30 18 true [1 0 0 -1 -1.0 18.0] {<0f8000001fe000003c303f807810ffe07003c1f070070078700c0038301c003c3878001c0fd8201c
0718201c1e1c601c1c1fe01c1c2fc0383823803038c00070738001c0fc000700>} imagemask 
  }
  152 /G98 MSTT31c1f8 AddChar
/G99 [33.0 0.0 2.0 0.0 32.0 18.0]
/G99 {
    30 18 true [1 0 0 -1 -2.0 18.0] {<000007c000001fe007f030f01ffc20783e070038780380387000c038f000e030e0007870e0106fc0
e0106380e018e1e0e01fe0e0700fd0e03007107038000c700e000738038000fc>} imagemask 
  }
  153 /G99 MSTT31c1f8 AddChar
/G9a [33.0 0.0 1.0 0.0 32.0 18.0]
/G9a {
    31 18 true [1 0 0 -1 -1.0 18.0] {<01e0000003f8000003fc0000038e00000183000003fd80000fffc0f81f81e3fc3f0037fe7e381ffe
fc3c3f0ef87c7ffcf870fef8f861fc00f863f800783ff0001c1fe000000f8000>} imagemask 
  }
  154 /G9a MSTT31c1f8 AddChar
/G9b [33.0 0.0 1.0 0.0 32.0 18.0]
/G9b {
    31 18 true [1 0 0 -1 -1.0 18.0] {<00000f0000003f8000007f800000e3800001830000037f803e07ffe07f8f03f0ffd801f8fff038fc
e1f8787e7ffc7c3e3efe1c3e007f0c3e003f8c3e001ff83c000ff0700003e000>} imagemask 
  }
  155 /G9b MSTT31c1f8 AddChar
/G9c [33.0 0.0 1.0 0.0 32.0 18.0]
/G9c {
    31 18 true [1 0 0 -1 -1.0 18.0] {<0003e000000ff070001ff83c003f8c3e007f0c3e3efe1c3e7ffc7c3ee1f8787ee7f038fcfff801f8
7f8f03f03e07ffe000037f80000183000000e38000007f8000003f8000000f00>} imagemask 
  }
  156 /G9c MSTT31c1f8 AddChar
/G9d [33.0 0.0 1.0 0.0 32.0 18.0]
/G9d {
    31 18 true [1 0 0 -1 -1.0 18.0] {<000f80001c1fe000783ff000f863f800f861fc00f870fef8f87c7ffcfc3c3f0e7e381fce3f003ffe
1f81e3fc0fffc0f803fd800001830000038e000003fc000003f8000001e00000>} imagemask 
  }
  157 /G9d MSTT31c1f8 AddChar
/G9e [10.0 0.0 3.0 10.0 7.0 15.0]
/G9e {
    4 5 true [1 0 0 -1 -3.0 15.0] {<60f0f0f060>} imagemask 
  }
  158 /G9e MSTT31c1f8 AddChar
/G9f [15.0 0.0 3.0 7.0 13.0 17.0]
/G9f {
    10 10 true [1 0 0 -1 -3.0 17.0] {<1e007f807f80ffc0ffc0ffc0ffc07f807f801e00>} imagemask 
  }
  159 /G9f MSTT31c1f8 AddChar
/Ga0 [10.0 0.0 3.0 10.0 7.0 15.0]
/Ga0 {
    4 5 true [1 0 0 -1 -3.0 15.0] {<f0f0f0f0f0>} imagemask 
  }
  160 /Ga0 MSTT31c1f8 AddChar
/Ga1 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga1 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c003c78001e70000ef0000fe00007e00007e00007e00007e0
0007e00007f0000f70000e78001e3c003c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  161 /Ga1 MSTT31c1f8 AddChar
/Ga2 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga2 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f81fc7e007e7c003ef8001ff8001ff0000ff0000ff0000ff0
000ff8001ff8001f7c003e7e007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  162 /Ga2 MSTT31c1f8 AddChar
/Ga3 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga3 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83ffffc7ffffe7fc3feff00ffff00fffe007ffe007ffe007ffe
007fff00ffff00ff7fc3fe7ffffe3ffffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  163 /Ga3 MSTT31c1f8 AddChar
/Ga4 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga4 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c003c78001e70000ef03c0fe07e07e0ff07e0ff07e0ff07e0
ff07e07e07f03c0f70000e78001e3c003c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  164 /Ga4 MSTT31c1f8 AddChar
/Ga5 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga5 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c7e3c78ff1e71ff8ef3c3cfe781e7e718e7e73ce7e73ce7e7
18e7e781e7f3c3cf71ff8e78ff1e3c7e3c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  165 /Ga5 MSTT31c1f8 AddChar
/Ga6 [31.0 0.0 3.0 0.0 29.0 24.0]
/Ga6 {
    26 24 true [1 0 0 -1 -3.0 24.0] {<000fc000007ff00001fffc000781fe000e007f0018001f0030000f8060000780600007c0e00007c0
c00003c0c00003c0c00003c0c00003c0c00003c0e00007806000078070000f0030000e0038001c00
1e0078000f81e00003ff800000fc0000>} imagemask 
  }
  166 /Ga6 MSTT31c1f8 AddChar
/Ga7 [15.0 0.0 3.0 7.0 13.0 17.0]
/Ga7 {
    10 10 true [1 0 0 -1 -3.0 17.0] {<ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0>} imagemask 
  }
  167 /Ga7 MSTT31c1f8 AddChar
/Ga8 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga8 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007e00007e00007e00007ffffffffffffffffff>} imagemask 
  }
  168 /Ga8 MSTT31c1f8 AddChar
/Ga9 [29.0 0.0 4.0 6.0 25.0 24.0]
/Ga9 {
    21 18 true [1 0 0 -1 -4.0 24.0] {<00200000200000200000200000700000700000700000700000f80000f80000f80001fc0003fe0007
ff000fff801f8fc03800e0400010>} imagemask 
  }
  169 /Ga9 MSTT31c1f8 AddChar
/Gaa [29.0 0.0 3.0 0.0 27.0 24.0]
/Gaa {
    24 24 true [1 0 0 -1 -3.0 24.0] {<000000001800001800001800003c00003c00003c00007e00007e0001ff800ffff07ffffe7ffffe0f
fff001ff80007e00007e00003c00003c00003c00001800001800001800000000>} imagemask 
  }
  170 /Gaa MSTT31c1f8 AddChar
/Gab [29.0 0.0 3.0 2.0 26.0 24.0]
/Gab {
    23 22 true [1 0 0 -1 -3.0 24.0] {<001000001000001000003800003800003800007c00007c007ffffc3ffff81ffff00fffe003ff8001
ff0001ff0003ff8003ff8003ef800383800701c0040040080040>} imagemask 
  }
  171 /Gab MSTT31c1f8 AddChar
/Gac [29.0 0.0 4.0 0.0 25.0 24.0]
/Gac {
    21 24 true [1 0 0 -1 -4.0 24.0] {<002000002000002000007000007000007000c0f8187efbf03fffe01fffc00fff8007ff0007ff000f
ff801fffc03fffe07efbf0c0f818007000007000007000002000002000002000>} imagemask 
  }
  172 /Gac MSTT31c1f8 AddChar
/Gad [29.0 0.0 3.0 0.0 27.0 24.0]
/Gad {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000018000018000c3c300f3cf007ffe007ffe003ffc003ffc00ffff07ffffe7ffffe0f
fff003ffc003ffc007ffe007ffe00f3cf00c3c30001800001800001800000000>} imagemask 
  }
  173 /Gad MSTT31c1f8 AddChar
/Gae [29.0 0.0 3.0 0.0 27.0 24.0]
/Gae {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000318c003bdc003ffc003ffc03ffffc3ffffc1ffff80ffff01ffff87ffffe7ffffe1f
fff80ffff01ffff83ffffc3ffffc03ffc003ffc003bdc00318c0001800000000>} imagemask 
  }
  174 /Gae MSTT31c1f8 AddChar
/Gaf [29.0 0.0 3.0 0.0 27.0 24.0]
/Gaf {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000018000028000c2c300f2cf007cf6005cce004e9c0026bc00f2f307ff80e601ffe1c
f4f003d6400397400733a00673e00fb4f00c3430001800001800001800000000>} imagemask 
  }
  175 /Gaf MSTT31c1f8 AddChar
/Gb0 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb0 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0010000010000010000010000010000fffe0081020081020081020081020081020ffc7fe08102008
10200810200810200810200fffe0001000001000001000001000001000>} imagemask 
  }
  176 /Gb0 MSTT31c1f8 AddChar
/Gb1 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb1 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<001000001000001000001000001000007c00019300031180021080041040041040ffeffe04104004
1040021080031180019300007c00001000001000001000001000001000>} imagemask 
  }
  177 /Gb1 MSTT31c1f8 AddChar
/Gb2 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb2 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800001800001800003c00003c00007e0000660000c30001c3800781e01e0078f8003ff8001f1e
00780700e001818000c300006600006e00003c00003c00001800001800001800>} imagemask 
  }
  178 /Gb2 MSTT31c1f8 AddChar
/Gb3 [29.0 0.0 6.0 3.0 24.0 21.0]
/Gb3 {
    18 18 true [1 0 0 -1 -6.0 21.0] {<400080e001c07c0f803fff0033f30030030018060018060018060018060018060018060030030033
f3003fff007c0f80e001c0400080>} imagemask 
  }
  179 /Gb3 MSTT31c1f8 AddChar
/Gb4 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb4 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000e70001c3800381c00700e00e00701c7e3838ff1c70860ee00c07e0180770
300e38001c1c00380e30700730e00381c001c38000e700007e00003c00001800>} imagemask 
  }
  180 /Gb4 MSTT31c1f8 AddChar
/Gb5 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb5 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003e7c007e7e01fe7f81fc3f83fc3fc7fc3fe7f81fe800001e00007f0000ff8001ffe007fff
00fffe007f7e007e7e007e7c183e3c7e3c1cff3809ff9007ffe003ffc0007e00>} imagemask 
  }
  181 /Gb5 MSTT31c1f8 AddChar
/Gb6 [29.0 0.0 2.0 2.0 27.0 24.0]
/Gb6 {
    25 22 true [1 0 0 -1 -2.0 24.0] {<001c0000001c0000003e0000002e0000002e0000004f000000470000004700007f87ff0020001e00
10003c000c0078000200e0000101c0000201c0000201e0000230e000024ce0000482f00007017000
0400f00008003800>} imagemask 
  }
  182 /Gb6 MSTT31c1f8 AddChar
/Gb7 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb7 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501214401e04801602801802801802a0100a80100280
30028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  183 /Gb7 MSTT31c1f8 AddChar
/Gb8 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb8 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801382801302801c02a0180a80300280
10028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  184 /Gb8 MSTT31c1f8 AddChar
/Gb9 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb9 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b1130301018201008501014401004801002801002801102a03fca80100280
00028000025000145000142000083000181b01300c106003018000fe00>} imagemask 
  }
  185 /Gb9 MSTT31c1f8 AddChar
/Gba [29.0 0.0 3.0 0.0 26.0 23.0]
/Gba {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002803002a0300a801c0280
17028003824000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  186 /Gba MSTT31c1f8 AddChar
/Gbb [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbb {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002803002a0100a80180280
1802800c024006045006142000083000181b01b00c106003018000fe00>} imagemask 
  }
  187 /Gbb MSTT31c1f8 AddChar
/Gbc [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbc {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801002a0100a80100280
10028010024010045010142010083000181b01b00c106003018000fe00>} imagemask 
  }
  188 /Gbc MSTT31c1f8 AddChar
/Gbd [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbd {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801802a0100a80300280
300280600240c00450c0142000083000181b01b00c106003018000fe00>} imagemask 
  }
  189 /Gbd MSTT31c1f8 AddChar
/Gbe [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbe {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801802a0180a80700281
d0028380024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  190 /Gbe MSTT31c1f8 AddChar
/Gbf [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbf {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601911b0301018201008501014401004801002801002811002a7f80a80100280
00028000025000145000142000083000181901b00c106003018000fe00>} imagemask 
  }
  191 /Gbf MSTT31c1f8 AddChar
/Gc0 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc0 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004839002819002807002a0300a80180280
10028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  192 /Gc0 MSTT31c1f8 AddChar
/Gc1 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc1 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b030101820100850901440f00480d002803002803002a0100a80100280
18028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  193 /Gc1 MSTT31c1f8 AddChar
/Gc2 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc2 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601a18b0301018201008501014401004801002801002801002a0100a80100280
10028000024000045000142000083000181a00b00c106003018000fe00>} imagemask 
  }
  194 /Gc2 MSTT31c1f8 AddChar
/Gc3 [29.0 0.0 3.0 -3.0 27.0 26.0]
/Gc3 {
    24 29 true [1 0 0 -1 -3.0 26.0] {<0002010003030003870003cf00037b00033300030300030300030300230300630300e30301e30703
630e067ffe0c7ffc1800383000706000e06001c03003801807000c7e00067c0003600001e00000e0
00006000002000>} imagemask 
  }
  195 /Gc3 MSTT31c1f8 AddChar
/Gc4 [29.0 0.0 3.0 -3.0 27.0 26.0]
/Gc4 {
    24 29 true [1 0 0 -1 -3.0 26.0] {<804000c0c000e1c000f3c000dec000ccc000c0c000c0c000c0c000c0c400c0c600c0c700e0c78070
c6c07ffe603ffe301c00180e000c07000603800601c00c00e018007e30003e600006c00007800007
00000600000400>} imagemask 
  }
  196 /Gc4 MSTT31c1f8 AddChar
/Gc5 [29.0 0.0 2.0 -3.0 26.0 26.0]
/Gc5 {
    24 29 true [1 0 0 -1 -2.0 26.0] {<00200000600000e00001e000036000067c000c7e001807003003806001c06000e03000701800380c
7ffc067ffe03630e01e30700e30300630300230300030300030300030300033300037b0003cf0003
87000303000201>} imagemask 
  }
  197 /Gc5 MSTT31c1f8 AddChar
/Gc6 [29.0 0.0 2.0 -3.0 26.0 26.0]
/Gc6 {
    24 29 true [1 0 0 -1 -2.0 26.0] {<0004000006000007000007800006c0003e60007e3000e01801c00c0380060700060e000c1c00183f
fe307ffe6070c6c0e0c780c0c700c0c600c0c400c0c000c0c000c0c000ccc000dec000f3c000e1c0
00c0c000804000>} imagemask 
  }
  198 /Gc6 MSTT31c1f8 AddChar
/Gc7 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc7 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<000000000060000000f0000001980000030c0000060600000c030000180180003000c0007e07e000
fe07f0000606000006060000070600000387fff801c7fff000e60060007600c0003e0180001e0180
000f00c0000780600003fff00000fff8>} imagemask 
  }
  199 /Gc7 MSTT31c1f8 AddChar
/Gc8 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc8 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<0000000000003000000078000000cc00000186000003030000060180000c00c000180060003f03f0
007f03f8000303000003030000030700ffff0e007fff1c0030033800180370000c03e0000c03c000
18078000300f00007ffe0000fff80000>} imagemask 
  }
  200 /Gc8 MSTT31c1f8 AddChar
/Gc9 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc9 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<0000fff80003fff000078060000f00c0001e0180003e0180007600c000e6006001c7fff00387fff8
070600000606000006060000fe07f0007e07e0003000c000180180000c03000006060000030c0000
0198000000f000000060000000000000>} imagemask 
  }
  201 /Gc9 MSTT31c1f8 AddChar
/Gca [35.0 0.0 3.0 0.0 32.0 24.0]
/Gca {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fff800007ffe0000300f0000180780000c03c0000c03e00018037000300338007fff1c00ffff0e00
000307000003030000030300007f03f8003f03f000180060000c00c0000601800003030000018600
0000cc00000078000000300000000000>} imagemask 
  }
  202 /Gca MSTT31c1f8 AddChar
/Gcb [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcb {
    31 31 true [1 0 0 -1 -1.0 25.0] {<e800000eee00007eef8001fe77c007f073e00f8e71f01f1c38f03e3c3c783c781c3878f80e1c71f0
0f9ce3e007dc1fc001eeff0000eefc00002ee00000000000000ee800007eee0001feef0007f07fc0
0f8e73e01f1c71f03e3c38f03c383c7878781e3871f00f3cf3e00f9c1fc007dcff0001eefc0000ee
e000002e>} imagemask 
  }
  203 /Gcb MSTT31c1f8 AddChar
/Gcc [33.0 0.0 0.0 -7.0 34.0 27.0]
/Gcc {
    34 34 true [1 0 0 -1 0.0 27.0] {<ffffffffc08bfffffc4088ffffe040883fff8040c41ffe03c0c60ffc1c40c707f838c0e3c7f070c0
e1c3f0e1c0f0e1e1c1c0f071c383c0f831c707c0fc10f80fc0fe08c03fc0ff88c0ffc0ffe8c7ffc0
ffffffffc0ffffffffc0fff0c4ffc0ff80c47fc0ff00c41fc0fc0fc20fc0f830e307c0f071e1c3c0
e1e1f1e3c0e3c3f0e1c0c383f871c0c707f838c08e0ffc18c0f01ffe08c0807fff044081ffffc440
8fffffe440ffffffffc0>} imagemask 
  }
  204 /Gcc MSTT31c1f8 AddChar
/Gcd [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcd {
    31 31 true [1 0 0 -1 -1.0 25.0] {<00f8003003fe00f80fff81fc1fffc3fe1f83eff83e00ffc03c007f007800fc007801f0007007c000
700f8000701e1800703c3e0070781f0070f00f0071e007803b8003803f0003803e0003801e200780
1c780f003c3fff007e1ffe007e03f8007e000000fe000000fe000000fe000000fc000000fc000000
78000000>} imagemask 
  }
  205 /Gcd MSTT31c1f8 AddChar
/Gce [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gce {
    31 31 true [1 0 0 -1 -1.0 25.0] {<7c000000ff81ff00ffcfffc0fffffff0fffe03f87ffc00fc1f9e007c0007003c0003803e0021c01e
0071e01e00e0f01e00e0781e00c03c1c01c01c3c01c00e3801c00f7801c007f001c023e001c073c0
01e0f1e000f1e1e000ffe0f0007fc0f8001f007c0000007c0000003e0000003e0000003c00000018
00000010>} imagemask 
  }
  206 /Gce MSTT31c1f8 AddChar
/Gcf [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcf {
    31 31 true [1 0 0 -1 -1.0 25.0] {<100000003000000078000000f8000000f80000007c0000007c01f0003e07fc001e0ffe000f0f1e00
0f1e0f00079c07000f8807001fc007003de0070038e007007870070070780600f03c0e00f01e0e00
f00f1c00f0070800f80380007801c0007c00f3f03e007ffc3f80fffe1ffffffe07ffe7fe01ff03fe
0000007c>} imagemask 
  }
  207 /Gcf MSTT31c1f8 AddChar
/Gd0 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd0 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<0000003c0000007e0000007e000000fe000000fe000000fe000000fc003f80fc00fff0fc01fff878
01e03c7003c008f0038000f8038001f8038003b803c00f1c01e01e1c01f03c1c00f8781c0030f01c
0003e01c0007c01c001f003c007e003c01fc007807fe00f83fef83f0ff87fff07f03ffe03e00ffc0
18003e00>} imagemask 
  }
  208 /Gd0 MSTT31c1f8 AddChar
/Gd1 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd1 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<78000000fc000000fc000000fe000000fe000000fe0000007e0000007e03f8007e1ffe003c3fff00
1c780f001e2007803e0003803f0003803b80038071e0078070f00f0070781f00703c3e00701e1800
700f80007007c0007801f0007800fc003c007f003e00ffc01f83eff81fffc3fe0fff81fc03fe00f8
00f80030>} imagemask 
  }
  209 /Gd1 MSTT31c1f8 AddChar
/Gd2 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd2 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<00000010000000180000003c0000003e0000003e0000007c001f007c007fc0f800ffe0f000f1e1e0
01e0f1e001c073c001c023e001c007f001c00f7801c00e3801c01c3c00c03c1c00e0781e00e0f01e
0071e01e0021c01e0003803e0007003c1f9e007c7ffc00fcfffe03f8fffffff0ffcfffc0ff81ff00
7c000000>} imagemask 
  }
  210 /Gd2 MSTT31c1f8 AddChar
/Gd3 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd3 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<0000007c01ff03fe07ffe7fe1ffffffe3f80fffe3e007ffc7c00f3f07801c000f8038000f0070800
f00f1c00f01e0e00f03c0e00707806007870070038e007003de007001fc007000f880700079c0700
0f1e0f000f0f1e001e0ffe003e07fc007c01f0007c000000f8000000f80000007800000030000000
10000000>} imagemask 
  }
  211 /Gd3 MSTT31c1f8 AddChar
/Gd4 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd4 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<18003e003e00ffc07f03ffe0ff87fff03fef83f007fe00f801fc0078007e003c001f003c0007c01c
0003e01c0030f01c00f8781c01f03c1c01e01e1c03c00f1c038003b8038001f8038000f803c008f0
01e03c7001fff87800fff0fc003f80fc000000fc000000fe000000fe000000fe0000007e0000007e
0000003c>} imagemask 
  }
  212 /Gd4 MSTT31c1f8 AddChar
/Gd5 [41.0 0.0 3.0 0.0 39.0 24.0]
/Gd5 {
    36 24 true [1 0 0 -1 -3.0 24.0] {<001ffffff0003ffffff0007ffffff000e000007001c0000070038100107007038038700e01c07070
1c00e0e07038007bc07070003f8070e0001f0070e0001f007070003b8070380071c0701c00e0e070
0e01c070700703803870038100107001c000007000e0000070007ffffff0003ffffff0001ffffff0
>} imagemask 
  }
  213 /Gd5 MSTT31c1f8 AddChar
/Gd6 [41.0 0.0 2.0 0.0 38.0 24.0]
/Gd6 {
    36 24 true [1 0 0 -1 -2.0 24.0] {<ffffff0000ffffff8000ffffffc000e000006000e000003000e080081800e1c01c0c00e0e0380600
e070700300e03de00180e01fc000c0e00f800060e00f800060e01dc000c0e038e00180e070700300
e0e0380600e1c01c0c00e080081800e000003000e000006000ffffffc000ffffff8000ffffff0000
>} imagemask 
  }
  214 /Gd6 MSTT31c1f8 AddChar
/Gd7 [26.0 0.0 3.0 0.0 24.0 24.0]
/Gd7 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<0000080000300000500001a000064000184000208000c0800301000c02001002006004007ffc001f
fe000ffe0003ff0000ff80003f80001fc00007c00001e0000070000030000008>} imagemask 
  }
  215 /Gd7 MSTT31c1f8 AddChar
/Gd8 [26.0 0.0 2.0 0.0 23.0 24.0]
/Gd8 {
    21 24 true [1 0 0 -1 -2.0 24.0] {<8000006000005000002c000013000010c00008200008180004060002018002004001003001fff003
ffc003ff8007fe000ff8000fe0001fc0001f00003c0000700000600000800000>} imagemask 
  }
  216 /Gd8 MSTT31c1f8 AddChar
/Gd9 [29.0 0.0 3.0 3.0 27.0 24.0]
/Gd9 {
    24 21 true [1 0 0 -1 -3.0 24.0] {<00000000180000180000340000720000720000f10000f10001f08001f08003f04007f02007f0200f
f8100fe6101f81081f00c83c003470000a600006800001>} imagemask 
  }
  217 /Gd9 MSTT31c1f8 AddChar
/Gda [29.0 0.0 3.0 0.0 27.0 21.0]
/Gda {
    24 21 true [1 0 0 -1 -3.0 21.0] {<80000160000650000e2c003c1300f81081f80867f0081ff0040fe0040fe0020fc0010f80010f8000
8f00008f00004e00004e00002c00001800001800000000>} imagemask 
  }
  218 /Gda MSTT31c1f8 AddChar
/Gdb [29.0 0.0 3.0 0.0 26.0 24.0]
/Gdb {
    23 24 true [1 0 0 -1 -3.0 24.0] {<00fe0003ffc007ffe01ffff01ffff83e7ffc7c7ffc787ffef00000e00000c00000800000800000c0
0000e00000f00000787ffe7c7ffc3e7ffc1ffff81ffff007ffe003ffc000fe00>} imagemask 
  }
  219 /Gdb MSTT31c1f8 AddChar
/Gdc [29.0 0.0 3.0 0.0 26.0 24.0]
/Gdc {
    23 24 true [1 0 0 -1 -3.0 24.0] {<00fe0007ff800fffc01ffff03ffff07ffcf87ffc7cfffc3c00001e00000e00000600000200000200
000600000e00001efffc3c7ffc7c7ffcf83ffff01ffff00fffc007ff8000fe00>} imagemask 
  }
  220 /Gdc MSTT31c1f8 AddChar
/Gdd [29.0 0.0 3.0 1.0 27.0 24.0]
/Gdd {
    24 23 true [1 0 0 -1 -3.0 24.0] {<00ff0003e7c007c3e01f81f81f00f83e007c7c003e78001ef8001fff00ffff00ffff00ffff00ffff
00ffff00ff7f00fe7f00fe7f00fe3f00fc1f00f80f00f00700e0010080>} imagemask 
  }
  221 /Gdd MSTT31c1f8 AddChar
/Gde [29.0 0.0 3.0 0.0 27.0 23.0]
/Gde {
    24 23 true [1 0 0 -1 -3.0 23.0] {<0100800700e00f00f01f00f83f00fc7f00fe7f00fe7f00feff00ffff00ffff00ffff00ffff00ffff
00fff8001f78001e7c003e3e007c1f00f81f81f807c3e003e7c000ff00>} imagemask 
  }
  222 /Gde MSTT31c1f8 AddChar
/Gdf [32.0 0.0 3.0 0.0 30.0 23.0]
/Gdf {
    27 23 true [1 0 0 -1 -3.0 23.0] {<000e0000003c00000078000000f0000001e0000003c00000078000000f0000001e0000003c000000
7fffffe0ffffffe07fffffe03c0000001e0000000f0000000780000003c0000001e0000000f00000
00780000003c0000000e0000>} imagemask 
  }
  223 /Gdf MSTT31c1f8 AddChar
/Ge0 [32.0 0.0 2.0 0.0 29.0 23.0]
/Ge0 {
    27 23 true [1 0 0 -1 -2.0 23.0] {<000e0000000780000003c0000001e0000000f0000000780000003c0000001e0000000f0000000780
ffffffc0ffffffe0ffffffc00000078000000f0000001e0000003c00000078000000f0000001e000
0003c00000078000000e0000>} imagemask 
  }
  224 /Ge0 MSTT31c1f8 AddChar
/Ge1 [29.0 0.0 3.0 -3.0 26.0 24.0]
/Ge1 {
    23 27 true [1 0 0 -1 -3.0 24.0] {<001000003800007c0000fe0001ff0003ff8007bbc00f39e01e38f03c387878383c70381ce0380ec0
38068038020038000038000038000038000038000038000038000038000038000038000038000038
00>} imagemask 
  }
  225 /Ge1 MSTT31c1f8 AddChar
/Ge2 [29.0 0.0 4.0 0.0 27.0 27.0]
/Ge2 {
    23 27 true [1 0 0 -1 -4.0 27.0] {<003800003800003800003800003800003800003800003800003800003800003800003800803802c0
3806e0380e70381c78383c3c38781e38f00f39e007bbc003ff8001ff0000fe00007c000038000010
00>} imagemask 
  }
  226 /Ge2 MSTT31c1f8 AddChar
/Ge3 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge3 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<ffff80ffffc0fffff0f80000fc0000fe0000ef0000e78000e3c000e1e000e0f000e07800e03c00e0
1e00e00f00e00780e003c06001e02000e0000040>} imagemask 
  }
  227 /Ge3 MSTT31c1f8 AddChar
/Ge4 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge4 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<1ffff03ffff0fffff00001f00003f00007f0000f70001e70003c7000787000f07001e07003c07007
80700f00701e00703c0070780060700040200000>} imagemask 
  }
  228 /Ge4 MSTT31c1f8 AddChar
/Ge5 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge5 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<0000002000606000f0e001e0e003c0e00780e00f00e01e00e03c00e07800e0f000e1e000e3c000e7
8000ef0000fe0000fc0000ffffe0ffffc0ffff80>} imagemask 
  }
  229 /Ge5 MSTT31c1f8 AddChar
/Ge6 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge6 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<000000600040f000607800703c00701e00700f007007807003c07001e07000f070007870003c7000
1e70000f700007f00003f07ffff03ffff01ffff0>} imagemask 
  }
  230 /Ge6 MSTT31c1f8 AddChar
/Ge7 [35.0 0.0 3.0 0.0 32.0 24.0]
/Ge7 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<001fe000003fc000007f800000ff000001fe000003fc000007f800000ff000001fe000003ffffff8
7ffffff8fffffff8fffffff87ffffff83ffffff81fe000000ff0000007f8000003fc000001fe0000
00ff0000007f8000003fc000001fe000>} imagemask 
  }
  231 /Ge7 MSTT31c1f8 AddChar
/Ge8 [35.0 0.0 3.0 0.0 32.0 24.0]
/Ge8 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<003fc000001fe000000ff0000007f8000003fc000001fe000000ff0000007f8000003fc0ffffffe0
fffffff0fffffff8fffffff8fffffff0ffffffe000003fc000007f800000ff000001fe000003fc00
0007f800000ff000001fe000003fc000>} imagemask 
  }
  232 /Ge8 MSTT31c1f8 AddChar
/Ge9 [29.0 0.0 3.0 -5.0 27.0 24.0]
/Ge9 {
    24 29 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000ff0001ff8003ffc007ffe00ffff01ffff83ffffc7ffffeff7efffe7e7ffc
7e3ff87e1ff07e0fe07e07c07e03807e01007e00007e00007e00007e00007e00007e00007e00007e
00007e00007e00>} imagemask 
  }
  233 /Ge9 MSTT31c1f8 AddChar
/Gea [29.0 0.0 3.0 0.0 27.0 29.0]
/Gea {
    24 29 true [1 0 0 -1 -3.0 29.0] {<007e00007e00007e00007e00007e00007e00007e00007e00007e00007e00807e01c07e03e07e07f0
7e0ff87e1ffc7e3ffe7e7fff7eff7ffffe3ffffc1ffff80ffff007ffe003ffc001ff8000ff00007e
00003c00001800>} imagemask 
  }
  234 /Gea MSTT31c1f8 AddChar
/Geb [29.0 0.0 3.0 0.0 26.0 23.0]
/Geb {
    23 23 true [1 0 0 -1 -3.0 23.0] {<ffff80ffffc0ffffe0fffff0fffff8fffffcffc000ffe000fff000fff800fffc00fdfe00fcff00fc
7f80fc3fc0fc1fe0fc0ff07c07f83c03fc1c01fc0c00f8040070000020>} imagemask 
  }
  235 /Geb MSTT31c1f8 AddChar
/Gec [29.0 0.0 3.0 0.0 26.0 23.0]
/Gec {
    23 23 true [1 0 0 -1 -3.0 23.0] {<03fffe07fffe0ffffe1ffffe3ffffe7ffffe0007fe000ffe001ffe003ffe007ffe00ff7e01fe7e03
fc7e07f87e0ff07e1fe07e3fc07c7f80787f00703e00601c0040080000>} imagemask 
  }
  236 /Gec MSTT31c1f8 AddChar
/Ged [29.0 0.0 3.0 0.0 26.0 23.0]
/Ged {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0000000400300c00781c00fc3c01fe7c03fcfc07f8fc0ff0fc1fe0fc3fc0fc7f80fcff00fdfe00ff
fc00fff800fff000ffe000fffffcfffff8fffff0ffffe0ffffc0ffff80>} imagemask 
  }
  237 /Ged MSTT31c1f8 AddChar
/Gee [29.0 0.0 3.0 0.0 26.0 23.0]
/Gee {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0000001800403c00607e0070ff00787f807c3fc07e1fe07e0ff07e07f87e03fc7e01fe7e00ff7e00
7ffe003ffe001ffe000ffe7ffffe3ffffe1ffffe0ffffe07fffe03fffe>} imagemask 
  }
  238 /Gee MSTT31c1f8 AddChar
/Gef [29.0 0.0 3.0 2.0 27.0 24.0]
/Gef {
    24 22 true [1 0 0 -1 -3.0 24.0] {<00200000600000e00001e0000360000660000c7fff187fff300003600003c00003c0000360000330
0003187fff0c7fff06600003600001e00000e000006000002000>} imagemask 
  }
  239 /Gef MSTT31c1f8 AddChar
/Gf0 [29.0 0.0 2.0 2.0 26.0 24.0]
/Gf0 {
    24 22 true [1 0 0 -1 -2.0 24.0] {<000000000400000600000700000680000640fffe20fffe10c00008c00004c00002c00002c00004c0
0008fffe10fffe20000640000680000700000600000400000000>} imagemask 
  }
  240 /Gf0 MSTT31c1f8 AddChar
/Gf1 [27.0 0.0 3.0 0.0 25.0 24.0]
/Gf1 {
    22 24 true [1 0 0 -1 -3.0 24.0] {<00300000780000cc000186000303000601800c00c01800603000307f03f8ff03fc03030003030003
030003030003030003030003030003030003030003030003030003ff0003ff00>} imagemask 
  }
  241 /Gf1 MSTT31c1f8 AddChar
/Gf2 [27.0 0.0 1.0 0.0 23.0 24.0]
/Gf2 {
    22 24 true [1 0 0 -1 -1.0 24.0] {<03ff0003ff00030300030300030300030300030300030300030300030300030300030300030300ff
03fc7f03f83000301800600c00c006018003030001860000cc00007800003000>} imagemask 
  }
  242 /Gf2 MSTT31c1f8 AddChar
/Gf3 [35.0 0.0 3.0 2.0 33.0 22.0]
/Gf3 {
    30 20 true [1 0 0 -1 -3.0 22.0] {<002010000060180000e01c0001e01e0003601b00067ff9800c7ff8c0180000603000003060000018
6000001830000030180000600c7ff8c0067ff98003601b0001e01e0000e01c000060180000201000
>} imagemask 
  }
  243 /Gf3 MSTT31c1f8 AddChar
/Gf4 [27.0 0.0 3.0 -6.0 23.0 24.0]
/Gf4 {
    20 30 true [1 0 0 -1 -3.0 24.0] {<00000000600000f000019800030c000606000c03001801803000c07e07e0fe07f006060006060006
0600060600060600060600060600060600fe07f07e07e03000c01801800c0300060600030c000198
0000f000006000000000>} imagemask 
  }
  244 /Gf4 MSTT31c1f8 AddChar
/Gf5 [26.0 0.0 3.0 4.0 23.0 24.0]
/Gf5 {
    20 20 true [1 0 0 -1 -3.0 24.0] {<fffc00fff800c03000c06000c06000c03000c01800c00c00c00600d80300fc0180e600c0c3006081
803000c0600060c0003180001b00000e00000400>} imagemask 
  }
  245 /Gf5 MSTT31c1f8 AddChar
/Gf6 [26.0 0.0 3.0 4.0 23.0 24.0]
/Gf6 {
    20 20 true [1 0 0 -1 -3.0 24.0] {<03fff001fff000c03000603000603000c0300180300300300600300c01b01803f0300670600c30c0
181060300030600018c0000d8000070000020000>} imagemask 
  }
  246 /Gf6 MSTT31c1f8 AddChar
/Gf7 [26.0 0.0 3.0 0.0 24.0 20.0]
/Gf7 {
    21 20 true [1 0 0 -1 -3.0 20.0] {<000400000f000019800030c000606000c030818030c30060e600c0fc0180d80300c00600c00c00c0
1800c03000c06000c06000c03000fff800fffc00>} imagemask 
  }
  247 /Gf7 MSTT31c1f8 AddChar
/Gf8 [26.0 0.0 2.0 0.0 23.0 20.0]
/Gf8 {
    21 20 true [1 0 0 -1 -2.0 20.0] {<0100000780000cc000186000303000601800600c083006181803380c01f80600d803001801801800
c01800601800301800301800601800fff801fff8>} imagemask 
  }
  248 /Gf8 MSTT31c1f8 AddChar
/Gf9 [16.0 0.0 2.0 7.0 15.0 17.0]
/Gf9 {
    13 10 true [1 0 0 -1 -2.0 17.0] {<fff8fff8c018c018c018c018c018c018fff8fff8>} imagemask 
  }
  249 /Gf9 MSTT31c1f8 AddChar
/Gfa [13.0 0.0 2.0 7.0 12.0 17.0]
/Gfa {
    10 10 true [1 0 0 -1 -2.0 17.0] {<ffc0ffc0c0c0c0c0c0c0c0c0c0c0c0c0ffc0ffc0>} imagemask 
  }
  250 /Gfa MSTT31c1f8 AddChar
/Gfb [21.0 0.0 2.0 5.0 18.0 20.0]
/Gfb {
    16 15 true [1 0 0 -1 -2.0 20.0] {<000008001c1c1c3e1e7e1efc0ff007e007c007f00ff83e7ffe3e7c1c3800>} imagemask 
  }
  251 /Gfb MSTT31c1f8 AddChar
/Gfc [26.0 0.0 2.0 4.0 24.0 25.0]
/Gfc {
    22 21 true [1 0 0 -1 -2.0 25.0] {<0000040000180000300000600001c0000380000700000e00001e00001c00003800307000f8f00078
e0003dc0001fc0001f80000f80000f00000e0000040000>} imagemask 
  }
  252 /Gfc MSTT31c1f8 AddChar
/Gfd [29.0 0.0 3.0 0.0 27.0 24.0]
/Gfd {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e08007e1c1c7e1c3e7e1e7e7e1ef87e0ff07e07e07e07c07e0
7e07e0ff87e3e7e7e7e3e7e7c1c7e38007e00007e00007ffffffffffffffffff>} imagemask 
  }
  253 /Gfd MSTT31c1f8 AddChar
/Gfe [29.0 0.0 3.0 0.0 29.0 25.0]
/Gfe {
    26 25 true [1 0 0 -1 -3.0 25.0] {<000000c0ffffff80ffffff00ffffff00e0001f00e0003f00e0007700e000e700e001c700e0038700
e0078700e7070700ef8e0700e79e0700e3dc0700e1f80700e1f80700e0f00700e0e00700e0400700
e0000700e0000700ffffff00ffffff00ffffff00>} imagemask 
  }
  254 /Gfe MSTT31c1f8 AddChar
/Gff [34.0 0.0 1.0 0.0 32.0 25.0]
/Gff {
    31 25 true [1 0 0 -1 -1.0 25.0] {<00003fe00001fffca00ffffe0dbfc61e09be060e802b060e249f060e09bf060e802b060e241f060e
0dbf1fee8125fffe201fe61e0dbf060e8135060e200f060e0dbf060e01b7060e8007060e2dbf3ffe
09befffe8043fffe24bfe00e0dbf00020020000e>} imagemask 
  }
  255 /Gff MSTT31c1f8 AddChar
%%EndResource

32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1263 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1254 1483 (16-bit PC Card defines separate data \(8 or 16 bit wide\) and address \(26 bit wide\) buses.) 1483 SB
600 1304 974 (CardBus defines a 32-bit shared bus for data and address.) 974 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1388 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1379 526 (CardBus allows bus mastering.) 526 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1463 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1454 1555 (16-bit PC Card defines Common Memory space, Attribute Memory space and I/O space. In) 1555 SB
600 1504 1177 (addition, CardBus defines Configuration and Expansion ROM spaces) 1177 SB
32 0 0 42 42 0 0 0 39 /Palatino-Roman /font31 ANSIFont font
1777 1503 11 (.) 11 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
600 1579 1325 (Note: The memory space of a CardBus card is considered a Common Memory) 1325 SB
600 1629 107 (space.) 107 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
300 1731 42 (2.) 42 SB
342 1731 42 (1 ) 58 SB
400 1731 362 (Address Space) 362 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 1818 1849 (Address spaces of a PC Card are mapped into the host address space using Windows. Typically, the Window) 1849 SB
375 1868 982 (is implemented as a set of registers in a PC Card Adapter.) 982 SB
375 1943 1866 (16-bit PC Cards provide Common Memory, Attribute Memory and I/O spaces. The address space of an 16-bit) 1866 SB
375 1993 1839 (PC Card must be mapped into host address space before it may be accessed by the host. The memory spaces) 1839 SB
375 2043 1855 (are addressed with 26 bits of address to allow up to 64 Mbytes. A Common Memory space is used to allocate) 1855 SB
375 2093 1795 (conventional memory. Each card may have up to 64Mbytes of Common Memory. The Common Memory) 1795 SB
375 2143 457 (space is selected when the ) 457 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
832 2140 112 (REG#) 112 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
944 2143 1234 ( signal is not asserted. In addition to normal read/write operations, DMA) 1234 SB
375 2194 1151 (\(Direct Memory Access\) is allowed to the Common Memory space.) 1151 SB
375 2269 791 (The Attribute Memory space is selected when ) 791 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1166 2266 112 (REG#) 112 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1278 2269 825 ( is asserted.  This space contains the CIS and the) 825 SB
375 2320 1697 (configuration registers of a PC Card. Access to this space is limited to a single byte on even address) 1697 SB
375 2370 1697 (boundaries. With 26 bits of address, a PC Card may have up to 32 Mbytes of Attribute Memory. An) 1697 SB
375 2420 1825 (implementation may use its Common Memory space as Attribute Memory space for cost reasons. For those) 1825 SB
375 2470 276 (cards, when the ) 276 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
651 2467 112 (REG#) 112 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
763 2470 1474 ( signal is active the PC Card behaves as if the access is made to the Attribute Memory.) 1474 SB
375 2546 1847 (Since some processors cannot generate I/O cycles directly, I/O space accesses must be done with the register) 1847 SB
375 2596 330 (access words \(e.g., ) 330 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
705 2593 81 (rb@) 81 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
786 2596 22 (, ) 22 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
808 2593 63 (rw!) 63 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
871 2596 1289 (\). It is recommended that a range of virtual addresses be set aside for use by) 1289 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
375 2644 128 (map-in) 128 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
503 2647 1684 ( to I/O space devices so that the register access words can determine when an I/O cycle needs to be) 1684 SB
375 2698 176 (generated.) 176 SB
375 2773 1741 (CardBus defines Configuration, Memory, I/O and Expansion ROM spaces. The Configuration space is) 1741 SB
375 2823 1868 (4Kbytes shared by 8 functions. Each function has 256 bytes of memory which is composed of a mandatory 64) 1868 SB
375 2873 1798 (bytes of header and 192 bytes of device dependent region. The header has the information required by the) 1798 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font MSTT31c1f8
%%+ font Palatino-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 7 7
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2229 2997 21 (7) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 183 1850 (host to configure the device, such as header type, latency, cache-line size, CIS pointer, base address registers) 1850 SB
375 233 1562 (for other spaces, etc. The CIS pointer identifies the memory space and the offset of the CIS.) 1562 SB
375 308 1821 (Since the Configuration space often does not appear as a subset of the system\222s physical address space, this) 1821 SB
375 358 1866 (firmware specification provides bus-specific methods to access the Configuration space. Likewise, it provides) 1866 SB
375 408 476 (methods for Special Cycles.) 476 SB
375 483 1817 (In addition to these address spaces, CardBus has another type of transaction in which the address bus is not) 1817 SB
375 533 566 (used. Special Cycles \(writes\) are ) 566 SB
941 533 19 (\223) 19 SB
960 533 162 (broadcast) 162 SB
1122 533 19 (\224) 19 SB
1141 533 954 ( cycles in which the data conveys all of the information.) 954 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 8 8
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2229 2997 21 (8) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font18 ANSIFont font
300 232 64 (3. ) 78 SB
378 232 791 (Open Firmware for PC Cards) 791 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 327 1792 (Open Firmware is an Instruction Set Architecture and device independent booting mechanism. For a non-) 1792 SB
375 377 1770 (native device, Open Firmware requires FCode associated with the device to use the device for boot. The) 1770 SB
375 427 1846 (FCode is executed by the Open Firmware process to configure it as a bootable device. This section describes) 1846 SB
375 477 1545 (the process and convention for probing a PC Card to prepare the card for booting a system.) 1545 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
300 576 42 (3.) 42 SB
342 576 42 (1 ) 58 SB
400 576 398 (Probing Process) 398 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 663 1861 (To be used as a boot device, a PC Card must be plugged into a PC Card Socket before the boot process starts.) 1861 SB
375 713 1724 (Although the PC Card specification supports live insertion and removal of cards, the automated Open) 1724 SB
375 763 1742 (Firmware booting process assumes the cards are neither inserted or removed from the beginning of the) 1742 SB
375 813 889 (probing process until the end of the booting process.) 889 SB
375 888 1865 (The firmware must locate and execute the FCode of the PC Card Adapter to install the PC Card Adapter node) 1865 SB
375 938 1418 (in the device tree. This enables the host to turn on the power of the PC Card \(using ) 1418 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1793 935 175 (set-socket) 175 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1968 938 240 ( method\). The) 240 SB
375 989 1842 (firmware then probes the installed PC Cards to locate and install their device nodes in the device tree. 16-bit) 1842 SB
375 1039 1858 (PC Cards may provide the FCode either in a special purpose Open Firmware Tuple in its CIS\(CISTPL_SPCL) 1858 SB
375 1089 1788 (with field TPLSPCL_ID equal to 2\)or in the LFS. CardBus cards may provide FCode in Expansion ROM) 1788 SB
375 1139 105 (space.) 105 SB
375 1214 1757 (A 16-bit PC Card may store the CIS in Attribute or Common Memory. However, the PC Card Standard) 1757 SB
375 1264 1796 (requires the CIS to begin at Attribute Memory address 0. The remainder of the CIS may be located in any) 1796 SB
375 1314 1199 (location of the 64M bytes of its Attribute or Common Memory spaces.) 1199 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
600 1386 657 (Note: For a PC Card Adapter node in ) 657 SB
1257 1386 23 (\223) 23 SB
1280 1386 189 (probe state) 189 SB
1469 1386 23 (\224) 23 SB
1492 1386 415 (, Open Firmware should) 415 SB
600 1438 1320 (allocate address space using the lazy algorithm in a relocatable region using ) 1320 SB
32 0 0 42 42 0 0 0 38 /Times-BoldItalic /font34 ANSIFont font
1920 1439 89 (map-) 89 SB
600 1491 35 (in) 35 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
635 1490 838 ( for efficient use of the host address space.  Such ) 838 SB
1473 1490 23 (\223) 23 SB
1496 1490 189 (probe state) 189 SB
1685 1490 23 (\224) 23 SB
1708 1490 248 ( assignments a) 248 SB
1956 1490 35 (re) 35 SB
600 1540 1263 (temporary and do not necessarily persist after the corresponding map-out.) 1263 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 1618 1706 (CardBus does not have Attribute Memory space. Instead, the CIS is located by using a pointer in the) 1706 SB
375 1668 353 (Configuration space.) 353 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
300 1767 42 (3.) 42 SB
342 1767 42 (2 ) 58 SB
400 1767 607 (Address Representations) 607 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 1854 1804 (The following address representation does not cover the issues related to a PC Card to PC Card bus bridge) 1804 SB
375 1904 278 (implementation.) 278 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 1978 38 (3.) 38 SB
338 1978 25 (2) 25 SB
363 1978 51 (.1 ) 68 SB
431 1978 476 (Socket Number: 5 bits) 476 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 2063 1827 (The physical Socket number is assigned by the associated Adapter.  Historically, the number of Sockets per) 1827 SB
375 2113 1833 (R2 bus node is limited to 16 due to the X86 microprocessor register which is used to pass the bit-map of the) 1833 SB
375 2163 1867 (assignable Socket. A CardBus Adapter, on the other hand, allows up to 32 Sockets which are analogous to the) 1867 SB
375 2213 296 (Device Numbers.) 296 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 2287 38 (3.) 38 SB
338 2287 25 (2) 25 SB
363 2287 51 (.2 ) 68 SB
431 2287 527 (Function Number: 3 bits) 527 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 2372 1827 (CardBus and multifunction 16-bit PC Cards may have up to 8 logically independent functions implemented) 1827 SB
375 2422 1838 (with its own independent set of configuration registers. The function number is used by multifunction 16-bit) 1838 SB
375 2472 1833 (PC Cards and CardBus Cards during the configuration cycle to select the corresponding set of configuration) 1833 SB
375 2522 1608 (registers to a function. Each function is uniquely identified by its function number from 0 to 7.) 1608 SB
375 2572 1851 (Multifunctional 16-bit PC Cards and CardBus Cards which are selected during a configuration cycle decodes) 1851 SB
375 2622 1778 (the function number field in the address to select the right set of configuration registers for that function.) 1778 SB
375 2672 1463 (Multifunctional 16-bit PC Cards and CardBus Cards are required to have a function 0.) 1463 SB
375 2747 1845 (The CIS of function 0 may contain information that is global to a card. This global information in function 0) 1845 SB
375 2797 1754 (must be preceded by a function identification Tuple with function id for CardBus. For 16-bit PC Cards,) 1754 SB
375 2847 1412 (Function 0 may contain information global to the card such as the manufactures id.) 1412 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-BoldItalic
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 9 9
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2229 2997 21 (9) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 183 1423 (For a single function 16-bit PC Card, the function number is not used in addressing.) 1423 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 257 38 (3.) 38 SB
338 257 25 (2) 25 SB
363 257 51 (.3 ) 68 SB
431 257 511 (Register Number: 8 bits) 511 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 342 1605 (The register number is used to access a register in the Configuration space for a CardBus card.) 1605 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1980 341 11 ( ) 11 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1991 342 182 (During the) 182 SB
375 392 1830 (configuration cycle, a card selects a register from a set of configuration registers of a selected function. The) 1830 SB
375 442 1860 (register number field is an offset in a configuration space of the function. The layout \(locations and meanings) 1860 SB
375 492 1165 (of particular bits\) of the device-independent configuration registers \() 1165 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1540 491 53 (i.e.) 53 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1593 492 623 ( the first 64-byte header\) is specified) 623 SB
375 544 1865 (by the CardBus standard. Other configuration registers are device- and implementation-specific. The standard) 1865 SB
375 594 1824 (configuration registers perform such functions as assigning Memory space and I/O space base addresses for) 1824 SB
375 644 558 (the device\222s addressable regions.) 558 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
600 716 1348 (Note: The configuration registers of a 16-bit PC Card have different roles from) 1348 SB
600 766 1408 (those of a CardBus Card.  They are used to configure the hardware characteristics) 1408 SB
600 816 269 (of the PC Card.) 269 SB
600 891 1410 (Note: Since the configuration registers of a 16-bit PC Card are implemented in the) 1410 SB
600 941 1362 (Attribute Memory space, the registers are addressed using a full 26 bit Attribute) 1362 SB
600 991 1393 (Memory address.  The register number is not used in addressing the configuration) 1393 SB
600 1041 1365 (registers.  Since the configuration registers are mapped in the Attribute Memory) 1365 SB
600 1091 1310 (space, the address of a configuration register is computed as Base Address +) 1310 SB
600 1141 390 (\(Register Number * 2\).) 390 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
300 1243 42 (3.) 42 SB
342 1243 42 (3 ) 58 SB
400 1243 628 (Physical Address Formats) 628 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 1330 390 (Within this document, ) 390 SB
765 1330 19 (\223) 19 SB
784 1330 126 (address) 126 SB
910 1330 19 (\224) 19 SB
929 1330 634 ( refers to the address of an 8-bit byte.) 634 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 1404 38 (3.) 38 SB
338 1404 25 (3) 25 SB
363 1404 51 (.1 ) 68 SB
431 1404 559 (Numerical Representation) 559 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 1489 1860 (The numerical representation of a PC Card address consists of two cells, encoded as follows. In the following) 1860 SB
375 1539 1869 (discussion, the least-significant 32 bits of a cell are used. If the cell size is larger than 32 bits, additional high-) 1869 SB
375 1589 1056 (order bits shall be zero. Bit 0 refers to the least-significant bit.) 1056 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 10 10
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2208 2997 42 (10) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
450 258 204 (Bit number:) 204 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
654 263 925 ( 31                                 0) 925 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
450 332 194 (phys.hi cell) 194 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
644 333 12 (:) 12 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
656 338 925 (  npt00ccc 00000000 sssssfff rrrrrrrr) 925 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
450 409 194 (phys.lo cell) 194 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
644 410 12 (:) 12 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
656 415 925 (  yyyyyyll llllllll llllllll llllllll) 925 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
450 487 115 (where:) 115 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 567 25 (n) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
750 562 724 (0 if the address is relocatable, 1 otherwise.) 724 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 642 25 (p) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
750 637 498 (1 if the addressable region is ) 498 SB
1248 637 19 (\223) 19 SB
1267 637 210 (prefetchable) 210 SB
1477 637 19 (\224) 19 SB
1496 637 229 (, 0 otherwise.) 229 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 717 25 (t) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
750 712 1193 (0 if the address is a CardBus address, or 1 if a 16-bit PC Card address.) 1193 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 792 125 (sssss) 125 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
750 787 357 (5-bit Socket number.) 357 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 867 75 (fff) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
750 862 383 (3-bit function number.) 383 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 942 75 (ccc) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
750 937 923 (the address space code, denoting which address space;) 923 SB
750 1012 63 (000) 63 SB
900 1012 364 (Configuration space. ) 364 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1264 1017 25 (n) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1289 1012 83 ( and ) 83 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1372 1017 25 (p) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1397 1012 198 ( must be 0, ) 198 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1595 1017 25 (t) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1620 1012 198 ( must be 0. ) 198 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1818 1017 200 (rrrrrrrr) 200 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2018 1012 113 ( is the ) 113 SB
900 1062 350 (register number and ) 350 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1250 1061 121 (phys.lo) 121 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1371 1062 260 ( cell must be 0.) 260 SB
750 1139 63 (001) 63 SB
900 1139 190 (I/O Space. ) 190 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1090 1144 25 (p) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1115 1139 237 ( must be 0. If ) 237 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1352 1144 25 (t) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1377 1139 177 ( is 0, then ) 177 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1554 1144 200 (rrrrrrrr) 200 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1754 1139 492 ( is the region\222s Base Address) 492 SB
900 1189 1109 (Register and must be 0x10, 0x14, 0x18, 0x1c, 0x20 or 0x24, and ) 1109 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
2009 1188 121 (phys.lo) 121 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2130 1189 112 ( cell is) 112 SB
900 1241 1217 (the 32-bit offset from the base of the relocatable region of I/O space; if ) 1217 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
2117 1246 25 (t) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2142 1241 93 ( is 1, ) 93 SB
900 1291 84 (then ) 84 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
984 1296 200 (rrrrrrrr) 200 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1184 1291 420 ( is the Window number, ) 420 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1604 1296 150 (yyyyyy) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1754 1291 165 ( is 0, and ) 165 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1919 1296 150 (ll..ll) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2069 1291 169 ( is the 26-) 169 SB
900 1341 805 (bit offset from the start address of the Window.) 805 SB
750 1404 63 (010) 63 SB
900 1404 318 (Memory Space. If ) 318 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1218 1409 25 (n) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1243 1404 83 ( and ) 83 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1326 1409 25 (t) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1351 1404 201 ( are 0, then ) 202 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1553 1409 200 (rrrrrrrr) 200 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1753 1404 11 ( ) 12 SB
1765 1404 39 (is ) 40 SB
1805 1404 63 (the ) 64 SB
1869 1404 149 (region\222s ) 150 SB
2019 1404 93 (Base ) 94 SB
2113 1404 137 (Address) 137 SB
900 1454 686 (Register and must be 0x10, 0x14, 0x18, ) 687 SB
1587 1454 104 (0x1c, ) 105 SB
1692 1454 95 (0x20 ) 96 SB
1788 1454 46 (or ) 47 SB
1835 1454 106 (0x24, ) 107 SB
1942 1454 72 (and ) 73 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
2015 1453 121 (phys.lo) 121 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2136 1454 11 ( ) 12 SB
2148 1454 73 (cell ) 74 SB
2222 1454 28 (is) 28 SB
900 1506 1243 (the 32-bit offset from the start of the relocatable region of 32-bit address ) 1243 SB
900 1556 310 (Memory space; if ) 310 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1210 1561 25 (t) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1235 1556 177 ( is 1, then ) 177 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1412 1561 200 (rrrrrrrr) 200 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1612 1556 420 ( is the Window number, ) 420 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
2032 1561 150 (yyyyyy) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2182 1556 50 ( is ) 50 SB
900 1606 115 (0, and ) 115 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1015 1611 150 (ll..ll) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1165 1606 1044 ( is the 26-bit offset from the start of the relocatable region of ) 1044 SB
900 1656 861 (26-bit offset from the start address of the Window.) 861 SB
750 1719 63 (100) 63 SB
900 1719 331 (Attribute Memory. ) 331 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1231 1724 200 (rrrrrrrr) 200 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1431 1719 420 ( is the Window number, ) 420 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1851 1724 150 (yyyyyy) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2001 1719 165 ( is 0, and ) 165 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
900 1774 150 (ll..ll) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1050 1769 1156 ( is the 26-bit offset from the start of the relocatable region of 26-bit ) 1156 SB
900 1819 749 (offset from the start address of the Window.) 749 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
600 1942 1055 (Note: For a CardBus Card, the \221p\222 bit reflects the state of the ) 1055 SB
1655 1942 23 (\223) 23 SB
1678 1942 26 (P) 26 SB
1704 1942 23 (\224) 23 SB
1727 1942 163 ( bit in the) 163 SB
600 1992 811 (corresponding hardware Base Address register.) 811 SB
600 2067 1315 (Note: The numerical representation specified herein contains the information) 1315 SB
600 2117 1400 (needed to select a particular hardware device, specifying the format by which that) 1400 SB
600 2167 1284 (information is communicated among elements of Open Firmware and client) 1284 SB
600 2217 1393 (programs. A driver for a particular PC Card bus hardware implementation is free) 1393 SB
600 2267 1214 (to extract that information and reformat as necessary for the hardware.) 1214 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 2344 38 (3.) 38 SB
338 2344 25 (3) 25 SB
363 2344 51 (.2 ) 68 SB
431 2344 433 (Text Representation) 433 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2429 1114 (The text representation of a PC Card address is shown in Table 1.) 1114 SB
300 2504 1789 (Conversion of hexadecimal numbers from the text representation to numeric representation shall be case-) 1789 SB
300 2554 1109 (insensitive, and leading zeros shall be permitted but not required.) 1109 SB
300 2629 1914 (Conversion from numeric representation to text representation shall use the lower case forms of the hexadecimal) 1914 SB
300 2679 1739 (digits in the range a..f, surpressing leading zeros, and the SS form for a CardBus card shall be used for) 1739 SB
300 2729 815 (Configuration space addresses where fff is zero.) 815 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 11 11
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2208 2997 42 (11) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
674 190 1201 (Table 1: Formats of text representation of address) 1201 SB
/fm 256 def
5 5 274 257 B
1 F
n
/fm 256 def
5 5 274 257 B
1 F
n
/fm 256 def
475 5 280 257 B
1 F
n
/fm 256 def
5 5 756 257 B
1 F
n
/fm 256 def
593 5 762 257 B
1 F
n
/fm 256 def
5 5 1356 257 B
1 F
n
/fm 256 def
832 5 1362 257 B
1 F
n
/fm 256 def
5 5 2195 257 B
1 F
n
/fm 256 def
5 5 2195 257 B
1 F
n
/fm 256 def
5 65 274 263 B
1 F
n
/fm 256 def
2 65 756 263 B
1 F
n
/fm 256 def
2 65 1356 263 B
1 F
n
/fm 256 def
5 65 2195 263 B
1 F
n
178 178 178 fC
/fm 256 def
475 65 280 263 B
1 F
n
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
0 0 0 fC
gs 476 72 280 257 CB
452 272 130 (format) 130 SB
gr
178 178 178 fC
/fm 256 def
596 65 759 263 B
1 F
n
0 0 0 fC
gs 597 72 759 257 CB
944 272 227 (description) 227 SB
gr
178 178 178 fC
/fm 256 def
835 65 1359 263 B
1 F
n
0 0 0 fC
gs 836 72 1359 257 CB
1422 272 710 (Correspondence with numeric form) 710 SB
gr
/fm 256 def
5 5 274 329 B
1 F
n
/fm 256 def
475 5 280 329 B
1 F
n
/fm 256 def
5 5 756 329 B
1 F
n
/fm 256 def
593 5 762 329 B
1 F
n
/fm 256 def
5 5 1356 329 B
1 F
n
/fm 256 def
832 5 1362 329 B
1 F
n
/fm 256 def
5 5 2195 329 B
1 F
n
/fm 256 def
5 143 274 335 B
1 F
n
/fm 256 def
2 143 756 335 B
1 F
n
/fm 256 def
2 143 1356 335 B
1 F
n
/fm 256 def
5 143 2195 335 B
1 F
n
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 476 48 280 329 CB
300 335 50 (SS) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 597 54 759 329 CB
780 336 501 (Either an Attribute Memory) 501 SB
gr
gs 597 54 759 377 CB
780 384 456 (space or a Configuration) 456 SB
gr
gs 597 54 759 425 CB
780 432 365 (space of a PC Card) 365 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 54 1359 329 CB
1380 341 50 (SS) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 54 1359 329 CB
1430 336 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 54 1359 329 CB
1909 341 125 (sssss) 125 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 54 1359 329 CB
2034 336 12 (.) 12 SB
gr
gs 836 54 1359 377 CB
1380 384 532 (All other fields must be zero.) 532 SB
gr
/fm 256 def
5 2 274 479 B
1 F
n
/fm 256 def
475 2 280 479 B
1 F
n
/fm 256 def
2 2 756 479 B
1 F
n
/fm 256 def
596 2 759 479 B
1 F
n
/fm 256 def
2 2 1356 479 B
1 F
n
/fm 256 def
835 2 1359 479 B
1 F
n
/fm 256 def
5 2 2195 479 B
1 F
n
/fm 256 def
5 143 274 482 B
1 F
n
/fm 256 def
2 143 756 482 B
1 F
n
/fm 256 def
2 143 1356 482 B
1 F
n
/fm 256 def
5 143 2195 482 B
1 F
n
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 476 45 280 479 CB
300 482 100 (SS,F) 100 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 597 51 759 479 CB
780 483 501 (Either an Attribute Memory) 501 SB
gr
gs 597 51 759 527 CB
780 531 456 (space or a Configuration) 456 SB
gr
gs 597 51 759 575 CB
780 579 554 (space of a PC Card\222s function) 554 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 479 CB
1380 488 50 (SS) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 479 CB
1430 483 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 479 CB
1909 488 125 (sssss) 125 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 479 CB
2034 483 12 (.) 12 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 527 CB
1380 536 50 (FF) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 527 CB
1430 531 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 527 CB
1909 536 75 (fff) 75 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 527 CB
1984 531 12 (.) 12 SB
gr
gs 836 51 1359 575 CB
1380 579 532 (All other fields must be zero.) 532 SB
gr
/fm 256 def
5 2 274 626 B
1 F
n
/fm 256 def
475 2 280 626 B
1 F
n
/fm 256 def
2 2 756 626 B
1 F
n
/fm 256 def
596 2 759 626 B
1 F
n
/fm 256 def
2 2 1356 626 B
1 F
n
/fm 256 def
835 2 1359 626 B
1 F
n
/fm 256 def
5 2 2195 626 B
1 F
n
/fm 256 def
5 240 274 629 B
1 F
n
/fm 256 def
2 240 756 629 B
1 F
n
/fm 256 def
2 240 1356 629 B
1 F
n
/fm 256 def
5 240 2195 629 B
1 F
n
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 476 45 280 626 CB
300 629 175 (SS,F,L8) 175 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 597 51 759 626 CB
780 630 506 (An Attribute Memory space) 506 SB
gr
gs 597 51 759 674 CB
780 678 497 (address with the numerical) 497 SB
gr
gs 597 51 759 722 CB
780 726 488 (value for a 16-bit PC Card) 488 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 626 CB
1380 635 25 (t) 25 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 626 CB
1405 630 89 ( is 0.) 89 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 674 CB
1380 683 75 (ccc) 75 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 674 CB
1455 678 135 ( is 100.) 135 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 722 CB
1380 731 50 (SS) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 722 CB
1430 726 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 722 CB
1909 731 125 (sssss) 125 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 722 CB
2034 726 12 (.) 12 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 770 CB
1380 779 25 (F) 25 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 770 CB
1405 774 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 770 CB
1884 779 75 (fff) 75 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 770 CB
1959 774 12 (.) 12 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 52 1359 818 CB
1380 827 50 (L8) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 52 1359 818 CB
1430 822 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica-Oblique /font22 ANSIFont font
gs 836 52 1359 818 CB
1909 822 163 (phys.low) 163 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 52 1359 818 CB
2072 822 12 (.) 12 SB
gr
/fm 256 def
5 2 274 870 B
1 F
n
/fm 256 def
475 2 280 870 B
1 F
n
/fm 256 def
2 2 756 870 B
1 F
n
/fm 256 def
596 2 759 870 B
1 F
n
/fm 256 def
2 2 1356 870 B
1 F
n
/fm 256 def
835 2 1359 870 B
1 F
n
/fm 256 def
5 2 2195 870 B
1 F
n
/fm 256 def
5 246 274 873 B
1 F
n
/fm 256 def
2 246 756 873 B
1 F
n
/fm 256 def
2 246 1356 873 B
1 F
n
/fm 256 def
5 246 2195 873 B
1 F
n
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 476 45 280 870 CB
300 873 350 ([n]iSS,F,RR,L8) 350 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 597 51 759 870 CB
780 874 486 (An I/O space address with) 486 SB
gr
gs 597 51 759 918 CB
780 922 464 (the numerical value for a) 464 SB
gr
gs 597 51 759 966 CB
780 970 254 (CardBus card) 254 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 870 CB
1380 879 75 (ccc) 75 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 870 CB
1455 874 135 ( is 001.) 135 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 918 CB
1380 927 50 (SS) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 918 CB
1430 922 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 918 CB
1909 927 125 (sssss) 125 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 918 CB
2034 922 12 (.) 12 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 966 CB
1380 975 25 (F) 25 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 966 CB
1405 970 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 966 CB
1884 975 75 (fff) 75 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 966 CB
1959 970 12 (.) 12 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 1014 CB
1380 1023 50 (RR) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 1014 CB
1430 1018 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 1014 CB
1909 1023 200 (rrrrrrrr) 200 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 1014 CB
2109 1018 12 (.) 12 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 52 1359 1062 CB
1380 1071 50 (L8) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 52 1359 1062 CB
1430 1066 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica-Oblique /font22 ANSIFont font
gs 836 52 1359 1062 CB
1909 1066 163 (phys.low) 163 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 52 1359 1062 CB
2072 1066 12 (.) 12 SB
gr
/fm 256 def
5 2 274 1114 B
1 F
n
/fm 256 def
475 2 280 1114 B
1 F
n
/fm 256 def
2 2 756 1114 B
1 F
n
/fm 256 def
596 2 759 1114 B
1 F
n
/fm 256 def
2 2 1356 1114 B
1 F
n
/fm 256 def
835 2 1359 1114 B
1 F
n
/fm 256 def
5 2 2195 1114 B
1 F
n
/fm 256 def
5 288 274 1117 B
1 F
n
/fm 256 def
5 5 274 1406 B
1 F
n
/fm 256 def
5 5 274 1406 B
1 F
n
/fm 256 def
475 5 280 1406 B
1 F
n
/fm 256 def
2 288 756 1117 B
1 F
n
/fm 256 def
5 5 756 1406 B
1 F
n
/fm 256 def
593 5 762 1406 B
1 F
n
/fm 256 def
2 288 1356 1117 B
1 F
n
/fm 256 def
5 5 1356 1406 B
1 F
n
/fm 256 def
832 5 1362 1406 B
1 F
n
/fm 256 def
5 288 2195 1117 B
1 F
n
/fm 256 def
5 5 2195 1406 B
1 F
n
/fm 256 def
5 5 2195 1406 B
1 F
n
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 476 45 280 1114 CB
300 1117 425 ([n]m[p]SS,F,RR,L8) 425 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 597 51 759 1114 CB
780 1118 365 (An address with the) 365 SB
gr
gs 597 51 759 1162 CB
780 1166 459 (numerical value in either) 459 SB
gr
gs 597 51 759 1210 CB
780 1214 277 (Common Mem) 277 SB
gr
gs 597 51 759 1210 CB
1057 1214 263 (ory space of a) 263 SB
gr
gs 597 51 759 1258 CB
780 1262 526 (16-bit PC Card or a memory) 526 SB
gr
gs 597 51 759 1306 CB
780 1310 459 (space of a CardBus card) 459 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 1114 CB
1380 1123 25 (t) 25 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 1114 CB
1405 1118 89 ( is 0.) 89 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 1162 CB
1380 1171 75 (ccc) 75 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 1162 CB
1455 1166 135 ( is 010.) 135 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 1210 CB
1380 1219 50 (SS) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 1210 CB
1430 1214 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 1210 CB
1909 1219 125 (sssss) 125 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 1210 CB
2034 1214 12 (.) 12 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 1258 CB
1380 1267 25 (F) 25 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 1258 CB
1405 1262 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 1258 CB
1884 1267 75 (fff) 75 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 1258 CB
1959 1262 12 (.) 12 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 1306 CB
1380 1315 50 (RR) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 1306 CB
1430 1310 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 51 1359 1306 CB
1909 1315 200 (rrrrrrrr) 200 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 51 1359 1306 CB
2109 1310 12 (.) 12 SB
gr
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
gs 836 52 1359 1354 CB
1380 1363 50 (L8) 50 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 52 1359 1354 CB
1430 1358 479 ( is the binary encoding of ) 479 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica-Oblique /font22 ANSIFont font
gs 836 52 1359 1354 CB
1909 1358 163 (phys.low) 163 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 836 52 1359 1354 CB
2072 1358 12 (.) 12 SB
gr
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 1414 38 (3.) 38 SB
338 1414 25 (3) 25 SB
363 1414 51 (.3 ) 68 SB
431 1414 618 (Unit Address Representation) 618 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 1498 74 (The ) 74 SB
449 1498 23 (\223) 23 SB
472 1498 208 (unit-number) 208 SB
680 1498 23 (\224) 23 SB
703 1498 78 ( \(i.e.) 78 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
781 1499 449 ( the first component of its ) 449 SB
1230 1499 19 (\223) 19 SB
1249 1499 54 (reg) 54 SB
1303 1499 19 (\224) 19 SB
1322 1499 923 ( value\) is the address of the Attribute or Configuration) 923 SB
375 1551 559 (memory of a function. Since the ) 559 SB
934 1551 19 (\223) 19 SB
953 1551 209 (unit-number) 209 SB
1162 1551 19 (\224) 19 SB
1181 1551 365 ( is the address that ap) 365 SB
1546 1551 597 (pears in an Open Firmware \221device) 597 SB
375 1601 1467 (path\222, only the SS or SS,FF forms of the text representation appears in a \221device path\222.) 1467 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
300 1700 42 (3.) 42 SB
342 1700 42 (4 ) 58 SB
400 1700 755 (Definitions for an Adapter Node) 755 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 1786 38 (3.) 38 SB
338 1786 25 (4) 25 SB
363 1786 51 (.1 ) 68 SB
431 1786 747 (Open Firmware-defined Properties) 747 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 1871 1857 (The following standard properties, as defined in Open Firmware, have special meanings or interpretations for) 1857 SB
375 1921 155 (PC Card.) 155 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
375 1993 21 (\223) 21 SB
396 1993 211 (device_type) 211 SB
607 1993 21 (\224) 21 SB
2100 1993 23 (S) 23 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 2072 161 (Standard ) 161 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
536 2071 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
720 2072 644 ( to specify the implemented interface.) 644 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 2148 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
716 2149 444 (: a string encoded as with ) 444 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1160 2146 243 (encode-string) 243 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1403 2149 11 (.) 11 SB
375 2226 1728 (The meaning of this property is as defined in Open Firmware. A Standard Package conforming to this) 1728 SB
375 2276 1871 (specification and corresponding to a device that implements a PC Card bus shall implement this property with) 1871 SB
375 2326 273 (the string value ) 273 SB
648 2326 19 (\223) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
667 2323 124 (pccard) 124 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
791 2326 19 (\224) 19 SB
810 2326 11 (.) 11 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
375 2399 21 (\223) 21 SB
396 2399 59 (reg) 59 SB
455 2399 21 (\224) 21 SB
2100 2399 23 (S) 23 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 2478 161 (Standard ) 161 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
536 2477 195 (prop-name ) 195 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
731 2478 621 (to define the package\222s unit-address.) 621 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 2554 38 (3.) 38 SB
338 2554 25 (4) 25 SB
363 2554 51 (.2 ) 68 SB
431 2554 487 (Bus-specific Properties) 487 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
375 2639 1087 (The following properties shall be provided for an Adapter node:) 1087 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
375 2711 21 (\223) 21 SB
396 2711 176 (#windows) 176 SB
572 2711 21 (\224) 21 SB
2100 2711 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 2789 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
559 2790 1482 (, denotes the maximum number of Windows that the Adapter provides for each Socket.) 1482 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 2866 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
716 2867 487 (: an integer encoded as with ) 487 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1203 2864 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1390 2867 11 (.) 11 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 12 12
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2208 2997 42 (12) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
375 180 21 (\223) 21 SB
396 180 37 (#s) 37 SB
433 180 112 (ockets) 112 SB
545 180 21 (\224) 21 SB
2100 180 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 258 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
559 259 991 (, denotes the number of Sockets that the Adapter supports.) 991 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 335 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
716 336 487 (: an integer encoded as with ) 487 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1203 333 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1390 336 11 (.) 11 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
375 410 21 (\223) 21 SB
396 410 222 (release-level) 222 SB
618 410 21 (\224) 21 SB
2100 410 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 488 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
559 489 1380 (, denotes the PC Card specification release level that the Adapter is compliant to.) 1380 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 565 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
716 566 487 (: an integer encoded as with ) 487 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1203 563 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1390 566 11 (.) 11 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
375 640 21 (\223) 21 SB
396 640 400 (status-change-int-caps) 400 SB
796 640 21 (\224) 21 SB
2100 640 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 718 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
559 719 1647 (, denotes the bit-maps of events that can trigger a Status Change interrupt. The mapping between) 1647 SB
375 771 918 (bits in the bit-map and the events are defined in Table) 918 SB
1293 771 891 ( 2. If a bit is set it indicates that the Socket is able to) 891 SB
375 821 1004 (generate an interrupt when the corresponding event occurs.) 1004 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
375 895 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
716 896 647 (: an array of integers encoded as with ) 647 SB
32 0 0 42 42 0 0 0 38 /Times-BoldItalic /font34 ANSIFont font
1363 896 183 (encode-int) 183 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1546 896 11 (.) 11 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
600 970 1421 (Note: Bit numbering should conform to the corresponding PC Card Socket Services) 1421 SB
600 1020 1403 (functions; except Socket Service functions that are not relevant have been omitted.) 1403 SB
600 1070 1212 (In the case of a discrepancy, Socket Services nomenclature shall apply.) 1212 SB
600 1145 1307 (Note: There is an implied correspondence between the order of entries in the) 1307 SB
600 1195 23 (\223) 23 SB
623 1195 384 (status-change-int-caps) 384 SB
1007 1195 23 (\224) 23 SB
1030 1195 870 ( property and the order of the Socket number.  This) 870 SB
600 1245 931 (correspondence is implied on the following properties:) 931 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-BoldItalic
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 13 13
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2208 2997 42 (13) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
665 248 1219 (Table 2: Bit map definition for Status Change event) 1219 SB
/fm 256 def
5 5 391 315 B
1 F
n
/fm 256 def
5 5 391 315 B
1 F
n
/fm 256 def
244 5 397 315 B
1 F
n
/fm 256 def
5 5 642 315 B
1 F
n
/fm 256 def
355 5 648 315 B
1 F
n
/fm 256 def
5 5 1004 315 B
1 F
n
/fm 256 def
1067 5 1010 315 B
1 F
n
/fm 256 def
5 5 2078 315 B
1 F
n
/fm 256 def
5 5 2078 315 B
1 F
n
/fm 256 def
5 65 391 321 B
1 F
n
/fm 256 def
2 65 642 321 B
1 F
n
/fm 256 def
2 65 1004 321 B
1 F
n
/fm 256 def
5 65 2078 321 B
1 F
n
178 178 178 fC
/fm 256 def
244 65 397 321 B
1 F
n
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
0 0 0 fC
gs 245 72 397 315 CB
493 330 52 (bit) 52 SB
gr
178 178 178 fC
/fm 256 def
358 65 645 321 B
1 F
n
0 0 0 fC
gs 359 72 645 315 CB
771 330 109 (name) 109 SB
gr
178 178 178 fC
/fm 256 def
1070 65 1007 321 B
1 F
n
0 0 0 fC
gs 1071 72 1007 315 CB
1430 330 227 (description) 227 SB
gr
/fm 256 def
5 5 391 387 B
1 F
n
/fm 256 def
244 5 397 387 B
1 F
n
/fm 256 def
5 5 642 387 B
1 F
n
/fm 256 def
355 5 648 387 B
1 F
n
/fm 256 def
5 5 1004 387 B
1 F
n
/fm 256 def
1067 5 1010 387 B
1 F
n
/fm 256 def
5 5 2078 387 B
1 F
n
/fm 256 def
5 49 391 393 B
1 F
n
/fm 256 def
2 49 642 393 B
1 F
n
/fm 256 def
2 49 1004 393 B
1 F
n
/fm 256 def
5 49 2078 393 B
1 F
n
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 245 54 397 387 CB
448 394 142 (0 \(LSB\)) 142 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 56 645 387 CB
667 394 183 (SBM_WP) 183 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 54 1007 387 CB
1029 394 658 (PC Card WP \(Write-protect\) signal.) 658 SB
gr
/fm 256 def
5 2 391 443 B
1 F
n
/fm 256 def
244 2 397 443 B
1 F
n
/fm 256 def
2 2 642 443 B
1 F
n
/fm 256 def
358 2 645 443 B
1 F
n
/fm 256 def
2 2 1004 443 B
1 F
n
/fm 256 def
1070 2 1007 443 B
1 F
n
/fm 256 def
5 2 2078 443 B
1 F
n
/fm 256 def
5 95 391 446 B
1 F
n
/fm 256 def
2 95 642 446 B
1 F
n
/fm 256 def
2 95 1004 446 B
1 F
n
/fm 256 def
5 95 2078 446 B
1 F
n
gs 245 51 397 443 CB
507 447 23 (1) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 443 CB
667 447 293 (SBM_LOCKED) 293 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 443 CB
1029 447 198 (Externally ) 209 SB
1238 447 199 (generated ) 210 SB
1448 447 121 (signal ) 132 SB
1580 447 190 (indicating ) 201 SB
1781 447 70 (the ) 81 SB
1862 447 102 (state ) 114 SB
1976 447 48 (of ) 60 SB
2036 447 23 (a) 23 SB
gr
gs 1071 51 1007 491 CB
1029 495 860 (mechanical or electrical card lock mechanism.) 860 SB
gr
/fm 256 def
5 2 391 542 B
1 F
n
/fm 256 def
244 2 397 542 B
1 F
n
/fm 256 def
2 2 642 542 B
1 F
n
/fm 256 def
358 2 645 542 B
1 F
n
/fm 256 def
2 2 1004 542 B
1 F
n
/fm 256 def
1070 2 1007 542 B
1 F
n
/fm 256 def
5 2 2078 542 B
1 F
n
/fm 256 def
5 95 391 545 B
1 F
n
/fm 256 def
2 95 642 545 B
1 F
n
/fm 256 def
2 95 1004 545 B
1 F
n
/fm 256 def
5 95 2078 545 B
1 F
n
gs 245 51 397 542 CB
507 546 23 (2) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 542 CB
667 546 252 (SBM_EJECT) 252 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 542 CB
1029 546 940 (Externally generated signal indicating a request to ) 941 SB
1970 546 89 (eject) 89 SB
gr
gs 1071 51 1007 590 CB
1029 594 814 (a PC Card from the Socket has been made.) 814 SB
gr
/fm 256 def
5 2 391 641 B
1 F
n
/fm 256 def
244 2 397 641 B
1 F
n
/fm 256 def
2 2 642 641 B
1 F
n
/fm 256 def
358 2 645 641 B
1 F
n
/fm 256 def
2 2 1004 641 B
1 F
n
/fm 256 def
1070 2 1007 641 B
1 F
n
/fm 256 def
5 2 2078 641 B
1 F
n
/fm 256 def
5 95 391 644 B
1 F
n
/fm 256 def
2 95 642 644 B
1 F
n
/fm 256 def
2 95 1004 644 B
1 F
n
/fm 256 def
5 95 2078 644 B
1 F
n
gs 245 51 397 641 CB
507 645 23 (3) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 641 CB
667 645 271 (SBM_INSERT) 271 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 641 CB
1029 645 928 (Externally generated signal indicating a request to) 928 SB
gr
gs 1071 51 1007 689 CB
1029 693 910 (insert a PC Card into the Socket has been made.) 910 SB
gr
/fm 256 def
5 2 391 740 B
1 F
n
/fm 256 def
244 2 397 740 B
1 F
n
/fm 256 def
2 2 642 740 B
1 F
n
/fm 256 def
358 2 645 740 B
1 F
n
/fm 256 def
2 2 1004 740 B
1 F
n
/fm 256 def
1070 2 1007 740 B
1 F
n
/fm 256 def
5 2 2078 740 B
1 F
n
/fm 256 def
5 95 391 743 B
1 F
n
/fm 256 def
2 95 642 743 B
1 F
n
/fm 256 def
2 95 1004 743 B
1 F
n
/fm 256 def
5 95 2078 743 B
1 F
n
gs 245 51 397 740 CB
507 744 23 (4) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 740 CB
667 744 227 (SBM_BVD1) 227 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 740 CB
1029 744 1003 (PC Card BVD1 signal.  When set, this signal indicates) 1003 SB
gr
gs 1071 51 1007 788 CB
1029 792 663 (the battery is no longer serviceable.) 663 SB
gr
/fm 256 def
5 2 391 839 B
1 F
n
/fm 256 def
244 2 397 839 B
1 F
n
/fm 256 def
2 2 642 839 B
1 F
n
/fm 256 def
358 2 645 839 B
1 F
n
/fm 256 def
2 2 1004 839 B
1 F
n
/fm 256 def
1070 2 1007 839 B
1 F
n
/fm 256 def
5 2 2078 839 B
1 F
n
/fm 256 def
5 95 391 842 B
1 F
n
/fm 256 def
2 95 642 842 B
1 F
n
/fm 256 def
2 95 1004 842 B
1 F
n
/fm 256 def
5 95 2078 842 B
1 F
n
gs 245 51 397 839 CB
507 843 23 (5) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 839 CB
667 843 227 (SBM_BVD2) 227 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 839 CB
1029 843 1003 (PC Card BVD2 signal.  When set, this signal indicates) 1003 SB
gr
gs 1071 51 1007 887 CB
1029 891 360 (the battery is weak.) 360 SB
gr
/fm 256 def
5 2 391 938 B
1 F
n
/fm 256 def
244 2 397 938 B
1 F
n
/fm 256 def
2 2 642 938 B
1 F
n
/fm 256 def
358 2 645 938 B
1 F
n
/fm 256 def
2 2 1004 938 B
1 F
n
/fm 256 def
1070 2 1007 938 B
1 F
n
/fm 256 def
5 2 2078 938 B
1 F
n
/fm 256 def
5 49 391 941 B
1 F
n
/fm 256 def
2 49 642 941 B
1 F
n
/fm 256 def
2 49 1004 941 B
1 F
n
/fm 256 def
5 49 2078 941 B
1 F
n
gs 245 51 397 938 CB
507 942 23 (6) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 938 CB
667 942 261 (SBM_READY) 261 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 938 CB
1029 942 425 (PC Card Ready signal.) 425 SB
gr
/fm 256 def
5 2 391 991 B
1 F
n
/fm 256 def
244 2 397 991 B
1 F
n
/fm 256 def
2 2 642 991 B
1 F
n
/fm 256 def
358 2 645 991 B
1 F
n
/fm 256 def
2 2 1004 991 B
1 F
n
/fm 256 def
1070 2 1007 991 B
1 F
n
/fm 256 def
5 2 2078 991 B
1 F
n
/fm 256 def
5 49 391 994 B
1 F
n
/fm 256 def
5 5 391 1044 B
1 F
n
/fm 256 def
5 5 391 1044 B
1 F
n
/fm 256 def
244 5 397 1044 B
1 F
n
/fm 256 def
2 49 642 994 B
1 F
n
/fm 256 def
5 5 642 1044 B
1 F
n
/fm 256 def
355 5 648 1044 B
1 F
n
/fm 256 def
2 49 1004 994 B
1 F
n
/fm 256 def
5 5 1004 1044 B
1 F
n
/fm 256 def
1067 5 1010 1044 B
1 F
n
/fm 256 def
5 49 2078 994 B
1 F
n
/fm 256 def
5 5 2078 1044 B
1 F
n
/fm 256 def
5 5 2078 1044 B
1 F
n
gs 245 51 397 991 CB
507 995 23 (7) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 991 CB
667 995 176 (SBM_CD) 176 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 991 CB
1029 995 365 (PC Card CD signal.) 365 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 1124 11 ( ) 11 SB
311 1124 19 (\223) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
330 1121 466 (status-change-report-caps) 466 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
796 1124 19 (\224) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 1121 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1187 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
484 1188 22 (, ) 31 SB
515 1188 140 (denotes ) 150 SB
665 1188 63 (the ) 73 SB
738 1188 143 (bit-map ) 153 SB
891 1188 107 (status ) 117 SB
1008 1188 131 (change ) 141 SB
1149 1188 119 (events ) 129 SB
1278 1188 75 (that ) 85 SB
1363 1188 63 (the ) 73 SB
1436 1188 126 (Socket ) 136 SB
1572 1188 39 (is ) 49 SB
1621 1188 141 (capable ) 151 SB
1772 1188 46 (of ) 56 SB
1828 1188 177 (reporting. ) 187 SB
2015 1188 77 (The ) 87 SB
2102 1188 148 (mapping) 148 SB
300 1240 1046 (between bits in the bit-map and the events is defined in Table) 1046 SB
1346 1240 54 ( 2. ) 55 SB
1401 1240 39 (If ) 40 SB
1441 1240 30 (a ) 31 SB
1472 1240 56 (bit ) 57 SB
1529 1240 39 (is ) 40 SB
1569 1240 58 (set ) 59 SB
1628 1240 35 (it ) 36 SB
1664 1240 162 (indicates ) 163 SB
1827 1240 75 (that ) 76 SB
1903 1240 63 (the ) 64 SB
1967 1240 126 (Socket ) 127 SB
2094 1240 39 (is ) 40 SB
2134 1240 82 (able ) 83 SB
2217 1240 33 (to) 33 SB
300 1290 530 (report the corresponding event.) 530 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1352 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 1353 658 (: an array of integers, encoded as with ) 658 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1299 1350 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1486 1353 11 (.) 11 SB
300 1434 19 (\223) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
319 1431 233 (cntl-ind-caps) 233 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
552 1434 19 (\224) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 1431 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1497 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
484 1498 1255 (, denotes the bit-map of controls and indicators that the Socket is capable ) 1256 SB
1740 1498 57 (of. ) 58 SB
1798 1498 77 (The ) 78 SB
1876 1498 159 (mapping ) 160 SB
2036 1498 152 (between ) 153 SB
2189 1498 61 (bits) 61 SB
300 1550 578 (in the bit-map and the controls or ) 579 SB
879 1550 178 (indicators ) 179 SB
1058 1550 39 (is ) 40 SB
1098 1550 138 (defined ) 139 SB
1237 1550 44 (in ) 45 SB
1282 1550 97 (Table) 97 SB
1379 1550 43 ( 3 ) 44 SB
1423 1550 22 (. ) 23 SB
1446 1550 39 (If ) 40 SB
1486 1550 30 (a ) 31 SB
1517 1550 56 (bit ) 57 SB
1574 1550 39 (is ) 40 SB
1614 1550 58 (set ) 59 SB
1673 1550 35 (it ) 36 SB
1709 1550 162 (indicates ) 163 SB
1872 1550 75 (that ) 76 SB
1948 1550 63 (the ) 64 SB
2012 1550 126 (Socket ) 127 SB
2139 1550 39 (is ) 40 SB
2179 1550 71 (able) 71 SB
300 1600 785 (to control or indicate the corresponding event.) 785 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1662 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 1663 669 (: An array of integers, encoded as with ) 669 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1310 1660 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1497 1663 11 (.) 11 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
542 1798 1466 (Table 3: Bit map definition of Control and Indicator Capability) 1466 SB
/fm 256 def
5 5 391 1865 B
1 F
n
/fm 256 def
5 5 391 1865 B
1 F
n
/fm 256 def
244 5 397 1865 B
1 F
n
/fm 256 def
5 5 642 1865 B
1 F
n
/fm 256 def
355 5 648 1865 B
1 F
n
/fm 256 def
5 5 1004 1865 B
1 F
n
/fm 256 def
1067 5 1010 1865 B
1 F
n
/fm 256 def
5 5 2078 1865 B
1 F
n
/fm 256 def
5 5 2078 1865 B
1 F
n
/fm 256 def
5 65 391 1871 B
1 F
n
/fm 256 def
2 65 642 1871 B
1 F
n
/fm 256 def
2 65 1004 1871 B
1 F
n
/fm 256 def
5 65 2078 1871 B
1 F
n
178 178 178 fC
/fm 256 def
244 65 397 1871 B
1 F
n
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
0 0 0 fC
gs 245 72 397 1865 CB
493 1880 52 (bit) 52 SB
gr
178 178 178 fC
/fm 256 def
358 65 645 1871 B
1 F
n
0 0 0 fC
gs 359 72 645 1865 CB
771 1880 109 (name) 109 SB
gr
178 178 178 fC
/fm 256 def
1070 65 1007 1871 B
1 F
n
0 0 0 fC
gs 1071 72 1007 1865 CB
1430 1880 227 (description) 227 SB
gr
/fm 256 def
5 5 391 1937 B
1 F
n
/fm 256 def
244 5 397 1937 B
1 F
n
/fm 256 def
5 5 642 1937 B
1 F
n
/fm 256 def
355 5 648 1937 B
1 F
n
/fm 256 def
5 5 1004 1937 B
1 F
n
/fm 256 def
1067 5 1010 1937 B
1 F
n
/fm 256 def
5 5 2078 1937 B
1 F
n
/fm 256 def
5 49 391 1943 B
1 F
n
/fm 256 def
2 49 642 1943 B
1 F
n
/fm 256 def
2 49 1004 1943 B
1 F
n
/fm 256 def
5 49 2078 1943 B
1 F
n
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 245 54 397 1937 CB
448 1944 142 (0 \(LSB\)) 142 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 56 645 1937 CB
667 1944 183 (SBM_WP) 183 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 54 1007 1937 CB
1029 1944 610 (Indicator for PC Card WP signal.) 610 SB
gr
/fm 256 def
5 2 391 1993 B
1 F
n
/fm 256 def
244 2 397 1993 B
1 F
n
/fm 256 def
2 2 642 1993 B
1 F
n
/fm 256 def
358 2 645 1993 B
1 F
n
/fm 256 def
2 2 1004 1993 B
1 F
n
/fm 256 def
1070 2 1007 1993 B
1 F
n
/fm 256 def
5 2 2078 1993 B
1 F
n
/fm 256 def
5 143 391 1996 B
1 F
n
/fm 256 def
2 143 642 1996 B
1 F
n
/fm 256 def
2 143 1004 1996 B
1 F
n
/fm 256 def
5 143 2078 1996 B
1 F
n
gs 245 51 397 1993 CB
507 1997 23 (1) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 1993 CB
667 1997 293 (SBM_LOCKED) 293 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 1993 CB
1029 1997 173 (Indicator ) 181 SB
1210 1997 62 (for ) 71 SB
1281 1997 58 (an ) 67 SB
1348 1997 394 (externally-generated ) 403 SB
1751 1997 121 (signal ) 130 SB
1881 1997 178 (indicating) 178 SB
gr
gs 1071 51 1007 2041 CB
1029 2045 70 (the ) 89 SB
1118 2045 102 (state ) 121 SB
1239 2045 48 (of ) 67 SB
1306 2045 35 (a ) 54 SB
1360 2045 225 (mechanical ) 244 SB
1604 2045 49 (or ) 68 SB
1672 2045 179 (electrical ) 199 SB
1871 2045 93 (card ) 113 SB
1984 2045 75 (lock) 75 SB
gr
gs 1071 51 1007 2089 CB
1029 2093 227 (mechanism.) 227 SB
gr
/fm 256 def
5 2 391 2140 B
1 F
n
/fm 256 def
244 2 397 2140 B
1 F
n
/fm 256 def
2 2 642 2140 B
1 F
n
/fm 256 def
358 2 645 2140 B
1 F
n
/fm 256 def
2 2 1004 2140 B
1 F
n
/fm 256 def
1070 2 1007 2140 B
1 F
n
/fm 256 def
5 2 2078 2140 B
1 F
n
/fm 256 def
5 49 391 2143 B
1 F
n
/fm 256 def
2 49 642 2143 B
1 F
n
/fm 256 def
2 49 1004 2143 B
1 F
n
/fm 256 def
5 49 2078 2143 B
1 F
n
gs 245 51 397 2140 CB
507 2144 23 (2) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 2140 CB
667 2144 252 (SBM_EJECT) 252 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 2140 CB
1029 2144 1027 (Control for a motor to eject a PC Card from the Socket.) 1027 SB
gr
/fm 256 def
5 2 391 2193 B
1 F
n
/fm 256 def
244 2 397 2193 B
1 F
n
/fm 256 def
2 2 642 2193 B
1 F
n
/fm 256 def
358 2 645 2193 B
1 F
n
/fm 256 def
2 2 1004 2193 B
1 F
n
/fm 256 def
1070 2 1007 2193 B
1 F
n
/fm 256 def
5 2 2078 2193 B
1 F
n
/fm 256 def
5 49 391 2196 B
1 F
n
/fm 256 def
2 49 642 2196 B
1 F
n
/fm 256 def
2 49 1004 2196 B
1 F
n
/fm 256 def
5 49 2078 2196 B
1 F
n
gs 245 51 397 2193 CB
507 2197 23 (3) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 2193 CB
667 2197 271 (SBM_INSERT) 271 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 2193 CB
1029 2197 1022 (Control for a motor to insert a PC Card into the Socket.) 1022 SB
gr
/fm 256 def
5 2 391 2246 B
1 F
n
/fm 256 def
244 2 397 2246 B
1 F
n
/fm 256 def
2 2 642 2246 B
1 F
n
/fm 256 def
358 2 645 2246 B
1 F
n
/fm 256 def
2 2 1004 2246 B
1 F
n
/fm 256 def
1070 2 1007 2246 B
1 F
n
/fm 256 def
5 2 2078 2246 B
1 F
n
/fm 256 def
5 49 391 2249 B
1 F
n
/fm 256 def
2 49 642 2249 B
1 F
n
/fm 256 def
2 49 1004 2249 B
1 F
n
/fm 256 def
5 49 2078 2249 B
1 F
n
gs 245 51 397 2246 CB
507 2250 23 (4) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 2246 CB
667 2250 235 (SBM_LOCK) 235 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 2246 CB
1029 2250 389 (Control for card lock.) 389 SB
gr
/fm 256 def
5 2 391 2299 B
1 F
n
/fm 256 def
244 2 397 2299 B
1 F
n
/fm 256 def
2 2 642 2299 B
1 F
n
/fm 256 def
358 2 645 2299 B
1 F
n
/fm 256 def
2 2 1004 2299 B
1 F
n
/fm 256 def
1070 2 1007 2299 B
1 F
n
/fm 256 def
5 2 2078 2299 B
1 F
n
/fm 256 def
5 49 391 2302 B
1 F
n
/fm 256 def
2 49 642 2302 B
1 F
n
/fm 256 def
2 49 1004 2302 B
1 F
n
/fm 256 def
5 49 2078 2302 B
1 F
n
gs 245 51 397 2299 CB
507 2303 23 (5) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 2299 CB
667 2303 229 (SBM_BATT) 229 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 2299 CB
1029 2303 708 (Indicator for state of BVD1 and BVD2.) 708 SB
gr
/fm 256 def
5 2 391 2352 B
1 F
n
/fm 256 def
244 2 397 2352 B
1 F
n
/fm 256 def
2 2 642 2352 B
1 F
n
/fm 256 def
358 2 645 2352 B
1 F
n
/fm 256 def
2 2 1004 2352 B
1 F
n
/fm 256 def
1070 2 1007 2352 B
1 F
n
/fm 256 def
5 2 2078 2352 B
1 F
n
/fm 256 def
5 55 391 2355 B
1 F
n
/fm 256 def
2 55 642 2355 B
1 F
n
/fm 256 def
2 55 1004 2355 B
1 F
n
/fm 256 def
5 55 2078 2355 B
1 F
n
gs 245 51 397 2352 CB
507 2356 23 (6) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 2352 CB
667 2356 232 (SBM_BUSY) 232 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 2352 CB
1029 2356 656 (Indicator for showing card is in use.) 656 SB
gr
/fm 256 def
5 2 391 2405 B
1 F
n
/fm 256 def
244 2 397 2405 B
1 F
n
/fm 256 def
2 2 642 2405 B
1 F
n
/fm 256 def
358 2 645 2405 B
1 F
n
/fm 256 def
2 2 1004 2405 B
1 F
n
/fm 256 def
1070 2 1007 2405 B
1 F
n
/fm 256 def
5 2 2078 2405 B
1 F
n
/fm 256 def
5 49 391 2408 B
1 F
n
/fm 256 def
5 5 391 2458 B
1 F
n
/fm 256 def
5 5 391 2458 B
1 F
n
/fm 256 def
244 5 397 2458 B
1 F
n
/fm 256 def
2 49 642 2408 B
1 F
n
/fm 256 def
5 5 642 2458 B
1 F
n
/fm 256 def
355 5 648 2458 B
1 F
n
/fm 256 def
2 49 1004 2408 B
1 F
n
/fm 256 def
5 5 1004 2458 B
1 F
n
/fm 256 def
1067 5 1010 2458 B
1 F
n
/fm 256 def
5 49 2078 2408 B
1 F
n
/fm 256 def
5 5 2078 2458 B
1 F
n
/fm 256 def
5 5 2078 2458 B
1 F
n
gs 245 51 397 2405 CB
507 2409 23 (7) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 2405 CB
667 2409 184 (SBM_XIP) 184 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 2405 CB
1029 2409 744 (Indicator for XIP application in progress.) 744 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2572 19 (\223) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
319 2569 313 (interrupt-routing) 313 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
632 2572 19 (\224) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 2569 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 2635 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
484 2636 162 (, denotes ) 163 SB
647 2636 63 (the ) 64 SB
711 2636 143 (bit-map ) 144 SB
855 2636 46 (of ) 47 SB
902 2636 53 (16 ) 54 SB
956 2636 157 (interrupt ) 158 SB
1114 2636 110 (levels ) 111 SB
1225 2636 75 (that ) 76 SB
1301 2636 63 (the ) 64 SB
1365 2636 62 (PC ) 63 SB
1428 2636 93 (Card ) 94 SB
1522 2636 157 (interrupt ) 158 SB
1680 2636 70 (can ) 71 SB
1751 2636 51 (be ) 52 SB
1803 2636 119 (routed ) 120 SB
1923 2636 44 (to ) 45 SB
1968 2636 53 (on ) 54 SB
2022 2636 30 (a ) 31 SB
2053 2636 137 (Socket. ) 138 SB
2191 2636 39 (If ) 40 SB
2231 2636 19 (a) 19 SB
300 2688 1862 (bit is set it indicates that the Socket is able to route the PC Card interrupt to the corresponding interrupt level.) 1862 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 2750 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 2751 781 (: an array of pair of integers, encoded as with ) 781 SB
32 0 0 42 42 0 0 0 36 /Courier-Bold /font9 ANSIFont font
1422 2753 250 (encode-int) 250 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1672 2751 11 (.) 11 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Courier-Bold
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 14 14
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2208 2997 42 (14) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 183 19 (\223) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
319 180 233 (adapter-caps) 233 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
552 183 19 (\224) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 180 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 246 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
484 247 22 (, ) 27 SB
511 247 140 (denotes ) 145 SB
656 247 63 (the ) 68 SB
724 247 143 (bit-map ) 148 SB
872 247 75 (that ) 80 SB
952 247 168 (describes ) 173 SB
1125 247 147 (whether ) 152 SB
1277 247 30 (a ) 36 SB
1313 247 131 (control ) 137 SB
1450 247 39 (is ) 45 SB
1495 247 42 (at ) 48 SB
1543 247 51 (an ) 57 SB
1600 247 147 (Adapter ) 153 SB
1753 247 94 (level ) 100 SB
1853 247 46 (or ) 52 SB
1905 247 30 (a ) 36 SB
1941 247 126 (Socket ) 132 SB
2073 247 105 (level. ) 111 SB
2184 247 66 (The) 66 SB
300 299 199 (description ) 204 SB
504 299 46 (of ) 51 SB
555 299 63 (the ) 68 SB
623 299 127 (related ) 132 SB
755 299 147 (controls ) 152 SB
907 299 63 (are ) 68 SB
975 299 161 (provided ) 166 SB
1141 299 44 (in ) 49 SB
1190 299 97 (Table) 97 SB
1287 299 54 ( 4. ) 59 SB
1346 299 39 (If ) 44 SB
1390 299 30 (a ) 35 SB
1425 299 56 (bit ) 61 SB
1486 299 39 (is ) 44 SB
1530 299 58 (set ) 63 SB
1593 299 35 (it ) 41 SB
1634 299 162 (indicates ) 168 SB
1802 299 75 (that ) 81 SB
1883 299 63 (the ) 69 SB
1952 299 126 (Socket ) 132 SB
2084 299 39 (is ) 45 SB
2129 299 82 (able ) 88 SB
2217 299 33 (to) 33 SB
300 349 741 (control or indicate the corresponding event.) 741 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
956 482 638 (Table 4: Control Capability) 638 SB
/fm 256 def
5 5 391 549 B
1 F
n
/fm 256 def
5 5 391 549 B
1 F
n
/fm 256 def
244 5 397 549 B
1 F
n
/fm 256 def
5 5 642 549 B
1 F
n
/fm 256 def
355 5 648 549 B
1 F
n
/fm 256 def
5 5 1004 549 B
1 F
n
/fm 256 def
1067 5 1010 549 B
1 F
n
/fm 256 def
5 5 2078 549 B
1 F
n
/fm 256 def
5 5 2078 549 B
1 F
n
/fm 256 def
5 65 391 555 B
1 F
n
/fm 256 def
2 65 642 555 B
1 F
n
/fm 256 def
2 65 1004 555 B
1 F
n
/fm 256 def
5 65 2078 555 B
1 F
n
178 178 178 fC
/fm 256 def
244 65 397 555 B
1 F
n
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
0 0 0 fC
gs 245 72 397 549 CB
493 564 52 (bit) 52 SB
gr
178 178 178 fC
/fm 256 def
358 65 645 555 B
1 F
n
0 0 0 fC
gs 359 72 645 549 CB
771 564 109 (name) 109 SB
gr
178 178 178 fC
/fm 256 def
1070 65 1007 555 B
1 F
n
0 0 0 fC
gs 1071 72 1007 549 CB
1430 564 227 (description) 227 SB
gr
/fm 256 def
5 5 391 621 B
1 F
n
/fm 256 def
244 5 397 621 B
1 F
n
/fm 256 def
5 5 642 621 B
1 F
n
/fm 256 def
355 5 648 621 B
1 F
n
/fm 256 def
5 5 1004 621 B
1 F
n
/fm 256 def
1067 5 1010 621 B
1 F
n
/fm 256 def
5 5 2078 621 B
1 F
n
/fm 256 def
5 191 391 627 B
1 F
n
/fm 256 def
2 191 642 627 B
1 F
n
/fm 256 def
2 191 1004 627 B
1 F
n
/fm 256 def
5 191 2078 627 B
1 F
n
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 245 54 397 621 CB
448 628 142 (0 \(LSB\)) 142 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 56 645 621 CB
667 628 154 (AC_IND) 154 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 54 1007 621 CB
1029 628 772 (If AC_IND is set, indicators for SBM_WP,) 772 SB
gr
gs 1071 54 1007 669 CB
1029 676 877 (SBM_LOCKED, SBM_BATT, SBM_BUSY, and) 877 SB
gr
gs 1071 54 1007 717 CB
1029 724 918 (SBM_XIP are shared by all Sockets. If AC_IND is) 918 SB
gr
gs 1071 54 1007 765 CB
1029 772 980 (reset, there are individual indicators for each Socket.) 980 SB
gr
/fm 256 def
5 2 391 819 B
1 F
n
/fm 256 def
244 2 397 819 B
1 F
n
/fm 256 def
2 2 642 819 B
1 F
n
/fm 256 def
358 2 645 819 B
1 F
n
/fm 256 def
2 2 1004 819 B
1 F
n
/fm 256 def
1070 2 1007 819 B
1 F
n
/fm 256 def
5 2 2078 819 B
1 F
n
/fm 256 def
5 289 391 822 B
1 F
n
/fm 256 def
2 289 642 822 B
1 F
n
/fm 256 def
2 289 1004 822 B
1 F
n
/fm 256 def
5 289 2078 822 B
1 F
n
gs 245 51 397 819 CB
507 823 23 (1) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 819 CB
667 823 179 (AC_PWR) 179 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 819 CB
1029 823 37 (If ) 40 SB
1069 823 193 (AC_PWR ) 196 SB
1265 823 42 (is ) 45 SB
1310 823 79 (set, ) 82 SB
1392 823 70 (the ) 73 SB
1465 823 158 (Adapter ) 161 SB
1626 823 87 (sets ) 91 SB
1717 823 70 (the ) 74 SB
1791 823 124 (power ) 128 SB
1919 823 101 (level ) 105 SB
2024 823 35 (to) 35 SB
gr
gs 1071 51 1007 867 CB
1029 871 70 (the ) 80 SB
1109 871 114 (same ) 124 SB
1233 871 114 (value ) 124 SB
1357 871 62 (for ) 72 SB
1429 871 55 (all ) 65 SB
1494 871 70 (the ) 80 SB
1574 871 172 (Sockets. ) 182 SB
1756 871 12 ( ) 22 SB
1778 871 37 (If ) 47 SB
1825 871 193 (AC_PWR ) 204 SB
2029 871 30 (is) 30 SB
gr
gs 1071 51 1007 915 CB
1029 919 116 (reset, ) 123 SB
1152 919 70 (the ) 77 SB
1229 919 149 (voltage ) 157 SB
1386 919 101 (level ) 109 SB
1495 919 79 (can ) 87 SB
1582 919 58 (be ) 66 SB
1648 919 194 (controlled ) 202 SB
1850 919 209 (individually) 209 SB
gr
gs 1071 53 1007 963 CB
1029 968 62 (for ) 63 SB
1092 968 102 (each ) 103 SB
1195 968 152 (Socket. ) 153 SB
1348 968 12 ( ) 13 SB
1361 968 100 (Note ) 101 SB
1462 968 94 (that, ) 95 SB
1557 968 70 (the ) 71 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 1071 53 1007 963 CB
1628 967 206 (set-socket) 206 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 53 1007 963 CB
1834 968 12 ( ) 13 SB
1847 968 152 (method ) 153 SB
2000 968 59 (will) 59 SB
gr
gs 1071 51 1007 1013 CB
1029 1017 148 (change ) 155 SB
1184 1017 70 (the ) 77 SB
1261 1017 149 (voltage ) 156 SB
1417 1017 48 (of ) 56 SB
1473 1017 55 (all ) 63 SB
1536 1017 152 (sockets ) 160 SB
1696 1017 241 (independent ) 249 SB
1945 1017 48 (of ) 56 SB
2001 1017 58 (the) 58 SB
gr
gs 1071 51 1007 1061 CB
1029 1065 343 (Socket parameter.) 343 SB
gr
/fm 256 def
5 2 391 1112 B
1 F
n
/fm 256 def
244 2 397 1112 B
1 F
n
/fm 256 def
2 2 642 1112 B
1 F
n
/fm 256 def
358 2 645 1112 B
1 F
n
/fm 256 def
2 2 1004 1112 B
1 F
n
/fm 256 def
1070 2 1007 1112 B
1 F
n
/fm 256 def
5 2 2078 1112 B
1 F
n
/fm 256 def
5 197 391 1115 B
1 F
n
/fm 256 def
2 197 642 1115 B
1 F
n
/fm 256 def
2 197 1004 1115 B
1 F
n
/fm 256 def
5 197 2078 1115 B
1 F
n
gs 245 51 397 1112 CB
507 1116 23 (2) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 1112 CB
667 1116 181 (AC_DBW) 181 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 1112 CB
1029 1116 37 (If ) 44 SB
1073 1116 193 (AC_DBW ) 200 SB
1273 1116 42 (is ) 49 SB
1322 1116 79 (set, ) 86 SB
1408 1116 55 (all ) 62 SB
1470 1116 182 (Windows ) 189 SB
1659 1116 58 (on ) 65 SB
1724 1116 70 (the ) 78 SB
1802 1116 158 (Adapter ) 166 SB
1968 1116 91 (must) 91 SB
gr
gs 1071 51 1007 1160 CB
1029 1164 78 (use ) 79 SB
1108 1164 70 (the ) 71 SB
1179 1164 114 (same ) 115 SB
1294 1164 93 (data ) 94 SB
1388 1164 78 (bus ) 80 SB
1468 1164 121 (width. ) 123 SB
1591 1164 12 ( ) 14 SB
1605 1164 37 (If ) 39 SB
1644 1164 193 (AC_DBW ) 195 SB
1839 1164 42 (is ) 44 SB
1883 1164 116 (reset, ) 118 SB
2001 1164 58 (the) 58 SB
gr
gs 1071 51 1007 1208 CB
1029 1212 93 (data ) 98 SB
1127 1212 78 (bus ) 83 SB
1210 1212 109 (width ) 114 SB
1324 1212 42 (is ) 47 SB
1371 1212 67 (set ) 72 SB
1443 1212 221 (individually ) 226 SB
1669 1212 62 (for ) 68 SB
1737 1212 102 (each ) 108 SB
1845 1212 162 (Window ) 168 SB
2013 1212 46 (on) 46 SB
gr
gs 1071 51 1007 1256 CB
1029 1260 228 (the Adapter.) 228 SB
gr
/fm 256 def
5 2 391 1307 B
1 F
n
/fm 256 def
244 2 397 1307 B
1 F
n
/fm 256 def
2 2 642 1307 B
1 F
n
/fm 256 def
358 2 645 1307 B
1 F
n
/fm 256 def
2 2 1004 1307 B
1 F
n
/fm 256 def
1070 2 1007 1307 B
1 F
n
/fm 256 def
5 2 2078 1307 B
1 F
n
/fm 256 def
5 143 391 1310 B
1 F
n
/fm 256 def
5 5 391 1454 B
1 F
n
/fm 256 def
5 5 391 1454 B
1 F
n
/fm 256 def
244 5 397 1454 B
1 F
n
/fm 256 def
2 143 642 1310 B
1 F
n
/fm 256 def
5 5 642 1454 B
1 F
n
/fm 256 def
355 5 648 1454 B
1 F
n
/fm 256 def
2 143 1004 1310 B
1 F
n
/fm 256 def
5 5 1004 1454 B
1 F
n
/fm 256 def
1067 5 1010 1454 B
1 F
n
/fm 256 def
5 143 2078 1310 B
1 F
n
/fm 256 def
5 5 2078 1454 B
1 F
n
/fm 256 def
5 5 2078 1454 B
1 F
n
gs 245 51 397 1307 CB
507 1311 23 (3) 23 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 359 53 645 1307 CB
667 1311 289 (AC_CARDBUS) 289 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1071 51 1007 1307 CB
1029 1311 965 (If AC_CARDBUS is set, all sockets are CardBus PC) 965 SB
gr
gs 1071 51 1007 1355 CB
1029 1359 869 (Card-capable.  If reset, then all sockets are not) 869 SB
gr
gs 1071 51 1007 1403 CB
1029 1407 505 (CardBus PC Card-capable.) 505 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 1550 19 (\223) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
319 1547 172 (vcc-levels) 172 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
491 1550 19 (\224) 19 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 1547 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1613 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
484 1614 516 (, denotes the encode form of v) 516 SB
1000 1627 38 (cc) 38 SB
1038 1614 43 (, v) 43 SB
1081 1627 63 (pp1) 63 SB
1144 1614 104 ( and v) 104 SB
1248 1627 63 (pp2) 63 SB
1311 1614 369 ( connections allowed.) 369 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1678 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 1679 23 (: ) 24 SB
665 1679 98 (array ) 99 SB
764 1679 46 (of ) 47 SB
811 1679 14 (\() 14 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
825 1678 32 (n ) 33 SB
858 1678 19 (e) 19 SB
877 1691 21 (0) 21 SB
898 1678 41 (..e) 41 SB
939 1691 56 (n-1) 56 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
995 1679 36 (\), ) 37 SB
1032 1679 103 (where) 103 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1135 1678 11 ( ) 12 SB
1147 1678 21 (n) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1168 1679 11 ( ) 12 SB
1180 1679 39 (is ) 40 SB
1220 1679 63 (the ) 64 SB
1284 1679 140 (number ) 141 SB
1425 1679 46 (of ) 47 SB
1472 1679 135 (entries, ) 136 SB
1608 1679 152 (encoded ) 153 SB
1761 1679 46 (as ) 47 SB
1808 1679 86 (with ) 87 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1895 1676 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2082 1679 22 (, ) 23 SB
2105 1679 72 (and ) 73 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
2178 1678 19 (e) 19 SB
2197 1691 12 (i) 12 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2209 1679 11 ( ) 13 SB
2222 1679 28 (is) 28 SB
300 1731 686 (the allowed vcc-levels, encoded as with ) 686 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
986 1728 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1173 1731 99 (. The ) 99 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1272 1730 19 (e) 19 SB
1291 1743 12 (i) 12 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1303 1731 412 ( is computed as follows:) 412 SB
300 1796 822 (h# vcc a << vpp1 9 << vpp2 8 << or v or where ) 823 SB
1123 1796 81 (vcc, ) 82 SB
1205 1796 95 (vpp1 ) 96 SB
1301 1796 72 (and ) 73 SB
1374 1796 95 (vpp2 ) 96 SB
1470 1796 63 (are ) 64 SB
1534 1796 119 (binary ) 120 SB
1654 1796 56 (bit ) 57 SB
1711 1796 119 (values ) 120 SB
1831 1796 220 (representing ) 221 SB
2052 1796 63 (the ) 64 SB
2116 1796 134 (allowed) 134 SB
300 1846 623 (power signals on PC Card interface, ) 624 SB
924 1846 72 (and ) 73 SB
997 1846 32 (v ) 33 SB
1030 1846 39 (is ) 40 SB
1070 1846 63 (the ) 64 SB
1134 1846 136 (voltage ) 137 SB
1271 1846 94 (level ) 95 SB
1366 1846 145 (allowed ) 146 SB
1512 1846 53 (on ) 54 SB
1566 1846 75 (that ) 76 SB
1642 1846 123 (signal. ) 124 SB
1766 1846 77 (The ) 78 SB
1844 1846 70 (vcc ) 71 SB
1915 1846 103 (value ) 104 SB
2019 1846 46 (of ) 47 SB
2066 1846 32 (1 ) 33 SB
2099 1846 151 (indicates) 151 SB
300 1896 75 (that ) 77 SB
377 1896 63 (the ) 65 SB
442 1896 70 (vcc ) 72 SB
514 1896 112 (signal ) 114 SB
628 1896 70 (can ) 72 SB
700 1896 51 (be ) 53 SB
753 1896 58 (set ) 60 SB
813 1896 44 (to ) 46 SB
859 1896 136 (voltage ) 138 SB
997 1896 43 (v. ) 45 SB
1042 1896 69 (For ) 71 SB
1113 1896 166 (example, ) 169 SB
1282 1896 98 (entry ) 101 SB
1383 1896 30 (e ) 33 SB
1416 1896 118 (whose ) 121 SB
1537 1896 103 (value ) 106 SB
1643 1896 39 (is ) 42 SB
1685 1896 242 (10100000101 ) 245 SB
1930 1896 44 (in ) 47 SB
1977 1896 119 (binary ) 122 SB
2099 1896 151 (indicates) 151 SB
300 1946 1443 (that 5V is allowed to set on vcc and vpp2 pins but not on vpp1 pins at the same time.) 1443 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 1995 38 (3.) 38 SB
338 1995 25 (4) 25 SB
363 1995 51 (.3 ) 68 SB
431 1995 1136 ( Open Firmware-defined Methods for Adapter Nodes) 1136 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2093 41 (A ) 44 SB
344 2093 161 (Standard ) 164 SB
508 2093 152 (Package ) 155 SB
663 2093 247 (implementing ) 251 SB
914 2093 63 (the ) 67 SB
981 2093 19 (\223) 19 SB
1000 2093 113 (pccard) 113 SB
1113 2093 19 (\224) 19 SB
1132 2093 11 ( ) 15 SB
1147 2093 122 (device ) 126 SB
1273 2093 84 (type ) 88 SB
1361 2093 91 (shall ) 95 SB
1456 2093 193 (implement ) 197 SB
1653 2093 63 (the ) 67 SB
1720 2093 175 (following ) 179 SB
1899 2093 154 (standard ) 158 SB
2057 2093 154 (methods ) 158 SB
2215 2093 35 (as) 35 SB
300 2143 138 (defined ) 141 SB
441 2143 44 (in ) 47 SB
488 2143 102 (Open ) 105 SB
593 2143 186 (Firmware, ) 189 SB
782 2143 86 (with ) 89 SB
871 2143 63 (the ) 66 SB
937 2143 152 (physical ) 155 SB
1092 2143 137 (address ) 140 SB
1232 2143 267 (representations ) 270 SB
1502 2143 46 (as ) 49 SB
1551 2143 164 (specified ) 168 SB
1719 2143 44 (in ) 48 SB
1767 2143 131 (section ) 135 SB
1902 2143 64 (2.1 ) 68 SB
1970 2143 46 (of ) 50 SB
2020 2143 72 (this ) 76 SB
2096 2143 154 (standard,) 154 SB
300 2193 816 (and with additional PC Card specific semantics:) 816 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 2269 86 (open) 86 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 2272 155 (\( -- flag \)) 155 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 2269 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2336 648 (Prepare this device for subsequent use) 648 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 2412 87 (close) 87 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 2415 78 (\( -- \)) 78 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 2412 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2479 575 (Close this previously-open device) 575 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 2555 128 (map-in) 128 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 2558 523 (\( phys.low phys.hi size -- virt \)) 523 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 2555 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2622 481 (Map the specified subregion) 481 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 2698 151 (map-out) 151 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 2701 225 (\( virt size -- \)) 225 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 2698 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2765 672 (Destroy mapping from previous map-in) 672 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 2841 178 (dma-alloc) 178 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 2844 225 (\( size -- virt \)) 225 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 2841 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2908 659 (Allocate a memory region for later use) 659 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 15 15
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2208 2997 42 (15) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
300 180 164 (dma-free) 164 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 183 225 (\( virt size -- \)) 225 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 180 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 247 659 (Free memory allocated with dma-alloc) 659 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 323 221 (dma-map-in) 221 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 326 551 (\( virt size cacheable -- devaddr \)) 551 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 323 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 390 875 (Convert virtual address to device bus DMA address) 875 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 466 244 (dma-map-out) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 469 372 (\( virt devaddr size -- \)) 372 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 466 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 533 757 (Free DMA mapping set up with dma-map-in) 757 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 609 172 (dma-sync) 172 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 612 372 (\( virt devaddr size -- \)) 372 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 609 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 676 718 (Synchronize \(flush\) DMA memory caches) 718 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 752 180 (probe-self) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 755 914 (\( arg-str arg-len reg-str reg-len fcode-str fcode-len -- \)) 914 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 752 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 835 663 (Interpret FCode, as a child of this node) 663 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 911 210 (decode-unit) 210 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 914 495 (\( addr len -- phys.lo phys.hi \)) 495 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 911 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 978 1121 (Convert text representation of address to numerical representation) 1121 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 1054 210 (encode-unit) 210 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 1057 495 (\( phys.lo phys.hi -- addr len \)) 495 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2100 1054 40 (M) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 1121 1121 (Convert numerical representation of address to text representation) 1121 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 1170 38 (3.) 38 SB
338 1170 25 (4) 25 SB
363 1170 51 (.4 ) 68 SB
431 1170 468 ( Bus-specific Methods) 468 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 1268 41 (A ) 49 SB
349 1268 62 (PC ) 70 SB
419 1268 93 (Card ) 101 SB
520 1268 69 (bus ) 77 SB
597 1268 147 (Adapter ) 155 SB
752 1268 39 (is ) 47 SB
799 1268 183 (abstracted ) 191 SB
990 1268 53 (by ) 61 SB
1051 1268 63 (the ) 71 SB
1122 1268 126 (Socket ) 134 SB
1256 1268 154 (Services ) 163 SB
1419 1268 156 (software ) 165 SB
1584 1268 107 (layer. ) 116 SB
1700 1268 126 (Socket ) 135 SB
1835 1268 154 (Services ) 163 SB
1998 1268 156 (provides ) 165 SB
2163 1268 87 (basic) 87 SB
300 1318 541 (configuration functions such as ) 542 SB
842 1318 156 (Window ) 157 SB
999 1318 135 (setting, ) 136 SB
1135 1318 116 (power ) 117 SB
1252 1318 142 (control, ) 143 SB
1395 1318 152 (memory ) 153 SB
1548 1318 170 (mapping, ) 171 SB
1719 1318 67 (I/O ) 68 SB
1787 1318 170 (mapping, ) 171 SB
1958 1318 157 (interrupt ) 158 SB
2116 1318 134 (steering) 134 SB
300 1368 72 (etc. ) 75 SB
375 1368 58 (To ) 61 SB
436 1368 86 (boot ) 89 SB
525 1368 30 (a ) 33 SB
558 1368 128 (system ) 131 SB
689 1368 93 (from ) 96 SB
785 1368 30 (a ) 33 SB
818 1368 62 (PC ) 65 SB
883 1368 104 (Card, ) 107 SB
990 1368 63 (the ) 66 SB
1056 1368 98 (same ) 101 SB
1157 1368 228 (functionality ) 231 SB
1388 1368 93 (must ) 96 SB
1484 1368 51 (be ) 55 SB
1539 1368 233 (implemented ) 237 SB
1776 1368 53 (by ) 57 SB
1833 1368 69 (bus ) 73 SB
1906 1368 136 (adapter ) 140 SB
2046 1368 134 (FCode. ) 138 SB
2184 1368 66 (The) 66 SB
300 1418 754 (methods described in this section define the ) 755 SB
1055 1418 168 (functions ) 169 SB
1224 1418 152 (required ) 153 SB
1377 1418 44 (to ) 45 SB
1422 1418 173 (configure ) 174 SB
1596 1418 30 (a ) 31 SB
1627 1418 62 (PC ) 63 SB
1690 1418 93 (Card ) 94 SB
1784 1418 72 (and ) 73 SB
1857 1418 86 (boot ) 87 SB
1944 1418 30 (a ) 31 SB
1975 1418 128 (system ) 129 SB
2104 1418 93 (from ) 94 SB
2198 1418 52 (the) 52 SB
300 1468 155 (PC Card.) 155 SB
300 1531 1668 (The formats of the parameters shown in the method\222s stack representations are defined as follows;) 1668 SB

%%BeginResource: font MSTT31c1f8
/GreNewFont{10 dict dup 3 1 roll def dup begin 6 1 roll/FontType 3
def/FontMatrix exch def/FontBBox exch def/FontInfo 2 dict def FontInfo
/UnderlinePosition 3 -1 roll put FontInfo/UnderlineThickness 3 -1
roll put/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
/CharProcs 256 dict def CharProcs/.notdef{}put/Metrics 256 dict def
Metrics/.notdef 3 -1 roll put/BuildChar{/char exch def/fontdict exch
def/charname fontdict/Encoding get char get def fontdict/Metrics get
charname get aload pop setcachedevice fontdict begin Encoding char
get CharProcs exch get end exec}def end definefont pop}def/AddChar{begin
Encoding 3 1 roll put CharProcs 3 1 roll put Metrics 3 1 roll put end}def
/MSTT31c1f8 [33.0 0 0 0 0 0] 60 -90 [-33.0 -33.0 33.0 33.0] [1 33 div 0 0 1 33 div 0 0] /MSTT31c1f8 GreNewFont
/G1e [17.0 0.0 2.0 0.0 14.0 24.0]
/G1e {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  30 /G1e MSTT31c1f8 AddChar
/G1f [17.0 0.0 2.0 0.0 14.0 24.0]
/G1f {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  31 /G1f MSTT31c1f8 AddChar
/G20 [33.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c1f8 AddChar
/G21 [34.0 0.0 1.0 -1.0 32.0 24.0]
/G21 {
    31 25 true [1 0 0 -1 -1.0 24.0] {<000000300000004c00000084000001020000070200000f86000017c8000027d00000dbe0000125c0
00024900000c92000013640000249800004920000192400003e48000049b00000966000008680000
10b0000020600000238000007c000000c0000000>} imagemask 
  }
  33 /G21 MSTT31c1f8 AddChar
/G22 [38.0 0.0 2.0 0.0 35.0 24.0]
/G22 {
    33 24 true [1 0 0 -1 -2.0 24.0] {<7800000000c600001f008300003f00810000fc00c10001f800710007e0001f000f800007803f0000
01e07c00000079f000000033e00000000d800000001a000000003ce000000031f8000000e07c0000
01e03f000006200fc000082003e000302001f8004060007e0080c0003f008300000f007c00000000
>} imagemask 
  }
  34 /G22 MSTT31c1f8 AddChar
/G23 [43.0 0.0 2.0 0.0 40.0 26.0]
/G23 {
    38 26 true [1 0 0 -1 -2.0 26.0] {<007800000000cc0000000084000000008200000000c200000000420000000066000000003c000000
001c000000000c0000000006000000000700000000078003e000000ffff0000ffffff8001f3fff80
1ffff8000078100000008010700000802038000080203c000060c01c00001f000e000000000e0000
00000700000000078000>} imagemask 
  }
  35 /G23 MSTT31c1f8 AddChar
/G24 [44.0 0.0 1.0 0.0 43.0 17.0]
/G24 {
    42 17 true [1 0 0 -1 -1.0 17.0] {<003c00000f000042000030800081000060400301000080400601000100400c010002004018000004
0000300000080000603c00180000c02200300000ffe3ffe000008022004000008022008000004042
008000004041010000003080c20000000f007c000000>} imagemask 
  }
  36 /G24 MSTT31c1f8 AddChar
/G25 [29.0 0.0 2.0 -1.0 27.0 24.0]
/G25 {
    25 25 true [1 0 0 -1 -2.0 24.0] {<001c0000003e000000c1800003006000020020000400100004001000080008000800080008000800
08000800080008000800080008000800100004001000040021ffc2003fc03e0067c0030087c00080
83800080c0000180600003001e003c0001ffc000>} imagemask 
  }
  37 /G25 MSTT31c1f8 AddChar
/G26 [40.0 0.0 3.0 0.0 38.0 26.0]
/G26 {
    35 26 true [1 0 0 -1 -3.0 26.0] {<01fc07f0000e03180e000800a002001800c00300e8004003e0a8004002a0a8004002a0a8004002a0
a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0
a8004002a0a8004002a0a9fc4ffaa0ae035006a0b000e002a0b0004001a0b07f5fc0a0bf80e03fa0
803e0fc020ffc1f03fe0>} imagemask 
  }
  38 /G26 MSTT31c1f8 AddChar
/G27 [15.0 0.0 3.0 -1.0 12.0 24.0]
/G27 {
    9 25 true [1 0 0 -1 -3.0 24.0] {<0800140016001200210041004100410062001c007f00c980c880bf80808080808080808080808080
808080808080c1803f00>} imagemask 
  }
  39 /G27 MSTT31c1f8 AddChar
/G28 [36.0 0.0 3.0 0.0 33.0 24.0]
/G28 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<007ff80007ffffc03ffffff07ffffff87f800ff8fe0003fcfce01dfc02e01e00fefffffcfefffdfc
7dfffef803c78f0003ffff0007c78f8007ffff800fc78fc00fffffc01fffffe01fffffe01fffffe0
1fffffe01fffffe01fffffe01fffffe0>} imagemask 
  }
  40 /G28 MSTT31c1f8 AddChar
/G29 [29.0 0.0 3.0 0.0 27.0 24.0]
/G29 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff000381c0047020086c18106e08206e04403602400702c0070380070180070180070180070180
0701800701c00703400702403602206e04106e08086c100468200381c000ff00>} imagemask 
  }
  41 /G29 MSTT31c1f8 AddChar
/G2a [37.0 0.0 3.0 0.0 35.0 24.0]
/G2a {
    32 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffc0000003a000000590000009880000118400002182000041810000818080010180400201
80200401801008018018180180242401804242018081810181000081820000418400002188000011
90000009a0000005c0000003ffffffff>} imagemask 
  }
  42 /G2a MSTT31c1f8 AddChar
/G2b [37.0 0.0 3.0 0.0 35.0 24.0]
/G2b {
    32 24 true [1 0 0 -1 -3.0 24.0] {<ffffffff800000018000000180000071800000718000007180000071800000718000000180000001
80000001803ff0018000000180000001800ffc0180000001800000018007fe018000000180000001
800000018000000180000001ffffffff>} imagemask 
  }
  43 /G2b MSTT31c1f8 AddChar
/G2c [39.0 0.0 3.0 0.0 36.0 24.0]
/G2c {
    33 24 true [1 0 0 -1 -3.0 24.0] {<000001f00000001e0c000001e00200001e00010001e00001000f8000008018600000802010000080
4008000080c00c00008080040006808004007e808f8407fe808f847ffe8080047e7e808004607e80
8004007e808004007c8080040040808004000f00800400f00080040f00008004f00000ffff000000
>} imagemask 
  }
  44 /G2c MSTT31c1f8 AddChar
/G2d [39.0 0.0 3.0 0.0 36.0 26.0]
/G2d {
    33 26 true [1 0 0 -1 -3.0 26.0] {<000003000000007f000000007ff00000007f0c000000ff0200000f7f010000f07f01000780780080
186070008020107000804008700080c008700080800470008080047000808f847000808f84700080
800470008080044000808004000080800400008080040000808004000f00800400f00080040f0000
8004f00000ffff000000>} imagemask 
  }
  45 /G2d MSTT31c1f8 AddChar
/G2e [48.0 0.0 3.0 0.0 45.0 26.0]
/G2e {
    42 26 true [1 0 0 -1 -3.0 26.0] {<0000000380000000007f80000000007ff8000000007f8600000000ff810000000f7f80800000707f
80800007c078004000083070004000100870004000200470004000601e7000400040e27000403e41
0270004041c10670004080623a700040803222700040800c42000040478642000040638342000040
3001c200004008004200078004002600780003001a07800001800a78000000ffff800000>} imagemask 
  }
  46 /G2e MSTT31c1f8 AddChar
/G2f [48.0 0.0 3.0 0.0 45.0 24.0]
/G2f {
    42 24 true [1 0 0 -1 -3.0 24.0] {<00000000f8000000000f0600000000f0010000000f0000800000700000800007e0000040000c3000
00400010080000400020040000400060060000400040020003403e4002003f4041c00203ff408060
023fff408030023f3f40800802203f40478402003f40638302003e403001820030400800c2000780
04002200780002001207800001800a78000000ffff800000>} imagemask 
  }
  47 /G2f MSTT31c1f8 AddChar
/G30 [36.0 0.0 3.0 0.0 34.0 24.0]
/G30 {
    31 24 true [1 0 0 -1 -3.0 24.0] {<07fe00000401000008010000fffffffe800000028000000280000002800000028000000280000002
80000002800000028000000280000002800000028000000280000002800000028000000280000002
800000028000000280000002fffffffe>} imagemask 
  }
  48 /G30 MSTT31c1f8 AddChar
/G31 [44.0 0.0 3.0 0.0 42.0 24.0]
/G31 {
    39 24 true [1 0 0 -1 -3.0 24.0] {<07fe00000004010000000801000000f801fffe00800000020080000002008000000200807ffffffe
80800000028080000004810000000481000000088200000008820000001084000000108800000020
880000002090000000409000000040a000000080a000000080c000000100c000000100fffffffe00
>} imagemask 
  }
  49 /G31 MSTT31c1f8 AddChar
/G32 [23.0 0.0 3.0 0.0 20.0 24.0]
/G32 {
    17 24 true [1 0 0 -1 -3.0 24.0] {<fff000803800802c009e26008023008021809e3f808000808000808000809ffc808000808000809f
fc808000808000809ffc808000808000809ffc80800080800080800080ffff80>} imagemask 
  }
  50 /G32 MSTT31c1f8 AddChar
/G33 [23.0 0.0 3.0 0.0 20.0 24.0]
/G33 {
    17 24 true [1 0 0 -1 -3.0 24.0] {<ffff808000808000809ffc808000808000809ffc808000808000808000809ffc808000808000809f
fc808000808000809ffc808000808000809ffc80800080800080800080ffff80>} imagemask 
  }
  51 /G33 MSTT31c1f8 AddChar
/G34 [29.0 0.0 3.0 -6.0 27.0 24.0]
/G34 {
    24 30 true [1 0 0 -1 -3.0 24.0] {<01ffff0100010100011ffff9100009100009ffffc98000498000499ffc498000498000498000499f
fc498000498000499ffc498000498000499ffc498000498000499ffc4980004f8000489ffc488000
78800040800040ffffc0>} imagemask 
  }
  52 /G34 MSTT31c1f8 AddChar
/G35 [18.0 0.0 3.0 0.0 17.0 23.0]
/G35 {
    14 23 true [1 0 0 -1 -3.0 23.0] {<fffc800480048f8488848f8480048204800480048004fffc800480048f8488848f84800483048004
80048004fffc>} imagemask 
  }
  53 /G35 MSTT31c1f8 AddChar
/G36 [20.0 0.0 3.0 -1.0 17.0 24.0]
/G36 {
    14 25 true [1 0 0 -1 -3.0 24.0] {<3ff0c01c8004e01c9fe48004800470282fd017a01b600fc006800cc0186010202010400880048784
9fe4bff4ffe460181fe0>} imagemask 
  }
  54 /G36 MSTT31c1f8 AddChar
/G37 [35.0 0.0 3.0 0.0 33.0 24.0]
/G37 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<00001000000030000000300001f0e00003ffc000070f80000e0000000c0000000c0000007ffffff8
80000004800000048cccccc48cccccc483333304833333048cccccc48cccccc48000000480fffc04
80fffc0480000004800000047ffffff8>} imagemask 
  }
  55 /G37 MSTT31c1f8 AddChar
/G38 [31.0 0.0 1.0 -1.0 28.0 27.0]
/G38 {
    27 28 true [1 0 0 -1 -1.0 27.0] {<0001f0000007f800000f0800000c040000180400001804000030ffc0003104200071042080610420
c0e10420c0c1ffe061c100203f8100201e0100200001002000010020000100200001002000010020
00010020000100200001002000010020000080400000c0c00000618000001e00>} imagemask 
  }
  56 /G38 MSTT31c1f8 AddChar
/G39 [36.0 0.0 1.0 0.0 32.0 20.0]
/G39 {
    31 20 true [1 0 0 -1 -1.0 20.0] {<3c000000fe000000c7000f8003003060030040100300a01803014714030158d40302974a0302afaa
0303afae03022fa203062fa2038e174201fe18c200f207020002000200020002000200020003fffe
>} imagemask 
  }
  57 /G39 MSTT31c1f8 AddChar
/G3a [31.0 0.0 3.0 0.0 29.0 24.0]
/G3a {
    26 24 true [1 0 0 -1 -3.0 24.0] {<1fffff001000010017fffd0014000500140005001400050014000500140005001400050014000500
14000500140005001400050017fffd00100001001fffff001fffff00200000804d89cc80437630c0
8dcdcc408000004080000040ffffffc0>} imagemask 
  }
  58 /G3a MSTT31c1f8 AddChar
/G3b [29.0 0.0 3.0 0.0 26.0 11.0]
/G3b {
    23 11 true [1 0 0 -1 -3.0 11.0] {<fffffe8000028000028000029ffff28000029ffff28000028c0002800002fffffe>} imagemask 
  }
  59 /G3b MSTT31c1f8 AddChar
/G3c [29.0 0.0 3.0 0.0 27.0 24.0]
/G3c {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffff8800118800118800118800118800118800118800118800118800118800118ffff180000180
000180000183ffc1820fc1820fc1820fc1820fc1820fc1420fc1220fc11fffff>} imagemask 
  }
  60 /G3c MSTT31c1f8 AddChar
/G3d [29.0 0.0 3.0 0.0 27.0 24.0]
/G3d {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffc0003fc0003fc0003fc0003cc0003cffffffffffffffc3ffff81ffff81ffff81ffff
81ffffc3ffffffffffffffffe7ffffe7ffffe7ffffe7ffffe7ffffffffffffff>} imagemask 
  }
  61 /G3d MSTT31c1f8 AddChar
/G3e [29.0 0.0 3.0 0.0 26.0 25.0]
/G3e {
    23 25 true [1 0 0 -1 -3.0 25.0] {<00fe0003838004004008382010381020380860380c40380440000480000280300280780280780283
79028733c28f87e24f03e44400c460000c20000810001008002004004003838000fe00>} imagemask 
  }
  62 /G3e MSTT31c1f8 AddChar
/G3f [30.0 0.0 1.0 0.0 29.0 18.0]
/G3f {
    28 18 true [1 0 0 -1 -1.0 18.0] {<0000003000000070000001c000300700004fdc00008038000110e000013f900002470800025e0400
04f2020007ee010003f00100040001001c0001003bf0030060af3e0080f9e600>} imagemask 
  }
  63 /G3f MSTT31c1f8 AddChar
/G40 [30.0 0.0 1.0 0.0 29.0 18.0]
/G40 {
    28 18 true [1 0 0 -1 -1.0 18.0] {<c0000000e0000000380000000e00c00003bf200001c0100000708800009fc800010e24000207a400
0404f40008077e000800fc0008000200080003800c00fdc007cf50600679f010>} imagemask 
  }
  64 /G40 MSTT31c1f8 AddChar
/G41 [19.0 0.0 3.0 0.0 17.0 26.0]
/G41 {
    14 26 true [1 0 0 -1 -3.0 26.0] {<1c00140c1214122412240a28094809480948099008103f902c502630e7b094909290ca10ce10b010
402040202040204020401f80>} imagemask 
  }
  65 /G41 MSTT31c1f8 AddChar
/G42 [26.0 0.0 3.0 -1.0 25.0 26.0]
/G42 {
    22 27 true [1 0 0 -1 -3.0 26.0] {<020000050000050c00e4940094a400ce640046240031240008d4000434000ffc00100c0020060043
02004c81004840805040807ec04021002060001018001007c0080020040018040007880000500000
20>} imagemask 
  }
  66 /G42 MSTT31c1f8 AddChar
/G43 [22.0 0.0 3.0 4.0 20.0 25.0]
/G43 {
    17 21 true [1 0 0 -1 -3.0 25.0] {<0200000e00000900000900000880000440000460000220000210003e08004007008e008091008043
00807c80804180803e40802187001e480008f00007e000>} imagemask 
  }
  67 /G43 MSTT31c1f8 AddChar
/G44 [22.0 0.0 2.0 -1.0 19.0 20.0]
/G44 {
    17 21 true [1 0 0 -1 -2.0 20.0] {<03f0000588000b3c0070c200813e0080c100809f00806100804080803c80700100083e0004200002
2000031000011000008800004800004800005800002000>} imagemask 
  }
  68 /G44 MSTT31c1f8 AddChar
/G45 [31.0 0.0 3.0 7.0 30.0 20.0]
/G45 {
    27 13 true [1 0 0 -1 -3.0 20.0] {<000fc0007ff03800802007c08047c0207ff9c020003e402000206020001fa020001030200010e1c0
000f920000047c000003f800>} imagemask 
  }
  69 /G45 MSTT31c1f8 AddChar
/G46 [31.0 0.0 1.0 7.0 28.0 20.0]
/G46 {
    27 13 true [1 0 0 -1 -1.0 20.0] {<007e00000381ffc07c008020807c402080b3ffc0804f800080c0800080bf00008181000070e10000
093e000006c4000003f80000>} imagemask 
  }
  70 /G46 MSTT31c1f8 AddChar
/G47 [18.0 0.0 3.0 -2.0 16.0 25.0]
/G47 {
    13 27 true [1 0 0 -1 -3.0 25.0] {<00600090009000900090009000900090009000d003b01d9025886548a548a4c8b4c8d348de90e810
c010402020201020102010200fc0>} imagemask 
  }
  71 /G47 MSTT31c1f8 AddChar
/G48 [18.0 0.0 2.0 0.0 15.0 27.0]
/G48 {
    13 27 true [1 0 0 -1 -2.0 27.0] {<1f8020402040204020202010401840b883d89e589a689928a52895308d204dc06e00580048004800
4800480048004800480048003000>} imagemask 
  }
  72 /G48 MSTT31c1f8 AddChar
/G49 [29.0 0.0 3.0 0.0 27.0 26.0]
/G49 {
    24 26 true [1 0 0 -1 -3.0 26.0] {<0030000e48000b48e00949a0094920e5c920a4ca4094ca404cca404acc80264c8026408013008e10
01110800a20801c408020808041008002008004004008004030002060001040001040000f800>} imagemask 
  }
  73 /G49 MSTT31c1f8 AddChar
/G4a [28.0 0.0 1.0 -1.0 26.0 24.0]
/G4a {
    25 25 true [1 0 0 -1 -1.0 24.0] {<007f000003ffe0000780f0000e0038001c001c0038000e00700007006080830061c1c300c1c1c180
c0808180c0000180c0000180c4001180c6003180c20021806300630061c1c30070ff8700383e0e00
1c001c000e0038000780f00003ffe000007f0000>} imagemask 
  }
  74 /G4a MSTT31c1f8 AddChar
/G4b [28.0 0.0 1.0 -1.0 27.0 24.0]
/G4b {
    26 25 true [1 0 0 -1 -1.0 24.0] {<007f800001ffe00007c0f8000e001c001c000e0038000700300003006080418061c0e180c1c0e0c0
c08040c0c00000c0c00000c0c00000c0c00000c0c3fff0c063fff180600001803000030038000700
1c000e000e001c0007c0f80001ffe000007f8000>} imagemask 
  }
  75 /G4b MSTT31c1f8 AddChar
/G4c [28.0 0.0 1.0 -1.0 26.0 24.0]
/G4c {
    25 25 true [1 0 0 -1 -1.0 24.0] {<007f000003ffe0000780f0000e0038001c001c0038000e00700007006080830061c1c300c1c1c180
c0808180c0000180c03e0180c0ff8180c1c1c180c300618062002300660033007400170038000e00
1c001c000e0038000780f00003ffe000007f0000>} imagemask 
  }
  76 /G4c MSTT31c1f8 AddChar
/G4d [37.0 0.0 3.0 -1.0 36.0 24.0]
/G4d {
    33 25 true [1 0 0 -1 -3.0 24.0] {<0000084200003c084400007f04480000e382500000c1c1100000c060010003f038c60003f01fc000
03f00788000ffc0124001fff0123003fff0120807fff8110007fffc21000ffffc20000ffffc00000
ffffc00000ffffc00000ffffc000007fff8000007fff8000003fff0000001ffe0000000ffc000000
03f0000000>} imagemask 
  }
  77 /G4d MSTT31c1f8 AddChar
/G4e [22.0 0.0 3.0 -1.0 19.0 24.0]
/G4e {
    16 25 true [1 0 0 -1 -3.0 24.0] {<03e00ff80ff81ffc1ffc1ffc188c188808880f780f7003e003e001c060837007780fcf3b03c001c0
07703c1cf80ff00f3004>} imagemask 
  }
  78 /G4e MSTT31c1f8 AddChar
/G4f [28.0 0.0 3.0 -3.0 26.0 26.0]
/G4f {
    23 29 true [1 0 0 -1 -3.0 26.0] {<c00000c00000c3f000cc1800f00c00c00400c00400c00400c00402c0041ec007e2c00402c00402c0
0402c00402c3f402cc2c02f02402c02c02c03802c02002c02002c0180cc007f0c00000c00000c000
00c00000c00000>} imagemask 
  }
  79 /G4f MSTT31c1f8 AddChar
/G50 [36.0 0.0 3.0 0.0 34.0 27.0]
/G50 {
    31 27 true [1 0 0 -1 -3.0 27.0] {<800000008000000080000000c7e00000dff80000fc1c0000e00c0000400400004004000040040000
60080000600c000063ef00006ffbe00e7c98fff830901ff020a000e020c0038030803f0030fff800
303fc000300000003000000010000000180000001800000018000000>} imagemask 
  }
  80 /G50 MSTT31c1f8 AddChar
/G51 [29.0 0.0 3.0 0.0 27.0 23.0]
/G51 {
    24 23 true [1 0 0 -1 -3.0 23.0] {<006000007000003800003800003c00001e00001e00000f00c00f806007807ffffc3fffff67fffc60
0780c00f80000f00001e00001e00003c00003800003800007000006000>} imagemask 
  }
  81 /G51 MSTT31c1f8 AddChar
/G52 [29.0 0.0 4.0 1.0 26.0 24.0]
/G52 {
    22 23 true [1 0 0 -1 -4.0 24.0] {<0000000030000030000c78c00f7bc00f87c00e01c004008008004070003870003830003010002010
00401000201800603c00f03e01f003030001fe0001ce00018600010200>} imagemask 
  }
  82 /G52 MSTT31c1f8 AddChar
/G53 [21.0 0.0 3.0 0.0 19.0 24.0]
/G53 {
    16 24 true [1 0 0 -1 -3.0 24.0] {<0000010001800180018003c003c007e00ff01ff83ffc3ffc7ffe7ffeffffffffffffffffffff7ffe
7ffe3ffc1ff807e0>} imagemask 
  }
  83 /G53 MSTT31c1f8 AddChar
/G54 [27.0 0.0 3.0 0.0 24.0 24.0]
/G54 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<00200000200003260001fc00087080082080c820983820e01c21c0762370c1ac18007000007000c1
ac187623701c21c03820e0c8209808208008708001fc00032600002000002000>} imagemask 
  }
  84 /G54 MSTT31c1f8 AddChar
/G55 [25.0 0.0 3.0 0.0 21.0 24.0]
/G55 {
    18 24 true [1 0 0 -1 -3.0 24.0] {<03f00003f000033000033000033000033000033000ff3fc0ff3fc0c000c0c000c0ff3fc0ff3fc003
300003300003300003300003300003300003300003300003300003f00003f000>} imagemask 
  }
  85 /G55 MSTT31c1f8 AddChar
/G56 [25.0 0.0 3.0 0.0 23.0 23.0]
/G56 {
    20 23 true [1 0 0 -1 -3.0 23.0] {<03f80003fc00031c00031c00031c00ff1fe0ff1ff0c00070c00070c00070ff1ff0ff1ff0031ff003
1c00031c00031c00031c00031c00031c00031c0003fc0003fc0001fc00>} imagemask 
  }
  86 /G56 MSTT31c1f8 AddChar
/G57 [24.0 0.0 3.0 0.0 22.0 24.0]
/G57 {
    19 24 true [1 0 0 -1 -3.0 24.0] {<00e00000e00000e00003f8000ffe000eee001ce700184300feefe0ffffe0feefe01843001ce7000e
ee0007fc0003f80000e00000e00000e00000e00000e00000e00000e00000e000>} imagemask 
  }
  87 /G57 MSTT31c1f8 AddChar
/G58 [23.0 0.0 3.0 3.0 21.0 22.0]
/G58 {
    18 19 true [1 0 0 -1 -3.0 22.0] {<1ffe0007f80003f00081e04081e040c0c0c0e0c1c0f0c3c0fedfc0ffffc0fedfc0f0c3c0e0c1c0c0
c0c081e04081e04003f00007f8001ffe00>} imagemask 
  }
  88 /G58 MSTT31c1f8 AddChar
/G59 [26.0 0.0 3.0 0.0 24.0 24.0]
/G59 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<00200000200000700000d80000d800018c00fffff87ffff06306303603601c01c01c01c01c01c01c
01c03603606306307ffff0fffff8018c0000d80000d800007000002000002000>} imagemask 
  }
  89 /G59 MSTT31c1f8 AddChar
/G5a [29.0 0.0 3.0 0.0 27.0 24.0]
/G5a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00fe0003ff8007f0600f80001f00003e00007c0000780000f80010f00010f00030f001fef00078f0
0078f0004cf800807800007c00003e00001f00000f800007f02003ffc000fe00>} imagemask 
  }
  90 /G5a MSTT31c1f8 AddChar
/G5b [29.0 0.0 3.0 0.0 27.0 23.0]
/G5b {
    24 23 true [1 0 0 -1 -3.0 23.0] {<00ff000381c004002018001830000c2000044f80025fc002bfe001ffe001f8f0e1f8f0e1f8f0e1ff
f001fff8037ffc067ffe0e3ffffc3ffffc1ffff807ffe003ffc000ff00>} imagemask 
  }
  91 /G5b MSTT31c1f8 AddChar
/G5c [30.0 0.0 3.0 -1.0 27.0 24.0]
/G5c {
    24 25 true [1 0 0 -1 -3.0 24.0] {<000c00001e0000040000c380007f80003f000f1e001fc03c0fc07e0820fe002087002703006f8181
ff8181dc81818881400c814004836006c63006fe380efc1e1e780ffc0007fc0001f000>} imagemask 
  }
  92 /G5c MSTT31c1f8 AddChar
/G5d [29.0 0.0 3.0 0.0 28.0 25.0]
/G5d {
    25 25 true [1 0 0 -1 -3.0 25.0] {<001c0000001c0000003e00001cff9c001dffdc001fddfc00071c70000f9cf8001ddddc003cff9e00
38630e00ffc1ff80ffc1ff80ffc1ff8038630e001cff9c001ddddc000f9cf800071c70001fddfc00
1dffdc001cff9c00003e0000001c0000001c0000>} imagemask 
  }
  93 /G5d MSTT31c1f8 AddChar
/G5e [38.0 0.0 3.0 -6.0 36.0 25.0]
/G5e {
    33 31 true [1 0 0 -1 -3.0 25.0] {<0f000078003fc001fe007fe0038f0078f0070700f070060380e0380e0380e0380c0380e01c1c0380
e01c180380e00c180380700e380700700e3007003006300600000630000000077000000007700000
00036000000003600000000360000000036000000003e000000003e000000001c000000001c00000
0001c000000001c000000001c000000001c000000001c000000001c000000001c00000>} imagemask 
  }
  94 /G5e MSTT31c1f8 AddChar
/G5f [35.0 0.0 3.0 -7.0 32.0 24.0]
/G5f {
    29 31 true [1 0 0 -1 -3.0 24.0] {<e0000038f80000f8380000e01c0001c00e0003800e000380070007000780070003800e0001c01c00
00f07800007ff00000fff80001f03c0003c01e000300070006000300060003000c0001800c000180
0c0001800c0001800c0001800c00018006000300060003000300060001c01c0000f07800007ff000
001fc000>} imagemask 
  }
  95 /G5f MSTT31c1f8 AddChar
/G60 [32.0 0.0 3.0 -1.0 29.0 25.0]
/G60 {
    26 26 true [1 0 0 -1 -3.0 25.0] {<e00001c0ffffffc01ffffe0003807000038070000380700003807000038070000380700003807000
03807000038070000380700003807000038070000380700003807000038070000380700003807000
0380700003807000038070000ffffc00ffffffc0f00003c0>} imagemask 
  }
  96 /G60 MSTT31c1f8 AddChar
/G61 [36.0 0.0 3.0 0.0 33.0 24.0]
/G61 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<001ff80001ffff8007ffffe01fc007f83f80007c70c0000c60600000c0300000c0300000c03003c0
c0300ff060701c3870e038183fc0300c0f00300c0000300c0000300c00001818c0000c38f80007f0
7f800fe01fffff8007fffe00007fe000>} imagemask 
  }
  97 /G61 MSTT31c1f8 AddChar
/G62 [31.0 0.0 3.0 -7.0 29.0 26.0]
/G62 {
    26 33 true [1 0 0 -1 -3.0 26.0] {<000fc000007ff00000f07c0001e01c0001c00e0003800e0003800700038007000380070003800700
0180070001c0070000c00f000fe00e003fe00e0070701c0060301c00c0103c00c0183800c0187800
c0187000c01870006030e0007070e0003fe0e0000f81c0000001c0000001c0000001c0000001c080
0000e3c000007f8000003e00>} imagemask 
  }
  98 /G62 MSTT31c1f8 AddChar
/G63 [31.0 0.0 3.0 -6.0 28.0 25.0]
/G63 {
    25 31 true [1 0 0 -1 -3.0 25.0] {<e1c3800071e3c00073e7c0003a74e0003e7ce0003c78e0003c78ee003c78ee003870ef003870ff00
3870f3003870f3803870e3803870e3803870e3803870e3803870e3803870e3803870e7003870e700
3870e6003870ee003870ec003870fc003870f8000000f0000003e000000f7000000c700000003000
00001800>} imagemask 
  }
  99 /G63 MSTT31c1f8 AddChar
/G64 [31.0 0.0 3.0 2.0 29.0 24.0]
/G64 {
    26 22 true [1 0 0 -1 -3.0 24.0] {<003f000000ffc00003fff00007c0f800078078000f003c000e001c000e001c000e001c000e001c00
0700380003807000ffc0ffc0ffc0ffc0ffc0ffc000000000000000000000000000000000ffffffc0
ffffffc0ffffffc0>} imagemask 
  }
  100 /G64 MSTT31c1f8 AddChar
/G65 [34.0 0.0 3.0 -6.0 31.0 25.0]
/G65 {
    28 31 true [1 0 0 -1 -3.0 25.0] {<e1c3800071e3c00073e7c0003a74e0003e7ce0003c78e0003c78e0003c78e0003870e0003870e000
3870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e000
3870e0003870e0003870e0003870e0003870e000000070000000784000003fe000001ff000000060
00000040>} imagemask 
  }
  101 /G65 MSTT31c1f8 AddChar
/G66 [31.0 0.0 3.0 -1.0 28.0 24.0]
/G66 {
    25 25 true [1 0 0 -1 -3.0 24.0] {<000e0000001ffc00000ffe0000001f0000001f0000003f00000073000000e3000001c30000038300
180703801c0e03800e1c03800738010003f0000001e0000001e0000003f00000073800000e1c0000
1c0e00003806000070000000e000000040000000>} imagemask 
  }
  102 /G66 MSTT31c1f8 AddChar
/G67 [36.0 0.0 3.0 -5.0 33.0 24.0]
/G67 {
    30 29 true [1 0 0 -1 -3.0 24.0] {<00020000f00f0000f81f00003c1b00001c3380000e7380000e6180000661800007c1800007c18000
07c1800007c1c0000381c3e00380c7f00380ce380380d81c0380f80c0000f00c0000700c0000700c
000078180000fc380000cff00000c3e00001c0000001800000078000003f0000003e0000>} imagemask 
  }
  103 /G67 MSTT31c1f8 AddChar
/G68 [35.0 0.0 3.0 2.0 32.0 22.0]
/G68 {
    29 20 true [1 0 0 -1 -3.0 22.0] {<008040400181c0e007c3e1e00ecf67b03c7c6e3070783c30e0603018000020000000000000000000
0000000000000000000040000180c06003c3c1e00fc763e01cde6f3078787c30e070381840202010
>} imagemask 
  }
  104 /G68 MSTT31c1f8 AddChar
/G69 [26.0 0.0 3.0 -1.0 23.0 24.0]
/G69 {
    20 25 true [1 0 0 -1 -3.0 24.0] {<e000707000e03801c01801801c03800c03000e07000e0700070e00070e00070e00fffff0fffff007
0e00070e00070e000606000e07000e07000c03001c03801801803000c07000e0e00070>} imagemask 
  }
  105 /G69 MSTT31c1f8 AddChar
/G6a [35.0 0.0 3.0 -3.0 36.0 19.0]
/G6a {
    33 22 true [1 0 0 -1 -3.0 19.0] {<000000008000f000018003f8000380063cf801801c1dff0100181fffc100301e0ffe00701807f800
70300f0000e0600f0000e1c00e0000fe001e0000e0003e0000e0007e0000f000dc000070011c0000
7c0e1c00003ff81c00000fe03c0000000038000000003800000000200000>} imagemask 
  }
  106 /G6a MSTT31c1f8 AddChar
/G6b [42.0 0.0 2.0 -5.0 41.0 25.0]
/G6b {
    39 30 true [1 0 0 -1 -2.0 25.0] {<001f00000000238000000061c0001800c1c0001c01c1c0001c01c1c0000c01c380000c01c3800008
01ee00003800fc1fffe000e07fffc007e1fffe000cf3c0c0003873018000307c0180006038030000
e03c060018e01c04001ce01e08001ee00e30001ef00f60000e780780000e7c0fc0000e3ff9e0000c
0fe0f0001c00007c001800003e003000001fc0e0000007ffc0000000fe00>} imagemask 
  }
  107 /G6b MSTT31c1f8 AddChar
/G6c [25.0 0.0 3.0 2.0 22.0 21.0]
/G6c {
    19 19 true [1 0 0 -1 -3.0 21.0] {<03f0000ffe001fff003fff807fffc07fffc07fffe0ffffe0ffffe0ffffe0ffffe0ffffe07fffe07f
ffc07fffc03fff801fff000ffe0001f000>} imagemask 
  }
  108 /G6c MSTT31c1f8 AddChar
/G6d [31.0 0.0 3.0 0.0 29.0 24.0]
/G6d {
    26 24 true [1 0 0 -1 -3.0 24.0] {<00fc000003ff80000f81e0001e00780038001c0030000e0070000f0060000780e0000780c00003c0
c00003c0c00003c0c00003c0c00003c0e00007c0600007c060000f8030000f8018001f000e007f00
0781fe0001fffc00007ff000000fc000>} imagemask 
  }
  109 /G6d MSTT31c1f8 AddChar
/G6e [25.0 0.0 3.0 2.0 22.0 21.0]
/G6e {
    19 19 true [1 0 0 -1 -3.0 21.0] {<ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ff
ffe0ffffe0ffffe0ffffe0ffffe0ffffe0>} imagemask 
  }
  110 /G6e MSTT31c1f8 AddChar
/G6f [29.0 0.0 3.0 0.0 27.0 24.0]
/G6f {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007e00007e00007e00007ffffffffffffffffff>} imagemask 
  }
  111 /G6f MSTT31c1f8 AddChar
/G70 [29.0 0.0 3.0 0.0 27.0 24.0]
/G70 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<fffffffffffffffffffffffffffffff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0
000ff0000ff0000ff0000ff0000ff0000fffffffffffffffffffffffffffffff>} imagemask 
  }
  112 /G70 MSTT31c1f8 AddChar
/G71 [29.0 0.0 3.0 0.0 27.0 24.0]
/G71 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<fffffcfffffcc0000ec0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0
000fc0000fc0000fc0000fc0000fc0000fffffffffffff7fffff3fffff1fffff>} imagemask 
  }
  113 /G71 MSTT31c1f8 AddChar
/G72 [29.0 0.0 3.0 0.0 27.0 24.0]
/G72 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<1fffff3fffff7fffffffffffffffffc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0
000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000efffffcfffffc>} imagemask 
  }
  114 /G72 MSTT31c1f8 AddChar
/G73 [15.0 0.0 3.0 5.0 13.0 19.0]
/G73 {
    10 14 true [1 0 0 -1 -3.0 19.0] {<00000c001e003f003f007f80ffc0ffc07f803f003f001e000c000000>} imagemask 
  }
  115 /G73 MSTT31c1f8 AddChar
/G74 [25.0 0.0 3.0 -2.0 22.0 25.0]
/G74 {
    19 27 true [1 0 0 -1 -3.0 25.0] {<00400000e00000e00001f00003f80003f80007fc000ffe000ffe001fff003fff807fffc07fffc0ff
ffe07fffc07fffc03fff801fff000ffe000ffe0007fc0003f80003f80001f00000e00000e0000040
00>} imagemask 
  }
  116 /G74 MSTT31c1f8 AddChar
/G75 [33.0 0.0 3.0 -2.0 30.0 25.0]
/G75 {
    27 27 true [1 0 0 -1 -3.0 25.0] {<00040000000e0000001f0000003f8000007fc00000ffe00001fff00003fff80007fffc000ffffe00
1fffff003fffff807fffffc0ffffffe07fffffc03fffff801fffff000ffffe0007fffc0003fff800
01fff00000ffe000007fc000003f8000001f0000000e000000040000>} imagemask 
  }
  117 /G75 MSTT31c1f8 AddChar
/G76 [29.0 0.0 3.0 0.0 27.0 24.0]
/G76 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000ff0001ff8000ff00007e00083c101c18383e007c7f00feff81ffff81ff7f
00fe3e007c1c1838083c10007e0000ff0001ff8000ff00007e00003c00001800>} imagemask 
  }
  118 /G76 MSTT31c1f8 AddChar
/G77 [19.0 0.0 3.0 5.0 16.0 19.0]
/G77 {
    13 14 true [1 0 0 -1 -3.0 19.0] {<020007000f801fc03fe07ff0fff8fff87ff03fe01fc00f8007000200>} imagemask 
  }
  119 /G77 MSTT31c1f8 AddChar
/G78 [35.0 0.0 3.0 0.0 32.0 24.0]
/G78 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fffffff8fffffff8fffffff8e0000038e0000038e0c01838e0e03838e0707038e038e038e01dc038
e00f8038e0070038e00f8038e01dc038e038e038e0707038e0e03838e1c01c38e0c00838e0000038
e0000038fffffff8fffffff8fffffff8>} imagemask 
  }
  120 /G78 MSTT31c1f8 AddChar
/G79 [35.0 0.0 3.0 0.0 32.0 24.0]
/G79 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fffffff8fffffff8fffffff8e0000038e0000038e0020038e0070038e00f8038e01dc038e038e038
e0707038e0e03838e1c01c38e3800e38e7000738e6000338e0000038e0000038e0000038e0000038
e0000038fffffff8fffffff8fffffff8>} imagemask 
  }
  121 /G79 MSTT31c1f8 AddChar
/G7a [29.0 0.0 3.0 0.0 27.0 24.0]
/G7a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<1e00787f81fe7f81fef3c3cfe1c387e1c387f1c38f7ffffe7ffffe1ffff801c38001c38001c38001
c3801ffff87ffffe7ffffef1c38fe1c387e1c387f3c3cf7f81fe7f81fe1e0078>} imagemask 
  }
  122 /G7a MSTT31c1f8 AddChar
/G7b [29.0 0.0 3.0 1.0 26.0 23.0]
/G7b {
    23 22 true [1 0 0 -1 -3.0 23.0] {<01c7000339800200801e00f032009821010820820820100860780c404c0480b60280b402c2cc863c
7c781000102000082010083010181c107002108001298001e700>} imagemask 
  }
  123 /G7b MSTT31c1f8 AddChar
/G7c [29.0 0.0 3.0 1.0 27.0 24.0]
/G7c {
    24 23 true [1 0 0 -1 -3.0 24.0] {<00e38001ffc001ffc001ffc01dfff83ffffc3ffffc3ffffc3ff7fc7fddfeff3efffff7ffffffff7f
bdfe0fddf01ffff83ffffc3ffffc3ffffc0ff7f803f7c001f7c000e380>} imagemask 
  }
  124 /G7c MSTT31c1f8 AddChar
/G7d [18.0 0.0 1.0 14.0 16.0 25.0]
/G7d {
    15 11 true [1 0 0 -1 -1.0 25.0] {<1c0e3c1e7038e070e070fc7efc7efc7efc7efc7efc7e>} imagemask 
  }
  125 /G7d MSTT31c1f8 AddChar
/G7e [18.0 0.0 1.0 14.0 16.0 25.0]
/G7e {
    15 11 true [1 0 0 -1 -1.0 25.0] {<fc7efc7efc7efc7efc7efc7e1c0e1c0e381cf078e070>} imagemask 
  }
  126 /G7e MSTT31c1f8 AddChar
/G7f [17.0 0.0 2.0 0.0 14.0 24.0]
/G7f {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  127 /G7f MSTT31c1f8 AddChar
/G80 [29.0 0.0 3.0 0.0 27.0 24.0]
/G80 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c18307e0c70e70e60c306e18187c18183c18183c18183c18183c1
8183c18183e1818760c30670e70e307e0c183c180e00700781e003ffc000ff00>} imagemask 
  }
  128 /G80 MSTT31c1f8 AddChar
/G81 [29.0 0.0 3.0 0.0 27.0 24.0]
/G81 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018300c0c703c0e600c06e00c07c00c03c00c03c00c03c00c03c0
0c03c00c03e00c07600c06700c0e300c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  129 /G81 MSTT31c1f8 AddChar
/G82 [29.0 0.0 3.0 0.0 27.0 24.0]
/G82 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078187c1830fe0c70870e600306e00307c00303c00603c00603c00c03c0
1803c03003e0600760e00670ff0e30ff0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  130 /G82 MSTT31c1f8 AddChar
/G83 [29.0 0.0 3.0 0.0 27.0 24.0]
/G83 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078187e1830ff0c70838e600186e00187c00303c03c03c03e03c00703c0
0183c00183e0018760018670830e30ff0c187c180e00700781e003ffc000ff00>} imagemask 
  }
  131 /G83 MSTT31c1f8 AddChar
/G84 [29.0 0.0 3.0 0.0 27.0 24.0]
/G84 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018300c0c701c0e603c06e03c07c06c03c0cc03c0cc03c18c03c3
ff03c3ff03e00c07600c06700c0e300c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  132 /G84 MSTT31c1f8 AddChar
/G85 [29.0 0.0 3.0 0.0 27.0 24.0]
/G85 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018307f8c70600e606006e06007c07803c07e03c00603c00303c0
0303c00303e00307600706707e0e307c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  133 /G85 MSTT31c1f8 AddChar
/G86 [29.0 0.0 3.0 0.0 27.0 24.0]
/G86 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078181e18307f0c70e10e60c006e1c007c18003c19e03c1bf03c1e383c1
c183c18183e1818760c18670e30e307f0c183c180e00700781e003ffc000ff00>} imagemask 
  }
  134 /G86 MSTT31c1f8 AddChar
/G87 [29.0 0.0 3.0 0.0 27.0 24.0]
/G87 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e007818001830ff8c70ff8e600186e00307c00203c00603c00403c00c03c0
1803c01803e0300760300670300e30600c1860180e00700781e003ffc000ff00>} imagemask 
  }
  135 /G87 MSTT31c1f8 AddChar
/G88 [29.0 0.0 3.0 0.0 27.0 24.0]
/G88 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c18307e0c70e70e60c306e0c307c0e203c07603c03c03c0ee03c0
c703c18383e1818761818671c38e30ff0c187c180e00700781e003ffc000ff00>} imagemask 
  }
  136 /G88 MSTT31c1f8 AddChar
/G89 [29.0 0.0 3.0 0.0 27.0 24.0]
/G89 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c1830fe0c70c30e618306e18187c18183c18383c0c783c0fd83c0
7983c00183e0030760030670860e30fe0c1878180e00700781e003ffc000ff00>} imagemask 
  }
  137 /G89 MSTT31c1f8 AddChar
/G8a [29.0 0.0 3.0 0.0 27.0 24.0]
/G8a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e007818c71833cf8c70d8ce60d8c6e0f067c0f063c0f063c0f063c0f063c0
f063c0f063e0f06760d8c670d8ce30cf8c1807180e00700781e003ffc000ff00>} imagemask 
  }
  138 /G8a MSTT31c1f8 AddChar
/G8b [29.0 0.0 3.0 0.0 27.0 24.0]
/G8b {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fc3fc7f00fe7e3c7efe3c7ffc7e3ffc7e3ffc7e3ffc7e3ffc
7e3ffc7e3ffe3c7f7e3c7e7f00fe3fc3fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  139 /G8b MSTT31c1f8 AddChar
/G8c [29.0 0.0 3.0 0.0 27.0 24.0]
/G8c {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fe3fc7f83fe7f83feffe3ffffe3ffffe3ffffe3ffffe3ffff
e3ffffe3ffffe3ff7fe3fe7fe3fe3fe3fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  140 /G8c MSTT31c1f8 AddChar
/G8d [29.0 0.0 3.0 0.0 27.0 24.0]
/G8d {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f01fc7e007e7e7c3efffe3ffffe3ffffc7ffff87fffe0ffff
c3ffff8fffff3fff7e003e7e003e3e003c1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  141 /G8d MSTT31c1f8 AddChar
/G8e [29.0 0.0 3.0 0.0 27.0 24.0]
/G8e {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f80fc7f003e7f7c3efffe3ffffc7fffc0ffffc0fffffc7fff
fe3ffffe3ffffe3f7f7c3e7f007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  142 /G8e MSTT31c1f8 AddChar
/G8f [29.0 0.0 3.0 0.0 27.0 24.0]
/G8f {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81fe1f83fe1fc7fc1fe7f81feff11ffff31fffe71fffc71fff8f1fff8
007ff8007ff8007f7ff1fe7ff1fe3ff1fc1ff1f80ffff007ffe003ffc000ff00>} imagemask 
  }
  143 /G8f MSTT31c1f8 AddChar
/G90 [29.0 0.0 3.0 0.0 27.0 24.0]
/G90 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f007c7f007e7f3ffeff3fffff3fffff03ffff01fffff0ffff
fc7ffffc7ffffc7f7f787e7f00fe3f83fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  144 /G90 MSTT31c1f8 AddChar
/G91 [29.0 0.0 3.0 0.0 27.0 24.0]
/G91 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fc0fc7f007e7e1f7efe3ffffc7ffffc61fffc007ffc3c3ffc
7e3ffc7e3ffe7e3f7e3c7e7f007e3fc1fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  145 /G91 MSTT31c1f8 AddChar
/G92 [29.0 0.0 3.0 0.0 27.0 24.0]
/G92 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83e003c7e003e7e003efffe3ffffc7ffff8fffff1fffff3ffff
e7ffffc7ffff8fff7f8ffe7f1ffe3f1ffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  146 /G92 MSTT31c1f8 AddChar
/G93 [29.0 0.0 3.0 0.0 27.0 24.0]
/G93 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f81fc7f00fe7e3c7efe3c7ffe1cffff00ffff81ffff00fffe
387ffc7e3ffc7e3f7c3c3e7e007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  147 /G93 MSTT31c1f8 AddChar
/G94 [29.0 0.0 3.0 0.0 27.0 24.0]
/G94 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81fc1f83f00fc7f1c7e7e3e7efe3e3ffe3e3ffe3e3fff1c3fff003fff
863ffffe3ffffc7f7ffc7e7ef8fe3e01fc1e03f80ffff007ffe003ffc000ff00>} imagemask 
  }
  148 /G94 MSTT31c1f8 AddChar
/G95 [29.0 0.0 3.0 0.0 27.0 24.0]
/G95 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff838f83c60f01e60e38ef8e38ff8c7c7f8c7c7f8c7c7f8c7c7f8
c7c7f8c7c7f8e38f78e38e78f01e3ff83c1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  149 /G95 MSTT31c1f8 AddChar
/G96 [33.0 0.0 1.0 0.0 31.0 18.0]
/G96 {
    30 18 true [1 0 0 -1 -1.0 18.0] {<038000fc0e00073838000c7030079070700fd0e0e01fe0e0e018e1e0e0106380e0106fc0e0007870
f000e0307000c038780380383e0f20381ffc207807e030f000001fe0000007c0>} imagemask 
  }
  150 /G96 MSTT31c1f8 AddChar
/G97 [33.0 0.0 2.0 0.0 32.0 18.0]
/G97 {
    30 18 true [1 0 0 -1 -2.0 18.0] {<fc000700738001c038c00070382780301c2fc0381c1fe01c1e1c601c0718201c0fd8201c3878001c
301c003c700c0038700700787013c1f07810ffe03c301f801fe000000f800000>} imagemask 
  }
  151 /G97 MSTT31c1f8 AddChar
/G98 [33.0 0.0 1.0 0.0 31.0 18.0]
/G98 {
    30 18 true [1 0 0 -1 -1.0 18.0] {<0f8000001fe000003c303f807810ffe07003c1f070070078700c0038301c003c3878001c0fd8201c
0718201c1e1c601c1c1fe01c1c2fc0383823803038c00070738001c0fc000700>} imagemask 
  }
  152 /G98 MSTT31c1f8 AddChar
/G99 [33.0 0.0 2.0 0.0 32.0 18.0]
/G99 {
    30 18 true [1 0 0 -1 -2.0 18.0] {<000007c000001fe007f030f01ffc20783e070038780380387000c038f000e030e0007870e0106fc0
e0106380e018e1e0e01fe0e0700fd0e03007107038000c700e000738038000fc>} imagemask 
  }
  153 /G99 MSTT31c1f8 AddChar
/G9a [33.0 0.0 1.0 0.0 32.0 18.0]
/G9a {
    31 18 true [1 0 0 -1 -1.0 18.0] {<01e0000003f8000003fc0000038e00000183000003fd80000fffc0f81f81e3fc3f0037fe7e381ffe
fc3c3f0ef87c7ffcf870fef8f861fc00f863f800783ff0001c1fe000000f8000>} imagemask 
  }
  154 /G9a MSTT31c1f8 AddChar
/G9b [33.0 0.0 1.0 0.0 32.0 18.0]
/G9b {
    31 18 true [1 0 0 -1 -1.0 18.0] {<00000f0000003f8000007f800000e3800001830000037f803e07ffe07f8f03f0ffd801f8fff038fc
e1f8787e7ffc7c3e3efe1c3e007f0c3e003f8c3e001ff83c000ff0700003e000>} imagemask 
  }
  155 /G9b MSTT31c1f8 AddChar
/G9c [33.0 0.0 1.0 0.0 32.0 18.0]
/G9c {
    31 18 true [1 0 0 -1 -1.0 18.0] {<0003e000000ff070001ff83c003f8c3e007f0c3e3efe1c3e7ffc7c3ee1f8787ee7f038fcfff801f8
7f8f03f03e07ffe000037f80000183000000e38000007f8000003f8000000f00>} imagemask 
  }
  156 /G9c MSTT31c1f8 AddChar
/G9d [33.0 0.0 1.0 0.0 32.0 18.0]
/G9d {
    31 18 true [1 0 0 -1 -1.0 18.0] {<000f80001c1fe000783ff000f863f800f861fc00f870fef8f87c7ffcfc3c3f0e7e381fce3f003ffe
1f81e3fc0fffc0f803fd800001830000038e000003fc000003f8000001e00000>} imagemask 
  }
  157 /G9d MSTT31c1f8 AddChar
/G9e [10.0 0.0 3.0 10.0 7.0 15.0]
/G9e {
    4 5 true [1 0 0 -1 -3.0 15.0] {<60f0f0f060>} imagemask 
  }
  158 /G9e MSTT31c1f8 AddChar
/G9f [15.0 0.0 3.0 7.0 13.0 17.0]
/G9f {
    10 10 true [1 0 0 -1 -3.0 17.0] {<1e007f807f80ffc0ffc0ffc0ffc07f807f801e00>} imagemask 
  }
  159 /G9f MSTT31c1f8 AddChar
/Ga0 [10.0 0.0 3.0 10.0 7.0 15.0]
/Ga0 {
    4 5 true [1 0 0 -1 -3.0 15.0] {<f0f0f0f0f0>} imagemask 
  }
  160 /Ga0 MSTT31c1f8 AddChar
/Ga1 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga1 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c003c78001e70000ef0000fe00007e00007e00007e00007e0
0007e00007f0000f70000e78001e3c003c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  161 /Ga1 MSTT31c1f8 AddChar
/Ga2 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga2 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f81fc7e007e7c003ef8001ff8001ff0000ff0000ff0000ff0
000ff8001ff8001f7c003e7e007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  162 /Ga2 MSTT31c1f8 AddChar
/Ga3 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga3 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83ffffc7ffffe7fc3feff00ffff00fffe007ffe007ffe007ffe
007fff00ffff00ff7fc3fe7ffffe3ffffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  163 /Ga3 MSTT31c1f8 AddChar
/Ga4 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga4 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c003c78001e70000ef03c0fe07e07e0ff07e0ff07e0ff07e0
ff07e07e07f03c0f70000e78001e3c003c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  164 /Ga4 MSTT31c1f8 AddChar
/Ga5 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga5 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c7e3c78ff1e71ff8ef3c3cfe781e7e718e7e73ce7e73ce7e7
18e7e781e7f3c3cf71ff8e78ff1e3c7e3c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  165 /Ga5 MSTT31c1f8 AddChar
/Ga6 [31.0 0.0 3.0 0.0 29.0 24.0]
/Ga6 {
    26 24 true [1 0 0 -1 -3.0 24.0] {<000fc000007ff00001fffc000781fe000e007f0018001f0030000f8060000780600007c0e00007c0
c00003c0c00003c0c00003c0c00003c0c00003c0e00007806000078070000f0030000e0038001c00
1e0078000f81e00003ff800000fc0000>} imagemask 
  }
  166 /Ga6 MSTT31c1f8 AddChar
/Ga7 [15.0 0.0 3.0 7.0 13.0 17.0]
/Ga7 {
    10 10 true [1 0 0 -1 -3.0 17.0] {<ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0>} imagemask 
  }
  167 /Ga7 MSTT31c1f8 AddChar
/Ga8 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga8 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007e00007e00007e00007ffffffffffffffffff>} imagemask 
  }
  168 /Ga8 MSTT31c1f8 AddChar
/Ga9 [29.0 0.0 4.0 6.0 25.0 24.0]
/Ga9 {
    21 18 true [1 0 0 -1 -4.0 24.0] {<00200000200000200000200000700000700000700000700000f80000f80000f80001fc0003fe0007
ff000fff801f8fc03800e0400010>} imagemask 
  }
  169 /Ga9 MSTT31c1f8 AddChar
/Gaa [29.0 0.0 3.0 0.0 27.0 24.0]
/Gaa {
    24 24 true [1 0 0 -1 -3.0 24.0] {<000000001800001800001800003c00003c00003c00007e00007e0001ff800ffff07ffffe7ffffe0f
fff001ff80007e00007e00003c00003c00003c00001800001800001800000000>} imagemask 
  }
  170 /Gaa MSTT31c1f8 AddChar
/Gab [29.0 0.0 3.0 2.0 26.0 24.0]
/Gab {
    23 22 true [1 0 0 -1 -3.0 24.0] {<001000001000001000003800003800003800007c00007c007ffffc3ffff81ffff00fffe003ff8001
ff0001ff0003ff8003ff8003ef800383800701c0040040080040>} imagemask 
  }
  171 /Gab MSTT31c1f8 AddChar
/Gac [29.0 0.0 4.0 0.0 25.0 24.0]
/Gac {
    21 24 true [1 0 0 -1 -4.0 24.0] {<002000002000002000007000007000007000c0f8187efbf03fffe01fffc00fff8007ff0007ff000f
ff801fffc03fffe07efbf0c0f818007000007000007000002000002000002000>} imagemask 
  }
  172 /Gac MSTT31c1f8 AddChar
/Gad [29.0 0.0 3.0 0.0 27.0 24.0]
/Gad {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000018000018000c3c300f3cf007ffe007ffe003ffc003ffc00ffff07ffffe7ffffe0f
fff003ffc003ffc007ffe007ffe00f3cf00c3c30001800001800001800000000>} imagemask 
  }
  173 /Gad MSTT31c1f8 AddChar
/Gae [29.0 0.0 3.0 0.0 27.0 24.0]
/Gae {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000318c003bdc003ffc003ffc03ffffc3ffffc1ffff80ffff01ffff87ffffe7ffffe1f
fff80ffff01ffff83ffffc3ffffc03ffc003ffc003bdc00318c0001800000000>} imagemask 
  }
  174 /Gae MSTT31c1f8 AddChar
/Gaf [29.0 0.0 3.0 0.0 27.0 24.0]
/Gaf {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000018000028000c2c300f2cf007cf6005cce004e9c0026bc00f2f307ff80e601ffe1c
f4f003d6400397400733a00673e00fb4f00c3430001800001800001800000000>} imagemask 
  }
  175 /Gaf MSTT31c1f8 AddChar
/Gb0 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb0 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0010000010000010000010000010000fffe0081020081020081020081020081020ffc7fe08102008
10200810200810200810200fffe0001000001000001000001000001000>} imagemask 
  }
  176 /Gb0 MSTT31c1f8 AddChar
/Gb1 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb1 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<001000001000001000001000001000007c00019300031180021080041040041040ffeffe04104004
1040021080031180019300007c00001000001000001000001000001000>} imagemask 
  }
  177 /Gb1 MSTT31c1f8 AddChar
/Gb2 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb2 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800001800001800003c00003c00007e0000660000c30001c3800781e01e0078f8003ff8001f1e
00780700e001818000c300006600006e00003c00003c00001800001800001800>} imagemask 
  }
  178 /Gb2 MSTT31c1f8 AddChar
/Gb3 [29.0 0.0 6.0 3.0 24.0 21.0]
/Gb3 {
    18 18 true [1 0 0 -1 -6.0 21.0] {<400080e001c07c0f803fff0033f30030030018060018060018060018060018060018060030030033
f3003fff007c0f80e001c0400080>} imagemask 
  }
  179 /Gb3 MSTT31c1f8 AddChar
/Gb4 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb4 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000e70001c3800381c00700e00e00701c7e3838ff1c70860ee00c07e0180770
300e38001c1c00380e30700730e00381c001c38000e700007e00003c00001800>} imagemask 
  }
  180 /Gb4 MSTT31c1f8 AddChar
/Gb5 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb5 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003e7c007e7e01fe7f81fc3f83fc3fc7fc3fe7f81fe800001e00007f0000ff8001ffe007fff
00fffe007f7e007e7e007e7c183e3c7e3c1cff3809ff9007ffe003ffc0007e00>} imagemask 
  }
  181 /Gb5 MSTT31c1f8 AddChar
/Gb6 [29.0 0.0 2.0 2.0 27.0 24.0]
/Gb6 {
    25 22 true [1 0 0 -1 -2.0 24.0] {<001c0000001c0000003e0000002e0000002e0000004f000000470000004700007f87ff0020001e00
10003c000c0078000200e0000101c0000201c0000201e0000230e000024ce0000482f00007017000
0400f00008003800>} imagemask 
  }
  182 /Gb6 MSTT31c1f8 AddChar
/Gb7 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb7 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501214401e04801602801802801802a0100a80100280
30028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  183 /Gb7 MSTT31c1f8 AddChar
/Gb8 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb8 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801382801302801c02a0180a80300280
10028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  184 /Gb8 MSTT31c1f8 AddChar
/Gb9 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb9 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b1130301018201008501014401004801002801002801102a03fca80100280
00028000025000145000142000083000181b01300c106003018000fe00>} imagemask 
  }
  185 /Gb9 MSTT31c1f8 AddChar
/Gba [29.0 0.0 3.0 0.0 26.0 23.0]
/Gba {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002803002a0300a801c0280
17028003824000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  186 /Gba MSTT31c1f8 AddChar
/Gbb [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbb {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002803002a0100a80180280
1802800c024006045006142000083000181b01b00c106003018000fe00>} imagemask 
  }
  187 /Gbb MSTT31c1f8 AddChar
/Gbc [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbc {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801002a0100a80100280
10028010024010045010142010083000181b01b00c106003018000fe00>} imagemask 
  }
  188 /Gbc MSTT31c1f8 AddChar
/Gbd [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbd {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801802a0100a80300280
300280600240c00450c0142000083000181b01b00c106003018000fe00>} imagemask 
  }
  189 /Gbd MSTT31c1f8 AddChar
/Gbe [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbe {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801802a0180a80700281
d0028380024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  190 /Gbe MSTT31c1f8 AddChar
/Gbf [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbf {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601911b0301018201008501014401004801002801002811002a7f80a80100280
00028000025000145000142000083000181901b00c106003018000fe00>} imagemask 
  }
  191 /Gbf MSTT31c1f8 AddChar
/Gc0 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc0 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004839002819002807002a0300a80180280
10028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  192 /Gc0 MSTT31c1f8 AddChar
/Gc1 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc1 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b030101820100850901440f00480d002803002803002a0100a80100280
18028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  193 /Gc1 MSTT31c1f8 AddChar
/Gc2 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc2 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601a18b0301018201008501014401004801002801002801002a0100a80100280
10028000024000045000142000083000181a00b00c106003018000fe00>} imagemask 
  }
  194 /Gc2 MSTT31c1f8 AddChar
/Gc3 [29.0 0.0 3.0 -3.0 27.0 26.0]
/Gc3 {
    24 29 true [1 0 0 -1 -3.0 26.0] {<0002010003030003870003cf00037b00033300030300030300030300230300630300e30301e30703
630e067ffe0c7ffc1800383000706000e06001c03003801807000c7e00067c0003600001e00000e0
00006000002000>} imagemask 
  }
  195 /Gc3 MSTT31c1f8 AddChar
/Gc4 [29.0 0.0 3.0 -3.0 27.0 26.0]
/Gc4 {
    24 29 true [1 0 0 -1 -3.0 26.0] {<804000c0c000e1c000f3c000dec000ccc000c0c000c0c000c0c000c0c400c0c600c0c700e0c78070
c6c07ffe603ffe301c00180e000c07000603800601c00c00e018007e30003e600006c00007800007
00000600000400>} imagemask 
  }
  196 /Gc4 MSTT31c1f8 AddChar
/Gc5 [29.0 0.0 2.0 -3.0 26.0 26.0]
/Gc5 {
    24 29 true [1 0 0 -1 -2.0 26.0] {<00200000600000e00001e000036000067c000c7e001807003003806001c06000e03000701800380c
7ffc067ffe03630e01e30700e30300630300230300030300030300030300033300037b0003cf0003
87000303000201>} imagemask 
  }
  197 /Gc5 MSTT31c1f8 AddChar
/Gc6 [29.0 0.0 2.0 -3.0 26.0 26.0]
/Gc6 {
    24 29 true [1 0 0 -1 -2.0 26.0] {<0004000006000007000007800006c0003e60007e3000e01801c00c0380060700060e000c1c00183f
fe307ffe6070c6c0e0c780c0c700c0c600c0c400c0c000c0c000c0c000ccc000dec000f3c000e1c0
00c0c000804000>} imagemask 
  }
  198 /Gc6 MSTT31c1f8 AddChar
/Gc7 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc7 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<000000000060000000f0000001980000030c0000060600000c030000180180003000c0007e07e000
fe07f0000606000006060000070600000387fff801c7fff000e60060007600c0003e0180001e0180
000f00c0000780600003fff00000fff8>} imagemask 
  }
  199 /Gc7 MSTT31c1f8 AddChar
/Gc8 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc8 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<0000000000003000000078000000cc00000186000003030000060180000c00c000180060003f03f0
007f03f8000303000003030000030700ffff0e007fff1c0030033800180370000c03e0000c03c000
18078000300f00007ffe0000fff80000>} imagemask 
  }
  200 /Gc8 MSTT31c1f8 AddChar
/Gc9 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc9 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<0000fff80003fff000078060000f00c0001e0180003e0180007600c000e6006001c7fff00387fff8
070600000606000006060000fe07f0007e07e0003000c000180180000c03000006060000030c0000
0198000000f000000060000000000000>} imagemask 
  }
  201 /Gc9 MSTT31c1f8 AddChar
/Gca [35.0 0.0 3.0 0.0 32.0 24.0]
/Gca {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fff800007ffe0000300f0000180780000c03c0000c03e00018037000300338007fff1c00ffff0e00
000307000003030000030300007f03f8003f03f000180060000c00c0000601800003030000018600
0000cc00000078000000300000000000>} imagemask 
  }
  202 /Gca MSTT31c1f8 AddChar
/Gcb [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcb {
    31 31 true [1 0 0 -1 -1.0 25.0] {<e800000eee00007eef8001fe77c007f073e00f8e71f01f1c38f03e3c3c783c781c3878f80e1c71f0
0f9ce3e007dc1fc001eeff0000eefc00002ee00000000000000ee800007eee0001feef0007f07fc0
0f8e73e01f1c71f03e3c38f03c383c7878781e3871f00f3cf3e00f9c1fc007dcff0001eefc0000ee
e000002e>} imagemask 
  }
  203 /Gcb MSTT31c1f8 AddChar
/Gcc [33.0 0.0 0.0 -7.0 34.0 27.0]
/Gcc {
    34 34 true [1 0 0 -1 0.0 27.0] {<ffffffffc08bfffffc4088ffffe040883fff8040c41ffe03c0c60ffc1c40c707f838c0e3c7f070c0
e1c3f0e1c0f0e1e1c1c0f071c383c0f831c707c0fc10f80fc0fe08c03fc0ff88c0ffc0ffe8c7ffc0
ffffffffc0ffffffffc0fff0c4ffc0ff80c47fc0ff00c41fc0fc0fc20fc0f830e307c0f071e1c3c0
e1e1f1e3c0e3c3f0e1c0c383f871c0c707f838c08e0ffc18c0f01ffe08c0807fff044081ffffc440
8fffffe440ffffffffc0>} imagemask 
  }
  204 /Gcc MSTT31c1f8 AddChar
/Gcd [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcd {
    31 31 true [1 0 0 -1 -1.0 25.0] {<00f8003003fe00f80fff81fc1fffc3fe1f83eff83e00ffc03c007f007800fc007801f0007007c000
700f8000701e1800703c3e0070781f0070f00f0071e007803b8003803f0003803e0003801e200780
1c780f003c3fff007e1ffe007e03f8007e000000fe000000fe000000fe000000fc000000fc000000
78000000>} imagemask 
  }
  205 /Gcd MSTT31c1f8 AddChar
/Gce [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gce {
    31 31 true [1 0 0 -1 -1.0 25.0] {<7c000000ff81ff00ffcfffc0fffffff0fffe03f87ffc00fc1f9e007c0007003c0003803e0021c01e
0071e01e00e0f01e00e0781e00c03c1c01c01c3c01c00e3801c00f7801c007f001c023e001c073c0
01e0f1e000f1e1e000ffe0f0007fc0f8001f007c0000007c0000003e0000003e0000003c00000018
00000010>} imagemask 
  }
  206 /Gce MSTT31c1f8 AddChar
/Gcf [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcf {
    31 31 true [1 0 0 -1 -1.0 25.0] {<100000003000000078000000f8000000f80000007c0000007c01f0003e07fc001e0ffe000f0f1e00
0f1e0f00079c07000f8807001fc007003de0070038e007007870070070780600f03c0e00f01e0e00
f00f1c00f0070800f80380007801c0007c00f3f03e007ffc3f80fffe1ffffffe07ffe7fe01ff03fe
0000007c>} imagemask 
  }
  207 /Gcf MSTT31c1f8 AddChar
/Gd0 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd0 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<0000003c0000007e0000007e000000fe000000fe000000fe000000fc003f80fc00fff0fc01fff878
01e03c7003c008f0038000f8038001f8038003b803c00f1c01e01e1c01f03c1c00f8781c0030f01c
0003e01c0007c01c001f003c007e003c01fc007807fe00f83fef83f0ff87fff07f03ffe03e00ffc0
18003e00>} imagemask 
  }
  208 /Gd0 MSTT31c1f8 AddChar
/Gd1 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd1 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<78000000fc000000fc000000fe000000fe000000fe0000007e0000007e03f8007e1ffe003c3fff00
1c780f001e2007803e0003803f0003803b80038071e0078070f00f0070781f00703c3e00701e1800
700f80007007c0007801f0007800fc003c007f003e00ffc01f83eff81fffc3fe0fff81fc03fe00f8
00f80030>} imagemask 
  }
  209 /Gd1 MSTT31c1f8 AddChar
/Gd2 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd2 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<00000010000000180000003c0000003e0000003e0000007c001f007c007fc0f800ffe0f000f1e1e0
01e0f1e001c073c001c023e001c007f001c00f7801c00e3801c01c3c00c03c1c00e0781e00e0f01e
0071e01e0021c01e0003803e0007003c1f9e007c7ffc00fcfffe03f8fffffff0ffcfffc0ff81ff00
7c000000>} imagemask 
  }
  210 /Gd2 MSTT31c1f8 AddChar
/Gd3 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd3 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<0000007c01ff03fe07ffe7fe1ffffffe3f80fffe3e007ffc7c00f3f07801c000f8038000f0070800
f00f1c00f01e0e00f03c0e00707806007870070038e007003de007001fc007000f880700079c0700
0f1e0f000f0f1e001e0ffe003e07fc007c01f0007c000000f8000000f80000007800000030000000
10000000>} imagemask 
  }
  211 /Gd3 MSTT31c1f8 AddChar
/Gd4 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd4 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<18003e003e00ffc07f03ffe0ff87fff03fef83f007fe00f801fc0078007e003c001f003c0007c01c
0003e01c0030f01c00f8781c01f03c1c01e01e1c03c00f1c038003b8038001f8038000f803c008f0
01e03c7001fff87800fff0fc003f80fc000000fc000000fe000000fe000000fe0000007e0000007e
0000003c>} imagemask 
  }
  212 /Gd4 MSTT31c1f8 AddChar
/Gd5 [41.0 0.0 3.0 0.0 39.0 24.0]
/Gd5 {
    36 24 true [1 0 0 -1 -3.0 24.0] {<001ffffff0003ffffff0007ffffff000e000007001c0000070038100107007038038700e01c07070
1c00e0e07038007bc07070003f8070e0001f0070e0001f007070003b8070380071c0701c00e0e070
0e01c070700703803870038100107001c000007000e0000070007ffffff0003ffffff0001ffffff0
>} imagemask 
  }
  213 /Gd5 MSTT31c1f8 AddChar
/Gd6 [41.0 0.0 2.0 0.0 38.0 24.0]
/Gd6 {
    36 24 true [1 0 0 -1 -2.0 24.0] {<ffffff0000ffffff8000ffffffc000e000006000e000003000e080081800e1c01c0c00e0e0380600
e070700300e03de00180e01fc000c0e00f800060e00f800060e01dc000c0e038e00180e070700300
e0e0380600e1c01c0c00e080081800e000003000e000006000ffffffc000ffffff8000ffffff0000
>} imagemask 
  }
  214 /Gd6 MSTT31c1f8 AddChar
/Gd7 [26.0 0.0 3.0 0.0 24.0 24.0]
/Gd7 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<0000080000300000500001a000064000184000208000c0800301000c02001002006004007ffc001f
fe000ffe0003ff0000ff80003f80001fc00007c00001e0000070000030000008>} imagemask 
  }
  215 /Gd7 MSTT31c1f8 AddChar
/Gd8 [26.0 0.0 2.0 0.0 23.0 24.0]
/Gd8 {
    21 24 true [1 0 0 -1 -2.0 24.0] {<8000006000005000002c000013000010c00008200008180004060002018002004001003001fff003
ffc003ff8007fe000ff8000fe0001fc0001f00003c0000700000600000800000>} imagemask 
  }
  216 /Gd8 MSTT31c1f8 AddChar
/Gd9 [29.0 0.0 3.0 3.0 27.0 24.0]
/Gd9 {
    24 21 true [1 0 0 -1 -3.0 24.0] {<00000000180000180000340000720000720000f10000f10001f08001f08003f04007f02007f0200f
f8100fe6101f81081f00c83c003470000a600006800001>} imagemask 
  }
  217 /Gd9 MSTT31c1f8 AddChar
/Gda [29.0 0.0 3.0 0.0 27.0 21.0]
/Gda {
    24 21 true [1 0 0 -1 -3.0 21.0] {<80000160000650000e2c003c1300f81081f80867f0081ff0040fe0040fe0020fc0010f80010f8000
8f00008f00004e00004e00002c00001800001800000000>} imagemask 
  }
  218 /Gda MSTT31c1f8 AddChar
/Gdb [29.0 0.0 3.0 0.0 26.0 24.0]
/Gdb {
    23 24 true [1 0 0 -1 -3.0 24.0] {<00fe0003ffc007ffe01ffff01ffff83e7ffc7c7ffc787ffef00000e00000c00000800000800000c0
0000e00000f00000787ffe7c7ffc3e7ffc1ffff81ffff007ffe003ffc000fe00>} imagemask 
  }
  219 /Gdb MSTT31c1f8 AddChar
/Gdc [29.0 0.0 3.0 0.0 26.0 24.0]
/Gdc {
    23 24 true [1 0 0 -1 -3.0 24.0] {<00fe0007ff800fffc01ffff03ffff07ffcf87ffc7cfffc3c00001e00000e00000600000200000200
000600000e00001efffc3c7ffc7c7ffcf83ffff01ffff00fffc007ff8000fe00>} imagemask 
  }
  220 /Gdc MSTT31c1f8 AddChar
/Gdd [29.0 0.0 3.0 1.0 27.0 24.0]
/Gdd {
    24 23 true [1 0 0 -1 -3.0 24.0] {<00ff0003e7c007c3e01f81f81f00f83e007c7c003e78001ef8001fff00ffff00ffff00ffff00ffff
00ffff00ff7f00fe7f00fe7f00fe3f00fc1f00f80f00f00700e0010080>} imagemask 
  }
  221 /Gdd MSTT31c1f8 AddChar
/Gde [29.0 0.0 3.0 0.0 27.0 23.0]
/Gde {
    24 23 true [1 0 0 -1 -3.0 23.0] {<0100800700e00f00f01f00f83f00fc7f00fe7f00fe7f00feff00ffff00ffff00ffff00ffff00ffff
00fff8001f78001e7c003e3e007c1f00f81f81f807c3e003e7c000ff00>} imagemask 
  }
  222 /Gde MSTT31c1f8 AddChar
/Gdf [32.0 0.0 3.0 0.0 30.0 23.0]
/Gdf {
    27 23 true [1 0 0 -1 -3.0 23.0] {<000e0000003c00000078000000f0000001e0000003c00000078000000f0000001e0000003c000000
7fffffe0ffffffe07fffffe03c0000001e0000000f0000000780000003c0000001e0000000f00000
00780000003c0000000e0000>} imagemask 
  }
  223 /Gdf MSTT31c1f8 AddChar
/Ge0 [32.0 0.0 2.0 0.0 29.0 23.0]
/Ge0 {
    27 23 true [1 0 0 -1 -2.0 23.0] {<000e0000000780000003c0000001e0000000f0000000780000003c0000001e0000000f0000000780
ffffffc0ffffffe0ffffffc00000078000000f0000001e0000003c00000078000000f0000001e000
0003c00000078000000e0000>} imagemask 
  }
  224 /Ge0 MSTT31c1f8 AddChar
/Ge1 [29.0 0.0 3.0 -3.0 26.0 24.0]
/Ge1 {
    23 27 true [1 0 0 -1 -3.0 24.0] {<001000003800007c0000fe0001ff0003ff8007bbc00f39e01e38f03c387878383c70381ce0380ec0
38068038020038000038000038000038000038000038000038000038000038000038000038000038
00>} imagemask 
  }
  225 /Ge1 MSTT31c1f8 AddChar
/Ge2 [29.0 0.0 4.0 0.0 27.0 27.0]
/Ge2 {
    23 27 true [1 0 0 -1 -4.0 27.0] {<003800003800003800003800003800003800003800003800003800003800003800003800803802c0
3806e0380e70381c78383c3c38781e38f00f39e007bbc003ff8001ff0000fe00007c000038000010
00>} imagemask 
  }
  226 /Ge2 MSTT31c1f8 AddChar
/Ge3 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge3 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<ffff80ffffc0fffff0f80000fc0000fe0000ef0000e78000e3c000e1e000e0f000e07800e03c00e0
1e00e00f00e00780e003c06001e02000e0000040>} imagemask 
  }
  227 /Ge3 MSTT31c1f8 AddChar
/Ge4 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge4 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<1ffff03ffff0fffff00001f00003f00007f0000f70001e70003c7000787000f07001e07003c07007
80700f00701e00703c0070780060700040200000>} imagemask 
  }
  228 /Ge4 MSTT31c1f8 AddChar
/Ge5 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge5 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<0000002000606000f0e001e0e003c0e00780e00f00e01e00e03c00e07800e0f000e1e000e3c000e7
8000ef0000fe0000fc0000ffffe0ffffc0ffff80>} imagemask 
  }
  229 /Ge5 MSTT31c1f8 AddChar
/Ge6 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge6 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<000000600040f000607800703c00701e00700f007007807003c07001e07000f070007870003c7000
1e70000f700007f00003f07ffff03ffff01ffff0>} imagemask 
  }
  230 /Ge6 MSTT31c1f8 AddChar
/Ge7 [35.0 0.0 3.0 0.0 32.0 24.0]
/Ge7 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<001fe000003fc000007f800000ff000001fe000003fc000007f800000ff000001fe000003ffffff8
7ffffff8fffffff8fffffff87ffffff83ffffff81fe000000ff0000007f8000003fc000001fe0000
00ff0000007f8000003fc000001fe000>} imagemask 
  }
  231 /Ge7 MSTT31c1f8 AddChar
/Ge8 [35.0 0.0 3.0 0.0 32.0 24.0]
/Ge8 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<003fc000001fe000000ff0000007f8000003fc000001fe000000ff0000007f8000003fc0ffffffe0
fffffff0fffffff8fffffff8fffffff0ffffffe000003fc000007f800000ff000001fe000003fc00
0007f800000ff000001fe000003fc000>} imagemask 
  }
  232 /Ge8 MSTT31c1f8 AddChar
/Ge9 [29.0 0.0 3.0 -5.0 27.0 24.0]
/Ge9 {
    24 29 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000ff0001ff8003ffc007ffe00ffff01ffff83ffffc7ffffeff7efffe7e7ffc
7e3ff87e1ff07e0fe07e07c07e03807e01007e00007e00007e00007e00007e00007e00007e00007e
00007e00007e00>} imagemask 
  }
  233 /Ge9 MSTT31c1f8 AddChar
/Gea [29.0 0.0 3.0 0.0 27.0 29.0]
/Gea {
    24 29 true [1 0 0 -1 -3.0 29.0] {<007e00007e00007e00007e00007e00007e00007e00007e00007e00007e00807e01c07e03e07e07f0
7e0ff87e1ffc7e3ffe7e7fff7eff7ffffe3ffffc1ffff80ffff007ffe003ffc001ff8000ff00007e
00003c00001800>} imagemask 
  }
  234 /Gea MSTT31c1f8 AddChar
/Geb [29.0 0.0 3.0 0.0 26.0 23.0]
/Geb {
    23 23 true [1 0 0 -1 -3.0 23.0] {<ffff80ffffc0ffffe0fffff0fffff8fffffcffc000ffe000fff000fff800fffc00fdfe00fcff00fc
7f80fc3fc0fc1fe0fc0ff07c07f83c03fc1c01fc0c00f8040070000020>} imagemask 
  }
  235 /Geb MSTT31c1f8 AddChar
/Gec [29.0 0.0 3.0 0.0 26.0 23.0]
/Gec {
    23 23 true [1 0 0 -1 -3.0 23.0] {<03fffe07fffe0ffffe1ffffe3ffffe7ffffe0007fe000ffe001ffe003ffe007ffe00ff7e01fe7e03
fc7e07f87e0ff07e1fe07e3fc07c7f80787f00703e00601c0040080000>} imagemask 
  }
  236 /Gec MSTT31c1f8 AddChar
/Ged [29.0 0.0 3.0 0.0 26.0 23.0]
/Ged {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0000000400300c00781c00fc3c01fe7c03fcfc07f8fc0ff0fc1fe0fc3fc0fc7f80fcff00fdfe00ff
fc00fff800fff000ffe000fffffcfffff8fffff0ffffe0ffffc0ffff80>} imagemask 
  }
  237 /Ged MSTT31c1f8 AddChar
/Gee [29.0 0.0 3.0 0.0 26.0 23.0]
/Gee {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0000001800403c00607e0070ff00787f807c3fc07e1fe07e0ff07e07f87e03fc7e01fe7e00ff7e00
7ffe003ffe001ffe000ffe7ffffe3ffffe1ffffe0ffffe07fffe03fffe>} imagemask 
  }
  238 /Gee MSTT31c1f8 AddChar
/Gef [29.0 0.0 3.0 2.0 27.0 24.0]
/Gef {
    24 22 true [1 0 0 -1 -3.0 24.0] {<00200000600000e00001e0000360000660000c7fff187fff300003600003c00003c0000360000330
0003187fff0c7fff06600003600001e00000e000006000002000>} imagemask 
  }
  239 /Gef MSTT31c1f8 AddChar
/Gf0 [29.0 0.0 2.0 2.0 26.0 24.0]
/Gf0 {
    24 22 true [1 0 0 -1 -2.0 24.0] {<000000000400000600000700000680000640fffe20fffe10c00008c00004c00002c00002c00004c0
0008fffe10fffe20000640000680000700000600000400000000>} imagemask 
  }
  240 /Gf0 MSTT31c1f8 AddChar
/Gf1 [27.0 0.0 3.0 0.0 25.0 24.0]
/Gf1 {
    22 24 true [1 0 0 -1 -3.0 24.0] {<00300000780000cc000186000303000601800c00c01800603000307f03f8ff03fc03030003030003
030003030003030003030003030003030003030003030003030003ff0003ff00>} imagemask 
  }
  241 /Gf1 MSTT31c1f8 AddChar
/Gf2 [27.0 0.0 1.0 0.0 23.0 24.0]
/Gf2 {
    22 24 true [1 0 0 -1 -1.0 24.0] {<03ff0003ff00030300030300030300030300030300030300030300030300030300030300030300ff
03fc7f03f83000301800600c00c006018003030001860000cc00007800003000>} imagemask 
  }
  242 /Gf2 MSTT31c1f8 AddChar
/Gf3 [35.0 0.0 3.0 2.0 33.0 22.0]
/Gf3 {
    30 20 true [1 0 0 -1 -3.0 22.0] {<002010000060180000e01c0001e01e0003601b00067ff9800c7ff8c0180000603000003060000018
6000001830000030180000600c7ff8c0067ff98003601b0001e01e0000e01c000060180000201000
>} imagemask 
  }
  243 /Gf3 MSTT31c1f8 AddChar
/Gf4 [27.0 0.0 3.0 -6.0 23.0 24.0]
/Gf4 {
    20 30 true [1 0 0 -1 -3.0 24.0] {<00000000600000f000019800030c000606000c03001801803000c07e07e0fe07f006060006060006
0600060600060600060600060600060600fe07f07e07e03000c01801800c0300060600030c000198
0000f000006000000000>} imagemask 
  }
  244 /Gf4 MSTT31c1f8 AddChar
/Gf5 [26.0 0.0 3.0 4.0 23.0 24.0]
/Gf5 {
    20 20 true [1 0 0 -1 -3.0 24.0] {<fffc00fff800c03000c06000c06000c03000c01800c00c00c00600d80300fc0180e600c0c3006081
803000c0600060c0003180001b00000e00000400>} imagemask 
  }
  245 /Gf5 MSTT31c1f8 AddChar
/Gf6 [26.0 0.0 3.0 4.0 23.0 24.0]
/Gf6 {
    20 20 true [1 0 0 -1 -3.0 24.0] {<03fff001fff000c03000603000603000c0300180300300300600300c01b01803f0300670600c30c0
181060300030600018c0000d8000070000020000>} imagemask 
  }
  246 /Gf6 MSTT31c1f8 AddChar
/Gf7 [26.0 0.0 3.0 0.0 24.0 20.0]
/Gf7 {
    21 20 true [1 0 0 -1 -3.0 20.0] {<000400000f000019800030c000606000c030818030c30060e600c0fc0180d80300c00600c00c00c0
1800c03000c06000c06000c03000fff800fffc00>} imagemask 
  }
  247 /Gf7 MSTT31c1f8 AddChar
/Gf8 [26.0 0.0 2.0 0.0 23.0 20.0]
/Gf8 {
    21 20 true [1 0 0 -1 -2.0 20.0] {<0100000780000cc000186000303000601800600c083006181803380c01f80600d803001801801800
c01800601800301800301800601800fff801fff8>} imagemask 
  }
  248 /Gf8 MSTT31c1f8 AddChar
/Gf9 [16.0 0.0 2.0 7.0 15.0 17.0]
/Gf9 {
    13 10 true [1 0 0 -1 -2.0 17.0] {<fff8fff8c018c018c018c018c018c018fff8fff8>} imagemask 
  }
  249 /Gf9 MSTT31c1f8 AddChar
/Gfa [13.0 0.0 2.0 7.0 12.0 17.0]
/Gfa {
    10 10 true [1 0 0 -1 -2.0 17.0] {<ffc0ffc0c0c0c0c0c0c0c0c0c0c0c0c0ffc0ffc0>} imagemask 
  }
  250 /Gfa MSTT31c1f8 AddChar
/Gfb [21.0 0.0 2.0 5.0 18.0 20.0]
/Gfb {
    16 15 true [1 0 0 -1 -2.0 20.0] {<000008001c1c1c3e1e7e1efc0ff007e007c007f00ff83e7ffe3e7c1c3800>} imagemask 
  }
  251 /Gfb MSTT31c1f8 AddChar
/Gfc [26.0 0.0 2.0 4.0 24.0 25.0]
/Gfc {
    22 21 true [1 0 0 -1 -2.0 25.0] {<0000040000180000300000600001c0000380000700000e00001e00001c00003800307000f8f00078
e0003dc0001fc0001f80000f80000f00000e0000040000>} imagemask 
  }
  252 /Gfc MSTT31c1f8 AddChar
/Gfd [29.0 0.0 3.0 0.0 27.0 24.0]
/Gfd {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e08007e1c1c7e1c3e7e1e7e7e1ef87e0ff07e07e07e07c07e0
7e07e0ff87e3e7e7e7e3e7e7c1c7e38007e00007e00007ffffffffffffffffff>} imagemask 
  }
  253 /Gfd MSTT31c1f8 AddChar
/Gfe [29.0 0.0 3.0 0.0 29.0 25.0]
/Gfe {
    26 25 true [1 0 0 -1 -3.0 25.0] {<000000c0ffffff80ffffff00ffffff00e0001f00e0003f00e0007700e000e700e001c700e0038700
e0078700e7070700ef8e0700e79e0700e3dc0700e1f80700e1f80700e0f00700e0e00700e0400700
e0000700e0000700ffffff00ffffff00ffffff00>} imagemask 
  }
  254 /Gfe MSTT31c1f8 AddChar
/Gff [34.0 0.0 1.0 0.0 32.0 25.0]
/Gff {
    31 25 true [1 0 0 -1 -1.0 25.0] {<00003fe00001fffca00ffffe0dbfc61e09be060e802b060e249f060e09bf060e802b060e241f060e
0dbf1fee8125fffe201fe61e0dbf060e8135060e200f060e0dbf060e01b7060e8007060e2dbf3ffe
09befffe8043fffe24bfe00e0dbf00020020000e>} imagemask 
  }
  255 /Gff MSTT31c1f8 AddChar
%%EndResource

32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1590 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1581 1066 (unit-number: A numeric-form of unit number encoded as with ) 1066 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1666 1578 210 (encode-unit) 210 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1876 1581 11 (.) 11 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1666 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1657 1519 (vcc-level: An encoded integer that describes the voltage levels of a Socket. The encoding) 1519 SB
600 1707 628 (scheme is described in Section 3.4.2.) 628 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1791 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1782 1614 (status-change-int: A bit-map that describes the status change interrupt setting for a Socket. The) 1614 SB
600 1832 694 (format of the bit-map is defined in Table) 694 SB
1294 1832 737 ( 2. The value is an integer encoded as with ) 737 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2031 1829 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2218 1832 11 (.) 11 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 1917 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 1908 1625 (status-change-report: A bit-map that describes the status change report setting for a Socket. The) 1625 SB
600 1958 694 (format of the bit-map is defined in Table) 694 SB
1294 1958 737 ( 2. The value is an integer encoded as with ) 737 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2031 1955 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2218 1958 11 (.) 11 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 2043 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2034 1597 (cntl-ind: A bit-map that describes the control and indicator setting for a Socket. The format of) 1597 SB
600 2084 524 (the bit-map is defined in Table) 524 SB
1124 2084 737 ( 2. The value is an integer encoded as with ) 737 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1861 2081 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2048 2084 11 (.) 11 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 2169 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2160 1311 (interface-type: 0 if Memory interface only, or 1 if I/O and Memory interface.) 1311 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 2244 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2235 1626 (window-number: An integer that identifies a Window of the Bus Node. The value is encoded as) 1626 SB
600 2285 86 (with ) 86 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
686 2282 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
873 2285 11 (.) 11 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 2370 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2361 1553 (window-state: A bit-map that describes the state of a Window. The format of the bit-map is) 1553 SB
600 2411 279 (defined in Table) 279 SB
879 2411 737 ( 5  The value is an integer encoded as with ) 737 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1616 2408 187 (encode-int) 187 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 2496 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2487 1111 (speed: An integer of bus speed in nano-seconds, encoded as with ) 1111 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1711 2484 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1898 2487 11 (.) 11 SB
32 0 0 33 33 0 0 1 29 /MSTT31c1f8 font
525 2572 58 (n ) 75 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2563 1632 (window-capability: A bit-map that describes the capability of a Window.  The format of the bit-) 1632 SB
600 2613 402 (map is defined in Table) 402 SB
1002 2613 704 ( 6.  The value is an integer encoded as wi) 704 SB
1706 2613 44 (th ) 44 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1750 2610 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1937 2613 11 (.) 11 SB

%%BeginResource: font MSTT31c260
/GreNewFont{10 dict dup 3 1 roll def dup begin 6 1 roll/FontType 3
def/FontMatrix exch def/FontBBox exch def/FontInfo 2 dict def FontInfo
/UnderlinePosition 3 -1 roll put FontInfo/UnderlineThickness 3 -1
roll put/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
/CharProcs 256 dict def CharProcs/.notdef{}put/Metrics 256 dict def
Metrics/.notdef 3 -1 roll put/BuildChar{/char exch def/fontdict exch
def/charname fontdict/Encoding get char get def fontdict/Metrics get
charname get aload pop setcachedevice fontdict begin Encoding char
get CharProcs exch get end exec}def end definefont pop}def/AddChar{begin
Encoding 3 1 roll put CharProcs 3 1 roll put Metrics 3 1 roll put end}def
/MSTT31c260 [33.0 0 0 0 0 0] 60 -90 [-33.0 -33.0 33.0 33.0] [1 33 div 0 0 1 33 div 0 0] /MSTT31c260 GreNewFont
/G1e [17.0 0.0 2.0 0.0 14.0 24.0]
/G1e {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  30 /G1e MSTT31c260 AddChar
/G1f [17.0 0.0 2.0 0.0 14.0 24.0]
/G1f {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  31 /G1f MSTT31c260 AddChar
/G20 [33.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c260 AddChar
/G21 [34.0 0.0 1.0 -1.0 32.0 24.0]
/G21 {
    31 25 true [1 0 0 -1 -1.0 24.0] {<000000300000004c00000084000001020000070200000f86000017c8000027d00000dbe0000125c0
00024900000c92000013640000249800004920000192400003e48000049b00000966000008680000
10b0000020600000238000007c000000c0000000>} imagemask 
  }
  33 /G21 MSTT31c260 AddChar
/G22 [38.0 0.0 2.0 0.0 35.0 24.0]
/G22 {
    33 24 true [1 0 0 -1 -2.0 24.0] {<7800000000c600001f008300003f00810000fc00c10001f800710007e0001f000f800007803f0000
01e07c00000079f000000033e00000000d800000001a000000003ce000000031f8000000e07c0000
01e03f000006200fc000082003e000302001f8004060007e0080c0003f008300000f007c00000000
>} imagemask 
  }
  34 /G22 MSTT31c260 AddChar
/G23 [43.0 0.0 2.0 0.0 40.0 26.0]
/G23 {
    38 26 true [1 0 0 -1 -2.0 26.0] {<007800000000cc0000000084000000008200000000c200000000420000000066000000003c000000
001c000000000c0000000006000000000700000000078003e000000ffff0000ffffff8001f3fff80
1ffff8000078100000008010700000802038000080203c000060c01c00001f000e000000000e0000
00000700000000078000>} imagemask 
  }
  35 /G23 MSTT31c260 AddChar
/G24 [44.0 0.0 1.0 0.0 43.0 17.0]
/G24 {
    42 17 true [1 0 0 -1 -1.0 17.0] {<003c00000f000042000030800081000060400301000080400601000100400c010002004018000004
0000300000080000603c00180000c02200300000ffe3ffe000008022004000008022008000004042
008000004041010000003080c20000000f007c000000>} imagemask 
  }
  36 /G24 MSTT31c260 AddChar
/G25 [29.0 0.0 2.0 -1.0 27.0 24.0]
/G25 {
    25 25 true [1 0 0 -1 -2.0 24.0] {<001c0000003e000000c1800003006000020020000400100004001000080008000800080008000800
08000800080008000800080008000800100004001000040021ffc2003fc03e0067c0030087c00080
83800080c0000180600003001e003c0001ffc000>} imagemask 
  }
  37 /G25 MSTT31c260 AddChar
/G26 [40.0 0.0 3.0 0.0 38.0 26.0]
/G26 {
    35 26 true [1 0 0 -1 -3.0 26.0] {<01fc07f0000e03180e000800a002001800c00300e8004003e0a8004002a0a8004002a0a8004002a0
a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0a8004002a0
a8004002a0a8004002a0a9fc4ffaa0ae035006a0b000e002a0b0004001a0b07f5fc0a0bf80e03fa0
803e0fc020ffc1f03fe0>} imagemask 
  }
  38 /G26 MSTT31c260 AddChar
/G27 [15.0 0.0 3.0 -1.0 12.0 24.0]
/G27 {
    9 25 true [1 0 0 -1 -3.0 24.0] {<0800140016001200210041004100410062001c007f00c980c880bf80808080808080808080808080
808080808080c1803f00>} imagemask 
  }
  39 /G27 MSTT31c260 AddChar
/G28 [36.0 0.0 3.0 0.0 33.0 24.0]
/G28 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<007ff80007ffffc03ffffff07ffffff87f800ff8fe0003fcfce01dfc02e01e00fefffffcfefffdfc
7dfffef803c78f0003ffff0007c78f8007ffff800fc78fc00fffffc01fffffe01fffffe01fffffe0
1fffffe01fffffe01fffffe01fffffe0>} imagemask 
  }
  40 /G28 MSTT31c260 AddChar
/G29 [29.0 0.0 3.0 0.0 27.0 24.0]
/G29 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff000381c0047020086c18106e08206e04403602400702c0070380070180070180070180070180
0701800701c00703400702403602206e04106e08086c100468200381c000ff00>} imagemask 
  }
  41 /G29 MSTT31c260 AddChar
/G2a [37.0 0.0 3.0 0.0 35.0 24.0]
/G2a {
    32 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffc0000003a000000590000009880000118400002182000041810000818080010180400201
80200401801008018018180180242401804242018081810181000081820000418400002188000011
90000009a0000005c0000003ffffffff>} imagemask 
  }
  42 /G2a MSTT31c260 AddChar
/G2b [37.0 0.0 3.0 0.0 35.0 24.0]
/G2b {
    32 24 true [1 0 0 -1 -3.0 24.0] {<ffffffff800000018000000180000071800000718000007180000071800000718000000180000001
80000001803ff0018000000180000001800ffc0180000001800000018007fe018000000180000001
800000018000000180000001ffffffff>} imagemask 
  }
  43 /G2b MSTT31c260 AddChar
/G2c [39.0 0.0 3.0 0.0 36.0 24.0]
/G2c {
    33 24 true [1 0 0 -1 -3.0 24.0] {<000001f00000001e0c000001e00200001e00010001e00001000f8000008018600000802010000080
4008000080c00c00008080040006808004007e808f8407fe808f847ffe8080047e7e808004607e80
8004007e808004007c8080040040808004000f00800400f00080040f00008004f00000ffff000000
>} imagemask 
  }
  44 /G2c MSTT31c260 AddChar
/G2d [39.0 0.0 3.0 0.0 36.0 26.0]
/G2d {
    33 26 true [1 0 0 -1 -3.0 26.0] {<000003000000007f000000007ff00000007f0c000000ff0200000f7f010000f07f01000780780080
186070008020107000804008700080c008700080800470008080047000808f847000808f84700080
800470008080044000808004000080800400008080040000808004000f00800400f00080040f0000
8004f00000ffff000000>} imagemask 
  }
  45 /G2d MSTT31c260 AddChar
/G2e [48.0 0.0 3.0 0.0 45.0 26.0]
/G2e {
    42 26 true [1 0 0 -1 -3.0 26.0] {<0000000380000000007f80000000007ff8000000007f8600000000ff810000000f7f80800000707f
80800007c078004000083070004000100870004000200470004000601e7000400040e27000403e41
0270004041c10670004080623a700040803222700040800c42000040478642000040638342000040
3001c200004008004200078004002600780003001a07800001800a78000000ffff800000>} imagemask 
  }
  46 /G2e MSTT31c260 AddChar
/G2f [48.0 0.0 3.0 0.0 45.0 24.0]
/G2f {
    42 24 true [1 0 0 -1 -3.0 24.0] {<00000000f8000000000f0600000000f0010000000f0000800000700000800007e0000040000c3000
00400010080000400020040000400060060000400040020003403e4002003f4041c00203ff408060
023fff408030023f3f40800802203f40478402003f40638302003e403001820030400800c2000780
04002200780002001207800001800a78000000ffff800000>} imagemask 
  }
  47 /G2f MSTT31c260 AddChar
/G30 [36.0 0.0 3.0 0.0 34.0 24.0]
/G30 {
    31 24 true [1 0 0 -1 -3.0 24.0] {<07fe00000401000008010000fffffffe800000028000000280000002800000028000000280000002
80000002800000028000000280000002800000028000000280000002800000028000000280000002
800000028000000280000002fffffffe>} imagemask 
  }
  48 /G30 MSTT31c260 AddChar
/G31 [44.0 0.0 3.0 0.0 42.0 24.0]
/G31 {
    39 24 true [1 0 0 -1 -3.0 24.0] {<07fe00000004010000000801000000f801fffe00800000020080000002008000000200807ffffffe
80800000028080000004810000000481000000088200000008820000001084000000108800000020
880000002090000000409000000040a000000080a000000080c000000100c000000100fffffffe00
>} imagemask 
  }
  49 /G31 MSTT31c260 AddChar
/G32 [23.0 0.0 3.0 0.0 20.0 24.0]
/G32 {
    17 24 true [1 0 0 -1 -3.0 24.0] {<fff000803800802c009e26008023008021809e3f808000808000808000809ffc808000808000809f
fc808000808000809ffc808000808000809ffc80800080800080800080ffff80>} imagemask 
  }
  50 /G32 MSTT31c260 AddChar
/G33 [23.0 0.0 3.0 0.0 20.0 24.0]
/G33 {
    17 24 true [1 0 0 -1 -3.0 24.0] {<ffff808000808000809ffc808000808000809ffc808000808000808000809ffc808000808000809f
fc808000808000809ffc808000808000809ffc80800080800080800080ffff80>} imagemask 
  }
  51 /G33 MSTT31c260 AddChar
/G34 [29.0 0.0 3.0 -6.0 27.0 24.0]
/G34 {
    24 30 true [1 0 0 -1 -3.0 24.0] {<01ffff0100010100011ffff9100009100009ffffc98000498000499ffc498000498000498000499f
fc498000498000499ffc498000498000499ffc498000498000499ffc4980004f8000489ffc488000
78800040800040ffffc0>} imagemask 
  }
  52 /G34 MSTT31c260 AddChar
/G35 [18.0 0.0 3.0 0.0 17.0 23.0]
/G35 {
    14 23 true [1 0 0 -1 -3.0 23.0] {<fffc800480048f8488848f8480048204800480048004fffc800480048f8488848f84800483048004
80048004fffc>} imagemask 
  }
  53 /G35 MSTT31c260 AddChar
/G36 [20.0 0.0 3.0 -1.0 17.0 24.0]
/G36 {
    14 25 true [1 0 0 -1 -3.0 24.0] {<3ff0c01c8004e01c9fe48004800470282fd017a01b600fc006800cc0186010202010400880048784
9fe4bff4ffe460181fe0>} imagemask 
  }
  54 /G36 MSTT31c260 AddChar
/G37 [35.0 0.0 3.0 0.0 33.0 24.0]
/G37 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<00001000000030000000300001f0e00003ffc000070f80000e0000000c0000000c0000007ffffff8
80000004800000048cccccc48cccccc483333304833333048cccccc48cccccc48000000480fffc04
80fffc0480000004800000047ffffff8>} imagemask 
  }
  55 /G37 MSTT31c260 AddChar
/G38 [31.0 0.0 1.0 -1.0 28.0 27.0]
/G38 {
    27 28 true [1 0 0 -1 -1.0 27.0] {<0001f0000007f800000f0800000c040000180400001804000030ffc0003104200071042080610420
c0e10420c0c1ffe061c100203f8100201e0100200001002000010020000100200001002000010020
00010020000100200001002000010020000080400000c0c00000618000001e00>} imagemask 
  }
  56 /G38 MSTT31c260 AddChar
/G39 [36.0 0.0 1.0 0.0 32.0 20.0]
/G39 {
    31 20 true [1 0 0 -1 -1.0 20.0] {<3c000000fe000000c7000f8003003060030040100300a01803014714030158d40302974a0302afaa
0303afae03022fa203062fa2038e174201fe18c200f207020002000200020002000200020003fffe
>} imagemask 
  }
  57 /G39 MSTT31c260 AddChar
/G3a [31.0 0.0 3.0 0.0 29.0 24.0]
/G3a {
    26 24 true [1 0 0 -1 -3.0 24.0] {<1fffff001000010017fffd0014000500140005001400050014000500140005001400050014000500
14000500140005001400050017fffd00100001001fffff001fffff00200000804d89cc80437630c0
8dcdcc408000004080000040ffffffc0>} imagemask 
  }
  58 /G3a MSTT31c260 AddChar
/G3b [29.0 0.0 3.0 0.0 26.0 11.0]
/G3b {
    23 11 true [1 0 0 -1 -3.0 11.0] {<fffffe8000028000028000029ffff28000029ffff28000028c0002800002fffffe>} imagemask 
  }
  59 /G3b MSTT31c260 AddChar
/G3c [29.0 0.0 3.0 0.0 27.0 24.0]
/G3c {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffff8800118800118800118800118800118800118800118800118800118800118ffff180000180
000180000183ffc1820fc1820fc1820fc1820fc1820fc1420fc1220fc11fffff>} imagemask 
  }
  60 /G3c MSTT31c260 AddChar
/G3d [29.0 0.0 3.0 0.0 27.0 24.0]
/G3d {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffc0003fc0003fc0003fc0003cc0003cffffffffffffffc3ffff81ffff81ffff81ffff
81ffffc3ffffffffffffffffe7ffffe7ffffe7ffffe7ffffe7ffffffffffffff>} imagemask 
  }
  61 /G3d MSTT31c260 AddChar
/G3e [29.0 0.0 3.0 0.0 26.0 25.0]
/G3e {
    23 25 true [1 0 0 -1 -3.0 25.0] {<00fe0003838004004008382010381020380860380c40380440000480000280300280780280780283
79028733c28f87e24f03e44400c460000c20000810001008002004004003838000fe00>} imagemask 
  }
  62 /G3e MSTT31c260 AddChar
/G3f [30.0 0.0 1.0 0.0 29.0 18.0]
/G3f {
    28 18 true [1 0 0 -1 -1.0 18.0] {<0000003000000070000001c000300700004fdc00008038000110e000013f900002470800025e0400
04f2020007ee010003f00100040001001c0001003bf0030060af3e0080f9e600>} imagemask 
  }
  63 /G3f MSTT31c260 AddChar
/G40 [30.0 0.0 1.0 0.0 29.0 18.0]
/G40 {
    28 18 true [1 0 0 -1 -1.0 18.0] {<c0000000e0000000380000000e00c00003bf200001c0100000708800009fc800010e24000207a400
0404f40008077e000800fc0008000200080003800c00fdc007cf50600679f010>} imagemask 
  }
  64 /G40 MSTT31c260 AddChar
/G41 [19.0 0.0 3.0 0.0 17.0 26.0]
/G41 {
    14 26 true [1 0 0 -1 -3.0 26.0] {<1c00140c1214122412240a28094809480948099008103f902c502630e7b094909290ca10ce10b010
402040202040204020401f80>} imagemask 
  }
  65 /G41 MSTT31c260 AddChar
/G42 [26.0 0.0 3.0 -1.0 25.0 26.0]
/G42 {
    22 27 true [1 0 0 -1 -3.0 26.0] {<020000050000050c00e4940094a400ce640046240031240008d4000434000ffc00100c0020060043
02004c81004840805040807ec04021002060001018001007c0080020040018040007880000500000
20>} imagemask 
  }
  66 /G42 MSTT31c260 AddChar
/G43 [22.0 0.0 3.0 4.0 20.0 25.0]
/G43 {
    17 21 true [1 0 0 -1 -3.0 25.0] {<0200000e00000900000900000880000440000460000220000210003e08004007008e008091008043
00807c80804180803e40802187001e480008f00007e000>} imagemask 
  }
  67 /G43 MSTT31c260 AddChar
/G44 [22.0 0.0 2.0 -1.0 19.0 20.0]
/G44 {
    17 21 true [1 0 0 -1 -2.0 20.0] {<03f0000588000b3c0070c200813e0080c100809f00806100804080803c80700100083e0004200002
2000031000011000008800004800004800005800002000>} imagemask 
  }
  68 /G44 MSTT31c260 AddChar
/G45 [31.0 0.0 3.0 7.0 30.0 20.0]
/G45 {
    27 13 true [1 0 0 -1 -3.0 20.0] {<000fc0007ff03800802007c08047c0207ff9c020003e402000206020001fa020001030200010e1c0
000f920000047c000003f800>} imagemask 
  }
  69 /G45 MSTT31c260 AddChar
/G46 [31.0 0.0 1.0 7.0 28.0 20.0]
/G46 {
    27 13 true [1 0 0 -1 -1.0 20.0] {<007e00000381ffc07c008020807c402080b3ffc0804f800080c0800080bf00008181000070e10000
093e000006c4000003f80000>} imagemask 
  }
  70 /G46 MSTT31c260 AddChar
/G47 [18.0 0.0 3.0 -2.0 16.0 25.0]
/G47 {
    13 27 true [1 0 0 -1 -3.0 25.0] {<00600090009000900090009000900090009000d003b01d9025886548a548a4c8b4c8d348de90e810
c010402020201020102010200fc0>} imagemask 
  }
  71 /G47 MSTT31c260 AddChar
/G48 [18.0 0.0 2.0 0.0 15.0 27.0]
/G48 {
    13 27 true [1 0 0 -1 -2.0 27.0] {<1f8020402040204020202010401840b883d89e589a689928a52895308d204dc06e00580048004800
4800480048004800480048003000>} imagemask 
  }
  72 /G48 MSTT31c260 AddChar
/G49 [29.0 0.0 3.0 0.0 27.0 26.0]
/G49 {
    24 26 true [1 0 0 -1 -3.0 26.0] {<0030000e48000b48e00949a0094920e5c920a4ca4094ca404cca404acc80264c8026408013008e10
01110800a20801c408020808041008002008004004008004030002060001040001040000f800>} imagemask 
  }
  73 /G49 MSTT31c260 AddChar
/G4a [28.0 0.0 1.0 -1.0 26.0 24.0]
/G4a {
    25 25 true [1 0 0 -1 -1.0 24.0] {<007f000003ffe0000780f0000e0038001c001c0038000e00700007006080830061c1c300c1c1c180
c0808180c0000180c0000180c4001180c6003180c20021806300630061c1c30070ff8700383e0e00
1c001c000e0038000780f00003ffe000007f0000>} imagemask 
  }
  74 /G4a MSTT31c260 AddChar
/G4b [28.0 0.0 1.0 -1.0 27.0 24.0]
/G4b {
    26 25 true [1 0 0 -1 -1.0 24.0] {<007f800001ffe00007c0f8000e001c001c000e0038000700300003006080418061c0e180c1c0e0c0
c08040c0c00000c0c00000c0c00000c0c00000c0c3fff0c063fff180600001803000030038000700
1c000e000e001c0007c0f80001ffe000007f8000>} imagemask 
  }
  75 /G4b MSTT31c260 AddChar
/G4c [28.0 0.0 1.0 -1.0 26.0 24.0]
/G4c {
    25 25 true [1 0 0 -1 -1.0 24.0] {<007f000003ffe0000780f0000e0038001c001c0038000e00700007006080830061c1c300c1c1c180
c0808180c0000180c03e0180c0ff8180c1c1c180c300618062002300660033007400170038000e00
1c001c000e0038000780f00003ffe000007f0000>} imagemask 
  }
  76 /G4c MSTT31c260 AddChar
/G4d [37.0 0.0 3.0 -1.0 36.0 24.0]
/G4d {
    33 25 true [1 0 0 -1 -3.0 24.0] {<0000084200003c084400007f04480000e382500000c1c1100000c060010003f038c60003f01fc000
03f00788000ffc0124001fff0123003fff0120807fff8110007fffc21000ffffc20000ffffc00000
ffffc00000ffffc00000ffffc000007fff8000007fff8000003fff0000001ffe0000000ffc000000
03f0000000>} imagemask 
  }
  77 /G4d MSTT31c260 AddChar
/G4e [22.0 0.0 3.0 -1.0 19.0 24.0]
/G4e {
    16 25 true [1 0 0 -1 -3.0 24.0] {<03e00ff80ff81ffc1ffc1ffc188c188808880f780f7003e003e001c060837007780fcf3b03c001c0
07703c1cf80ff00f3004>} imagemask 
  }
  78 /G4e MSTT31c260 AddChar
/G4f [28.0 0.0 3.0 -3.0 26.0 26.0]
/G4f {
    23 29 true [1 0 0 -1 -3.0 26.0] {<c00000c00000c3f000cc1800f00c00c00400c00400c00400c00402c0041ec007e2c00402c00402c0
0402c00402c3f402cc2c02f02402c02c02c03802c02002c02002c0180cc007f0c00000c00000c000
00c00000c00000>} imagemask 
  }
  79 /G4f MSTT31c260 AddChar
/G50 [36.0 0.0 3.0 0.0 34.0 27.0]
/G50 {
    31 27 true [1 0 0 -1 -3.0 27.0] {<800000008000000080000000c7e00000dff80000fc1c0000e00c0000400400004004000040040000
60080000600c000063ef00006ffbe00e7c98fff830901ff020a000e020c0038030803f0030fff800
303fc000300000003000000010000000180000001800000018000000>} imagemask 
  }
  80 /G50 MSTT31c260 AddChar
/G51 [29.0 0.0 3.0 0.0 27.0 23.0]
/G51 {
    24 23 true [1 0 0 -1 -3.0 23.0] {<006000007000003800003800003c00001e00001e00000f00c00f806007807ffffc3fffff67fffc60
0780c00f80000f00001e00001e00003c00003800003800007000006000>} imagemask 
  }
  81 /G51 MSTT31c260 AddChar
/G52 [29.0 0.0 4.0 1.0 26.0 24.0]
/G52 {
    22 23 true [1 0 0 -1 -4.0 24.0] {<0000000030000030000c78c00f7bc00f87c00e01c004008008004070003870003830003010002010
00401000201800603c00f03e01f003030001fe0001ce00018600010200>} imagemask 
  }
  82 /G52 MSTT31c260 AddChar
/G53 [21.0 0.0 3.0 0.0 19.0 24.0]
/G53 {
    16 24 true [1 0 0 -1 -3.0 24.0] {<0000010001800180018003c003c007e00ff01ff83ffc3ffc7ffe7ffeffffffffffffffffffff7ffe
7ffe3ffc1ff807e0>} imagemask 
  }
  83 /G53 MSTT31c260 AddChar
/G54 [27.0 0.0 3.0 0.0 24.0 24.0]
/G54 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<00200000200003260001fc00087080082080c820983820e01c21c0762370c1ac18007000007000c1
ac187623701c21c03820e0c8209808208008708001fc00032600002000002000>} imagemask 
  }
  84 /G54 MSTT31c260 AddChar
/G55 [25.0 0.0 3.0 0.0 21.0 24.0]
/G55 {
    18 24 true [1 0 0 -1 -3.0 24.0] {<03f00003f000033000033000033000033000033000ff3fc0ff3fc0c000c0c000c0ff3fc0ff3fc003
300003300003300003300003300003300003300003300003300003f00003f000>} imagemask 
  }
  85 /G55 MSTT31c260 AddChar
/G56 [25.0 0.0 3.0 0.0 23.0 23.0]
/G56 {
    20 23 true [1 0 0 -1 -3.0 23.0] {<03f80003fc00031c00031c00031c00ff1fe0ff1ff0c00070c00070c00070ff1ff0ff1ff0031ff003
1c00031c00031c00031c00031c00031c00031c0003fc0003fc0001fc00>} imagemask 
  }
  86 /G56 MSTT31c260 AddChar
/G57 [24.0 0.0 3.0 0.0 22.0 24.0]
/G57 {
    19 24 true [1 0 0 -1 -3.0 24.0] {<00e00000e00000e00003f8000ffe000eee001ce700184300feefe0ffffe0feefe01843001ce7000e
ee0007fc0003f80000e00000e00000e00000e00000e00000e00000e00000e000>} imagemask 
  }
  87 /G57 MSTT31c260 AddChar
/G58 [23.0 0.0 3.0 3.0 21.0 22.0]
/G58 {
    18 19 true [1 0 0 -1 -3.0 22.0] {<1ffe0007f80003f00081e04081e040c0c0c0e0c1c0f0c3c0fedfc0ffffc0fedfc0f0c3c0e0c1c0c0
c0c081e04081e04003f00007f8001ffe00>} imagemask 
  }
  88 /G58 MSTT31c260 AddChar
/G59 [26.0 0.0 3.0 0.0 24.0 24.0]
/G59 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<00200000200000700000d80000d800018c00fffff87ffff06306303603601c01c01c01c01c01c01c
01c03603606306307ffff0fffff8018c0000d80000d800007000002000002000>} imagemask 
  }
  89 /G59 MSTT31c260 AddChar
/G5a [29.0 0.0 3.0 0.0 27.0 24.0]
/G5a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00fe0003ff8007f0600f80001f00003e00007c0000780000f80010f00010f00030f001fef00078f0
0078f0004cf800807800007c00003e00001f00000f800007f02003ffc000fe00>} imagemask 
  }
  90 /G5a MSTT31c260 AddChar
/G5b [29.0 0.0 3.0 0.0 27.0 23.0]
/G5b {
    24 23 true [1 0 0 -1 -3.0 23.0] {<00ff000381c004002018001830000c2000044f80025fc002bfe001ffe001f8f0e1f8f0e1f8f0e1ff
f001fff8037ffc067ffe0e3ffffc3ffffc1ffff807ffe003ffc000ff00>} imagemask 
  }
  91 /G5b MSTT31c260 AddChar
/G5c [30.0 0.0 3.0 -1.0 27.0 24.0]
/G5c {
    24 25 true [1 0 0 -1 -3.0 24.0] {<000c00001e0000040000c380007f80003f000f1e001fc03c0fc07e0820fe002087002703006f8181
ff8181dc81818881400c814004836006c63006fe380efc1e1e780ffc0007fc0001f000>} imagemask 
  }
  92 /G5c MSTT31c260 AddChar
/G5d [29.0 0.0 3.0 0.0 28.0 25.0]
/G5d {
    25 25 true [1 0 0 -1 -3.0 25.0] {<001c0000001c0000003e00001cff9c001dffdc001fddfc00071c70000f9cf8001ddddc003cff9e00
38630e00ffc1ff80ffc1ff80ffc1ff8038630e001cff9c001ddddc000f9cf800071c70001fddfc00
1dffdc001cff9c00003e0000001c0000001c0000>} imagemask 
  }
  93 /G5d MSTT31c260 AddChar
/G5e [38.0 0.0 3.0 -6.0 36.0 25.0]
/G5e {
    33 31 true [1 0 0 -1 -3.0 25.0] {<0f000078003fc001fe007fe0038f0078f0070700f070060380e0380e0380e0380c0380e01c1c0380
e01c180380e00c180380700e380700700e3007003006300600000630000000077000000007700000
00036000000003600000000360000000036000000003e000000003e000000001c000000001c00000
0001c000000001c000000001c000000001c000000001c000000001c000000001c00000>} imagemask 
  }
  94 /G5e MSTT31c260 AddChar
/G5f [35.0 0.0 3.0 -7.0 32.0 24.0]
/G5f {
    29 31 true [1 0 0 -1 -3.0 24.0] {<e0000038f80000f8380000e01c0001c00e0003800e000380070007000780070003800e0001c01c00
00f07800007ff00000fff80001f03c0003c01e000300070006000300060003000c0001800c000180
0c0001800c0001800c0001800c00018006000300060003000300060001c01c0000f07800007ff000
001fc000>} imagemask 
  }
  95 /G5f MSTT31c260 AddChar
/G60 [32.0 0.0 3.0 -1.0 29.0 25.0]
/G60 {
    26 26 true [1 0 0 -1 -3.0 25.0] {<e00001c0ffffffc01ffffe0003807000038070000380700003807000038070000380700003807000
03807000038070000380700003807000038070000380700003807000038070000380700003807000
0380700003807000038070000ffffc00ffffffc0f00003c0>} imagemask 
  }
  96 /G60 MSTT31c260 AddChar
/G61 [36.0 0.0 3.0 0.0 33.0 24.0]
/G61 {
    30 24 true [1 0 0 -1 -3.0 24.0] {<001ff80001ffff8007ffffe01fc007f83f80007c70c0000c60600000c0300000c0300000c03003c0
c0300ff060701c3870e038183fc0300c0f00300c0000300c0000300c00001818c0000c38f80007f0
7f800fe01fffff8007fffe00007fe000>} imagemask 
  }
  97 /G61 MSTT31c260 AddChar
/G62 [31.0 0.0 3.0 -7.0 29.0 26.0]
/G62 {
    26 33 true [1 0 0 -1 -3.0 26.0] {<000fc000007ff00000f07c0001e01c0001c00e0003800e0003800700038007000380070003800700
0180070001c0070000c00f000fe00e003fe00e0070701c0060301c00c0103c00c0183800c0187800
c0187000c01870006030e0007070e0003fe0e0000f81c0000001c0000001c0000001c0000001c080
0000e3c000007f8000003e00>} imagemask 
  }
  98 /G62 MSTT31c260 AddChar
/G63 [31.0 0.0 3.0 -6.0 28.0 25.0]
/G63 {
    25 31 true [1 0 0 -1 -3.0 25.0] {<e1c3800071e3c00073e7c0003a74e0003e7ce0003c78e0003c78ee003c78ee003870ef003870ff00
3870f3003870f3803870e3803870e3803870e3803870e3803870e3803870e3803870e7003870e700
3870e6003870ee003870ec003870fc003870f8000000f0000003e000000f7000000c700000003000
00001800>} imagemask 
  }
  99 /G63 MSTT31c260 AddChar
/G64 [31.0 0.0 3.0 2.0 29.0 24.0]
/G64 {
    26 22 true [1 0 0 -1 -3.0 24.0] {<003f000000ffc00003fff00007c0f800078078000f003c000e001c000e001c000e001c000e001c00
0700380003807000ffc0ffc0ffc0ffc0ffc0ffc000000000000000000000000000000000ffffffc0
ffffffc0ffffffc0>} imagemask 
  }
  100 /G64 MSTT31c260 AddChar
/G65 [34.0 0.0 3.0 -6.0 31.0 25.0]
/G65 {
    28 31 true [1 0 0 -1 -3.0 25.0] {<e1c3800071e3c00073e7c0003a74e0003e7ce0003c78e0003c78e0003c78e0003870e0003870e000
3870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e0003870e000
3870e0003870e0003870e0003870e0003870e000000070000000784000003fe000001ff000000060
00000040>} imagemask 
  }
  101 /G65 MSTT31c260 AddChar
/G66 [31.0 0.0 3.0 -1.0 28.0 24.0]
/G66 {
    25 25 true [1 0 0 -1 -3.0 24.0] {<000e0000001ffc00000ffe0000001f0000001f0000003f00000073000000e3000001c30000038300
180703801c0e03800e1c03800738010003f0000001e0000001e0000003f00000073800000e1c0000
1c0e00003806000070000000e000000040000000>} imagemask 
  }
  102 /G66 MSTT31c260 AddChar
/G67 [36.0 0.0 3.0 -5.0 33.0 24.0]
/G67 {
    30 29 true [1 0 0 -1 -3.0 24.0] {<00020000f00f0000f81f00003c1b00001c3380000e7380000e6180000661800007c1800007c18000
07c1800007c1c0000381c3e00380c7f00380ce380380d81c0380f80c0000f00c0000700c0000700c
000078180000fc380000cff00000c3e00001c0000001800000078000003f0000003e0000>} imagemask 
  }
  103 /G67 MSTT31c260 AddChar
/G68 [35.0 0.0 3.0 2.0 32.0 22.0]
/G68 {
    29 20 true [1 0 0 -1 -3.0 22.0] {<008040400181c0e007c3e1e00ecf67b03c7c6e3070783c30e0603018000020000000000000000000
0000000000000000000040000180c06003c3c1e00fc763e01cde6f3078787c30e070381840202010
>} imagemask 
  }
  104 /G68 MSTT31c260 AddChar
/G69 [26.0 0.0 3.0 -1.0 23.0 24.0]
/G69 {
    20 25 true [1 0 0 -1 -3.0 24.0] {<e000707000e03801c01801801c03800c03000e07000e0700070e00070e00070e00fffff0fffff007
0e00070e00070e000606000e07000e07000c03001c03801801803000c07000e0e00070>} imagemask 
  }
  105 /G69 MSTT31c260 AddChar
/G6a [35.0 0.0 3.0 -3.0 36.0 19.0]
/G6a {
    33 22 true [1 0 0 -1 -3.0 19.0] {<000000008000f000018003f8000380063cf801801c1dff0100181fffc100301e0ffe00701807f800
70300f0000e0600f0000e1c00e0000fe001e0000e0003e0000e0007e0000f000dc000070011c0000
7c0e1c00003ff81c00000fe03c0000000038000000003800000000200000>} imagemask 
  }
  106 /G6a MSTT31c260 AddChar
/G6b [42.0 0.0 2.0 -5.0 41.0 25.0]
/G6b {
    39 30 true [1 0 0 -1 -2.0 25.0] {<001f00000000238000000061c0001800c1c0001c01c1c0001c01c1c0000c01c380000c01c3800008
01ee00003800fc1fffe000e07fffc007e1fffe000cf3c0c0003873018000307c0180006038030000
e03c060018e01c04001ce01e08001ee00e30001ef00f60000e780780000e7c0fc0000e3ff9e0000c
0fe0f0001c00007c001800003e003000001fc0e0000007ffc0000000fe00>} imagemask 
  }
  107 /G6b MSTT31c260 AddChar
/G6c [25.0 0.0 3.0 2.0 22.0 21.0]
/G6c {
    19 19 true [1 0 0 -1 -3.0 21.0] {<03f0000ffe001fff003fff807fffc07fffc07fffe0ffffe0ffffe0ffffe0ffffe0ffffe07fffe07f
ffc07fffc03fff801fff000ffe0001f000>} imagemask 
  }
  108 /G6c MSTT31c260 AddChar
/G6d [31.0 0.0 3.0 0.0 29.0 24.0]
/G6d {
    26 24 true [1 0 0 -1 -3.0 24.0] {<00fc000003ff80000f81e0001e00780038001c0030000e0070000f0060000780e0000780c00003c0
c00003c0c00003c0c00003c0c00003c0e00007c0600007c060000f8030000f8018001f000e007f00
0781fe0001fffc00007ff000000fc000>} imagemask 
  }
  109 /G6d MSTT31c260 AddChar
/G6e [25.0 0.0 3.0 2.0 22.0 21.0]
/G6e {
    19 19 true [1 0 0 -1 -3.0 21.0] {<ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ffffe0ff
ffe0ffffe0ffffe0ffffe0ffffe0ffffe0>} imagemask 
  }
  110 /G6e MSTT31c260 AddChar
/G6f [29.0 0.0 3.0 0.0 27.0 24.0]
/G6f {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007e00007e00007e00007ffffffffffffffffff>} imagemask 
  }
  111 /G6f MSTT31c260 AddChar
/G70 [29.0 0.0 3.0 0.0 27.0 24.0]
/G70 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<fffffffffffffffffffffffffffffff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0
000ff0000ff0000ff0000ff0000ff0000fffffffffffffffffffffffffffffff>} imagemask 
  }
  112 /G70 MSTT31c260 AddChar
/G71 [29.0 0.0 3.0 0.0 27.0 24.0]
/G71 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<fffffcfffffcc0000ec0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0
000fc0000fc0000fc0000fc0000fc0000fffffffffffff7fffff3fffff1fffff>} imagemask 
  }
  113 /G71 MSTT31c260 AddChar
/G72 [29.0 0.0 3.0 0.0 27.0 24.0]
/G72 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<1fffff3fffff7fffffffffffffffffc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0
000fc0000fc0000fc0000fc0000fc0000fc0000fc0000fc0000efffffcfffffc>} imagemask 
  }
  114 /G72 MSTT31c260 AddChar
/G73 [15.0 0.0 3.0 5.0 13.0 19.0]
/G73 {
    10 14 true [1 0 0 -1 -3.0 19.0] {<00000c001e003f003f007f80ffc0ffc07f803f003f001e000c000000>} imagemask 
  }
  115 /G73 MSTT31c260 AddChar
/G74 [25.0 0.0 3.0 -2.0 22.0 25.0]
/G74 {
    19 27 true [1 0 0 -1 -3.0 25.0] {<00400000e00000e00001f00003f80003f80007fc000ffe000ffe001fff003fff807fffc07fffc0ff
ffe07fffc07fffc03fff801fff000ffe000ffe0007fc0003f80003f80001f00000e00000e0000040
00>} imagemask 
  }
  116 /G74 MSTT31c260 AddChar
/G75 [33.0 0.0 3.0 -2.0 30.0 25.0]
/G75 {
    27 27 true [1 0 0 -1 -3.0 25.0] {<00040000000e0000001f0000003f8000007fc00000ffe00001fff00003fff80007fffc000ffffe00
1fffff003fffff807fffffc0ffffffe07fffffc03fffff801fffff000ffffe0007fffc0003fff800
01fff00000ffe000007fc000003f8000001f0000000e000000040000>} imagemask 
  }
  117 /G75 MSTT31c260 AddChar
/G76 [29.0 0.0 3.0 0.0 27.0 24.0]
/G76 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000ff0001ff8000ff00007e00083c101c18383e007c7f00feff81ffff81ff7f
00fe3e007c1c1838083c10007e0000ff0001ff8000ff00007e00003c00001800>} imagemask 
  }
  118 /G76 MSTT31c260 AddChar
/G77 [19.0 0.0 3.0 5.0 16.0 19.0]
/G77 {
    13 14 true [1 0 0 -1 -3.0 19.0] {<020007000f801fc03fe07ff0fff8fff87ff03fe01fc00f8007000200>} imagemask 
  }
  119 /G77 MSTT31c260 AddChar
/G78 [35.0 0.0 3.0 0.0 32.0 24.0]
/G78 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fffffff8fffffff8fffffff8e0000038e0000038e0c01838e0e03838e0707038e038e038e01dc038
e00f8038e0070038e00f8038e01dc038e038e038e0707038e0e03838e1c01c38e0c00838e0000038
e0000038fffffff8fffffff8fffffff8>} imagemask 
  }
  120 /G78 MSTT31c260 AddChar
/G79 [35.0 0.0 3.0 0.0 32.0 24.0]
/G79 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fffffff8fffffff8fffffff8e0000038e0000038e0020038e0070038e00f8038e01dc038e038e038
e0707038e0e03838e1c01c38e3800e38e7000738e6000338e0000038e0000038e0000038e0000038
e0000038fffffff8fffffff8fffffff8>} imagemask 
  }
  121 /G79 MSTT31c260 AddChar
/G7a [29.0 0.0 3.0 0.0 27.0 24.0]
/G7a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<1e00787f81fe7f81fef3c3cfe1c387e1c387f1c38f7ffffe7ffffe1ffff801c38001c38001c38001
c3801ffff87ffffe7ffffef1c38fe1c387e1c387f3c3cf7f81fe7f81fe1e0078>} imagemask 
  }
  122 /G7a MSTT31c260 AddChar
/G7b [29.0 0.0 3.0 1.0 26.0 23.0]
/G7b {
    23 22 true [1 0 0 -1 -3.0 23.0] {<01c7000339800200801e00f032009821010820820820100860780c404c0480b60280b402c2cc863c
7c781000102000082010083010181c107002108001298001e700>} imagemask 
  }
  123 /G7b MSTT31c260 AddChar
/G7c [29.0 0.0 3.0 1.0 27.0 24.0]
/G7c {
    24 23 true [1 0 0 -1 -3.0 24.0] {<00e38001ffc001ffc001ffc01dfff83ffffc3ffffc3ffffc3ff7fc7fddfeff3efffff7ffffffff7f
bdfe0fddf01ffff83ffffc3ffffc3ffffc0ff7f803f7c001f7c000e380>} imagemask 
  }
  124 /G7c MSTT31c260 AddChar
/G7d [18.0 0.0 1.0 14.0 16.0 25.0]
/G7d {
    15 11 true [1 0 0 -1 -1.0 25.0] {<1c0e3c1e7038e070e070fc7efc7efc7efc7efc7efc7e>} imagemask 
  }
  125 /G7d MSTT31c260 AddChar
/G7e [18.0 0.0 1.0 14.0 16.0 25.0]
/G7e {
    15 11 true [1 0 0 -1 -1.0 25.0] {<fc7efc7efc7efc7efc7efc7e1c0e1c0e381cf078e070>} imagemask 
  }
  126 /G7e MSTT31c260 AddChar
/G7f [17.0 0.0 2.0 0.0 14.0 24.0]
/G7f {
    12 24 true [1 0 0 -1 -2.0 24.0] {<fff0fff0c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030c030
c030c030fff0fff0>} imagemask 
  }
  127 /G7f MSTT31c260 AddChar
/G80 [29.0 0.0 3.0 0.0 27.0 24.0]
/G80 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c18307e0c70e70e60c306e18187c18183c18183c18183c18183c1
8183c18183e1818760c30670e70e307e0c183c180e00700781e003ffc000ff00>} imagemask 
  }
  128 /G80 MSTT31c260 AddChar
/G81 [29.0 0.0 3.0 0.0 27.0 24.0]
/G81 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018300c0c703c0e600c06e00c07c00c03c00c03c00c03c00c03c0
0c03c00c03e00c07600c06700c0e300c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  129 /G81 MSTT31c260 AddChar
/G82 [29.0 0.0 3.0 0.0 27.0 24.0]
/G82 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078187c1830fe0c70870e600306e00307c00303c00603c00603c00c03c0
1803c03003e0600760e00670ff0e30ff0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  130 /G82 MSTT31c260 AddChar
/G83 [29.0 0.0 3.0 0.0 27.0 24.0]
/G83 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078187e1830ff0c70838e600186e00187c00303c03c03c03e03c00703c0
0183c00183e0018760018670830e30ff0c187c180e00700781e003ffc000ff00>} imagemask 
  }
  131 /G83 MSTT31c260 AddChar
/G84 [29.0 0.0 3.0 0.0 27.0 24.0]
/G84 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018300c0c701c0e603c06e03c07c06c03c0cc03c0cc03c18c03c3
ff03c3ff03e00c07600c06700c0e300c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  132 /G84 MSTT31c260 AddChar
/G85 [29.0 0.0 3.0 0.0 27.0 24.0]
/G85 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078180018307f8c70600e606006e06007c07803c07e03c00603c00303c0
0303c00303e00307600706707e0e307c0c1800180e00700781e003ffc000ff00>} imagemask 
  }
  133 /G85 MSTT31c260 AddChar
/G86 [29.0 0.0 3.0 0.0 27.0 24.0]
/G86 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078181e18307f0c70e10e60c006e1c007c18003c19e03c1bf03c1e383c1
c183c18183e1818760c18670e30e307f0c183c180e00700781e003ffc000ff00>} imagemask 
  }
  134 /G86 MSTT31c260 AddChar
/G87 [29.0 0.0 3.0 0.0 27.0 24.0]
/G87 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e007818001830ff8c70ff8e600186e00307c00203c00603c00403c00c03c0
1803c01803e0300760300670300e30600c1860180e00700781e003ffc000ff00>} imagemask 
  }
  135 /G87 MSTT31c260 AddChar
/G88 [29.0 0.0 3.0 0.0 27.0 24.0]
/G88 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c18307e0c70e70e60c306e0c307c0e203c07603c03c03c0ee03c0
c703c18383e1818761818671c38e30ff0c187c180e00700781e003ffc000ff00>} imagemask 
  }
  136 /G88 MSTT31c260 AddChar
/G89 [29.0 0.0 3.0 0.0 27.0 24.0]
/G89 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e0078183c1830fe0c70c30e618306e18187c18183c18383c0c783c0fd83c0
7983c00183e0030760030670860e30fe0c1878180e00700781e003ffc000ff00>} imagemask 
  }
  137 /G89 MSTT31c260 AddChar
/G8a [29.0 0.0 3.0 0.0 27.0 24.0]
/G8a {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc00781e00e007818c71833cf8c70d8ce60d8c6e0f067c0f063c0f063c0f063c0f063c0
f063c0f063e0f06760d8c670d8ce30cf8c1807180e00700781e003ffc000ff00>} imagemask 
  }
  138 /G8a MSTT31c260 AddChar
/G8b [29.0 0.0 3.0 0.0 27.0 24.0]
/G8b {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fc3fc7f00fe7e3c7efe3c7ffc7e3ffc7e3ffc7e3ffc7e3ffc
7e3ffc7e3ffe3c7f7e3c7e7f00fe3fc3fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  139 /G8b MSTT31c260 AddChar
/G8c [29.0 0.0 3.0 0.0 27.0 24.0]
/G8c {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fe3fc7f83fe7f83feffe3ffffe3ffffe3ffffe3ffffe3ffff
e3ffffe3ffffe3ff7fe3fe7fe3fe3fe3fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  140 /G8c MSTT31c260 AddChar
/G8d [29.0 0.0 3.0 0.0 27.0 24.0]
/G8d {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f01fc7e007e7e7c3efffe3ffffe3ffffc7ffff87fffe0ffff
c3ffff8fffff3fff7e003e7e003e3e003c1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  141 /G8d MSTT31c260 AddChar
/G8e [29.0 0.0 3.0 0.0 27.0 24.0]
/G8e {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f80fc7f003e7f7c3efffe3ffffc7fffc0ffffc0fffffc7fff
fe3ffffe3ffffe3f7f7c3e7f007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  142 /G8e MSTT31c260 AddChar
/G8f [29.0 0.0 3.0 0.0 27.0 24.0]
/G8f {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81fe1f83fe1fc7fc1fe7f81feff11ffff31fffe71fffc71fff8f1fff8
007ff8007ff8007f7ff1fe7ff1fe3ff1fc1ff1f80ffff007ffe003ffc000ff00>} imagemask 
  }
  143 /G8f MSTT31c260 AddChar
/G90 [29.0 0.0 3.0 0.0 27.0 24.0]
/G90 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f007c7f007e7f3ffeff3fffff3fffff03ffff01fffff0ffff
fc7ffffc7ffffc7f7f787e7f00fe3f83fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  144 /G90 MSTT31c260 AddChar
/G91 [29.0 0.0 3.0 0.0 27.0 24.0]
/G91 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83fc0fc7f007e7e1f7efe3ffffc7ffffc61fffc007ffc3c3ffc
7e3ffc7e3ffe7e3f7e3c7e7f007e3fc1fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  145 /G91 MSTT31c260 AddChar
/G92 [29.0 0.0 3.0 0.0 27.0 24.0]
/G92 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83e003c7e003e7e003efffe3ffffc7ffff8fffff1fffff3ffff
e7ffffc7ffff8fff7f8ffe7f1ffe3f1ffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  146 /G92 MSTT31c260 AddChar
/G93 [29.0 0.0 3.0 0.0 27.0 24.0]
/G93 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f81fc7f00fe7e3c7efe3c7ffe1cffff00ffff81ffff00fffe
387ffc7e3ffc7e3f7c3c3e7e007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  147 /G93 MSTT31c260 AddChar
/G94 [29.0 0.0 3.0 0.0 27.0 24.0]
/G94 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81fc1f83f00fc7f1c7e7e3e7efe3e3ffe3e3ffe3e3fff1c3fff003fff
863ffffe3ffffc7f7ffc7e7ef8fe3e01fc1e03f80ffff007ffe003ffc000ff00>} imagemask 
  }
  148 /G94 MSTT31c260 AddChar
/G95 [29.0 0.0 3.0 0.0 27.0 24.0]
/G95 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff838f83c60f01e60e38ef8e38ff8c7c7f8c7c7f8c7c7f8c7c7f8
c7c7f8c7c7f8e38f78e38e78f01e3ff83c1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  149 /G95 MSTT31c260 AddChar
/G96 [33.0 0.0 1.0 0.0 31.0 18.0]
/G96 {
    30 18 true [1 0 0 -1 -1.0 18.0] {<038000fc0e00073838000c7030079070700fd0e0e01fe0e0e018e1e0e0106380e0106fc0e0007870
f000e0307000c038780380383e0f20381ffc207807e030f000001fe0000007c0>} imagemask 
  }
  150 /G96 MSTT31c260 AddChar
/G97 [33.0 0.0 2.0 0.0 32.0 18.0]
/G97 {
    30 18 true [1 0 0 -1 -2.0 18.0] {<fc000700738001c038c00070382780301c2fc0381c1fe01c1e1c601c0718201c0fd8201c3878001c
301c003c700c0038700700787013c1f07810ffe03c301f801fe000000f800000>} imagemask 
  }
  151 /G97 MSTT31c260 AddChar
/G98 [33.0 0.0 1.0 0.0 31.0 18.0]
/G98 {
    30 18 true [1 0 0 -1 -1.0 18.0] {<0f8000001fe000003c303f807810ffe07003c1f070070078700c0038301c003c3878001c0fd8201c
0718201c1e1c601c1c1fe01c1c2fc0383823803038c00070738001c0fc000700>} imagemask 
  }
  152 /G98 MSTT31c260 AddChar
/G99 [33.0 0.0 2.0 0.0 32.0 18.0]
/G99 {
    30 18 true [1 0 0 -1 -2.0 18.0] {<000007c000001fe007f030f01ffc20783e070038780380387000c038f000e030e0007870e0106fc0
e0106380e018e1e0e01fe0e0700fd0e03007107038000c700e000738038000fc>} imagemask 
  }
  153 /G99 MSTT31c260 AddChar
/G9a [33.0 0.0 1.0 0.0 32.0 18.0]
/G9a {
    31 18 true [1 0 0 -1 -1.0 18.0] {<01e0000003f8000003fc0000038e00000183000003fd80000fffc0f81f81e3fc3f0037fe7e381ffe
fc3c3f0ef87c7ffcf870fef8f861fc00f863f800783ff0001c1fe000000f8000>} imagemask 
  }
  154 /G9a MSTT31c260 AddChar
/G9b [33.0 0.0 1.0 0.0 32.0 18.0]
/G9b {
    31 18 true [1 0 0 -1 -1.0 18.0] {<00000f0000003f8000007f800000e3800001830000037f803e07ffe07f8f03f0ffd801f8fff038fc
e1f8787e7ffc7c3e3efe1c3e007f0c3e003f8c3e001ff83c000ff0700003e000>} imagemask 
  }
  155 /G9b MSTT31c260 AddChar
/G9c [33.0 0.0 1.0 0.0 32.0 18.0]
/G9c {
    31 18 true [1 0 0 -1 -1.0 18.0] {<0003e000000ff070001ff83c003f8c3e007f0c3e3efe1c3e7ffc7c3ee1f8787ee7f038fcfff801f8
7f8f03f03e07ffe000037f80000183000000e38000007f8000003f8000000f00>} imagemask 
  }
  156 /G9c MSTT31c260 AddChar
/G9d [33.0 0.0 1.0 0.0 32.0 18.0]
/G9d {
    31 18 true [1 0 0 -1 -1.0 18.0] {<000f80001c1fe000783ff000f863f800f861fc00f870fef8f87c7ffcfc3c3f0e7e381fce3f003ffe
1f81e3fc0fffc0f803fd800001830000038e000003fc000003f8000001e00000>} imagemask 
  }
  157 /G9d MSTT31c260 AddChar
/G9e [10.0 0.0 3.0 10.0 7.0 15.0]
/G9e {
    4 5 true [1 0 0 -1 -3.0 15.0] {<60f0f0f060>} imagemask 
  }
  158 /G9e MSTT31c260 AddChar
/G9f [15.0 0.0 3.0 7.0 13.0 17.0]
/G9f {
    10 10 true [1 0 0 -1 -3.0 17.0] {<1e007f807f80ffc0ffc0ffc0ffc07f807f801e00>} imagemask 
  }
  159 /G9f MSTT31c260 AddChar
/Ga0 [10.0 0.0 3.0 10.0 7.0 15.0]
/Ga0 {
    4 5 true [1 0 0 -1 -3.0 15.0] {<f0f0f0f0f0>} imagemask 
  }
  160 /Ga0 MSTT31c260 AddChar
/Ga1 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga1 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c003c78001e70000ef0000fe00007e00007e00007e00007e0
0007e00007f0000f70000e78001e3c003c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  161 /Ga1 MSTT31c260 AddChar
/Ga2 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga2 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83f81fc7e007e7c003ef8001ff8001ff0000ff0000ff0000ff0
000ff8001ff8001f7c003e7e007e3f81fc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  162 /Ga2 MSTT31c260 AddChar
/Ga3 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga3 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00ffff81ffff83ffffc7ffffe7fc3feff00ffff00fffe007ffe007ffe007ffe
007fff00ffff00ff7fc3fe7ffffe3ffffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  163 /Ga3 MSTT31c260 AddChar
/Ga4 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga4 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c003c78001e70000ef03c0fe07e07e0ff07e0ff07e0ff07e0
ff07e07e07f03c0f70000e78001e3c003c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  164 /Ga4 MSTT31c260 AddChar
/Ga5 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga5 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003ffc007ffe00f81f81e00783c7e3c78ff1e71ff8ef3c3cfe781e7e718e7e73ce7e73ce7e7
18e7e781e7f3c3cf71ff8e78ff1e3c7e3c1e00780f81f007ffe003ffc000ff00>} imagemask 
  }
  165 /Ga5 MSTT31c260 AddChar
/Ga6 [31.0 0.0 3.0 0.0 29.0 24.0]
/Ga6 {
    26 24 true [1 0 0 -1 -3.0 24.0] {<000fc000007ff00001fffc000781fe000e007f0018001f0030000f8060000780600007c0e00007c0
c00003c0c00003c0c00003c0c00003c0c00003c0e00007806000078070000f0030000e0038001c00
1e0078000f81e00003ff800000fc0000>} imagemask 
  }
  166 /Ga6 MSTT31c260 AddChar
/Ga7 [15.0 0.0 3.0 7.0 13.0 17.0]
/Ga7 {
    10 10 true [1 0 0 -1 -3.0 17.0] {<ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0ffc0>} imagemask 
  }
  167 /Ga7 MSTT31c260 AddChar
/Ga8 [29.0 0.0 3.0 0.0 27.0 24.0]
/Ga8 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007e00007e00007e00007ffffffffffffffffff>} imagemask 
  }
  168 /Ga8 MSTT31c260 AddChar
/Ga9 [29.0 0.0 4.0 6.0 25.0 24.0]
/Ga9 {
    21 18 true [1 0 0 -1 -4.0 24.0] {<00200000200000200000200000700000700000700000700000f80000f80000f80001fc0003fe0007
ff000fff801f8fc03800e0400010>} imagemask 
  }
  169 /Ga9 MSTT31c260 AddChar
/Gaa [29.0 0.0 3.0 0.0 27.0 24.0]
/Gaa {
    24 24 true [1 0 0 -1 -3.0 24.0] {<000000001800001800001800003c00003c00003c00007e00007e0001ff800ffff07ffffe7ffffe0f
fff001ff80007e00007e00003c00003c00003c00001800001800001800000000>} imagemask 
  }
  170 /Gaa MSTT31c260 AddChar
/Gab [29.0 0.0 3.0 2.0 26.0 24.0]
/Gab {
    23 22 true [1 0 0 -1 -3.0 24.0] {<001000001000001000003800003800003800007c00007c007ffffc3ffff81ffff00fffe003ff8001
ff0001ff0003ff8003ff8003ef800383800701c0040040080040>} imagemask 
  }
  171 /Gab MSTT31c260 AddChar
/Gac [29.0 0.0 4.0 0.0 25.0 24.0]
/Gac {
    21 24 true [1 0 0 -1 -4.0 24.0] {<002000002000002000007000007000007000c0f8187efbf03fffe01fffc00fff8007ff0007ff000f
ff801fffc03fffe07efbf0c0f818007000007000007000002000002000002000>} imagemask 
  }
  172 /Gac MSTT31c260 AddChar
/Gad [29.0 0.0 3.0 0.0 27.0 24.0]
/Gad {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000018000018000c3c300f3cf007ffe007ffe003ffc003ffc00ffff07ffffe7ffffe0f
fff003ffc003ffc007ffe007ffe00f3cf00c3c30001800001800001800000000>} imagemask 
  }
  173 /Gad MSTT31c260 AddChar
/Gae [29.0 0.0 3.0 0.0 27.0 24.0]
/Gae {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000318c003bdc003ffc003ffc03ffffc3ffffc1ffff80ffff01ffff87ffffe7ffffe1f
fff80ffff01ffff83ffffc3ffffc03ffc003ffc003bdc00318c0001800000000>} imagemask 
  }
  174 /Gae MSTT31c260 AddChar
/Gaf [29.0 0.0 3.0 0.0 27.0 24.0]
/Gaf {
    24 24 true [1 0 0 -1 -3.0 24.0] {<0000000018000018000028000c2c300f2cf007cf6005cce004e9c0026bc00f2f307ff80e601ffe1c
f4f003d6400397400733a00673e00fb4f00c3430001800001800001800000000>} imagemask 
  }
  175 /Gaf MSTT31c260 AddChar
/Gb0 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb0 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0010000010000010000010000010000fffe0081020081020081020081020081020ffc7fe08102008
10200810200810200810200fffe0001000001000001000001000001000>} imagemask 
  }
  176 /Gb0 MSTT31c260 AddChar
/Gb1 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb1 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<001000001000001000001000001000007c00019300031180021080041040041040ffeffe04104004
1040021080031180019300007c00001000001000001000001000001000>} imagemask 
  }
  177 /Gb1 MSTT31c260 AddChar
/Gb2 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb2 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800001800001800003c00003c00007e0000660000c30001c3800781e01e0078f8003ff8001f1e
00780700e001818000c300006600006e00003c00003c00001800001800001800>} imagemask 
  }
  178 /Gb2 MSTT31c260 AddChar
/Gb3 [29.0 0.0 6.0 3.0 24.0 21.0]
/Gb3 {
    18 18 true [1 0 0 -1 -6.0 21.0] {<400080e001c07c0f803fff0033f30030030018060018060018060018060018060018060030030033
f3003fff007c0f80e001c0400080>} imagemask 
  }
  179 /Gb3 MSTT31c260 AddChar
/Gb4 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb4 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000e70001c3800381c00700e00e00701c7e3838ff1c70860ee00c07e0180770
300e38001c1c00380e30700730e00381c001c38000e700007e00003c00001800>} imagemask 
  }
  180 /Gb4 MSTT31c260 AddChar
/Gb5 [29.0 0.0 3.0 0.0 27.0 24.0]
/Gb5 {
    24 24 true [1 0 0 -1 -3.0 24.0] {<00ff0003e7c007e7e01fe7f81fc3f83fc3fc7fc3fe7f81fe800001e00007f0000ff8001ffe007fff
00fffe007f7e007e7e007e7c183e3c7e3c1cff3809ff9007ffe003ffc0007e00>} imagemask 
  }
  181 /Gb5 MSTT31c260 AddChar
/Gb6 [29.0 0.0 2.0 2.0 27.0 24.0]
/Gb6 {
    25 22 true [1 0 0 -1 -2.0 24.0] {<001c0000001c0000003e0000002e0000002e0000004f000000470000004700007f87ff0020001e00
10003c000c0078000200e0000101c0000201c0000201e0000230e000024ce0000482f00007017000
0400f00008003800>} imagemask 
  }
  182 /Gb6 MSTT31c260 AddChar
/Gb7 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb7 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501214401e04801602801802801802a0100a80100280
30028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  183 /Gb7 MSTT31c260 AddChar
/Gb8 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb8 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801382801302801c02a0180a80300280
10028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  184 /Gb8 MSTT31c260 AddChar
/Gb9 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gb9 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b1130301018201008501014401004801002801002801102a03fca80100280
00028000025000145000142000083000181b01300c106003018000fe00>} imagemask 
  }
  185 /Gb9 MSTT31c260 AddChar
/Gba [29.0 0.0 3.0 0.0 26.0 23.0]
/Gba {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002803002a0300a801c0280
17028003824000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  186 /Gba MSTT31c260 AddChar
/Gbb [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbb {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002803002a0100a80180280
1802800c024006045006142000083000181b01b00c106003018000fe00>} imagemask 
  }
  187 /Gbb MSTT31c260 AddChar
/Gbc [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbc {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801002a0100a80100280
10028010024010045010142010083000181b01b00c106003018000fe00>} imagemask 
  }
  188 /Gbc MSTT31c260 AddChar
/Gbd [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbd {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801802a0100a80300280
300280600240c00450c0142000083000181b01b00c106003018000fe00>} imagemask 
  }
  189 /Gbd MSTT31c260 AddChar
/Gbe [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbe {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004801002801002801802a0180a80700281
d0028380024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  190 /Gbe MSTT31c260 AddChar
/Gbf [29.0 0.0 3.0 0.0 26.0 23.0]
/Gbf {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601911b0301018201008501014401004801002801002811002a7f80a80100280
00028000025000145000142000083000181901b00c106003018000fe00>} imagemask 
  }
  191 /Gbf MSTT31c260 AddChar
/Gc0 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc0 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b0301018201008501014401004839002819002807002a0300a80180280
10028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  192 /Gc0 MSTT31c260 AddChar
/Gc1 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc1 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601b11b030101820100850901440f00480d002803002803002a0100a80100280
18028000024000045000142000083000181b01b00c106003018000fe00>} imagemask 
  }
  193 /Gc1 MSTT31c260 AddChar
/Gc2 [29.0 0.0 3.0 0.0 26.0 23.0]
/Gc2 {
    23 23 true [1 0 0 -1 -3.0 23.0] {<00fe000301800c10601a18b0301018201008501014401004801002801002801002a0100a80100280
10028000024000045000142000083000181a00b00c106003018000fe00>} imagemask 
  }
  194 /Gc2 MSTT31c260 AddChar
/Gc3 [29.0 0.0 3.0 -3.0 27.0 26.0]
/Gc3 {
    24 29 true [1 0 0 -1 -3.0 26.0] {<0002010003030003870003cf00037b00033300030300030300030300230300630300e30301e30703
630e067ffe0c7ffc1800383000706000e06001c03003801807000c7e00067c0003600001e00000e0
00006000002000>} imagemask 
  }
  195 /Gc3 MSTT31c260 AddChar
/Gc4 [29.0 0.0 3.0 -3.0 27.0 26.0]
/Gc4 {
    24 29 true [1 0 0 -1 -3.0 26.0] {<804000c0c000e1c000f3c000dec000ccc000c0c000c0c000c0c000c0c400c0c600c0c700e0c78070
c6c07ffe603ffe301c00180e000c07000603800601c00c00e018007e30003e600006c00007800007
00000600000400>} imagemask 
  }
  196 /Gc4 MSTT31c260 AddChar
/Gc5 [29.0 0.0 2.0 -3.0 26.0 26.0]
/Gc5 {
    24 29 true [1 0 0 -1 -2.0 26.0] {<00200000600000e00001e000036000067c000c7e001807003003806001c06000e03000701800380c
7ffc067ffe03630e01e30700e30300630300230300030300030300030300033300037b0003cf0003
87000303000201>} imagemask 
  }
  197 /Gc5 MSTT31c260 AddChar
/Gc6 [29.0 0.0 2.0 -3.0 26.0 26.0]
/Gc6 {
    24 29 true [1 0 0 -1 -2.0 26.0] {<0004000006000007000007800006c0003e60007e3000e01801c00c0380060700060e000c1c00183f
fe307ffe6070c6c0e0c780c0c700c0c600c0c400c0c000c0c000c0c000ccc000dec000f3c000e1c0
00c0c000804000>} imagemask 
  }
  198 /Gc6 MSTT31c260 AddChar
/Gc7 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc7 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<000000000060000000f0000001980000030c0000060600000c030000180180003000c0007e07e000
fe07f0000606000006060000070600000387fff801c7fff000e60060007600c0003e0180001e0180
000f00c0000780600003fff00000fff8>} imagemask 
  }
  199 /Gc7 MSTT31c260 AddChar
/Gc8 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc8 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<0000000000003000000078000000cc00000186000003030000060180000c00c000180060003f03f0
007f03f8000303000003030000030700ffff0e007fff1c0030033800180370000c03e0000c03c000
18078000300f00007ffe0000fff80000>} imagemask 
  }
  200 /Gc8 MSTT31c260 AddChar
/Gc9 [35.0 0.0 3.0 0.0 32.0 24.0]
/Gc9 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<0000fff80003fff000078060000f00c0001e0180003e0180007600c000e6006001c7fff00387fff8
070600000606000006060000fe07f0007e07e0003000c000180180000c03000006060000030c0000
0198000000f000000060000000000000>} imagemask 
  }
  201 /Gc9 MSTT31c260 AddChar
/Gca [35.0 0.0 3.0 0.0 32.0 24.0]
/Gca {
    29 24 true [1 0 0 -1 -3.0 24.0] {<fff800007ffe0000300f0000180780000c03c0000c03e00018037000300338007fff1c00ffff0e00
000307000003030000030300007f03f8003f03f000180060000c00c0000601800003030000018600
0000cc00000078000000300000000000>} imagemask 
  }
  202 /Gca MSTT31c260 AddChar
/Gcb [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcb {
    31 31 true [1 0 0 -1 -1.0 25.0] {<e800000eee00007eef8001fe77c007f073e00f8e71f01f1c38f03e3c3c783c781c3878f80e1c71f0
0f9ce3e007dc1fc001eeff0000eefc00002ee00000000000000ee800007eee0001feef0007f07fc0
0f8e73e01f1c71f03e3c38f03c383c7878781e3871f00f3cf3e00f9c1fc007dcff0001eefc0000ee
e000002e>} imagemask 
  }
  203 /Gcb MSTT31c260 AddChar
/Gcc [33.0 0.0 0.0 -7.0 34.0 27.0]
/Gcc {
    34 34 true [1 0 0 -1 0.0 27.0] {<ffffffffc08bfffffc4088ffffe040883fff8040c41ffe03c0c60ffc1c40c707f838c0e3c7f070c0
e1c3f0e1c0f0e1e1c1c0f071c383c0f831c707c0fc10f80fc0fe08c03fc0ff88c0ffc0ffe8c7ffc0
ffffffffc0ffffffffc0fff0c4ffc0ff80c47fc0ff00c41fc0fc0fc20fc0f830e307c0f071e1c3c0
e1e1f1e3c0e3c3f0e1c0c383f871c0c707f838c08e0ffc18c0f01ffe08c0807fff044081ffffc440
8fffffe440ffffffffc0>} imagemask 
  }
  204 /Gcc MSTT31c260 AddChar
/Gcd [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcd {
    31 31 true [1 0 0 -1 -1.0 25.0] {<00f8003003fe00f80fff81fc1fffc3fe1f83eff83e00ffc03c007f007800fc007801f0007007c000
700f8000701e1800703c3e0070781f0070f00f0071e007803b8003803f0003803e0003801e200780
1c780f003c3fff007e1ffe007e03f8007e000000fe000000fe000000fe000000fc000000fc000000
78000000>} imagemask 
  }
  205 /Gcd MSTT31c260 AddChar
/Gce [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gce {
    31 31 true [1 0 0 -1 -1.0 25.0] {<7c000000ff81ff00ffcfffc0fffffff0fffe03f87ffc00fc1f9e007c0007003c0003803e0021c01e
0071e01e00e0f01e00e0781e00c03c1c01c01c3c01c00e3801c00f7801c007f001c023e001c073c0
01e0f1e000f1e1e000ffe0f0007fc0f8001f007c0000007c0000003e0000003e0000003c00000018
00000010>} imagemask 
  }
  206 /Gce MSTT31c260 AddChar
/Gcf [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gcf {
    31 31 true [1 0 0 -1 -1.0 25.0] {<100000003000000078000000f8000000f80000007c0000007c01f0003e07fc001e0ffe000f0f1e00
0f1e0f00079c07000f8807001fc007003de0070038e007007870070070780600f03c0e00f01e0e00
f00f1c00f0070800f80380007801c0007c00f3f03e007ffc3f80fffe1ffffffe07ffe7fe01ff03fe
0000007c>} imagemask 
  }
  207 /Gcf MSTT31c260 AddChar
/Gd0 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd0 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<0000003c0000007e0000007e000000fe000000fe000000fe000000fc003f80fc00fff0fc01fff878
01e03c7003c008f0038000f8038001f8038003b803c00f1c01e01e1c01f03c1c00f8781c0030f01c
0003e01c0007c01c001f003c007e003c01fc007807fe00f83fef83f0ff87fff07f03ffe03e00ffc0
18003e00>} imagemask 
  }
  208 /Gd0 MSTT31c260 AddChar
/Gd1 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd1 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<78000000fc000000fc000000fe000000fe000000fe0000007e0000007e03f8007e1ffe003c3fff00
1c780f001e2007803e0003803f0003803b80038071e0078070f00f0070781f00703c3e00701e1800
700f80007007c0007801f0007800fc003c007f003e00ffc01f83eff81fffc3fe0fff81fc03fe00f8
00f80030>} imagemask 
  }
  209 /Gd1 MSTT31c260 AddChar
/Gd2 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd2 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<00000010000000180000003c0000003e0000003e0000007c001f007c007fc0f800ffe0f000f1e1e0
01e0f1e001c073c001c023e001c007f001c00f7801c00e3801c01c3c00c03c1c00e0781e00e0f01e
0071e01e0021c01e0003803e0007003c1f9e007c7ffc00fcfffe03f8fffffff0ffcfffc0ff81ff00
7c000000>} imagemask 
  }
  210 /Gd2 MSTT31c260 AddChar
/Gd3 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd3 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<0000007c01ff03fe07ffe7fe1ffffffe3f80fffe3e007ffc7c00f3f07801c000f8038000f0070800
f00f1c00f01e0e00f03c0e00707806007870070038e007003de007001fc007000f880700079c0700
0f1e0f000f0f1e001e0ffe003e07fc007c01f0007c000000f8000000f80000007800000030000000
10000000>} imagemask 
  }
  211 /Gd3 MSTT31c260 AddChar
/Gd4 [33.0 0.0 1.0 -6.0 32.0 25.0]
/Gd4 {
    31 31 true [1 0 0 -1 -1.0 25.0] {<18003e003e00ffc07f03ffe0ff87fff03fef83f007fe00f801fc0078007e003c001f003c0007c01c
0003e01c0030f01c00f8781c01f03c1c01e01e1c03c00f1c038003b8038001f8038000f803c008f0
01e03c7001fff87800fff0fc003f80fc000000fc000000fe000000fe000000fe0000007e0000007e
0000003c>} imagemask 
  }
  212 /Gd4 MSTT31c260 AddChar
/Gd5 [41.0 0.0 3.0 0.0 39.0 24.0]
/Gd5 {
    36 24 true [1 0 0 -1 -3.0 24.0] {<001ffffff0003ffffff0007ffffff000e000007001c0000070038100107007038038700e01c07070
1c00e0e07038007bc07070003f8070e0001f0070e0001f007070003b8070380071c0701c00e0e070
0e01c070700703803870038100107001c000007000e0000070007ffffff0003ffffff0001ffffff0
>} imagemask 
  }
  213 /Gd5 MSTT31c260 AddChar
/Gd6 [41.0 0.0 2.0 0.0 38.0 24.0]
/Gd6 {
    36 24 true [1 0 0 -1 -2.0 24.0] {<ffffff0000ffffff8000ffffffc000e000006000e000003000e080081800e1c01c0c00e0e0380600
e070700300e03de00180e01fc000c0e00f800060e00f800060e01dc000c0e038e00180e070700300
e0e0380600e1c01c0c00e080081800e000003000e000006000ffffffc000ffffff8000ffffff0000
>} imagemask 
  }
  214 /Gd6 MSTT31c260 AddChar
/Gd7 [26.0 0.0 3.0 0.0 24.0 24.0]
/Gd7 {
    21 24 true [1 0 0 -1 -3.0 24.0] {<0000080000300000500001a000064000184000208000c0800301000c02001002006004007ffc001f
fe000ffe0003ff0000ff80003f80001fc00007c00001e0000070000030000008>} imagemask 
  }
  215 /Gd7 MSTT31c260 AddChar
/Gd8 [26.0 0.0 2.0 0.0 23.0 24.0]
/Gd8 {
    21 24 true [1 0 0 -1 -2.0 24.0] {<8000006000005000002c000013000010c00008200008180004060002018002004001003001fff003
ffc003ff8007fe000ff8000fe0001fc0001f00003c0000700000600000800000>} imagemask 
  }
  216 /Gd8 MSTT31c260 AddChar
/Gd9 [29.0 0.0 3.0 3.0 27.0 24.0]
/Gd9 {
    24 21 true [1 0 0 -1 -3.0 24.0] {<00000000180000180000340000720000720000f10000f10001f08001f08003f04007f02007f0200f
f8100fe6101f81081f00c83c003470000a600006800001>} imagemask 
  }
  217 /Gd9 MSTT31c260 AddChar
/Gda [29.0 0.0 3.0 0.0 27.0 21.0]
/Gda {
    24 21 true [1 0 0 -1 -3.0 21.0] {<80000160000650000e2c003c1300f81081f80867f0081ff0040fe0040fe0020fc0010f80010f8000
8f00008f00004e00004e00002c00001800001800000000>} imagemask 
  }
  218 /Gda MSTT31c260 AddChar
/Gdb [29.0 0.0 3.0 0.0 26.0 24.0]
/Gdb {
    23 24 true [1 0 0 -1 -3.0 24.0] {<00fe0003ffc007ffe01ffff01ffff83e7ffc7c7ffc787ffef00000e00000c00000800000800000c0
0000e00000f00000787ffe7c7ffc3e7ffc1ffff81ffff007ffe003ffc000fe00>} imagemask 
  }
  219 /Gdb MSTT31c260 AddChar
/Gdc [29.0 0.0 3.0 0.0 26.0 24.0]
/Gdc {
    23 24 true [1 0 0 -1 -3.0 24.0] {<00fe0007ff800fffc01ffff03ffff07ffcf87ffc7cfffc3c00001e00000e00000600000200000200
000600000e00001efffc3c7ffc7c7ffcf83ffff01ffff00fffc007ff8000fe00>} imagemask 
  }
  220 /Gdc MSTT31c260 AddChar
/Gdd [29.0 0.0 3.0 1.0 27.0 24.0]
/Gdd {
    24 23 true [1 0 0 -1 -3.0 24.0] {<00ff0003e7c007c3e01f81f81f00f83e007c7c003e78001ef8001fff00ffff00ffff00ffff00ffff
00ffff00ff7f00fe7f00fe7f00fe3f00fc1f00f80f00f00700e0010080>} imagemask 
  }
  221 /Gdd MSTT31c260 AddChar
/Gde [29.0 0.0 3.0 0.0 27.0 23.0]
/Gde {
    24 23 true [1 0 0 -1 -3.0 23.0] {<0100800700e00f00f01f00f83f00fc7f00fe7f00fe7f00feff00ffff00ffff00ffff00ffff00ffff
00fff8001f78001e7c003e3e007c1f00f81f81f807c3e003e7c000ff00>} imagemask 
  }
  222 /Gde MSTT31c260 AddChar
/Gdf [32.0 0.0 3.0 0.0 30.0 23.0]
/Gdf {
    27 23 true [1 0 0 -1 -3.0 23.0] {<000e0000003c00000078000000f0000001e0000003c00000078000000f0000001e0000003c000000
7fffffe0ffffffe07fffffe03c0000001e0000000f0000000780000003c0000001e0000000f00000
00780000003c0000000e0000>} imagemask 
  }
  223 /Gdf MSTT31c260 AddChar
/Ge0 [32.0 0.0 2.0 0.0 29.0 23.0]
/Ge0 {
    27 23 true [1 0 0 -1 -2.0 23.0] {<000e0000000780000003c0000001e0000000f0000000780000003c0000001e0000000f0000000780
ffffffc0ffffffe0ffffffc00000078000000f0000001e0000003c00000078000000f0000001e000
0003c00000078000000e0000>} imagemask 
  }
  224 /Ge0 MSTT31c260 AddChar
/Ge1 [29.0 0.0 3.0 -3.0 26.0 24.0]
/Ge1 {
    23 27 true [1 0 0 -1 -3.0 24.0] {<001000003800007c0000fe0001ff0003ff8007bbc00f39e01e38f03c387878383c70381ce0380ec0
38068038020038000038000038000038000038000038000038000038000038000038000038000038
00>} imagemask 
  }
  225 /Ge1 MSTT31c260 AddChar
/Ge2 [29.0 0.0 4.0 0.0 27.0 27.0]
/Ge2 {
    23 27 true [1 0 0 -1 -4.0 27.0] {<003800003800003800003800003800003800003800003800003800003800003800003800803802c0
3806e0380e70381c78383c3c38781e38f00f39e007bbc003ff8001ff0000fe00007c000038000010
00>} imagemask 
  }
  226 /Ge2 MSTT31c260 AddChar
/Ge3 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge3 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<ffff80ffffc0fffff0f80000fc0000fe0000ef0000e78000e3c000e1e000e0f000e07800e03c00e0
1e00e00f00e00780e003c06001e02000e0000040>} imagemask 
  }
  227 /Ge3 MSTT31c260 AddChar
/Ge4 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge4 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<1ffff03ffff0fffff00001f00003f00007f0000f70001e70003c7000787000f07001e07003c07007
80700f00701e00703c0070780060700040200000>} imagemask 
  }
  228 /Ge4 MSTT31c260 AddChar
/Ge5 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge5 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<0000002000606000f0e001e0e003c0e00780e00f00e01e00e03c00e07800e0f000e1e000e3c000e7
8000ef0000fe0000fc0000ffffe0ffffc0ffff80>} imagemask 
  }
  229 /Ge5 MSTT31c260 AddChar
/Ge6 [26.0 0.0 3.0 2.0 23.0 22.0]
/Ge6 {
    20 20 true [1 0 0 -1 -3.0 22.0] {<000000600040f000607800703c00701e00700f007007807003c07001e07000f070007870003c7000
1e70000f700007f00003f07ffff03ffff01ffff0>} imagemask 
  }
  230 /Ge6 MSTT31c260 AddChar
/Ge7 [35.0 0.0 3.0 0.0 32.0 24.0]
/Ge7 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<001fe000003fc000007f800000ff000001fe000003fc000007f800000ff000001fe000003ffffff8
7ffffff8fffffff8fffffff87ffffff83ffffff81fe000000ff0000007f8000003fc000001fe0000
00ff0000007f8000003fc000001fe000>} imagemask 
  }
  231 /Ge7 MSTT31c260 AddChar
/Ge8 [35.0 0.0 3.0 0.0 32.0 24.0]
/Ge8 {
    29 24 true [1 0 0 -1 -3.0 24.0] {<003fc000001fe000000ff0000007f8000003fc000001fe000000ff0000007f8000003fc0ffffffe0
fffffff0fffffff8fffffff8fffffff0ffffffe000003fc000007f800000ff000001fe000003fc00
0007f800000ff000001fe000003fc000>} imagemask 
  }
  232 /Ge8 MSTT31c260 AddChar
/Ge9 [29.0 0.0 3.0 -5.0 27.0 24.0]
/Ge9 {
    24 29 true [1 0 0 -1 -3.0 24.0] {<001800003c00007e0000ff0001ff8003ffc007ffe00ffff01ffff83ffffc7ffffeff7efffe7e7ffc
7e3ff87e1ff07e0fe07e07c07e03807e01007e00007e00007e00007e00007e00007e00007e00007e
00007e00007e00>} imagemask 
  }
  233 /Ge9 MSTT31c260 AddChar
/Gea [29.0 0.0 3.0 0.0 27.0 29.0]
/Gea {
    24 29 true [1 0 0 -1 -3.0 29.0] {<007e00007e00007e00007e00007e00007e00007e00007e00007e00007e00807e01c07e03e07e07f0
7e0ff87e1ffc7e3ffe7e7fff7eff7ffffe3ffffc1ffff80ffff007ffe003ffc001ff8000ff00007e
00003c00001800>} imagemask 
  }
  234 /Gea MSTT31c260 AddChar
/Geb [29.0 0.0 3.0 0.0 26.0 23.0]
/Geb {
    23 23 true [1 0 0 -1 -3.0 23.0] {<ffff80ffffc0ffffe0fffff0fffff8fffffcffc000ffe000fff000fff800fffc00fdfe00fcff00fc
7f80fc3fc0fc1fe0fc0ff07c07f83c03fc1c01fc0c00f8040070000020>} imagemask 
  }
  235 /Geb MSTT31c260 AddChar
/Gec [29.0 0.0 3.0 0.0 26.0 23.0]
/Gec {
    23 23 true [1 0 0 -1 -3.0 23.0] {<03fffe07fffe0ffffe1ffffe3ffffe7ffffe0007fe000ffe001ffe003ffe007ffe00ff7e01fe7e03
fc7e07f87e0ff07e1fe07e3fc07c7f80787f00703e00601c0040080000>} imagemask 
  }
  236 /Gec MSTT31c260 AddChar
/Ged [29.0 0.0 3.0 0.0 26.0 23.0]
/Ged {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0000000400300c00781c00fc3c01fe7c03fcfc07f8fc0ff0fc1fe0fc3fc0fc7f80fcff00fdfe00ff
fc00fff800fff000ffe000fffffcfffff8fffff0ffffe0ffffc0ffff80>} imagemask 
  }
  237 /Ged MSTT31c260 AddChar
/Gee [29.0 0.0 3.0 0.0 26.0 23.0]
/Gee {
    23 23 true [1 0 0 -1 -3.0 23.0] {<0000001800403c00607e0070ff00787f807c3fc07e1fe07e0ff07e07f87e03fc7e01fe7e00ff7e00
7ffe003ffe001ffe000ffe7ffffe3ffffe1ffffe0ffffe07fffe03fffe>} imagemask 
  }
  238 /Gee MSTT31c260 AddChar
/Gef [29.0 0.0 3.0 2.0 27.0 24.0]
/Gef {
    24 22 true [1 0 0 -1 -3.0 24.0] {<00200000600000e00001e0000360000660000c7fff187fff300003600003c00003c0000360000330
0003187fff0c7fff06600003600001e00000e000006000002000>} imagemask 
  }
  239 /Gef MSTT31c260 AddChar
/Gf0 [29.0 0.0 2.0 2.0 26.0 24.0]
/Gf0 {
    24 22 true [1 0 0 -1 -2.0 24.0] {<000000000400000600000700000680000640fffe20fffe10c00008c00004c00002c00002c00004c0
0008fffe10fffe20000640000680000700000600000400000000>} imagemask 
  }
  240 /Gf0 MSTT31c260 AddChar
/Gf1 [27.0 0.0 3.0 0.0 25.0 24.0]
/Gf1 {
    22 24 true [1 0 0 -1 -3.0 24.0] {<00300000780000cc000186000303000601800c00c01800603000307f03f8ff03fc03030003030003
030003030003030003030003030003030003030003030003030003ff0003ff00>} imagemask 
  }
  241 /Gf1 MSTT31c260 AddChar
/Gf2 [27.0 0.0 1.0 0.0 23.0 24.0]
/Gf2 {
    22 24 true [1 0 0 -1 -1.0 24.0] {<03ff0003ff00030300030300030300030300030300030300030300030300030300030300030300ff
03fc7f03f83000301800600c00c006018003030001860000cc00007800003000>} imagemask 
  }
  242 /Gf2 MSTT31c260 AddChar
/Gf3 [35.0 0.0 3.0 2.0 33.0 22.0]
/Gf3 {
    30 20 true [1 0 0 -1 -3.0 22.0] {<002010000060180000e01c0001e01e0003601b00067ff9800c7ff8c0180000603000003060000018
6000001830000030180000600c7ff8c0067ff98003601b0001e01e0000e01c000060180000201000
>} imagemask 
  }
  243 /Gf3 MSTT31c260 AddChar
/Gf4 [27.0 0.0 3.0 -6.0 23.0 24.0]
/Gf4 {
    20 30 true [1 0 0 -1 -3.0 24.0] {<00000000600000f000019800030c000606000c03001801803000c07e07e0fe07f006060006060006
0600060600060600060600060600060600fe07f07e07e03000c01801800c0300060600030c000198
0000f000006000000000>} imagemask 
  }
  244 /Gf4 MSTT31c260 AddChar
/Gf5 [26.0 0.0 3.0 4.0 23.0 24.0]
/Gf5 {
    20 20 true [1 0 0 -1 -3.0 24.0] {<fffc00fff800c03000c06000c06000c03000c01800c00c00c00600d80300fc0180e600c0c3006081
803000c0600060c0003180001b00000e00000400>} imagemask 
  }
  245 /Gf5 MSTT31c260 AddChar
/Gf6 [26.0 0.0 3.0 4.0 23.0 24.0]
/Gf6 {
    20 20 true [1 0 0 -1 -3.0 24.0] {<03fff001fff000c03000603000603000c0300180300300300600300c01b01803f0300670600c30c0
181060300030600018c0000d8000070000020000>} imagemask 
  }
  246 /Gf6 MSTT31c260 AddChar
/Gf7 [26.0 0.0 3.0 0.0 24.0 20.0]
/Gf7 {
    21 20 true [1 0 0 -1 -3.0 20.0] {<000400000f000019800030c000606000c030818030c30060e600c0fc0180d80300c00600c00c00c0
1800c03000c06000c06000c03000fff800fffc00>} imagemask 
  }
  247 /Gf7 MSTT31c260 AddChar
/Gf8 [26.0 0.0 2.0 0.0 23.0 20.0]
/Gf8 {
    21 20 true [1 0 0 -1 -2.0 20.0] {<0100000780000cc000186000303000601800600c083006181803380c01f80600d803001801801800
c01800601800301800301800601800fff801fff8>} imagemask 
  }
  248 /Gf8 MSTT31c260 AddChar
/Gf9 [16.0 0.0 2.0 7.0 15.0 17.0]
/Gf9 {
    13 10 true [1 0 0 -1 -2.0 17.0] {<fff8fff8c018c018c018c018c018c018fff8fff8>} imagemask 
  }
  249 /Gf9 MSTT31c260 AddChar
/Gfa [13.0 0.0 2.0 7.0 12.0 17.0]
/Gfa {
    10 10 true [1 0 0 -1 -2.0 17.0] {<ffc0ffc0c0c0c0c0c0c0c0c0c0c0c0c0ffc0ffc0>} imagemask 
  }
  250 /Gfa MSTT31c260 AddChar
/Gfb [21.0 0.0 2.0 5.0 18.0 20.0]
/Gfb {
    16 15 true [1 0 0 -1 -2.0 20.0] {<000008001c1c1c3e1e7e1efc0ff007e007c007f00ff83e7ffe3e7c1c3800>} imagemask 
  }
  251 /Gfb MSTT31c260 AddChar
/Gfc [26.0 0.0 2.0 4.0 24.0 25.0]
/Gfc {
    22 21 true [1 0 0 -1 -2.0 25.0] {<0000040000180000300000600001c0000380000700000e00001e00001c00003800307000f8f00078
e0003dc0001fc0001f80000f80000f00000e0000040000>} imagemask 
  }
  252 /Gfc MSTT31c260 AddChar
/Gfd [29.0 0.0 3.0 0.0 27.0 24.0]
/Gfd {
    24 24 true [1 0 0 -1 -3.0 24.0] {<ffffffffffffffffffe00007e00007e08007e1c1c7e1c3e7e1e7e7e1ef87e0ff07e07e07e07c07e0
7e07e0ff87e3e7e7e7e3e7e7c1c7e38007e00007e00007ffffffffffffffffff>} imagemask 
  }
  253 /Gfd MSTT31c260 AddChar
/Gfe [29.0 0.0 3.0 0.0 29.0 25.0]
/Gfe {
    26 25 true [1 0 0 -1 -3.0 25.0] {<000000c0ffffff80ffffff00ffffff00e0001f00e0003f00e0007700e000e700e001c700e0038700
e0078700e7070700ef8e0700e79e0700e3dc0700e1f80700e1f80700e0f00700e0e00700e0400700
e0000700e0000700ffffff00ffffff00ffffff00>} imagemask 
  }
  254 /Gfe MSTT31c260 AddChar
/Gff [34.0 0.0 1.0 0.0 32.0 25.0]
/Gff {
    31 25 true [1 0 0 -1 -1.0 25.0] {<00003fe00001fffca00ffffe0dbfc61e09be060e802b060e249f060e09bf060e802b060e241f060e
0dbf1fee8125fffe201fe61e0dbf060e8135060e200f060e0dbf060e01b7060e8007060e2dbf3ffe
09befffe8043fffe24bfe00e0dbf00020020000e>} imagemask 
  }
  255 /Gff MSTT31c260 AddChar
%%EndResource

32 0 0 33 33 0 0 1 29 /MSTT31c260 font
526 2698 25 (n) 26 SB
552 2698 33 ( ) 49 SB
525 2698 25 (n) 26 SB
551 2698 33 ( ) 49 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2689 1625 (rd-state: A bit-map that describes the instantaneous state of the Socket and PC Card, if inserted.) 1625 SB
600 2739 771 (The format of the bit-map is defined in Table) 771 SB
1371 2739 748 ( 7.  The value is an integer, encoded as with) 748 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
600 2786 198 (encode-int.) 198 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font MSTT31c1f8
%%+ font MSTT31c260
%%+ font Times-Bold
%%+ font Times-Roman
%%Page: 16 16
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2208 2997 42 (16) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
750 182 1049 (Table 5: Bit map definition for Window state) 1049 SB
/fm 256 def
5 5 391 249 B
1 F
n
/fm 256 def
5 5 391 249 B
1 F
n
/fm 256 def
244 5 397 249 B
1 F
n
/fm 256 def
5 5 642 249 B
1 F
n
/fm 256 def
1642 5 648 249 B
1 F
n
/fm 256 def
5 5 2291 249 B
1 F
n
/fm 256 def
5 5 2291 249 B
1 F
n
/fm 256 def
5 65 391 255 B
1 F
n
/fm 256 def
2 65 642 255 B
1 F
n
/fm 256 def
5 65 2291 255 B
1 F
n
178 178 178 fC
/fm 256 def
244 65 397 255 B
1 F
n
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
0 0 0 fC
gs 245 72 397 249 CB
493 264 52 (bit) 52 SB
gr
178 178 178 fC
/fm 256 def
1645 65 645 255 B
1 F
n
0 0 0 fC
gs 1646 72 645 249 CB
1356 264 227 (description) 227 SB
gr
/fm 256 def
5 5 391 321 B
1 F
n
/fm 256 def
244 5 397 321 B
1 F
n
/fm 256 def
5 5 642 321 B
1 F
n
/fm 256 def
1642 5 648 321 B
1 F
n
/fm 256 def
5 5 2291 321 B
1 F
n
/fm 256 def
5 168 391 327 B
1 F
n
/fm 256 def
2 168 642 327 B
1 F
n
/fm 256 def
5 168 2291 327 B
1 F
n
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 245 54 397 321 CB
448 328 142 (0 \(LSB\)) 142 SB
gr
gs 1646 54 645 321 CB
667 328 1432 (If set, Window maps registers on a PC Card into the host system\222s I/O space.) 1432 SB
gr
gs 1646 54 645 369 CB
667 376 1487 (If reset, Window maps Common or Attribute Memory on a PC Card into the host) 1487 SB
gr
gs 1646 79 645 417 CB
667 424 460 (system\222s memory space.) 460 SB
gr
/fm 256 def
5 2 391 496 B
1 F
n
/fm 256 def
244 2 397 496 B
1 F
n
/fm 256 def
2 2 642 496 B
1 F
n
/fm 256 def
1645 2 645 496 B
1 F
n
/fm 256 def
5 2 2291 496 B
1 F
n
/fm 256 def
5 168 391 499 B
1 F
n
/fm 256 def
2 168 642 499 B
1 F
n
/fm 256 def
5 168 2291 499 B
1 F
n
gs 245 51 397 496 CB
507 500 23 (1) 23 SB
gr
gs 1646 51 645 496 CB
667 500 37 (If ) 41 SB
708 500 79 (set, ) 83 SB
791 500 162 (Window ) 166 SB
957 500 42 (is ) 46 SB
1003 500 160 (enabled ) 164 SB
1167 500 81 (and ) 85 SB
1252 500 114 (maps ) 118 SB
1370 500 35 (a ) 39 SB
1409 500 70 (PC ) 74 SB
1483 500 102 (Card ) 106 SB
1589 500 80 (into ) 84 SB
1673 500 70 (the ) 74 SB
1747 500 90 (host ) 95 SB
1842 500 144 (system ) 149 SB
1991 500 165 (memory ) 170 SB
2161 500 49 (or ) 54 SB
2215 500 57 (I/O) 57 SB
gr
gs 1646 51 645 544 CB
667 548 122 (space.) 122 SB
gr
gs 1646 76 645 592 CB
667 596 524 (If reset, Window is disabled.) 524 SB
gr
/fm 256 def
5 2 391 668 B
1 F
n
/fm 256 def
244 2 397 668 B
1 F
n
/fm 256 def
2 2 642 668 B
1 F
n
/fm 256 def
1645 2 645 668 B
1 F
n
/fm 256 def
5 2 2291 668 B
1 F
n
/fm 256 def
5 95 391 671 B
1 F
n
/fm 256 def
5 5 391 767 B
1 F
n
/fm 256 def
5 5 391 767 B
1 F
n
/fm 256 def
244 5 397 767 B
1 F
n
/fm 256 def
2 95 642 671 B
1 F
n
/fm 256 def
5 5 642 767 B
1 F
n
/fm 256 def
1642 5 648 767 B
1 F
n
/fm 256 def
5 95 2291 671 B
1 F
n
/fm 256 def
5 5 2291 767 B
1 F
n
/fm 256 def
5 5 2291 767 B
1 F
n
gs 245 51 397 668 CB
507 672 23 (2) 23 SB
gr
gs 1646 51 645 668 CB
667 672 1064 (If set, Window is programmed for a 16-bit data bus width.) 1064 SB
gr
gs 1646 51 645 716 CB
667 720 1101 (If reset, Window is programmed for an 8-bit data bus width.) 1101 SB
gr
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
692 899 393 (Table 6: Bit-map) 393 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font33 ANSIFont font
1085 898 13 ( ) 13 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
1098 899 759 (definition for Window capability) 759 SB
/fm 256 def
5 5 391 966 B
1 F
n
/fm 256 def
5 5 391 966 B
1 F
n
/fm 256 def
244 5 397 966 B
1 F
n
/fm 256 def
5 5 642 966 B
1 F
n
/fm 256 def
1642 5 648 966 B
1 F
n
/fm 256 def
5 5 2291 966 B
1 F
n
/fm 256 def
5 5 2291 966 B
1 F
n
/fm 256 def
5 65 391 972 B
1 F
n
/fm 256 def
2 65 642 972 B
1 F
n
/fm 256 def
5 65 2291 972 B
1 F
n
178 178 178 fC
/fm 256 def
244 65 397 972 B
1 F
n
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
0 0 0 fC
gs 245 72 397 966 CB
493 981 52 (bit) 52 SB
gr
178 178 178 fC
/fm 256 def
1645 65 645 972 B
1 F
n
0 0 0 fC
gs 1646 72 645 966 CB
1356 981 227 (description) 227 SB
gr
/fm 256 def
5 5 391 1038 B
1 F
n
/fm 256 def
244 5 397 1038 B
1 F
n
/fm 256 def
5 5 642 1038 B
1 F
n
/fm 256 def
1642 5 648 1038 B
1 F
n
/fm 256 def
5 5 2291 1038 B
1 F
n
/fm 256 def
5 95 391 1044 B
1 F
n
/fm 256 def
2 95 642 1044 B
1 F
n
/fm 256 def
5 95 2291 1044 B
1 F
n
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 245 54 397 1038 CB
448 1045 142 (0 \(LSB\)) 142 SB
gr
gs 1646 54 645 1038 CB
667 1045 1594 (If set, Window may be used to map the Common Memory plane of a PC Card into the) 1594 SB
gr
gs 1646 54 645 1086 CB
667 1093 521 (host system memory space.) 521 SB
gr
/fm 256 def
5 2 391 1140 B
1 F
n
/fm 256 def
244 2 397 1140 B
1 F
n
/fm 256 def
2 2 642 1140 B
1 F
n
/fm 256 def
1645 2 645 1140 B
1 F
n
/fm 256 def
5 2 2291 1140 B
1 F
n
/fm 256 def
5 95 391 1143 B
1 F
n
/fm 256 def
2 95 642 1143 B
1 F
n
/fm 256 def
5 95 2291 1143 B
1 F
n
gs 245 51 397 1140 CB
507 1144 23 (1) 23 SB
gr
gs 1646 51 645 1140 CB
667 1144 37 (If ) 38 SB
705 1144 79 (set, ) 80 SB
785 1144 162 (Window ) 163 SB
948 1144 92 (may ) 93 SB
1041 1144 58 (be ) 59 SB
1100 1144 101 (used ) 102 SB
1202 1144 47 (to ) 48 SB
1250 1144 94 (map ) 95 SB
1345 1144 70 (the ) 71 SB
1416 1144 169 (Attribute ) 171 SB
1587 1144 164 (Memory ) 166 SB
1753 1144 114 (plane ) 116 SB
1869 1144 48 (of ) 50 SB
1919 1144 35 (a ) 37 SB
1956 1144 70 (PC ) 72 SB
2028 1144 102 (Card ) 104 SB
2132 1144 80 (into ) 82 SB
2214 1144 58 (the) 58 SB
gr
gs 1646 51 645 1188 CB
667 1192 521 (host system memory space.) 521 SB
gr
/fm 256 def
5 2 391 1239 B
1 F
n
/fm 256 def
244 2 397 1239 B
1 F
n
/fm 256 def
2 2 642 1239 B
1 F
n
/fm 256 def
1645 2 645 1239 B
1 F
n
/fm 256 def
5 2 2291 1239 B
1 F
n
/fm 256 def
5 95 391 1242 B
1 F
n
/fm 256 def
2 95 642 1242 B
1 F
n
/fm 256 def
5 95 2291 1242 B
1 F
n
gs 245 51 397 1239 CB
507 1243 23 (2) 23 SB
gr
gs 1646 51 645 1239 CB
667 1243 37 (If ) 40 SB
707 1243 79 (set, ) 82 SB
789 1243 162 (Window ) 165 SB
954 1243 92 (may ) 95 SB
1049 1243 58 (be ) 61 SB
1110 1243 101 (used ) 104 SB
1214 1243 47 (to ) 50 SB
1264 1243 94 (map ) 97 SB
1361 1243 69 (I/O ) 72 SB
1433 1243 104 (ports ) 107 SB
1540 1243 58 (on ) 61 SB
1601 1243 35 (a ) 38 SB
1639 1243 70 (PC ) 73 SB
1712 1243 102 (Card ) 105 SB
1817 1243 80 (into ) 83 SB
1900 1243 70 (the ) 73 SB
1973 1243 90 (host ) 94 SB
2067 1243 144 (system ) 148 SB
2215 1243 57 (I/O) 57 SB
gr
gs 1646 51 645 1287 CB
667 1291 122 (space.) 122 SB
gr
/fm 256 def
5 2 391 1338 B
1 F
n
/fm 256 def
244 2 397 1338 B
1 F
n
/fm 256 def
2 2 642 1338 B
1 F
n
/fm 256 def
1645 2 645 1338 B
1 F
n
/fm 256 def
5 2 2291 1338 B
1 F
n
/fm 256 def
5 97 391 1341 B
1 F
n
/fm 256 def
5 5 391 1439 B
1 F
n
/fm 256 def
5 5 391 1439 B
1 F
n
/fm 256 def
244 5 397 1439 B
1 F
n
/fm 256 def
2 97 642 1341 B
1 F
n
/fm 256 def
5 5 642 1439 B
1 F
n
/fm 256 def
1642 5 648 1439 B
1 F
n
/fm 256 def
5 97 2291 1341 B
1 F
n
/fm 256 def
5 5 2291 1439 B
1 F
n
/fm 256 def
5 5 2291 1439 B
1 F
n
gs 245 51 397 1338 CB
507 1342 23 (3) 23 SB
gr
gs 1646 53 645 1338 CB
667 1343 466 (If set, Windows uses the ) 466 SB
gr
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
gs 1646 53 645 1338 CB
1133 1342 130 (WAIT#) 130 SB
gr
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 1646 53 645 1338 CB
1263 1343 927 ( signal from a PC Card to generate additional wait) 927 SB
gr
gs 1646 51 645 1388 CB
667 1392 122 (states.) 122 SB
gr
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
541 1647 1467 (Table 7: Bit map definition of Control and indicator Capability) 1467 SB
/fm 256 def
5 5 391 1714 B
1 F
n
/fm 256 def
5 5 391 1714 B
1 F
n
/fm 256 def
244 5 397 1714 B
1 F
n
/fm 256 def
5 5 642 1714 B
1 F
n
/fm 256 def
1642 5 648 1714 B
1 F
n
/fm 256 def
5 5 2291 1714 B
1 F
n
/fm 256 def
5 5 2291 1714 B
1 F
n
/fm 256 def
5 65 391 1720 B
1 F
n
/fm 256 def
2 65 642 1720 B
1 F
n
/fm 256 def
5 65 2291 1720 B
1 F
n
178 178 178 fC
/fm 256 def
244 65 397 1720 B
1 F
n
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font18 ANSIFont font
0 0 0 fC
gs 245 72 397 1714 CB
493 1729 52 (bit) 52 SB
gr
178 178 178 fC
/fm 256 def
1645 65 645 1720 B
1 F
n
0 0 0 fC
gs 1646 72 645 1714 CB
1356 1729 227 (description) 227 SB
gr
/fm 256 def
5 5 391 1786 B
1 F
n
/fm 256 def
244 5 397 1786 B
1 F
n
/fm 256 def
5 5 642 1786 B
1 F
n
/fm 256 def
1642 5 648 1786 B
1 F
n
/fm 256 def
5 5 2291 1786 B
1 F
n
/fm 256 def
5 47 391 1792 B
1 F
n
/fm 256 def
2 47 642 1792 B
1 F
n
/fm 256 def
5 47 2291 1792 B
1 F
n
32 0 0 42 42 0 0 0 38 /Helvetica /font23 ANSIFont font
gs 245 54 397 1786 CB
448 1793 142 (0 \(LSB\)) 142 SB
gr
gs 1646 54 645 1786 CB
667 1793 658 (PC Card WP \(Write-protect\) signal.) 658 SB
gr
/fm 256 def
5 2 391 1840 B
1 F
n
/fm 256 def
244 2 397 1840 B
1 F
n
/fm 256 def
2 2 642 1840 B
1 F
n
/fm 256 def
1645 2 645 1840 B
1 F
n
/fm 256 def
5 2 2291 1840 B
1 F
n
/fm 256 def
5 95 391 1843 B
1 F
n
/fm 256 def
2 95 642 1843 B
1 F
n
/fm 256 def
5 95 2291 1843 B
1 F
n
gs 245 51 397 1840 CB
507 1844 23 (1) 23 SB
gr
gs 1646 51 645 1840 CB
667 1844 198 (Externally ) 199 SB
866 1844 199 (generated ) 200 SB
1066 1844 121 (signal ) 122 SB
1188 1844 190 (indicating ) 192 SB
1380 1844 70 (the ) 72 SB
1452 1844 102 (state ) 104 SB
1556 1844 48 (of ) 50 SB
1606 1844 35 (a ) 37 SB
1643 1844 225 (mechanical ) 227 SB
1870 1844 49 (or ) 51 SB
1921 1844 179 (electrical ) 181 SB
2102 1844 93 (card ) 95 SB
2197 1844 75 (lock) 75 SB
gr
gs 1646 51 645 1888 CB
667 1892 227 (mechanism.) 227 SB
gr
/fm 256 def
5 2 391 1939 B
1 F
n
/fm 256 def
244 2 397 1939 B
1 F
n
/fm 256 def
2 2 642 1939 B
1 F
n
/fm 256 def
1645 2 645 1939 B
1 F
n
/fm 256 def
5 2 2291 1939 B
1 F
n
/fm 256 def
5 95 391 1942 B
1 F
n
/fm 256 def
2 95 642 1942 B
1 F
n
/fm 256 def
5 95 2291 1942 B
1 F
n
gs 245 51 397 1939 CB
507 1943 23 (2) 23 SB
gr
gs 1646 51 645 1939 CB
667 1943 198 (Externally ) 202 SB
869 1943 199 (generated ) 203 SB
1072 1943 121 (signal ) 125 SB
1197 1943 190 (indicating ) 194 SB
1391 1943 35 (a ) 40 SB
1431 1943 150 (request ) 155 SB
1586 1943 47 (to ) 52 SB
1638 1943 101 (eject ) 106 SB
1744 1943 35 (a ) 40 SB
1784 1943 70 (PC ) 75 SB
1859 1943 102 (Card ) 107 SB
1966 1943 98 (from ) 103 SB
2069 1943 70 (the ) 75 SB
2144 1943 128 (Socket) 128 SB
gr
gs 1646 51 645 1987 CB
667 1991 299 (has been made.) 299 SB
gr
/fm 256 def
5 2 391 2038 B
1 F
n
/fm 256 def
244 2 397 2038 B
1 F
n
/fm 256 def
2 2 642 2038 B
1 F
n
/fm 256 def
1645 2 645 2038 B
1 F
n
/fm 256 def
5 2 2291 2038 B
1 F
n
/fm 256 def
5 95 391 2041 B
1 F
n
/fm 256 def
2 95 642 2041 B
1 F
n
/fm 256 def
5 95 2291 2041 B
1 F
n
gs 245 51 397 2038 CB
507 2042 23 (3) 23 SB
gr
gs 1646 51 645 2038 CB
667 2042 1539 (Externally generated signal indicating a request to insert a PC Card into the Socket) 1539 SB
gr
gs 1646 51 645 2086 CB
667 2090 299 (has been made.) 299 SB
gr
/fm 256 def
5 2 391 2137 B
1 F
n
/fm 256 def
244 2 397 2137 B
1 F
n
/fm 256 def
2 2 642 2137 B
1 F
n
/fm 256 def
1645 2 645 2137 B
1 F
n
/fm 256 def
5 2 2291 2137 B
1 F
n
/fm 256 def
5 95 391 2140 B
1 F
n
/fm 256 def
2 95 642 2140 B
1 F
n
/fm 256 def
5 95 2291 2140 B
1 F
n
gs 245 51 397 2137 CB
507 2141 23 (4) 23 SB
gr
gs 1646 51 645 2137 CB
667 2141 1441 (PC Card BVD1 signal.  When set, this signal indicates the battery is no longer) 1441 SB
gr
gs 1646 51 645 2185 CB
667 2189 225 (serviceable.) 225 SB
gr
/fm 256 def
5 2 391 2236 B
1 F
n
/fm 256 def
244 2 397 2236 B
1 F
n
/fm 256 def
2 2 642 2236 B
1 F
n
/fm 256 def
1645 2 645 2236 B
1 F
n
/fm 256 def
5 2 2291 2236 B
1 F
n
/fm 256 def
5 47 391 2239 B
1 F
n
/fm 256 def
2 47 642 2239 B
1 F
n
/fm 256 def
5 47 2291 2239 B
1 F
n
gs 245 51 397 2236 CB
507 2240 23 (5) 23 SB
gr
gs 1646 51 645 2236 CB
667 2240 1457 (PC Card BVD2 signal.  When set, this signal indicates that the battery is weak.) 1457 SB
gr
/fm 256 def
5 2 391 2287 B
1 F
n
/fm 256 def
244 2 397 2287 B
1 F
n
/fm 256 def
2 2 642 2287 B
1 F
n
/fm 256 def
1645 2 645 2287 B
1 F
n
/fm 256 def
5 2 2291 2287 B
1 F
n
/fm 256 def
5 53 391 2290 B
1 F
n
/fm 256 def
2 53 642 2290 B
1 F
n
/fm 256 def
5 53 2291 2290 B
1 F
n
gs 245 51 397 2287 CB
507 2291 23 (6) 23 SB
gr
gs 1646 51 645 2287 CB
667 2291 489 (PC Card RDY/BSY signal.) 489 SB
gr
/fm 256 def
5 2 391 2338 B
1 F
n
/fm 256 def
244 2 397 2338 B
1 F
n
/fm 256 def
2 2 642 2338 B
1 F
n
/fm 256 def
1645 2 645 2338 B
1 F
n
/fm 256 def
5 2 2291 2338 B
1 F
n
/fm 256 def
5 47 391 2341 B
1 F
n
/fm 256 def
5 5 391 2389 B
1 F
n
/fm 256 def
5 5 391 2389 B
1 F
n
/fm 256 def
244 5 397 2389 B
1 F
n
/fm 256 def
2 47 642 2341 B
1 F
n
/fm 256 def
5 5 642 2389 B
1 F
n
/fm 256 def
1642 5 648 2389 B
1 F
n
/fm 256 def
5 47 2291 2341 B
1 F
n
/fm 256 def
5 5 2291 2389 B
1 F
n
/fm 256 def
5 5 2291 2389 B
1 F
n
gs 245 51 397 2338 CB
507 2342 23 (7) 23 SB
gr
gs 1646 51 645 2338 CB
667 2342 512 (PC Card card detect signal.) 512 SB
gr
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 2466 175 (set-socket) 175 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
600 2469 25 (\( ) 26 SB
626 2469 220 (unit-number ) 221 SB
847 2469 167 (vcc-level ) 168 SB
1015 2469 300 (status-change-int ) 302 SB
1317 2469 356 (status-change-report ) 358 SB
1675 2469 143 (cntl-ind ) 145 SB
1820 2469 192 (int-routing ) 194 SB
2014 2469 236 (interface-type) 236 SB
300 2520 148 (-- rc | 0 \)) 148 SB
300 2633 1066 (To read the CIS initially, the parameters must be set as follow:) 1066 SB
525 2683 826 (1. status-change-int shall mask out all interrupts.) 826 SB
525 2733 655 (2. vcc and vpp levels are based on the ) 655 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1180 2730 95 (VS1#) 95 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1275 2733 83 ( and ) 83 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1358 2730 95 (VS2#) 95 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1453 2733 204 ( signal pins.) 204 SB
525 2784 1402 (3. status-change-report shall be reset and does not latch-in the status change event.) 1402 SB
525 2834 529 (4. int-routing shall be disabled.) 529 SB
525 2884 944 (5. interface-type shall be set for Memory-only interface) 944 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-Roman
%%Page: 17 17
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2208 2997 42 (17) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 183 1086 (Once the CIS is read, the card may be configured appropriately.) 1086 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 259 180 (get-socket) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 262 25 (\( ) 43 SB
733 262 220 (unit-number ) 238 SB
971 262 39 (-- ) 57 SB
1028 262 167 (vcc-level ) 185 SB
1213 262 300 (status-change-int ) 319 SB
1532 262 356 (status-change-report ) 375 SB
1907 262 143 (cntl-ind ) 162 SB
2069 262 181 (int-routing) 181 SB
300 313 334 (interface-type rc|0 \)) 334 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 373 202 (set-window) 202 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 376 818 (\( window-number window-state speed  -- rc | 0 \)) 818 SB
300 440 1082 (To read the CIS initially, the parameters must be set as follows:) 1082 SB
525 490 655 (1. Bit 0 in window-state must be reset.) 655 SB
525 540 1321 (2. The speed of the Window must be as appropriate for the card type installed) 1321 SB
525 590 641 (    \(300 ns. for 5 volt 16-bit PC Card\).) 641 SB
32 0 0 42 42 0 0 0 39 /Palatino-Roman /font31 ANSIFont font
525 639 44 (    ) 44 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
569 640 19 (\223) 19 SB
588 640 196 (set-window) 196 SB
784 640 19 (\224) 19 SB
803 640 850 ( does not establish the address mapping while the ) 850 SB
1653 640 19 (\223) 19 SB
1672 640 196 (set-window) 196 SB
1868 640 19 (\224) 19 SB
1887 640 308 ( defined in Socket) 308 SB
600 690 1554 (service is establishing address mapping. During boot, map-in and map-out are used to estab) 1554 SB
2154 690 61 (lish) 61 SB
600 740 359 (the address mapping.) 359 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 816 207 (get-window) 207 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 819 796 (\( window-number --rc | window-state speed 0 \)) 796 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 896 295 (inquire-window ) 295 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 899 1096 (\( window-number addr -- rc | window-capability unit-number 0 \)) 1096 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 976 213 (reset-socket) 213 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 979 379 (\( unit-number - rc | 0 \)) 379 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 1056 172 (get-status) 172 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 1059 1518 (\( unit-number -- rc | card-state status-change-report cntl-ind int-routing interface-type  0 \)) 1518 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 1136 150 (special-!) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 1139 380 (\( data unit-number -- \)) 380 SB
300 1203 951 (Performs a CardBus Special Cycle on the indicated bus.) 951 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
300 1277 42 (3.) 42 SB
342 1277 42 (5 ) 58 SB
400 1277 675 ( Definitions for a Child Node) 675 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 1363 38 (3.) 38 SB
338 1363 25 (5) 25 SB
363 1363 51 (.1 ) 68 SB
431 1363 747 (Open Firmware-defined Properties) 747 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 1461 1869 (The following properties, as defined in Open Firmware, have special meanings or interpretations for PC Card.) 1869 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 1537 21 (\223) 21 SB
321 1537 98 (name) 98 SB
419 1537 21 (\224) 21 SB
2100 1537 23 (S) 23 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 1604 161 (Standard ) 161 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
461 1603 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
645 1604 644 ( to specify the implemented interface.) 644 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1668 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 1669 843 (: construct a concatenated string encoded as with ) 843 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1484 1666 254 (encode-string ) 254 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1738 1669 191 (of the form) 191 SB
32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font18 ANSIFont font
300 1741 296 (pccardVVVV,DDDD) 296 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
596 1734 1518 ( where VVVV is the manufactures id  field and  DDDD is the  manufactures information ) 1518 SB
300 1784 388 (field as defined below:) 388 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
450 1834 33 (   ) 33 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
483 1834 1508 (- VVVV string is defined by the Field \221TPLMID_MANF\222 in Tuple \221CISTPL_MANFID\222.) 1508 SB
450 1884 1544 (   - DDDD string as defined by the Field \221TPLMID_CARD\222 in Tuple \221CISTPL_MANFID\222.) 1544 SB
300 1984 1604 (The VVVV and DDDD strings are ASCII hexadecimal, lower case, and without leading zeros.) 1604 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
600 2107 1196 (Note: If the PC Card is bootable, the Open Firmware Working Group ) 1196 SB
1796 2107 138 (strongly) 138 SB
/fm 256 def
137 1 1796 2150 B
1 F
n
600 2157 1312 (recommends that Tuple \221CISTPL_MANFID\222 be implemented.  If the PC Card) 1312 SB
600 2207 1403 (doesn\222t implement the Tuple \221CISTPL_MANFID\222, then Open Firmware will create) 1403 SB
600 2257 553 (and/or use the string \221unknown\222.) 553 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 2361 21 (\223) 21 SB
321 2361 59 (reg) 59 SB
380 2361 21 (\224) 21 SB
2100 2361 23 (S) 23 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2428 161 (Standard ) 161 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
461 2427 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
645 2428 644 (, defines device's addressable regions.) 644 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 2492 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 2493 431 (: an arbitrary number of \() 431 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1072 2492 244 (phys-addr size) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1316 2493 118 (\) pairs.) 118 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 2557 170 (phys-addr) 170 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
470 2558 64 ( is \() 64 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
534 2557 253 (phys.lo phys.hi) 253 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
787 2558 320 (\), encoded as with ) 320 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1107 2555 221 (encode-phys) 221 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1328 2558 22 (. ) 22 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1350 2557 63 (size) 63 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1413 2558 525 ( is an integer, encoded as with ) 525 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1938 2555 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2125 2558 11 (.) 11 SB
300 2623 77 (The ) 87 SB
387 2623 79 (first ) 89 SB
476 2623 98 (entry ) 108 SB
584 2623 46 (of ) 56 SB
640 2623 63 (the ) 73 SB
713 2623 154 (property ) 164 SB
877 2623 103 (value ) 113 SB
990 2623 91 (shall ) 101 SB
1091 2623 51 (be ) 61 SB
1152 2623 63 (the ) 73 SB
1225 2623 220 (unit-number ) 230 SB
1455 2623 46 (of ) 56 SB
1511 2623 30 (a ) 40 SB
1551 2623 152 (function ) 162 SB
1713 2623 152 (decoded ) 162 SB
1875 2623 46 (as ) 57 SB
1932 2623 86 (with ) 97 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2029 2620 210 (decode-unit) 210 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2239 2623 11 (.) 11 SB
300 2674 1332 (Additional entries shall specify the address space of other addressable regions.) 1332 SB
300 2737 39 (If ) 41 SB
341 2737 30 (a ) 32 SB
373 2737 158 (CardBus ) 160 SB
533 2737 84 (card ) 86 SB
619 2737 152 (function ) 154 SB
773 2737 67 (has ) 69 SB
842 2737 51 (an ) 53 SB
895 2737 208 (addressable ) 210 SB
1105 2737 119 (region ) 121 SB
1226 2737 75 (that ) 77 SB
1303 2737 70 (can ) 72 SB
1375 2737 51 (be ) 53 SB
1428 2737 159 (accessed ) 161 SB
1589 2737 139 (relative ) 141 SB
1730 2737 44 (to ) 46 SB
1776 2737 98 (more ) 100 SB
1876 2737 84 (than ) 86 SB
1962 2737 72 (one ) 74 SB
2036 2737 86 (base ) 88 SB
2124 2737 126 (address) 126 SB
300 2787 74 (\(for ) 80 SB
380 2787 166 (example, ) 172 SB
552 2787 44 (in ) 50 SB
602 2787 156 (Memory ) 162 SB
764 2787 105 (space ) 112 SB
876 2787 139 (relative ) 146 SB
1022 2787 44 (to ) 51 SB
1073 2787 72 (one ) 79 SB
1152 2787 93 (Base ) 100 SB
1252 2787 163 (Register, ) 170 SB
1422 2787 72 (and ) 79 SB
1501 2787 44 (in ) 51 SB
1552 2787 67 (I/O ) 74 SB
1626 2787 105 (space ) 112 SB
1738 2787 139 (relative ) 146 SB
1884 2787 44 (to ) 51 SB
1935 2787 163 (another\), ) 170 SB
2105 2787 86 (only ) 93 SB
2198 2787 52 (the) 52 SB
300 2837 145 (primary ) 146 SB
446 2837 119 (access ) 120 SB
566 2837 84 (path ) 85 SB
651 2837 185 (\(typically, ) 186 SB
837 2837 63 (the ) 64 SB
901 2837 72 (one ) 73 SB
974 2837 44 (in ) 45 SB
1019 2837 156 (Memory ) 157 SB
1176 2837 119 (space\) ) 121 SB
1297 2837 91 (shall ) 93 SB
1390 2837 51 (be ) 53 SB
1443 2837 103 (listed ) 105 SB
1548 2837 44 (in ) 46 SB
1594 2837 63 (the ) 65 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1659 2834 21 (\223) 21 SB
1680 2834 59 (reg) 59 SB
1739 2834 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1760 2837 11 ( ) 13 SB
1773 2837 165 (property, ) 167 SB
1940 2837 72 (and ) 74 SB
2014 2837 63 (the ) 65 SB
2079 2837 171 (secondary) 171 SB
300 2888 555 (access path shall be listed in the ) 555 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
855 2885 21 (\223) 21 SB
876 2885 235 (alternate-reg) 235 SB
1111 2885 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1132 2888 165 ( property.) 165 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Palatino-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 18 18
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2208 2997 42 (18) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
300 285 21 (\223) 21 SB
321 285 182 (interrupts) 182 SB
503 285 21 (\224) 21 SB
2100 285 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 351 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
484 352 22 (, ) 25 SB
509 352 63 (the ) 66 SB
575 352 159 (presence ) 162 SB
737 352 46 (of ) 49 SB
786 352 114 (which ) 117 SB
903 352 162 (indicates ) 165 SB
1068 352 75 (that ) 78 SB
1146 352 63 (the ) 66 SB
1212 352 122 (device ) 125 SB
1337 352 206 (represented ) 209 SB
1546 352 53 (by ) 56 SB
1602 352 72 (this ) 75 SB
1677 352 93 (node ) 96 SB
1773 352 39 (is ) 42 SB
1815 352 183 (connected ) 186 SB
2001 352 44 (to ) 48 SB
2049 352 51 (an ) 55 SB
2104 352 146 (interrupt) 146 SB
300 404 75 (line.) 75 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 466 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 467 447 (: integer, encoded as with ) 447 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1088 464 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1275 467 11 (.) 11 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font33 ANSIFont font
300 518 38 (3.) 38 SB
338 518 25 (5) 25 SB
363 518 51 (.2 ) 68 SB
431 518 500 ( Bus-specific Properties) 500 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 616 161 (Standard ) 166 SB
466 616 168 (Packages ) 173 SB
639 616 252 (corresponding ) 257 SB
896 616 44 (to ) 49 SB
945 616 138 (devices ) 143 SB
1088 616 75 (that ) 80 SB
1168 616 63 (are ) 68 SB
1236 616 150 (children ) 155 SB
1391 616 46 (of ) 52 SB
1443 616 30 (a ) 36 SB
1479 616 62 (PC ) 68 SB
1547 616 93 (Card ) 99 SB
1646 616 69 (bus ) 75 SB
1721 616 91 (shall ) 97 SB
1818 616 193 (implement ) 199 SB
2017 616 63 (the ) 69 SB
2086 616 164 (following) 164 SB
300 666 414 (properties, if applicable.) 414 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 742 21 (\223) 21 SB
321 742 173 (16bitcard) 173 SB
494 742 21 (\224) 21 SB
2100 742 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 808 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
484 809 1032 (, exists if the node implements the 16-bit PC Card  interface.) 1032 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 873 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 874 153 (: <none>) 153 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 952 21 (\223) 21 SB
321 952 144 (cardbus) 144 SB
465 952 21 (\224) 21 SB
2100 952 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1018 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
484 1019 689 (, exists if the node implements CardBus.) 689 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1083 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 1084 153 (: <none>) 153 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 1162 21 (\223) 21 SB
321 1162 235 (alternate-reg) 235 SB
556 1162 21 (\224) 21 SB
2100 1162 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1228 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
484 1229 935 (, defines alternate access paths for addressable regions.) 935 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1293 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 1294 431 (: an arbitrary number of \() 431 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1072 1293 244 (phys-addr size) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1316 1294 118 (\) pairs.) 118 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 1358 181 (phys-addr ) 181 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
481 1359 53 (is \() 53 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
534 1358 253 (phys.lo phys.hi) 253 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
787 1359 320 (\), encoded as with ) 320 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1107 1356 232 (encode-phys.) 232 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1339 1359 11 ( ) 11 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1350 1358 63 (size) 63 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1413 1359 525 ( is an integer, encoded as with ) 525 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1938 1356 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2125 1359 11 (.) 11 SB
300 1424 86 (This ) 93 SB
393 1424 154 (property ) 162 SB
555 1424 168 (describes ) 176 SB
731 1424 191 (alternative ) 199 SB
930 1424 119 (access ) 127 SB
1057 1424 100 (paths ) 108 SB
1165 1424 60 (for ) 68 SB
1233 1424 63 (the ) 71 SB
1304 1424 208 (addressable ) 216 SB
1520 1424 135 (regions ) 143 SB
1663 1424 173 (described ) 181 SB
1844 1424 53 (by ) 61 SB
1905 1424 63 (the ) 71 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1976 1421 21 (\223) 21 SB
1997 1421 59 (reg) 59 SB
2056 1421 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2077 1424 11 ( ) 19 SB
2096 1424 154 (property.) 154 SB
300 1475 185 (Typically, ) 188 SB
488 1475 51 (an ) 54 SB
542 1475 191 (alternative ) 194 SB
736 1475 119 (access ) 122 SB
858 1475 84 (path ) 87 SB
945 1475 107 (exists ) 110 SB
1055 1475 102 (when ) 105 SB
1160 1475 30 (a ) 33 SB
1193 1475 174 (particular ) 177 SB
1370 1475 77 (part ) 80 SB
1450 1475 46 (of ) 49 SB
1499 1475 30 (a ) 33 SB
1532 1475 122 (device ) 125 SB
1657 1475 70 (can ) 73 SB
1730 1475 51 (be ) 54 SB
1784 1475 159 (accessed ) 162 SB
1946 1475 108 (either ) 111 SB
2057 1475 44 (in ) 48 SB
2105 1475 145 (Memory) 145 SB
300 1525 105 (space ) 106 SB
406 1525 46 (or ) 47 SB
453 1525 44 (in ) 45 SB
498 1525 67 (I/O ) 68 SB
566 1525 116 (space, ) 117 SB
683 1525 86 (with ) 87 SB
770 1525 30 (a ) 31 SB
801 1525 150 (separate ) 151 SB
952 1525 86 (base ) 87 SB
1039 1525 137 (address ) 138 SB
1177 1525 60 (for ) 61 SB
1238 1525 89 (each ) 90 SB
1328 1525 46 (of ) 47 SB
1375 1525 63 (the ) 64 SB
1439 1525 74 (two ) 76 SB
1515 1525 119 (access ) 121 SB
1636 1525 111 (paths. ) 113 SB
1749 1525 77 (The ) 79 SB
1828 1525 145 (primary ) 147 SB
1975 1525 119 (access ) 121 SB
2096 1525 100 (paths ) 102 SB
2198 1525 52 (are) 52 SB
300 1575 173 (described ) 178 SB
478 1575 53 (by ) 58 SB
536 1575 63 (the ) 68 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
604 1572 21 (\223) 21 SB
625 1572 59 (reg) 59 SB
684 1572 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
705 1575 11 ( ) 16 SB
721 1575 165 (property, ) 170 SB
891 1575 72 (and ) 77 SB
968 1575 63 (the ) 68 SB
1036 1575 182 (secondary ) 187 SB
1223 1575 119 (access ) 125 SB
1348 1575 111 (paths, ) 117 SB
1465 1575 37 (if ) 43 SB
1508 1575 83 (any, ) 89 SB
1597 1575 63 (are ) 69 SB
1666 1575 173 (described ) 179 SB
1845 1575 53 (by ) 59 SB
1904 1575 63 (the ) 69 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1973 1572 21 (\223) 21 SB
1994 1572 235 (alternate-reg) 235 SB
2229 1572 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 1626 154 (property.) 154 SB
300 1689 39 (If ) 45 SB
345 1689 63 (the ) 69 SB
414 1689 140 (number ) 146 SB
560 1689 46 (of ) 52 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
612 1686 21 (\223) 21 SB
633 1686 235 (alternate-reg) 235 SB
868 1686 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
889 1689 11 ( ) 17 SB
906 1689 124 (entries ) 130 SB
1036 1689 145 (exceeds ) 151 SB
1187 1689 63 (the ) 70 SB
1257 1689 140 (number ) 147 SB
1404 1689 46 (of ) 53 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1457 1686 21 (\223) 21 SB
1478 1686 59 (reg) 59 SB
1537 1686 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1558 1689 11 ( ) 18 SB
1576 1689 154 (property ) 161 SB
1737 1689 135 (entries, ) 142 SB
1879 1689 63 (the ) 70 SB
1949 1689 181 (additional ) 188 SB
2137 1689 113 (entries) 113 SB
300 1740 929 (denote addressable regions that are not represented by ) 929 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1229 1737 21 (\223) 21 SB
1250 1737 59 (reg) 59 SB
1309 1737 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1330 1740 11 ( ) 12 SB
1342 1740 154 (property ) 155 SB
1497 1740 135 (entries, ) 136 SB
1633 1740 72 (and ) 73 SB
1706 1740 63 (are ) 64 SB
1770 1740 81 (thus ) 82 SB
1852 1740 65 (not ) 66 SB
1918 1740 157 (intended ) 158 SB
2076 1740 44 (to ) 45 SB
2121 1740 51 (be ) 52 SB
2173 1740 77 (used) 77 SB
300 1791 44 (in ) 55 SB
355 1791 131 (normal ) 142 SB
497 1791 182 (operation. ) 193 SB
690 1791 95 (Such ) 106 SB
796 1791 135 (regions ) 146 SB
942 1791 121 (might, ) 132 SB
1074 1791 60 (for ) 71 SB
1145 1791 166 (example, ) 177 SB
1322 1791 51 (be ) 62 SB
1384 1791 88 (used ) 99 SB
1483 1791 60 (for ) 71 SB
1554 1791 185 (diagnostic ) 196 SB
1750 1791 179 (functions. ) 190 SB
1940 1791 39 (If ) 50 SB
1990 1791 63 (the ) 74 SB
2064 1791 140 (number ) 151 SB
2215 1791 35 (of) 35 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 1838 21 (\223) 21 SB
321 1838 235 (alternate-reg) 235 SB
556 1838 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
577 1841 11 ( ) 13 SB
590 1841 124 (entries ) 126 SB
716 1841 39 (is ) 41 SB
757 1841 74 (less ) 76 SB
833 1841 84 (than ) 86 SB
919 1841 63 (the ) 65 SB
984 1841 140 (number ) 142 SB
1126 1841 46 (of ) 48 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1174 1838 21 (\223) 21 SB
1195 1838 59 (reg) 59 SB
1254 1838 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1275 1841 11 ( ) 13 SB
1288 1841 135 (entries, ) 137 SB
1425 1841 63 (the ) 65 SB
1490 1841 135 (regions ) 137 SB
1627 1841 173 (described ) 175 SB
1802 1841 53 (by ) 55 SB
1857 1841 63 (the ) 66 SB
1923 1841 96 (extra ) 99 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2022 1838 21 (\223) 21 SB
2043 1838 59 (reg) 59 SB
2102 1838 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2123 1841 11 ( ) 14 SB
2137 1841 113 (entries) 113 SB
300 1892 630 (do not have alternative access paths. ) 631 SB
931 1892 62 (An ) 63 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
994 1889 21 (\223) 21 SB
1015 1889 235 (alternate-reg) 235 SB
1250 1889 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1271 1892 11 ( ) 12 SB
1283 1892 98 (entry ) 99 SB
1382 1892 118 (whose ) 119 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1501 1891 132 (phys.hi ) 133 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1634 1892 199 (component ) 200 SB
1834 1892 39 (is ) 40 SB
1874 1892 84 (zero ) 85 SB
1959 1892 162 (indicates ) 163 SB
2122 1892 75 (that ) 76 SB
2198 1892 52 (the) 52 SB
300 1944 252 (corresponding ) 255 SB
555 1944 119 (region ) 122 SB
677 1944 88 (does ) 91 SB
768 1944 65 (not ) 68 SB
836 1944 91 (have ) 94 SB
930 1944 51 (an ) 54 SB
984 1944 191 (alternative ) 194 SB
1178 1944 119 (access ) 122 SB
1300 1944 95 (path. ) 98 SB
1398 1944 95 (Such ) 98 SB
1496 1944 51 (an ) 54 SB
1550 1944 98 (entry ) 101 SB
1651 1944 70 (can ) 73 SB
1724 1944 51 (be ) 54 SB
1778 1944 88 (used ) 91 SB
1869 1944 46 (as ) 49 SB
1918 1944 30 (a ) 33 SB
1951 1944 19 (\223) 19 SB
1970 1944 71 (plac) 71 SB
2041 1944 30 (e ) 34 SB
2075 1944 108 (holder) 108 SB
2183 1944 19 (\224) 19 SB
2202 1944 11 ( ) 15 SB
2217 1944 33 (to) 33 SB
300 1994 154 (preserve ) 155 SB
455 1994 63 (the ) 64 SB
519 1994 163 (positions ) 164 SB
683 1994 46 (of ) 47 SB
730 1994 87 (later ) 89 SB
819 1994 124 (entries ) 126 SB
945 1994 139 (relative ) 141 SB
1086 1994 44 (to ) 46 SB
1132 1994 63 (the ) 65 SB
1197 1994 252 (corresponding ) 254 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1451 1991 21 (\223) 21 SB
1472 1991 59 (reg) 59 SB
1531 1991 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1552 1994 11 ( ) 13 SB
1565 1994 135 (entries. ) 137 SB
1702 1994 77 (The ) 79 SB
1781 1994 79 (first ) 81 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1862 1991 21 (\223) 21 SB
1883 1991 235 (alternate-reg) 235 SB
2118 1991 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2139 1994 11 ( ) 13 SB
2152 1994 98 (entry,) 98 SB
300 2045 252 (corresponding ) 259 SB
559 2045 44 (to ) 51 SB
610 2045 63 (the ) 70 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
680 2042 21 (\223) 21 SB
701 2042 59 (reg) 59 SB
760 2042 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
781 2045 11 ( ) 18 SB
799 2045 98 (entry ) 105 SB
904 2045 187 (describing ) 194 SB
1098 2045 63 (the ) 70 SB
1168 2045 176 (function's ) 183 SB
1351 2045 248 (Configuration ) 256 SB
1607 2045 105 (space ) 113 SB
1720 2045 165 (registers, ) 173 SB
1893 2045 91 (shall ) 99 SB
1992 2045 91 (have ) 99 SB
2091 2045 30 (a ) 38 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
2129 2044 121 (phys.hi) 121 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2097 329 (component of zero.) 329 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 2173 21 (\223) 21 SB
321 2173 155 (windows) 155 SB
476 2173 21 (\224) 21 SB
2100 2173 23 (S) 23 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2240 161 (Standard ) 161 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
461 2239 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
645 2240 644 (, defines device's addressable regions.) 644 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 2304 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 2305 442 (: an arbitrary number of \( ) 442 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1083 2304 293 (window base size) 293 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1376 2305 36 ( \).) 36 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 2369 131 (window) 131 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
431 2370 11 ( ) 12 SB
443 2370 39 (is ) 40 SB
483 2370 51 (an ) 52 SB
535 2370 140 (integer, ) 141 SB
676 2370 152 (encoded ) 153 SB
829 2370 46 (as ) 47 SB
876 2370 86 (with ) 87 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
963 2367 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1150 2370 22 (, ) 24 SB
1174 2370 75 (that ) 77 SB
1251 2370 140 (denotes ) 142 SB
1393 2370 63 (the ) 65 SB
1458 2370 156 (Window ) 158 SB
1616 2370 75 (that ) 77 SB
1693 2370 39 (is ) 41 SB
1734 2370 156 (assigned ) 158 SB
1892 2370 60 (for ) 62 SB
1954 2370 63 (the ) 65 SB
2019 2370 126 (Socket ) 128 SB
2147 2370 103 (which) 103 SB
300 2422 63 (the ) 65 SB
365 2422 84 (card ) 86 SB
451 2422 39 (is ) 41 SB
492 2422 147 (plugged ) 149 SB
641 2422 33 (in) 33 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
674 2421 22 (. ) 24 SB
698 2421 77 (base) 77 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
775 2422 11 ( ) 13 SB
788 2422 39 (is ) 41 SB
829 2422 51 (an ) 53 SB
882 2422 129 (integer ) 131 SB
1013 2422 152 (encoded ) 154 SB
1167 2422 46 (as ) 48 SB
1215 2422 86 (with ) 88 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1303 2419 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1490 2422 22 (, ) 24 SB
1514 2422 75 (that ) 77 SB
1591 2422 140 (denotes ) 143 SB
1734 2422 63 (the ) 66 SB
1800 2422 86 (base ) 89 SB
1889 2422 137 (address ) 140 SB
2029 2422 46 (of ) 49 SB
2078 2422 63 (the ) 66 SB
2144 2422 106 (parent) 106 SB
300 2474 114 (where ) 115 SB
415 2474 63 (the ) 64 SB
479 2474 156 (Window ) 157 SB
636 2474 39 (is ) 41 SB
677 2474 156 (mapped. ) 158 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
835 2473 63 (size) 63 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
898 2474 11 ( ) 13 SB
911 2474 39 (is ) 41 SB
952 2474 51 (an ) 53 SB
1005 2474 140 (integer, ) 142 SB
1147 2474 152 (encoded ) 154 SB
1301 2474 46 (as ) 48 SB
1349 2474 86 (with ) 88 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1437 2471 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1624 2474 22 (, ) 24 SB
1648 2474 75 (that ) 77 SB
1725 2474 140 (denotes ) 142 SB
1867 2474 63 (the ) 65 SB
1932 2474 77 (size ) 79 SB
2011 2474 46 (of ) 48 SB
2059 2474 63 (the ) 65 SB
2124 2474 126 (address) 126 SB
300 2526 443 (space within the Window.) 443 SB
300 2589 131 (Entries ) 132 SB
432 2589 46 (of ) 47 SB
479 2589 63 (the ) 65 SB
544 2589 154 (property ) 156 SB
700 2589 103 (value ) 105 SB
805 2589 152 (describe ) 154 SB
959 2589 63 (the ) 65 SB
1024 2589 147 (parent\222s ) 149 SB
1173 2589 137 (address ) 139 SB
1312 2589 121 (spaces ) 123 SB
1435 2589 75 (that ) 77 SB
1512 2589 63 (are ) 65 SB
1577 2589 164 (currently ) 166 SB
1743 2589 145 (mapped ) 147 SB
1890 2589 44 (to ) 46 SB
1936 2589 63 (the ) 65 SB
2001 2589 137 (address ) 139 SB
2140 2589 110 (spaces) 110 SB
300 2639 222 (of a PC card.) 222 SB
300 2702 41 (A ) 43 SB
343 2702 156 (Window ) 158 SB
501 2702 91 (shall ) 93 SB
594 2702 51 (be ) 54 SB
648 2702 165 (allocated ) 168 SB
816 2702 60 (for ) 63 SB
879 2702 113 (active ) 116 SB
995 2702 137 (address ) 140 SB
1135 2702 121 (spaces ) 124 SB
1259 2702 86 (only ) 89 SB
1348 2702 44 (to ) 47 SB
1395 2702 105 (avoid ) 108 SB
1503 2702 63 (the ) 66 SB
1569 2702 107 (waste ) 110 SB
1679 2702 46 (of ) 49 SB
1728 2702 63 (the ) 66 SB
1794 2702 128 (system ) 131 SB
1925 2702 137 (address ) 140 SB
2065 2702 116 (space. ) 119 SB
2184 2702 66 (The) 66 SB
300 2752 113 (active ) 114 SB
414 2752 121 (spaces ) 123 SB
537 2752 44 (in ) 46 SB
583 2752 72 (this ) 74 SB
657 2752 136 (context ) 138 SB
795 2752 63 (are ) 65 SB
860 2752 63 (the ) 65 SB
925 2752 137 (address ) 139 SB
1064 2752 121 (spaces ) 123 SB
1187 2752 75 (that ) 77 SB
1264 2752 63 (are ) 65 SB
1329 2752 88 (used ) 90 SB
1419 2752 53 (by ) 55 SB
1474 2752 168 (functions ) 170 SB
1644 2752 148 (relevant ) 150 SB
1794 2752 44 (to ) 46 SB
1840 2752 128 (system ) 130 SB
1970 2752 97 (boot. ) 99 SB
2069 2752 81 (Due ) 83 SB
2152 2752 44 (to ) 46 SB
2198 2752 52 (the) 52 SB
300 2802 132 (limited ) 136 SB
436 2802 140 (number ) 144 SB
580 2802 46 (of ) 50 SB
630 2802 172 (Windows ) 176 SB
806 2802 44 (in ) 48 SB
854 2802 93 (most ) 97 SB
951 2802 305 (implementations, ) 309 SB
1260 2802 63 (the ) 67 SB
1327 2802 126 (Socket ) 130 SB
1457 2802 131 (service ) 135 SB
1592 2802 121 (allows ) 125 SB
1717 2802 63 (the ) 67 SB
1784 2802 137 (address ) 141 SB
1925 2802 105 (space ) 109 SB
2034 2802 145 (mapped ) 149 SB
2183 2802 44 (in ) 48 SB
2231 2802 19 (a) 19 SB
300 2852 381 (Window be shared by ) 382 SB
682 2852 153 (multiple ) 154 SB
836 2852 168 (functions ) 169 SB
1005 2852 46 (of ) 47 SB
1052 2852 30 (a ) 31 SB
1083 2852 242 (multifunction ) 243 SB
1326 2852 62 (PC ) 63 SB
1389 2852 104 (Card. ) 105 SB
1494 2852 39 (If ) 40 SB
1534 2852 63 (the ) 64 SB
1598 2852 137 (address ) 138 SB
1736 2852 121 (spaces ) 122 SB
1858 2852 114 (which ) 115 SB
1973 2852 100 (share ) 101 SB
2074 2852 30 (a ) 31 SB
2105 2852 145 (Window) 145 SB
300 2902 1022 (are not contiguous the system address space is often wasted.) 1022 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 19 19
%%PageResources: (atend)
SS
0 0 25 22 804 1100 300 SM
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
0 0 0 fC
300 84 30 (R) 30 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
330 93 131 (EVISED ) 131 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
461 84 315 (03/09/95 1:36 PM) 315 SB
1921 84 97 (PC C) 97 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2018 93 80 (ARD ) 80 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2098 84 28 (B) 28 SB
32 0 0 33 33 0 0 0 32 /Times-Bold /font33 ANSIFont font
2126 93 124 (INDING) 124 SB
0 0 0 fC
/fm 256 def
1961 2 294 139 B
1 F
n
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3000 266 (Open Firmware) 266 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1073 2997 404 (DRAFT DOCUMENT) 404 SB
2208 2997 42 (19) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 3051 189 (Task Force) 189 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1026 3048 497 (NOT FOR PUBLICATION) 497 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 183 39 (If ) 40 SB
340 183 51 (an ) 52 SB
392 183 278 (implementation ) 279 SB
671 183 46 (of ) 47 SB
718 183 123 (FCode ) 124 SB
842 183 122 (device ) 123 SB
965 183 112 (driver ) 113 SB
1078 183 147 (requires ) 148 SB
1226 183 98 (more ) 100 SB
1326 183 172 (Windows ) 174 SB
1500 183 84 (than ) 86 SB
1586 183 176 (available, ) 178 SB
1764 183 35 (it ) 37 SB
1801 183 39 (is ) 41 SB
1842 183 63 (the ) 65 SB
1907 183 241 (responsibility ) 243 SB
2150 183 46 (of ) 48 SB
2198 183 52 (the) 52 SB
300 233 123 (FCode ) 125 SB
425 233 112 (driver ) 114 SB
539 233 44 (to ) 46 SB
585 233 143 (manage ) 145 SB
730 233 156 (Window ) 158 SB
888 233 190 (allocation. ) 192 SB
1080 233 77 (The ) 79 SB
1159 233 19 (\223) 19 SB
1178 233 54 (reg) 54 SB
1232 233 19 (\224) 19 SB
1251 233 11 ( ) 13 SB
1264 233 154 (property ) 156 SB
1420 233 91 (shall ) 93 SB
1513 233 152 (describe ) 154 SB
1667 233 54 (all ) 56 SB
1723 233 63 (the ) 65 SB
1788 233 137 (address ) 139 SB
1927 233 121 (spaces ) 124 SB
2051 233 88 (used ) 91 SB
2142 233 53 (by ) 56 SB
2198 233 52 (the) 52 SB
300 283 1215 (PC Card to avoid conflict on address space allocation for other devices.) 1215 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
300 380 42 (3.) 42 SB
342 380 28 (5) 28 SB
370 380 42 (.2) 42 SB
412 380 56 (.1 ) 72 SB
484 380 730 (CardBus-type Node Properties) 730 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 479 77 (The ) 80 SB
380 479 175 (following ) 178 SB
558 479 180 (properties ) 184 SB
742 479 63 (are ) 67 SB
809 479 134 (created ) 138 SB
947 479 60 (for ) 64 SB
1011 479 30 (a ) 34 SB
1045 479 158 (CardBus ) 162 SB
1207 479 84 (card ) 88 SB
1295 479 93 (node ) 97 SB
1392 479 121 (during ) 125 SB
1517 479 63 (the ) 67 SB
1584 479 142 (probing ) 146 SB
1730 479 148 (process, ) 152 SB
1882 479 89 (after ) 93 SB
1975 479 63 (the ) 67 SB
2042 479 122 (device ) 126 SB
2168 479 82 (node) 82 SB
300 529 292 (has been created ) 293 SB
593 529 65 (but ) 66 SB
659 529 119 (before ) 120 SB
779 529 188 (evaluating ) 189 SB
968 529 63 (the ) 64 SB
1032 529 146 (device's ) 147 SB
1179 529 123 (FCode ) 124 SB
1303 529 51 (\(if ) 52 SB
1355 529 97 (any\). ) 98 SB
1453 529 98 (They ) 99 SB
1552 529 166 (represent ) 167 SB
1719 529 63 (the ) 64 SB
1783 529 119 (values ) 120 SB
1903 529 46 (of ) 47 SB
1950 529 154 (standard ) 155 SB
2105 529 62 (PC ) 63 SB
2168 529 82 (Card) 82 SB
300 579 393 (configuration registers.) 393 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 655 21 (\223) 21 SB
321 655 224 (devsel-speed) 224 SB
545 655 21 (\224) 21 SB
2100 655 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 721 184 (prop-name) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
484 722 393 (, denotes the timing of ) 393 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
877 719 218 (CDEVSEL#) 218 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1095 722 123 ( signal.) 123 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 786 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 787 23 (: ) 25 SB
666 787 51 (an ) 53 SB
719 787 140 (integer, ) 142 SB
861 787 152 (encoded ) 154 SB
1015 787 46 (as ) 48 SB
1063 787 86 (with ) 88 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1151 784 187 (encode-int) 187 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1338 787 22 (. ) 24 SB
1362 787 43 (0, ) 45 SB
1407 787 43 (1, ) 45 SB
1452 787 46 (or ) 48 SB
1500 787 32 (2 ) 34 SB
1534 787 140 (denotes ) 142 SB
1676 787 63 (the ) 66 SB
1742 787 83 (fast, ) 86 SB
1828 787 150 (medium ) 153 SB
1981 787 72 (and ) 75 SB
2056 787 90 (slow ) 93 SB
2149 787 101 (signal) 101 SB
300 839 349 (timing, respectively.) 349 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 915 21 (\223) 21 SB
321 915 314 (fast-back-to-back) 314 SB
635 915 21 (\224) 21 SB
2100 915 23 (S) 23 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
300 981 341 (prop-encoded-array) 341 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
641 982 153 (: <none>) 153 SB
300 1047 615 (This property shall be present if the ) 615 SB
915 1047 19 (\223) 19 SB
934 1047 296 (fast-back-to-back) 296 SB
1230 1047 19 (\224) 19 SB
1249 1047 183 ( bit \(bit 7\) ) 184 SB
1433 1047 44 (in ) 45 SB
1478 1047 63 (the ) 64 SB
1542 1047 176 (function's ) 177 SB
1719 1047 114 (Status ) 115 SB
1834 1047 152 (Register ) 153 SB
1987 1047 39 (is ) 40 SB
2027 1047 69 (set, ) 70 SB
2097 1047 72 (and ) 73 SB
2170 1047 80 (shall) 80 SB
300 1097 345 (be absent otherwise.) 345 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font18 ANSIFont font
300 1171 42 (3.) 42 SB
342 1171 42 (6 ) 58 SB
400 1171 932 (Bus-specific User Interface Commands) 932 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 1271 62 (An ) 64 SB
364 1271 102 (Open ) 105 SB
469 1271 359 (Firmware-compliant ) 362 SB
831 1271 90 (User ) 93 SB
924 1271 162 (Interface ) 165 SB
1089 1271 53 (on ) 56 SB
1145 1271 30 (a ) 33 SB
1178 1271 128 (system ) 131 SB
1309 1271 86 (with ) 89 SB
1398 1271 136 (built-in ) 139 SB
1537 1271 62 (PC ) 65 SB
1602 1271 93 (Card ) 96 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font35 ANSIFont font
1698 1270 112 (should) 112 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1810 1271 11 ( ) 14 SB
1824 1271 193 (implement ) 196 SB
2020 1271 63 (the ) 66 SB
2086 1271 164 (following) 164 SB
300 1323 736 (PC Card-specific user interface commands.) 736 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 1399 369 (probe-pccard-socket) 369 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 1402 298 (\( unit-number -- \)) 298 SB
300 1466 103 (Enter ) 103 SB
403 1466 19 (\223) 19 SB
422 1466 185 (probe state) 185 SB
607 1466 19 (\224) 19 SB
626 1466 731 (, thus affecting subsequent behavior of the ) 731 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1357 1463 128 (map-in) 128 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1485 1466 83 ( and ) 83 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1568 1463 151 (map-out) 151 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1719 1466 165 ( methods.) 165 SB
300 1530 1950 (For a card plugged in the Socket, the CIS of the card is searched and the bus-specific node properties are created if) 1950 SB
300 1580 215 (appropriate. ) 218 SB
518 1580 39 (If ) 42 SB
560 1580 63 (the ) 66 SB
626 1580 84 (card ) 88 SB
714 1580 67 (has ) 71 SB
785 1580 51 (an ) 55 SB
840 1580 123 (FCode ) 127 SB
967 1580 165 (program, ) 169 SB
1136 1580 63 (the ) 67 SB
1203 1580 123 (FCode ) 127 SB
1330 1580 115 (image ) 119 SB
1449 1580 60 (for ) 64 SB
1513 1580 63 (the ) 67 SB
1580 1580 84 (card ) 88 SB
1668 1580 39 (is ) 43 SB
1711 1580 206 (constructed ) 210 SB
1921 1580 44 (in ) 48 SB
1969 1580 63 (the ) 67 SB
2036 1580 106 (RAM ) 110 SB
2146 1580 72 (and ) 76 SB
2222 1580 28 (is) 28 SB
300 1630 963 (consistent as defined in the probing process, Section 3.1.) 963 SB
300 1693 69 (For ) 70 SB
370 1693 30 (a ) 31 SB
401 1693 158 (CardBus ) 159 SB
560 1693 95 (card, ) 96 SB
656 1693 37 (if ) 38 SB
694 1693 30 (a ) 31 SB
725 1693 123 (FCode ) 124 SB
849 1693 154 (program ) 155 SB
1004 1693 39 (is ) 40 SB
1044 1693 65 (not ) 66 SB
1110 1693 120 (found, ) 121 SB
1231 1693 63 (the ) 65 SB
1296 1693 137 (process ) 139 SB
1435 1693 91 (shall ) 93 SB
1528 1693 181 (determine ) 183 SB
1711 1693 147 (whether ) 149 SB
1860 1693 46 (or ) 48 SB
1908 1693 65 (not ) 67 SB
1975 1693 63 (the ) 65 SB
2040 1693 152 (function ) 154 SB
2194 1693 56 (has) 56 SB
300 1743 51 (an ) 55 SB
355 1743 182 (expansion ) 186 SB
541 1743 106 (ROM ) 110 SB
651 1743 115 (image ) 119 SB
770 1743 190 (containing ) 194 SB
964 1743 30 (a ) 34 SB
998 1743 123 (FCode ) 127 SB
1125 1743 165 (program. ) 169 SB
1294 1743 39 (If ) 44 SB
1338 1743 63 (the ) 68 SB
1406 1743 152 (function ) 157 SB
1563 1743 67 (has ) 72 SB
1635 1743 51 (an ) 56 SB
1691 1743 204 (appropriate ) 209 SB
1900 1743 123 (FCode ) 128 SB
2028 1743 165 (program, ) 170 SB
2198 1743 52 (the) 52 SB
300 1793 1067 (FCode program from expansion ROM is copied into the RAM.) 1067 SB
300 1856 112 (When ) 117 SB
417 1856 63 (the ) 68 SB
485 1856 123 (FCode ) 128 SB
613 1856 154 (program ) 159 SB
772 1856 100 (starts ) 105 SB
877 1856 187 (execution, ) 192 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1069 1853 207 (my-address) 207 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1276 1856 11 ( ) 16 SB
1292 1856 72 (and ) 77 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1369 1853 168 (my-space) 168 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1537 1856 11 ( ) 16 SB
1553 1856 91 (shall ) 96 SB
1649 1856 112 (return ) 117 SB
1766 1856 63 (the ) 68 SB
1834 1856 137 (address ) 142 SB
1976 1856 46 (of ) 52 SB
2028 1856 63 (the ) 69 SB
2097 1856 153 (Attribute) 153 SB
300 1907 984 (Memory space or the Configuration space of the function.) 984 SB
300 1957 758 (The FCode in the RAM is evaluated as with ) 758 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1058 1954 168 (byte-load) 168 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1226 1957 643 (. The FCode program shall create the ) 643 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1869 1954 21 (\223) 21 SB
1890 1954 98 (name) 98 SB
1988 1954 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
2009 1957 83 ( and ) 83 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
2092 1954 21 (\223) 21 SB
2113 1954 59 (reg) 59 SB
2172 1954 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
300 2008 180 (properties.) 180 SB
300 2058 1524 (If the function does not have a FCode program, the firmware shall create the value of the ) 1524 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1824 2055 21 (\223) 21 SB
1845 2055 98 (name) 98 SB
1943 2055 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1964 2058 234 ( property. For) 234 SB
300 2109 1682 (this case, the name shall be created as defined in Open Firmware-defined Properties, Section 3.5.1.) 1682 SB
300 2172 77 (The ) 84 SB
384 2172 79 (first ) 86 SB
470 2172 98 (entry ) 105 SB
575 2172 46 (of ) 53 SB
628 2172 63 (the ) 70 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
698 2169 21 (\223) 21 SB
719 2169 59 (reg) 59 SB
778 2169 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
799 2172 11 ( ) 18 SB
817 2172 154 (property ) 161 SB
978 2172 103 (value ) 110 SB
1088 2172 91 (shall ) 98 SB
1186 2172 51 (be ) 58 SB
1244 2172 63 (the ) 70 SB
1314 2172 220 (unit-number ) 228 SB
1542 2172 46 (of ) 54 SB
1596 2172 63 (the ) 71 SB
1667 2172 163 (function. ) 171 SB
1838 2172 192 (Additional ) 200 SB
2038 2172 124 (entries ) 132 SB
2170 2172 80 (shall) 80 SB
300 2223 925 (specify the address space of other addressable regions.) 925 SB
300 2286 150 (Without ) 151 SB
451 2286 134 (FCode, ) 135 SB
586 2286 35 (it ) 36 SB
622 2286 39 (is ) 40 SB
662 2286 65 (not ) 66 SB
728 2286 199 (necessarily ) 200 SB
928 2286 149 (possible ) 150 SB
1078 2286 44 (to ) 45 SB
1123 2286 181 (determine ) 182 SB
1305 2286 147 (whether ) 148 SB
1453 2286 46 (or ) 47 SB
1500 2286 65 (not ) 66 SB
1566 2286 96 (there ) 97 SB
1663 2286 63 (are ) 64 SB
1727 2286 153 (multiple ) 154 SB
1881 2286 86 (base ) 87 SB
1968 2286 137 (address ) 139 SB
2107 2286 143 (registers) 143 SB
300 2336 1029 (mapping the same resource, so it is not possible to create an ) 1029 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1329 2333 21 (\223) 21 SB
1350 2333 33 (al) 33 SB
1383 2333 202 (ternate-reg) 202 SB
1585 2333 21 (\224) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1606 2336 165 ( property.) 165 SB
300 2400 1741 (The configuration register is set if necessary. Assign address spaces for the corresponding Child Node.) 1741 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
300 2476 243 (probe-pccard) 243 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
690 2479 78 (\( -- \)) 78 SB
300 2530 746 (Scan all Sockets in numerical order as with ) 746 SB
32 0 0 42 42 0 0 0 41 /Times-Bold /font33 ANSIFont font
1046 2527 369 (probe-pccard-socket) 369 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font36 ANSIFont font
1415 2530 11 (.) 11 SB
1 #C

 statusdict begin /manualfeed false store papertray 2 gt {/manualfeed true store}if end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Trailer
end
%%Pages: 23
% TrueType font name key:
%    MSTT31c12d = 2e07DTimes New RomanF00000026000001900000
%    MSTT31c14a = 2e07DTimes New RomanF00000026000002bc0000
%    MSTT31c160 = 2e07DTimes New RomanF0000002a000001900000
%    MSTT31c16d = 2e07DTimes New RomanF0000002a000002bc0000
%    MSTT31c17a = 2dd7DTimes New RomanF00000032000002bc0000
%    MSTT31c187 = 2dd7DTimes New RomanF0000003a000002bc0000
%    MSTT31c194 = 2dd7DTimes New RomanF00000032000001900000
%    MSTT31c1a1 = 2dd7DTimes New RomanF0000002a000002bc0000
%    MSTT31c1ae = 2dd7DTimes New RomanF0000002a000001900000
%    MSTT31c1bb = 2dd7DTimes New RomanF00000026000001900000
%    MSTT31c1c8 = 2dd7DTimes New RomanF00000026000002bc0000
%    MSTT31c1d5 = 2dd7DTimes New RomanF0000003a000001900000
%    MSTT31c1e2 = 2dd7DArialF00000000000002bc0000
%    MSTT31c1ed = 2dd7DArialF00000043000002bc0000
%    MSTT31c1f8 = 2dd7DWingdingsF00000021000001900000
%    MSTT31c204 = 2dd7DArialF0000003a000002bc0000
%    MSTT31c20f = 2dd7DArialF00000032000002bc0000
%    MSTT31c21a = 2dd7DArialF00000021000002bc0000
%    MSTT31c225 = 2dd7DArialF0000002a000002bc0000
%    MSTT31c230 = 2dd7DArialF0000002a000001900000
%    MSTT31c23b = 2dd7DArialF0000002a000001900001
%    MSTT31c260 = 2dd7DWingdingsF00000021000002bc0000
%%DocumentSuppliedResources: procset Win35Dict 3 1
%%+ font MSTT31c1f8
%%+ font MSTT31c260

%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Palatino-Roman
%%+ font Times-Bold
%%+ font Times-BoldItalic
%%+ font Times-Italic
%%+ font Times-Roman

%%EOF
