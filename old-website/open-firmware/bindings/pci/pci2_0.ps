%!PS-Adobe-3.0
%%Title: (PCI_2Book)
%%Creator: (FrameMaker5 PPC\244: LaserWriter 8 8.4)
%%CreationDate: (12:34 Wednesday, August 7, 1996)
%%For: (Ron Hochsprung)
%%Routing: (mailto:\000ron@apple.com)
%%Pages: 28
%%DocumentFonts: Times-Bold Times-Roman Courier Times-Italic Courier-Bold Courier-BoldOblique Times-BoldItalic Courier-Oblique
%%DocumentNeededFonts: Times-Bold Times-Roman Courier Times-Italic Courier-Bold Courier-BoldOblique Times-BoldItalic Courier-Oblique
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%ADO_ImageableArea: 30 33 582 761
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(PCI_2Book)def
/Creator(FrameMaker5 PPC\244: LaserWriter 8 8.4)def
/CreationDate(12:34 Wednesday, August 7, 1996)def
/For(Ron Hochsprung)def
/Pages 28 def
end put
%%BeginFeature: *JobPatchFile 2
/filterLineCapBugCTM where {pop false} {true} ifelse
statusdict begin version cvi 2014 eq revision 1.1 lt end and and
{ userdict begin
 /sysdictSc systemdict /scale get def
 /sysdictSa systemdict /setstrokeadjust get def
 /sysdictLc systemdict /setlinecap get def
 /sysdictIm systemdict /initmatrix get def
 /sysdictCc systemdict /concat get def
 /sysdictSm systemdict /setmatrix get def
 /filterLineCapBugCTM matrix def
 /filterLCBCTM {
	currentstrokeadjust currentlinecap 2 eq and
	{
		filterLineCapBugCTM currentmatrix
		dup dup 0 get abs exch 3 get abs ne
		exch dup 1 get abs exch 2 get abs ne or
		{1 sysdictLc} if
	} if
 } bind def
 /scale {sysdictSc filterLCBCTM} bind def
 /setlinecap {sysdictLc filterLCBCTM} bind def
 /setstrokeadjust {sysdictSa filterLCBCTM} bind def
 /initmatrix {sysdictIm filterLCBCTM} bind def
 /concat {sysdictCc filterLCBCTM} bind def
 /setmatrix {sysdictSm filterLCBCTM} bind def
end 
/sysdictSc /sysdictSa /sysdictLc
/sysdictIm /sysdictCc /sysdictSm
6 {userdict exch undef} repeat
} if 
%%EndFeature
/md 217 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: lw8_basic-2.0
%%Copyright: Copyright 1990-1996 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/framewidth -1 def
/QDframwid -1 def
/numframes Z
/mTS matrix def
/$m matrix def
/av 84 def
/por T def
/normland F def
/psb-nosave{}def
/pse-nosave{}def
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
F
}ifelse
def
/odictstk Z
/oopstk Z
/fcl
{
count oopstk sub dup 0 gt
{
{pop}repeat
}{
pop
}ifelse
countdictstack odictstk sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/sfcl2
{
/odictstk countdictstack store
count/oopstk xs
}bd
/efcl2
{
stopped{$error/newerror F put}if
fcl
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
/devg/DeviceGray def
/devr/DeviceRGB def
/devc/DeviceCMYK def
/ststpgdev{}def
/dopgdev{}def
/stpgdev{}def
/buf Z
/didstop T def
/sfcl
{
/didstop T store
/odictstk countdictstack store
count/oopstk xs
currentfile cvx stopped
{
$error/newerror F put
didstop
{
save/didstop xs
/buf vmstatus exch sub exch pop dup 0 lt{pop 0}if
dup 64000 gt{pop 64000}if string store
{
currentfile buf readline
{
(}efcl)eq{exit}if
}{
/UnexpectedEOF errordict/rangecheck get exec
}ifelse
}loop
didstop restore
}if
}if
fcl
}bd
/efcl
{
/didstop F store
exec
stop
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
/devg[/DeviceGray]def
/devr[/DeviceRGB]def
/devc[/DeviceCMYK]def
/setpagedevice where{pop/realstpgdev/setpagedevice ld}if
/SC_topddict Z
/SC_spdict Z
/dopgdev
{
userdict/setpagedevice undef
SC_topddict realstpgdev
}bd
/stpgdev
{
SC_topddict dup 3 -1 roll
{
SC_spdict 2 index known
{
SC_spdict 2 index get
dup 3 -1 roll
{
put dup
}forall
pop put dup
}{
put dup
}ifelse
}forall
pop pop
}bd
/ststpgdev
{
userdict/setpagedevice/stpgdev load put
/SC_topddict 0 dict store
/SC_spdict 3 dict begin
/InputAttributes 0 dict def
/Policies 0 dict def
/OutputAttributes 0 dict def
currentdict
end
store
}def
/sfcl/sfcl2 ld
/efcl/efcl2 ld
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
mT $m currentmatrix mTS concatmatrix pop
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/adjRect
{
dup 2 mul 6 2 roll
4 index sub exch 5 -1 roll sub exch
4 2 roll
4 index add exch 5 -1 roll add exch
4 2 roll
}bd
/frame1up
{
gS
mTS setmatrix
QDframwid lw
/setstrokeadjust where{pop T setstrokeadjust}if
clippath pathbbox
2 index sub exch
3 index sub exch
currentlinewidth framewidth mul
adjRect
numframes dup 0 lt{pop 0}if
{
4 copy
rS
currentlinewidth framewidth
mul 4 mul
adjRect
}repeat
pop pop pop pop
gR
}bd
/$c devr def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: lw8_level1_colorspace-2.0
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/$cs Z
/:rg{devr :ss}bd
/:sc{$cs :ss}bd
/:dc
{
dup type/arraytype eq{0 get}if
dup/DeviceCMYK eq
{
pop devc
}{
/DeviceGray eq
{
devg
}{
devr
}ifelse
}ifelse
/$cs xdf
}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
%%EndFile
%%BeginFile: lw8_bubn-2.0
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? F def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace T
}{
currentcmykcolor F
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
2state?
$o
$t
$p
$s
$cs
ps
}bd
/popstatic
{
/ps xs
/$cs xs
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mTS setmatrix
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div setgray 8{pop}repeat}bd
%%EndFile
%%BeginFile: lw8_basic_text-2.0
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg T def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg F store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding dup 9/space put dup 39/quotesingle put 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
/$ckeyd md def
/:skey
{
1 index maxlength 2 index
length sub
ge
{
begin
/$mkeys 20 dict def
/$mkeys load
end
dup/$ckeyd xs
}if
3 1 roll put
}bd
/fD1pass
{
40
$ckeyd
//md
ne
{
pop 1
}if
$ckeyd exch
:skey
}bd
/:searchdict Z
/:searchdict
{
exch 2 copy
known
{
get
}{
exch/$mkeys
2 copy known
{
get
:searchdict
}{
pop
//$error begin
/command xdf
/errorname/undefinedfontkey def
end
stop
}ifelse
}ifelse
}bd
/:searchdict
{
exch 2 copy
known
{
get
}{
exch/$mkeys
get
:searchdict
}ifelse
}bd
/lU
{
//md exch 2 copy
known
{
get
}{
exch
/$mkeys 2 copy
known
{
get
:searchdict
}{
pop
//$error begin
/command xdf
/errorname/undefinedfontkey def
end
stop
}ifelse
}ifelse
}bd
/lU
{
//md exch 2 copy
known
{
get
}{
exch
/$mkeys get
:searchdict
}ifelse
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
/fD1pass
{
//md 3 1 roll put
}bd
/fD1pass/def ld
/lU/load ld
level2 not endnoload
/fD Z
/sf Z
/scf Z
/sf1pass
{
lU setfont
}bd
/scf1pass
{
exch lU exch scalefont fD
}bd
/scf2pass
{
scalefont fD
}bd
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff fD
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff fD
}bd
/ps Z
/fz{/ps xs}bd
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
fD
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
/fD/def ld/sf/setfont ld /scf/scf2pass ld
sfcl{
%%BeginFeature: *Smoothing True

  2 dict dup /PostRenderingEnhance true put setpagedevice

%%EndFeature

}efcl
sfcl{
%%BeginFeature: *BitsPerPixel None

  2 dict dup /PreRenderingEnhance false put setpagedevice

%%EndFeature

}efcl
sfcl{
%%BeginFeature: *TraySwitch False
1 dict dup /TraySwitch false put setpagedevice
%%EndFeature

}efcl
sfcl{
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature

}efcl
sfcl{
%%BeginFeature: *PageSize Letter

   2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
%%EndFeature

}efcl
(Ron Hochsprung)setjob
/mT[1 0 0 -1 30 761]def
/sD 16 dict def
 600 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Bold
/f42/Times-Bold
:mre
/f56 f42 24 scf
/f67 f42 12 scf
%%IncludeFont: Times-Roman
/f78/Times-Roman
:mre
/f92 f78 12 scf
%%IncludeFont: Courier
/f112/Courier
:mre
/f124 f112 12 scf
/f135 f42 10 scf
/f146 f78 10 scf
%%IncludeFont: Times-Italic
/f157/Times-Italic
:mre
/f172 f157 10 scf
/f183 f112 10 scf
%%IncludeFont: Courier-Bold
/f194/Courier-Bold
:mre
/f209 f194 10 scf
/f220 f112 9 scf
%%IncludeFont: Courier-BoldOblique
/f231/Courier-BoldOblique
:mre
/f249 f231 10 scf
/f260 f194 9 scf
/f271 f78 9 scf
/f282 f42 9 scf
/f293 f157 9 scf
%%IncludeFont: Times-BoldItalic
/f304/Times-BoldItalic
:mre
/f321 f304 9 scf
%%IncludeFont: Courier-Oblique
/f332/Courier-Oblique
:mre
/f348 f332 9 scf
/f359 f332 10 scf
/f370 f78 8 scf
/f381 f304 10 scf
/f392 f231 9 scf
/f403 f194 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
% Frame PostScript Prolog for use with Macintosh Frame Products 5.0.1
% Copyright (c) 1986-95 Frame Technology Corp.  All rights reserved.
%%BeginProcSet: "FrameMacDict" 501 1
userdict/FrameMacDict 250 dict put FrameMacDict begin systemdict/setpacking
known{/fMSP currentpacking def true setpacking}if[/fM1/fM18/fM2/fM3/fM4/fMAB
/fM5/fM6/fM8/fM9/fMBC/fMBM/fMC/fMCD/fMCG/fMCK/fMCM/fMCl/fMCO/fMef/fMet/fMeh
/fMew/fMey/fMex/fMei/fMej/fMek/fMel/fMFl/fMGC/fMGL/fMGM/fMIx/fMJB/fMJC/fMJG
/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMN/fMNC/fMNg/fMND/fMOx/fMPC/fMPH/fMPt/fMRC
/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMdm/fM2x/fMa2/fMi/fMk/fms/fmBS/fMdp/freq/sangle
/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/fM1B/fM0B/fMdc/fMds]{0 def}
forall/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCl fML1{
/statusdict where{pop statusdict/processcolors known{statusdict/processcolors
get exec 1 gt}{F}ifelse}{F}ifelse}{T}ifelse def/fMXN/statusdict where{pop
statusdict/product known{statusdict/product get}{(Unknown)}ifelse}{(Unknown)}
ifelse def/fMHq fMXN(LaserWriter-Sim)eq def/FmBD{bind def}bind def/fmBx{[exch{
dup/FrameMacDict eq{pop FrameMacDict}{dup type dup/arraytype eq exch
/packedarraytype eq or{dup xcheck{fmBi}if}if}ifelse}forall]cvx}FmBD/fmBi{bind
fmBx}FmBD fML1{userdict/FrMacBegin{FrameMacDict begin}fmBi put/FmE{end}FmBD}{
/fMdc 6 array def userdict/FrMacBegin{FrameMacDict begin/fMds currentcolorspace
store mark 0 0 0 0 0 currentcolor fMdc astore pop cleartomark}fmBi put/FmE{fMds
setcolorspace mark fMdc aload pop setcolor cleartomark end}FmBD}ifelse/fMEd 35
dict def/fmPE{fMEd 3 1 roll fmBi put}bind def/T true def/F false def userdict
/FrameSuccessfull F put userdict/FrameEndPictSave F put userdict
/FrameEndPictStopped F put userdict/fM7 known not{userdict/fM7 0 put}if/fmXD{
exch def}FmBD/FmG/gsave load def/FmR/grestore load def/fm_l/grestoreall load
def/fm_v/save load def/fm_g/setgray load def/fm_r/setrgbcolor load def/fm_h
/sethsbcolor load def/fm_f/fill load def/fm_e/eofill load def/fm_t/stroke load
def/fm_m/imagemask load def/fm_i/image load def/fm_s/show load def/fm_a/ashow
load def/fm_w/widthshow load def/fm_y/awidthshow load def/RealKshow/kshow load
def/fMdm matrix defaultmatrix def/fM2x matrix def/fMa2 matrix def/fmSM{fM2x
currentmatrix pop}FmBD/fmRM{fM2x setmatrix}FmBD/FmRF{currentpoint 2 copy
translate 4 2 roll{-1 1 scale}if rotate neg exch neg exch translate}FmBD/fmax{2
copy lt{exch}if pop}FmBD/fmin{2 copy gt{exch}if pop}FmBD systemdict/pdfmark
known{/fMAB true def/FmPD/pdfmark load def/FmPT/fm_s load def
currentdistillerparams/CoreDistVersion get 2000 ge{/FmPD2/pdfmark load def/FmPA
{mark exch/Dest exch 5 3 roll/View[/XYZ null 6 -2 roll FmDC exch pop null]/DEST
FmPD}FmBD}{/FmPD2/cleartomark load def/FmPA{pop pop pop}FmBD}ifelse}{/fMAB
false def/FmPD/cleartomark load def/FmPD2/cleartomark load def/FmPT/pop load
def/FmPA{pop pop pop}FmBD}ifelse/FmDC{transform fMdm itransform cvi exch cvi
exch}FmBD/FmBx{dup 3 index lt{3 1 roll exch}if 1 index 4 index lt{4 -1 roll 3 1
roll exch 4 1 roll}if}FmBD/fmgS 32 array def/fMgt 0 def/fMtp 0 def/fmSG{fmgS
fMgt get dup null eq{pop fmgS fMgt 10 dict dup 4 1 roll put}if 3 1 roll put}
FmBD/fmGG{fMgt -1 -1{fmgS exch get dup null ne{2 copy exch known{2 copy exch
get/_notdef ne{exch get dup exit}if}if}if pop}for pop}FmBD/gsave{FrameMacDict
begin FmG/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{dup dup{pop
/_notdef put dup}forall pop pop}ifelse end}fmPE/grestore{FrameMacDict begin
fMgt fMtp gt{/fMgt fMgt 1 sub def}if FmR null fmCN end}fmPE/grestoreall{
FrameMacDict begin/fMgt fMtp def fm_l null fmCN end}fmPE/save{FrameMacDict/fm_v
get exec FrameMacDict begin/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{
dup dup{pop/_notdef put dup}forall pop pop}ifelse/fMtp fMgt def end}fmPE/fMND F
def/fMCC null fmSG/fMOP F fmSG/fMKO F fmSG/fmRY{1 exch sub 3 1 roll 1 exch sub
3 1 roll 1 exch sub 3 1 roll 3 copy 2 copy le{pop}{exch pop}ifelse 2 copy le{
pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1 roll 7 1 roll sub 6 1 roll sub 5
1 roll sub 4 1 roll}fmSG/fmkn{2 copy known{get T}{pop pop false}ifelse}FmBD
/fmfp{exch currentfont dup/FontMatrix get exch/FontInfo fmkn{T}{currentfont/df
fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix get mtx concatmatrix exch T}{pop pop
pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1 roll fmkn{exch 0 3 1 roll dtransform
neg exch pop exch pop}{pop exec}ifelse}{exec}ifelse}FmBD/fmdl{3 index 16 and 0
ne{FmG currentlinewidth 2. div dup rmoveto currentpoint newpath moveto 2 index
0 rlineto fm_t FmR}if 3 index 24 and 0 ne{FmG currentrgbcolor dup 4 1 roll eq 3
1 roll eq and{1 currentgray sub setgray}{1 setgray}ifelse 2 index 0 rlineto
fm_t FmR FmG 2 index 0 rlineto strokepath .24 setlinewidth fm_t FmR}{2 index 0
rlineto fm_t 0 0 moveto}ifelse}FmBD/FmUl{FmG/fM2 fmXD currentpoint
/UnderlineThickness{fM2 15 div}fmfp abs dup setlinewidth/fM1 fmXD 4 index 1 and
0 ne{newpath 2 copy moveto 0/UnderlinePosition{fM2 10 div neg}fmfp neg rmoveto
fmdl}if 4 index 2 and 0 ne{newpath 2 copy moveto 0/XHeight{FmG newpath 0 0
moveto(x)F charpath flattenpath pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop
fM2 2. mul 3. div neg}if}fmfp 2. div rmoveto fmdl}if 4 index 4 and 0 ne{newpath
2 copy moveto 0/CapHeight{FmG newpath 0 0 moveto(H)F charpath flattenpath
pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop fM2 3. mul 4. div neg}if}fmfp
fM1 sub rmoveto fmdl}if pop pop pop pop pop FmR}FmBD/FmTx{/fM3 fmXD/fM2 fmXD
/fM1 fmXD 0 32 fM1 fM3 stringwidth pop fM2 sub fM3 length div sub 0 fM3 fm_y}
FmBD/fMN 0 def/fMC 1 def/fMM 2 def/fMY 3 def/fMK 4 def/fMS 5 def/fMNg 0
currenttransfer exec .5 gt def/fMCM fMN def/fMJK 0 def/fMJY 0 def/fMJM 0 def
/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1 def/fMCG 1 def/fMPt null def/fMCK[0 0
0 1 0 0 0]def/fmCH{fML1{14 dict dup begin fMCl{/HalftoneType 2 def
currentcolorscreen[/GraySpotFunction/GrayAngle/GrayFrequency/BlueSpotFunction
/BlueAngle/BlueFrequency/GreenSpotFunction/GreenAngle/GreenFrequency
/RedSpotFunction/RedAngle/RedFrequency]{exch def}forall}{/HalftoneType 1 def
currentscreen[/SpotFunction/Angle/Frequency]{exch def}forall}ifelse statusdict
/checkscreen known{statusdict/accuratescreens get exec}{F}ifelse
/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{fML1{begin
statusdict/checkscreen known{currentdict/AccurateScreens known{AccurateScreens}
{F}ifelse statusdict/setaccuratescreens get exec}if HalftoneType 1 eq{Frequency
Angle currentdict/SpotFunction get setscreen}{HalftoneType 2 eq{fMCl{
RedFrequency RedAngle currentdict/RedSpotFunction get GreenFrequency GreenAngle
currentdict/GreenSpotFunction get BlueFrequency BlueAngle currentdict
/BlueSpotFunction get GrayFrequency GrayAngle currentdict/GraySpotFunction get
setcolorscreen}{GrayFrequency GrayAngle currentdict/GraySpotFunction get
setscreen}ifelse}if}ifelse end}{sethalftone}ifelse}FmBD/FmCS{14 dict begin
/HalftoneType 2 def/AccurateScreens exch def/GraySpotFunction exch def
/GrayAngle exch def/GrayFrequency exch def/BlueSpotFunction exch def/BlueAngle
exch def/BlueFrequency exch def/GreenSpotFunction exch def/GreenAngle exch def
/GreenFrequency exch def/RedSpotFunction exch def/RedAngle exch def
/RedFrequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/FmSS{5 dict
begin/HalftoneType 1 def/AccurateScreens exch def/SpotFunction exch def/Angle
exch def/Frequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/fMPH
fmCH def/fmcp{/FmPr2 exch cvlit def/FmPr1 exch cvlit def/FmPrn FmPr1 length
FmPr2 length add array def FmPrn 0 FmPr1 putinterval FmPrn FmPr1 length FmPr2
putinterval FmPrn cvx}FmBD/fmEp{sub dup 0 lt{neg}if .001 le}FmBD/fmQC{2 copy 0
get exch 0 get fmEp{2 copy 1 get exch 1 get fmEp{2 copy 2 get exch 2 get fmEp{3
get exch 3 get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD
/fmQR{2 copy 4 get exch 0 get fmEp{2 copy 5 get exch 1 get fmEp{6 get exch 2
get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/FmSC{/fMCM fmXD/fMJB fmXD
/fMJG fmXD/fMJR fmXD/fMJK fmXD/fMJY fmXD/fMJM fmXD/fMJC fmXD fmCC}FmBD/FmSP{
/fMCM fmXD fmCC}FmBD/FrameSetSepColors{FrameMacDict begin[exch 1 add 1 roll]
/fMSC exch def end}fmBi def/fmLC{fMSC{exch dup 3 -1 roll fmQC{pop T exit}if}
forall dup T ne{pop F}if}FmBD/fmLR{fMSC{exch dup 3 -1 roll fmQR{pop T exit}if}
forall dup T ne{pop F}if}FmBD/fmLM{fMSC{exch dup 3 -1 roll dup 7 get 3 -1 roll
eq{exch pop T exit}{pop}ifelse}forall dup T ne{pop F}if}FmBD/fmCN{fMND F fMCM
fMN ne{/fMOP fmGG{/fMKO fmGG{pop T}if}if}if dup/fMND exch def{pop pop}{exch dup
null ne{exch pop dup type dup/integertype eq exch/realtype eq or{fm_g}{setcolor
}ifelse}{pop{1 fm_g}if}ifelse}ifelse}FmBD/fill{FrameMacDict begin fMND{newpath}
{fm_f}ifelse end}fmPE/eofill{FrameMacDict begin fMND{newpath}{fm_e}ifelse end}
fmPE/stroke{FrameMacDict begin fMND{newpath}{fm_t}ifelse end}fmPE/imagemask{
FrameMacDict begin fMND{FmG nulldevive fm_m FmR}{fm_m}ifelse end}fmPE/fmNX{load
fMND{FmG fMa2 currentmatrix end nulldevice setmatrix exec currentpoint
FrameMacDict/FmR get exec moveto}{end exec}ifelse}fmBi def/show{FrameMacDict
begin/fm_s fmNX}fmPE/ashow{FrameMacDict begin/fm_a fmNX}fmPE/widthshow{
FrameMacDict begin/fm_w fmNX}fmPE/awidthshow{FrameMacDict begin/fm_y fmNX}fmPE
/kshow{FrameMacDict begin/RealKshow fmNX}fmPE/image{FrameMacDict begin fMCM fMN
ne fMCM fMK ne and{FmG/fMOP fmGG{nulldevice}{fMNg{{pop 0}}{{pop 1}}ifelse
settransfer}ifelse/fm_i load end exec FmR}{/fm_i load end exec}ifelse}fmPE/fMGM
T def/fMBM F def/findcmykcustomcolor{0 0 0 4 -1 roll 8 array astore}fmPE
/findrgbcustomcolor{FrameMacDict begin 4 1 roll 3 copy/fmRY fmGG exec 8 4 roll
4 -1 roll 8 array astore end}fmPE/findgraycustomcolor{0 0 0 exch 1 exch sub
exch findcmykcustomcolor}fmPE/findhsbcustomcolor{FrameMacDict begin 4 1 roll
gsave fm_h currentrgbcolor grestore 4 -1 roll findrgbcustomcolor end}fmPE
/setcustomcolor{FrameMacDict begin dup type dup/integertype eq exch/realtype eq
or not{1.0}if exch dup/fMCC exch fmSG/fMBM F def fMCM fMN eq{0 4 getinterval
aload pop 4{4 index mul 4 1 roll}repeat fmSK pop}{dup{7 get}stopped{pop 4 get}
if fmLM{exch pop 0 4 getinterval aload pop fMCM fMS eq{fMJK eq exch fMJY eq and
exch fMJM eq and exch fMJC eq and{1 exch sub F}{pop 1 T}ifelse}{5{pop}repeat 1
T}ifelse}{fMCM fMK eq{3 get F}{fMCM fMY eq{2 get F}{fMCM fMM eq{1 get F}{fMCM
fMC eq{0 get F}{pop 0 T}ifelse}ifelse}ifelse}ifelse 3 1 roll mul 1 exch sub
exch}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/setoverprint{FrameMacDict begin
/fMOP exch fmSG null fmCN end}fmPE/currentoverprint{FrameMacDict begin/fMOP
fmGG end}fmPE/fmCC{fMCM fMN eq{fMGM fML1 or not{[/Pattern[/DeviceCMYK]]
setcolorspace fMCK 0 4 getinterval aload pop fMPt setcolor}{fMCK 3 get 1.0 ge{
fMCG fm_g}{fMAB not fMCl fMGM and and{0 1 3{fMCK exch get 1 fMCG sub mul}for
fmSK}{4 1 6{fMCK exch get fMGM{1 exch sub 1 fMCG sub mul 1 exch sub}{1.0 lt{
fMCG}{1}ifelse}ifelse}for fm_r}ifelse}ifelse}ifelse null/fMKO F fmSG}{fMBM{fMCG
F}{fMCK 0 4 getinterval aload fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch
fMJM eq and exch fMJC eq and{fMCG F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{
fMCM fMK eq{fMCG 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY
eq{pop fMCG 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop
pop fMCG 1.0 exch sub mul 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop fMCG
1.0 exch sub mul 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse}ifelse/fMKO exch fmSG fMGM fML1 or not{[/Pattern[/DeviceGray]]
setcolorspace fMPt}{fMGM not fML1 and{dup 1 lt{pop fMCG}if}if}ifelse}ifelse
fmCN}FmBD/setgray{FrameMacDict begin fMCM fMN eq{F}{fMCM fMK eq{F}{fMCM fMS eq
fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{F}{pop 1 T}ifelse}ifelse}ifelse/fMKO
exch fmSG fmCN end}fmPE/setrgbcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{
fm_r}{3 copy[4 1 roll]fmLR{fMCM fMS eq{fMJB eq exch fMJG eq and exch fMJR eq
and{0 F}{1 T}ifelse}{pop pop pop 1 T}ifelse}{/fmRY fmGG exec fMCM fMK eq{1.0
exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop
F}{fMCM fMM eq{pop pop 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop 1.0
exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch
fmSG fmCN}ifelse end}fmPE/sethsbcolor{FrameMacDict begin fMCM fMN eq{fm_h}{fm_h
currentrgbcolor setrgbcolor}ifelse end}fmPE/setcmykcolor where{pop/fmSK
/setcmykcolor load def}{/fmSK{4 1 roll 3{3 index add 0 fmax 1 fmin 1 exch sub 3
1 roll}repeat fm_r pop}FmBD}ifelse/currentcmykcolor where{pop}{
/currentcmykcolor{FrameMacDict begin currentrgbcolor/fmRY fmGG exec end}fmPE}
ifelse/setcmykcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{fmSK}{4 copy[5 1
roll]fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and exch fMJC eq
and{0 F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{fMCM fMK eq{1.0 exch sub 4 1
roll pop pop pop dup 1.0 ge}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop dup
1.0 ge}{fMCM fMM eq{pop pop 1.0 exch sub exch pop dup 1.0 ge}{fMCM fMC eq{pop
pop pop 1.0 exch sub dup 1.0 ge}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/fMFl[0 .1 .3 .5 .7 .9 .97 1<
0f1e3c78f0e1c387><0f87c3e1f0783c1e><cccccccccccccccc><ffff0000ffff0000><814224
1818244281><0102040810204080><8040201008040201>]def fML1{/patScreenDict 7 dict
dup begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c1e>[
135{pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff0000
ffff0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}dup
.75 2 sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<8040201008
040201>[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/fMPP 5 dict dup begin<0f87
c3e1f0783c1e>{3 setlinewidth -1 -1 moveto 9 9 lineto fm_t 4 -4 moveto 12 4
lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0f1e3c78f0e1c387>{3 setlinewidth
-1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12 moveto 12 4
lineto fm_t}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t
-1 -1 moveto 9 9 lineto fm_t}FmBD<8040201008040201>{1 setlinewidth -1 -1 moveto
9 9 lineto fm_t 4 -4 moveto 12 4 lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<
0102040810204080>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4
lineto fm_t 4 12 moveto 12 4 lineto fm_t}FmBD end def/fMPD 15 dict dup begin
/PatternType 1 def/PaintType 2 def/TilingType 3 def/BBox[0 0 8 8]def/XStep 8
def/YStep 8 def/PaintProc{begin fMPP fmBS known{fMPP fmBS get exec}{8 8 T[1 0 0
-1 0 8]fmBS fm_m}ifelse end}FmBD end def}ifelse/fMdp 72 0 fMdm dtransform dup
mul exch dup mul add sqrt def/freq fMdp dup 72 div round dup 0 eq{pop 1}if 8
mul div def/sangle 1 0 fMdm dtransform exch atan def sangle fMa2 rotate fMdm
fMa2 concatmatrix dup 0 get/sflipx exch def 3 get/sflipy exch def fML1{/fmgF{
fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPM fML1{{dup patScreenDict exch
known{patScreenDict exch get aload pop freq mul 5 2 roll fMa2 currentmatrix 1
get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgF sflipy 2 fmgF mul}{sflipx 0
fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{pop}ifelse fMNg{{neg}fmcp}if
bind systemdict/setscreen get exec}{/fmBS fmXD/fM1B 0 def/fM0B 0 def freq 0
fMa2 currentmatrix 1 get 0 ne{90 add/pflipx sflipx 1 fmgF def/pflipy sflipy 2
fmgF def}{/pflipx sflipx 0 fmgF def/pflipy sflipy 3 fmgF neg def}ifelse{pflipy
mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1 add 2 div 8 mul cvi def/yindex yy 1
add 2 div 8 mul cvi def fmBS yindex xindex 8 idiv add get 1 7 xindex 8 mod sub
bitshift and 0 ne fMNg{not}if{/fM1B fM1B 1 add def 1}{/fM0B fM0B 1 add def 0}
ifelse}setscreen fM0B fM0B fM1B add div fMNg{1.0 exch sub}if}ifelse/fMCG exch
def/fMGM F def fmCC}}{/fMPC 8 dict def{dup fMPC exch known{fMPC exch get}{dup
fMPD/fmBS 3 -1 roll put fMPD matrix makepattern dup fMPC 4 -1 roll 3 -1 roll
put}ifelse/fMCG 0 def/fMPt exch def/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{
/fMGM T def fML1{fMPH fmSH}if}if/fMCG exch def fmCC}FmBD/FmP{fMFl exch get dup
type/stringtype eq{fmPM}{fmgr}ifelse}FmBD/FmK{fMCK astore pop/fMBM F def fmCC}
FmBD/FmFB{0 0 0 1 0 0 0 fMCK astore pop/fMCG 0 def/fMBM T def fmCC}FmBD/fMOx
matrix def fMOx currentmatrix pop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD
/FmIO{fmRM}FmBD/FmEO{FmOs restore}FmBD/fm3R[{.3 mul add 1}bind{.59 mul add 2}
bind{.11 mul add round cvi fMs exch fMi exch put/fMi fMi 1 add def 0 0}bind]def
/fm31{/fMi 0 def 0 exch 0 exch{exch fm3R exch get exec}forall pop pop fMs}FmBD
/fm41{0 exch 4 exch{exch 1 sub dup 0 eq{pop 4 1 roll 3 index add 255 fmin 255
exch sub .11 mul 3 1 roll 3 index add 255 fmin 255 exch sub .59 mul 3 1 roll 3
index add 255 fmin 255 exch sub .3 mul add add 255 fmin round cvi fMs exch 3
index exch put pop 1 add 4}if}forall pop pop fMs}FmBD fML1{/Fmi{save userdict
/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD
/fMRC fmXD/fMGC fMGL 1 add array def/setcolortransfer where{pop
currentcolortransfer/gryt fmXD/blut fmXD/grnt fmXD/redt fmXD 0 1 fMGL{/fMIx
fmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNC fMIx get sub def/fMUY 1 fMBC fMIx
get sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU fMk currentundercolorremoval
exec def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt exec put fMNC fMIx 1 0 fMUM
FmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY FmU sub fmax sub blut exec
put fMGC fMIx 1 fMk currentblackgeneration exec sub gryt exec put}for{fMGL mul
cvi fMRC exch get}{fMGL mul cvi fMNC exch get}{fMGL mul cvi fMBC exch get}{fMGL
mul cvi fMGC exch get}setcolortransfer{pop 0}setundercolorremoval{}
setblackgeneration/fM9 T def}{0 1 fMGL{fMGC exch dup dup fMRC exch get .3 mul
exch dup fMNC exch get .59 mul exch fMBC exch get .11 mul add add put}for{fMGL
mul cvi fMGC exch get}currenttransfer fmcp settransfer}ifelse}{dup length 1 sub
/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}currenttransfer fmcp
settransfer}ifelse}{{{1 exch sub}currenttransfer fmcp settransfer}if}ifelse/fM5
fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if
/fM18 fM8 string def fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]{currentfile
fM18 fM5{readstring}{readhexstring}ifelse pop}fM9{{fM18}{fM18}T 3 colorimage}{
fm_i}ifelse fM7 restore}FmBD}{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{
dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD[/Indexed/DeviceRGB
fMGL{dup fMRC exch get exch dup fMNC exch get exch fMBC exch get}]setcolorspace
}{dup length 1 sub/fMGL fmXD/fMGC fmXD[/Indexed/DeviceGray fMGL{fMGC exch get}]
setcolorspace}ifelse}{1 4 index bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGray
fMGL 5 -1 roll{{fMGL div 1 exch sub}}{{fMGL div}}ifelse]setcolorspace}ifelse
/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale
}if/fM18 fM8 string def 7 dict begin/ImageType 1 def/Width fM4 def/Height fM3
def/ImageMatrix[fM4 0 0 fM3 fM4 2 div fM3 2 div]def/DataSource{currentfile fM18
fM5{readstring}{readhexstring}ifelse pop}def/BitsPerComponent fM6 def/Decode[0
fMGL]def currentdict end fm_i fM7 restore}FmBD}ifelse/Fmci{save userdict/fM7 3
-1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD/fM18 fM8 string def
/fMs fM18 0 fM18 length 3 idiv getinterval def translate rotate scale{-1 1
scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{currentfile fM18 fM5
{readstring}{readhexstring}ifelse pop}F 3 colorimage}{{currentfile fM18 fM5{
readstring}{readhexstring}ifelse pop fm31}fm_i}ifelse fM7 restore}FmBD/Fmc4{
save userdict/fM7 3 -1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD
/fM18 fM8 string def/fMs fM18 0 fM18 length 4 idiv getinterval def translate
rotate scale{-1 1 scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop}F 4 colorimage}{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop fm41}fm_i}ifelse fM7
restore}FmBD fML1{/fmAn{transform round .5 sub exch round .5 sub exch
itransform}FmBD/fmAc{transform round 1.5 sub exch round 1.5 sub exch itransform
}FmBD/fmDn{dtransform round exch round exch idtransform}FmBD/fmLn{0 dtransform
exch cvi 2 idiv 2 mul .1 add exch idtransform pop}FmBD/FmCv{fmDn 6 2 roll fmDn
6 2 roll fmDn 6 2 roll rcurveto}FmBD}{T setstrokeadjust/fmAn{}FmBD/fmAc{}FmBD
/fmDn{}FmBD/fmLn{}FmBD/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn moveto}FmBD/M{moveto}
FmBD/N{0 rmoveto}FmBD/S{fm_s}FmBD/A{0 exch fm_a}FmBD/W{0 exch 32 exch fm_w}FmBD
/X{0 exch 0 32 5 2 roll fm_y}FmBD/fmQP{fML1 fMGM or not{FmG dup 1 fm_g exec FmR
}if exec}FmBD/FmB{newpath fmAn moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}
FmBD/FmSo{fmLn setlinewidth setlinecap{fm_t}fmQP 0 0 moveto}FmBD/FmS{fmLn
setlinewidth closepath{fm_t}fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth
setlinecap{closepath}if setdash{fm_t}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{FmG{
fm_e}fmQP FmR}FmBD/fmq{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{fm_t}fmQP
0 0 moveto}FmBD/FmqF{fmq FmG{fm_f}fmQP FmR}FmBD/FmKp{{currentpoint}stopped{F 5
1 roll}{T 7 3 roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{
currentpoint}stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{FmG
newpath fmAn translate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3
roll arc closepath{fm_f}fmQP FmR}FmBD/FmAP{FmG{setdash}if fmLn setlinewidth
setlinecap fmSM newpath 2 index 2 div add exch 3 index 2 div sub exch fmAn 2
index 2 div sub exch 3 index 2 div add exch translate rotate scale 0.0 0.0 1.0
5 3 roll exch arcn{closepath}if fmRM{fm_t}fmQP FmR}FmBD/FmST{FmG fmAn translate
.3 fmLn setlinewidth 0 setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc
fm_f 0 fm_g 0 0 10 0 360 arc fm_t 36{1 0 moveto 0 0 10 -2.5 2.5 arc fm_f 10
rotate}repeat FmR}FmBD/FmSL{FmG fmAn translate .25 fmLn setlinewidth 0
setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0 fm_g 10 .5 fmLn
neg .1{0 0 3 -1 roll 0 360 arc fm_t}for FmR}FmBD/FrameEr where{pop}{userdict
/FrameEr(\000)put}ifelse/fMSJ 100 string def/fmXC{userdict/FrameEndPictSave 2
index put FmE{countdictstack userdict begin/showpage{}def/FrameDictStackDepth
exch def count/FrameStackDepth exch def}if userdict/FrameSuccessfull false put
FrameMacDict/fMHq get/$brkpage where dup{exch pop}if or{userdict
/FrameEndPictStopped false put}{userdict/FrameEndPictStopped true put
currentfile cvx stopped pop FrameSuccessfull not{systemdict/clear get exec
userdict/FrameEr get 0 1 put FrameMacDict begin FmG systemdict/initmatrix get
exec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}if
exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefont
setfont FrameEr1 fm_s( \()fm_s $error begin errorname 20 string cvs fm_s(, )
fm_s/command load 128 string cvs fm_s end(\))fm_s FrameEr2 print flush
FrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}if
not{exit}if(EndFrame5Picture)eq{exit}if}loop grestore end}if userdict
/FrameSuccessfull false put userdict/FrameEndPictStopped false put FrameMacDict
/fmIR get exec}ifelse}fmBi def/FmEP{save userdict/fM7 3 -1 roll put fMEd{
userdict 3 1 roll put}forall setoverprint{fMN FmSP}if[/fMef/fMet/fMeh/fMew/fMey
/fMex/fMei/fMej/fMek/fMel]{fmXD}forall fMex fMey translate fMet rotate fMew
fMeh scale fMef{-1 1 scale}if 1 fMej fMel sub div 1 fMek fMei sub div scale
fMej fMel add 2 div neg fMei fMek add 2 div neg translate 0 setgray 0
setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit[]0 setdash newpath
fML1 not{F setstrokeadjust}if T fmXC}FmBD/FmPI{newpath 0 0 moveto F fmXC}FmBD
/FmPc{save userdict/fM7 3 -1 roll put newpath 3 index neg 3 index neg translate
1 -1 scale 0.0 0.0 moveto T fmXC}FmBD/fmIR{FrameEndPictSave{fM7 type/savetype
eq{end/FrameDictStackDepth where{pop countdictstack FrameDictStackDepth sub dup
0 gt{{end}repeat}{pop}ifelse count FrameStackDepth sub dup 0 gt{{pop}repeat}{
pop}ifelse}if fM7 restore}if}if FrMacBegin}FmBD userdict/EndFrame5Picture{
userdict/FrameEndPictSave 3 -1 roll put userdict/FrameEndPictStopped get{
userdict/FrameSuccessfull true put stop}{FrameMacDict/fmIR get exec}ifelse}fmBi
put/alphaimage where{pop}{/alphaimage{1 ne{limitcheck}if not{limitcheck}if pop
image}fmPE}ifelse/fmDE{systemdict/initgraphics get exec clippath{pathbbox}
stopped{100 100 512 692}if exch pop add 2. div newpath moveto
(Courier-BoldOblique)findfont 18 scalefont setfont currentpoint 2 copy FrameEr3
fm_s 20 sub 2 copy moveto FrameEr4 fm_s 20 sub 2 copy moveto(\()fm_s statusdict
/jobname get fm_s(\))fm_s 20 sub moveto FrameEr5 fm_s showpage}FmBD/cd where{
dup/cd get/fmRC fmXD/cd{FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if/fmRC load
end exec}fmBi put}{/endp where{dup/endp get/fMRE fmXD/endp{FrameMacDict/fMRE
get exec FrameEr 0 get 0 ne{FrameMacDict begin currentfile fMSJ{readline}
stopped{pop exch pop true}if pop(%%Trailer)eq{fmDE}if end}if}fmBi put}if}ifelse
systemdict/setpacking known{fMSP setpacking}if end
%%EndProcSet
%%FRMSetup
FrameMacDict begin
/FrameEr1(PostScript error)def
/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def
/FrameEr3(FrameMaker has detected one or more)def
/FrameEr4(PostScript errors in this document.)def
/FrameEr5(Please check your output.)def
end
%%FRMEndSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 1 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
0 0 :M
f56 sf
( )S
6 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.327 39 M (PCI Bus Binding to:)S
180.993 126 M (IEEE Std 1275-1994)S
191.681 155 M (Standard for Boot)S
135.366 184 M (\(Initialization Configuration\))S
233.701 213 M (Firmware)S
223.005 329 M (Revision 2.0)S
FmE
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 2 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
6 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
6 0 :M
f67 sf
( )S
9 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
9 0 :M
f92 sf
( )S
12 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (iii)S
FmE
12 0 :M
f124 sf
( )S
19 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
19 0 :M
f135 sf
( )S
21 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
152.655 29.667 M (Foreword by the Chairman of the IEEE 1275 Working Group)S
FmE
22 0 :M
f146 sf
( )S
24 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.851 41.667 M (\(This foreword is not a part of the Specification.\))S
FmE
24 0 :M
f135 sf
( )S
26 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 71.667 M (Introduction)S
FmE
27 0 :M
f146 sf
( )S
29 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 87.667 M 0.228(Firmware is the ROM-based software that controls a computer between the time it is turned on and the time the)W
60 99.667 M -0.341(primary operating system takes control of the machine. Firmware\'s responsibilities include testing and initializing)W
60 111.667 M 0.184(the hardware, determining the hardware configuration, loading \(or booting\) the operating system, and providing)W
60 123.667 M (interactive debugging facilities in case of faulty hardware or software.)S
FmE
29 0 :M
f135 sf
( )S
31 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 153.667 M (Historical Perspective)S
FmE
32 0 :M
f146 sf
( )S
34 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 169.667 M -0.281(Historically, firmware designs have been proprietary and often specific to a particular bus or instruction set archi-)W
60 181.667 M -0.429(tecture \(ISA\). This need not be the case. Firmware can be designed to be machine-independent and easily portable)W
60 193.667 M 0.112(to different hardware. There is a strong analogy with operating systems in this respect. Prior to the advent of the)W
60 205.666 M -0.139(portable UNIX operating system in the mid-seventies, the prevailing wisdom was that operating systems must be)W
60 217.666 M -0.349(heavily tuned to a particular computer system design and thus effectively proprietary to the vendor of that system.)W
60 235.666 M -0.37(The )W
FmE
34 0 :M
f172 sf
( )S
36 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
77.677 235.666 M -0.37(IEEE Std 1275-1994 Standard for Boot \(Initialization Configuration\), Core Requirements and Practices)W
FmE
37 0 :M
f146 sf
( )S
39 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
491.318 235.666 M -0.37(  \(re-)W
60 247.666 M -0.471(ferred to in the remainder of this document as Open Firmware\) specification is based on Sun Microsystem\'s Open-)W
60 259.666 M 0.738(Boot firmware. The OpenBoot design effort began in 1988, when Sun was building computers based on three)W
60 271.666 M -0.206(different processor families, thus OpenBoot was designed from the outset to be ISA-independent \(independent of)W
60 283.666 M 0.296(the Instruction Set Architecture\). The first version of OpenBoot was introduced on Sun\'s SPARCstation 1 com-)W
60 295.666 M 0.27(puters. Based on experience with those machines, OpenBoot version 2 was developed, and was first shipped on)W
60 307.666 M (SPARCstation 2 computers. This standard is based on OpenBoot version 2.)S
FmE
39 0 :M
f135 sf
( )S
41 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 337.666 M (Purpose and Features of the Open Firmware Specification)S
FmE
42 0 :M
f146 sf
( )S
44 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 353.666 M (Open Firmware has the following features:)S
78 369.666 M -0.361(Mechanism for loading and executing programs \(such as operating systems\) from disks, tapes, network inter-)W
78 381.666 M (faces, and other devices.)S
78 397.666 M (ISA-independent method for identifying devices \"plugged-in\" to expansion buses, and for providing firm-)S
78 409.666 M (ware and diagnostics drivers for these devices.)S
78 425.666 M (An extensible and programmable command language based on the Forth programming language.)S
78 441.666 M (Methods for managing user-configurable options stored in non-volatile memory.)S
78 457.666 M (A \"call back\" interface allowing other programs to make use of Open Firmware services.)S
78 473.666 M (Debugging tools for hardware, firmware, firmware drivers, and system software.)S
FmE
44 0 :M
f135 sf
( )S
46 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 503.666 M (Purpose of this Bus Binding)S
FmE
47 0 :M
f146 sf
( )S
49 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 519.666 M -0.063(This document specifies the application of Open Firmware to the PCI Local Bus, including PCI-specific require-)W
60 531.666 M (ments and practices for address format, interrupts, probing, and related properties and methods.)S
60 549.666 M -0.222(The core requirements and practices specified by Open Firmware must be augmented by system-specific require-)W
60 561.666 M 0.168(ments to form a complete specification for the firmware for a particular system. This document establishes such)W
60 573.666 M (additional requirements pertaining to PCI.)S
FmE
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 3 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
49 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
49 0 :M
f67 sf
( )S
52 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
52 0 :M
f92 sf
( )S
55 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (iv)S
FmE
55 0 :M
f124 sf
( )S
62 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
62 0 :M
f135 sf
( )S
64 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 29.667 M (Task Group Members)S
FmE
65 0 :M
f146 sf
( )S
67 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 45.667 M (The following individuals were members of the Task Group that produced this document:)S
42 61.667 M (Ron Hochsprung, Apple Computer, Inc.)S
42 77.667 M (Mitch Bradley, FirmWorks \(Chair, IEEE P1275 Working Group\))S
42 93.667 M (David Kahn, Sun Microsystems, Inc. \(Vice Chair, IEEE P1275 Working Group\))S
42 125.667 M (TRADEMARKS)S
FmE
67 0 :M
f135 sf
( )S
69 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 141.667 M (Sun Microsystems)S
FmE
70 0 :M
f146 sf
( )S
72 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
120.032 141.667 M ( is a registered trademark of Sun Microsystems, Inc. in the United States and other countries.)S
FmE
72 0 :M
f135 sf
( )S
74 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 157.667 M (OpenBoot)S
FmE
75 0 :M
f146 sf
( )S
77 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.333 157.667 M ( is a trademark of Sun Microsystems, Inc.)S
FmE
77 0 :M
f135 sf
( )S
79 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 173.667 M (UNIX)S
FmE
80 0 :M
f146 sf
( )S
82 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
67.547 173.667 M ( is a registered trademark of UNIX System Laboratories, Inc.)S
FmE
82 0 :M
f135 sf
( )S
84 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 189.667 M (SPARC)S
FmE
85 0 :M
f146 sf
( )S
87 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
75.325 189.667 M -0.34( is a registered trademark of SPARC International, Inc. Products bearing the SPARC trademark are based)W
42 201.666 M (on an architecture developed by Sun Microsystems, Inc.)S
FmE
87 0 :M
f135 sf
( )S
89 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 217.666 M (SPARCstation)S
FmE
90 0 :M
f146 sf
( )S
92 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.207 217.666 M ( is a trademark of SPARC International, Inc., licensed exclusively to Sun Microsystems, Inc.)S
42 233.666 M -0.561(All other products or services mentioned in this document are identified by the trademarks, service marks, or prod-)W
42 245.666 M 1.103(uct names as designated by the companies who market those products. Inquiries concerning such trademarks)W
42 257.666 M (should be made directly to those companies.)S
42 273.666 M (The latest version of this binding may be found in the Bus Supplements area of the Web page at:)S
FmE
92 0 :M
f183 sf
( )S
98 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 289.666 M 0 0 150(http://playground.sun.com)FmTx
0 0 6(/)FmTx
0 0 24(1275)FmTx
FmE
98 0 :M
f146 sf
( )S
100 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 310.666 M -0.226(Membership in the Open Firmware Working Group is open to all interested parties.  The working group meets at )W
42 321.666 M (regular intervals at various locations.  For more information send email to:)S
FmE
101 0 :M
f183 sf
( )S
107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 342.666 M 0 0 150(p1275-wg@risc.sps.mot.com)FmTx
FmE
107 0 :M
f135 sf
( )S
109 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 379.666 M (Revision History)S
42 395.666 M (Revision 0.1)S
20.337 N (Oct. 7, 1993)S
FmE
109 0 :M
f146 sf
( )S
111 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 395.666 M 0.367(First revision distributed outside of task group \(the number 0.1 did)W
222 405.666 M (not appear on  the cover\).)S
FmE
112 0 :M
f135 sf
( )S
114 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 419.666 M (Revision 0.2)S
20.337 N (Oct. 28, 1993)S
FmE
114 0 :M
f146 sf
( )S
116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 419.666 M 0.46(Changed the designator for 64-bit memory space from \"M\" to \"x\".)W
222 429.666 M -0.143(Changed the parts of the specification related to )W
-0.143(PCI-to-PCI b)W
(ridges)S
222 439.666 M (to reflect the 0.4 bridge architecture spec.)S
FmE
117 0 :M
f135 sf
( )S
119 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 453.666 M (Revision 1.0)S
20.337 N (April 14, 1994)S
FmE
119 0 :M
f146 sf
( )S
121 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 453.666 M 0.445(Changed references from P1275 to Open Firmware.  Changed size)W
222 463.666 M (of fields for I/O address representations to reflect PCI architecture.)S
FmE
122 0 :M
f135 sf
( )S
124 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 477.666 M (Revision 1.1 )S
17.837 N (June 28, 1994)S
FmE
124 0 :M
f146 sf
( )S
126 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 477.666 M (Added \'t\'-bit for aliasing, and discussion of \"hard-decode\" cases.)S
FmE
127 0 :M
f135 sf
( )S
129 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 491.666 M (Revision 1.2)S
20.337 N (August 7, 1994)S
FmE
129 0 :M
f146 sf
( )S
131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 491.666 M -0.351(Added note about DD encoding.  Added new standard properties for)W
222 501.666 M -0.269(those of draft Rev 2.1 PCI spec.  Deleted enabling of Memory space)W
222 511.666 M (at post-probe.  Added driver encapsulation description.)S
FmE
132 0 :M
f135 sf
( )S
134 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 525.666 M (Revision 1.3)S
20.337 N (September 27, 1994)S
FmE
134 0 :M
f146 sf
( )S
136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 525.666 M 0.011(Changed generated name for Subsystem, if present.  Added rule for)W
222 535.666 M (I/O assignment.  Added discussion of )S
(PCI-to-PCI b)S
(ridge probing.)S
FmE
137 0 :M
f135 sf
( )S
139 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 549.666 M (Revision 1.4)S
20.337 N (December 16, 1994)S
FmE
139 0 :M
f146 sf
( )S
141 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 549.666 M 1.45(Added Expansion ROM address assignment, \')W
FmE
142 0 :M
f183 sf
( )S
148 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
412.673 549.666 M 0 0 6(t)FmTx
FmE
148 0 :M
f146 sf
( )S
150 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
418.673 549.666 M 1.45(\' bit for \"below 1)W
222 559.666 M (MB\".)S
FmE
150 0 :M
f135 sf
( )S
152 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 573.666 M (Revision 1.5)S
20.337 N (March 20, 1995)S
FmE
153 0 :M
f146 sf
( )S
155 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 573.666 M 0.09(Applied proposals 241, 242, 249, 264, 273.  Added Legacy devices)W
222 583.666 M 1.283(section, \"clock-frequenc)W
(y)S
1.283(\" property, clarified address assignment,)W
222 593.666 M (added \'t\' bit for relocatable I/O space.)S
FmE
155 0 :M
f135 sf
( )S
157 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 607.666 M (Revision 1.6)S
20.337 N (October 12, 1995)S
FmE
158 0 :M
f146 sf
( )S
160 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 607.666 M (Applied proposal)S
(s)S
( 274)S
(,286, 287 and 290)S
(.)S
FmE
160 0 :M
f135 sf
( )S
162 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 621.666 M (Revision 1.65)S
15.337 N (March 4, 1995)S
FmE
163 0 :M
f146 sf
( )S
165 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.375 621.666 M (\324)S
43.298 N (Applied proposals 251, 293, 303; fixed 287 changes.)S
FmE
165 0 :M
f135 sf
( )S
167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 635.666 M (Revision 1.7)S
20.337 N (April 22, 1996)S
FmE
168 0 :M
f146 sf
( )S
170 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 635.666 M -0.389(Applied proposals 308, 311, 314)W
-0.389(, 323a)W
-0.389(; added )W
FmE
170 0 :M
f183 sf
( )S
176 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
405.906 635.666 M 0 0 48(\"ranges\")FmTx
FmE
176 0 :M
f146 sf
( )S
178 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
453.906 635.666 M -0.389( usage in-)W
222 645.666 M (formation.  Added )S
FmE
179 0 :M
f209 sf
( )S
185 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.086 645.666 M 0 0 24(open)FmTx
FmE
185 0 :M
f146 sf
( )S
187 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.086 645.666 M ( and )S
FmE
187 0 :M
f209 sf
( )S
193 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
341.525 645.666 M 0 0 30(close)FmTx
FmE
193 0 :M
f146 sf
( )S
195 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
371.525 645.666 M ( notes to child nodes.)S
FmE
196 0 :M
f135 sf
( )S
198 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 659.666 M (Revision 1.75)S
15.337 N (June 17, 1996)S
FmE
198 0 :M
f146 sf
( )S
200 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 659.666 M (Applied changes from 4/30/96 meeting.)S
FmE
201 0 :M
f135 sf
( )S
203 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 673.666 M (Revision 2.0)S
20.337 N (August 7, 1996)S
FmE
203 0 :M
f146 sf
( )S
205 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 673.666 M (Applied proposals 366, 367)S
(.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
22 666.999 2 24 FmqF
FmE
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 4 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
206 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
206 0 :M
0 G
f67 sf
( )S
209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
209 0 :M
f92 sf
( )S
212 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (v)S
FmE
212 0 :M
f124 sf
( )S
219 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
219 0 :M
f92 sf
( )S
222 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 31 M (1. )S
(Overview and References)S
2.08 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(1)S
60 45 M ( 1.1. )S
(References)S
0.712 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(1)S
60 59 M ( 1.2. )S
(Definitions of Terms)S
1.371 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(1)S
60 73 M (2. )S
(Bus Characteristics)S
0.038 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(1)S
60 87 M ( 2.1. )S
(Address Spaces)S
2.367 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(1)S
60 101 M (  2.1.1. )S
(Memory Space)S
2.03 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(1)S
60 115 M (  2.1.2. )S
(I)S
(/O Space)S
0.36 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(2)S
60 129 M (  2.1.3. )S
(Hard-decoded Spaces)S
0.729 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(2)S
60 143 M (  2.1.4. )S
(Configuration Space)S
0.032 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(2)S
60 157 M (   2.1.4.1. )S
(Bus Number:  8 bits.)S
2.344 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(3)S
60 171 M (   2.1.4.2. )S
(Device Number:  5 bits)S
2.039 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(3)S
60 185 M (   2.1.4.3. )S
(Function Number:  3 bits)S
2.35 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(3)S
60 199 M (   2.1.4.4. )S
(Register Number:  8 bits)S
2.03 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(3)S
60 213 M (   2.1.4.5. )S
(\"Address-less\" Cycles)S
1.248 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(4)S
60 227 M (   2.1.4.6. )S
(Low-order Address Bits)S
1.046 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(4)S
60 241 M ( 2.2. )S
(Address Formats and Representations)S
1.395 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(4)S
60 255 M (  2.2.1. )S
(Physical Address Formats)S
0.7 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(4)S
60 269 M (   2.2.1.1. )S
(Numerical Representation)S
0.393 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(4)S
60 283 M (   2.2.1.2. )S
(Text Representation)S
2.039 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(6)S
60 297 M (   2.2.1.3. )S
(Unit Address Representation)S
2.382 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(7)S
60 311 M ( 2.3. )S
(Bus-specific Configuration Variables)S
0.741 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(8)S
60 325 M ( 2.4. )S
(Format of a Probe List)S
2.367 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(8)S
60 339 M ( 2.5. )S
(FCode Evaluation Semantics)S
1.696 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(8)S
60 353 M (3. )S
(Bus Nodes Properties and Methods)S
1.708 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
60 367 M ( 3.1. )S
(Bus Node )S
(Properties)S
2.695 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
60 381 M (  3.1.1. )S
(Open Firmware-defined Properties for Bus Nodes)S
0.439 N (. . . . . . . . . . . . . . . . . . . . . . . . )S
(10)S
60 395 M (  3.1.2. )S
(B)S
(us-specific Properties for Bus Nodes)S
2.071 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(11)S
60 409 M ( 3.2. )S
(Bus Node )S
(Methods)S
0.346 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(11)S
60 423 M (  3.2.1. )S
(Open Firmware-defined Methods for Bus Nodes)S
1.09 N (. . . . . . . . . . . . . . . . . . . . . . . . . )S
(11)S
60 437 M (  3.2.2. )S
(Bus-specific Methods for Bus Nodes)S
2.722 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(12)S
60 451 M (  3.2.3. )S
(Configuration Access Words)S
1.72 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(12)S
60 465 M (   3.2.3.1. )S
(Address-less Access Words)S
1.734 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(13)S
60 479 M (4. )S
(Child Node)S
( Properties and Methods)S
1.374 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(13)S
60 493 M ( 4.1. )S
(Child Node P)S
(roperties)S
0.694 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(13)S
60 507 M (  4.1.1. )S
(Open Firmware-defined Properties for Child Nodes)S
1.438 N ( . . . . . . . . . . . . . . . . . . . . . . )S
(13)S
60 521 M (  4.1.2. )S
(Bus-specific Properties for Child Nodes)S
0.07 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(14)S
60 535 M (   4.1.2.1. )S
(Standard PCI Configuration Properties)S
2.719 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(15)S
60 549 M ( 4.2. )S
(Child Node M)S
(ethods)S
1.345 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(16)S
60 563 M (5. )S
(Bus-specific User Interface Commands)S
0.097 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(16)S
60 577 M (6. )S
(Probing PCI-)S
(to-)S
(PCI bridges)S
1.025 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(16)S
60 591 M (7. )S
(Legacy devices)S
0.712 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(17)S
60 605 M (8. )S
(Relationship between PCI Base Registers and Open Firmware Properties)S
1.122 N ( . . . . . . . . . )S
(17)S
60 619 M (9. )S
(ROM Image Format for FCode:)S
2.707 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(18)S
60 633 M (10. )S
(Encapsulated Drivers)S
2.054 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(18)S
60 647 M ( 10.1. )S
(Naming conventions)S
2.355 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(19)S
60 661 M (11. )S
(Examples of )S
(\"reg\")S
( and )S
(\"assigned-addresses\" )S
(properties)S
0.202 N (. . . . . . . . . . . . . . . . . . . . . . . )S
(19)S
60 675 M ( 11.1. )S
(Creation of )S
(\"reg\")S
( and )S
(\"assigned-address\")S
( properties)S
1.195 N ( . . . . . . . . . . . . . . . . . . . . . . . )S
(19)S
60 689 M (  11.1.1. )S
(A single 256-byte address base register, without FCode.)S
1.084 N (. . . . . . . . . . . . . . . . . . )S
(19)S
60 703 M (  11.1.2. )S
(A simple VGA device, without FCode.)S
1.374 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(20)S
FmE
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 5 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
222 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
222 0 :M
f67 sf
( )S
225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
225 0 :M
f92 sf
( )S
228 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (vi)S
FmE
228 0 :M
f124 sf
( )S
235 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
235 0 :M
f92 sf
( )S
238 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 31 M (  11.1.3. )S
(A single 256 resource, Memory and I/O accessible, without FCode)S
0.108 N ( . . . . . . . . . )S
(20)S
42 45 M (  11.1.4. )S
(A single 256 resource, Memory and I/O accessible, with FCode.)S
0.442 N ( . . . . . . . . . . . )S
(21)S
42 59 M ( 11.2. )S
(Computing PCI addresses from )S
(\"reg\")S
( and )S
(\"assigned-addresses\")S
2.52 N (. . . . . . . . . . . . . . )S
(21)S
42 73 M (  11.2.1. )S
(Determining the address of a register of example in Section 11.1.4.)S
2.458 N (. . . . . . . . . )S
(22)S
42 87 M (  11.2.2. )S
(Determining the address of a register of example in Section 11.1.2.)S
2.458 N (. . . . . . . . . )S
(22)S
42 101 M (12. )S
(Use of the )S
FmE
238 0 :M
f209 sf
( )S
244 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.31 101 M 0 0 48(\"ranges\")FmTx
FmE
244 0 :M
f92 sf
( )S
247 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.31 101 M ( property)S
0.044 N (. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(22)S
42 115 M (13. )S
(Example of use of add-ranges check)S
2.76 N ( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . )S
(23)S
FmE
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 6 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
247 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
247 0 :M
f67 sf
( )S
250 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
250 0 :M
f92 sf
( )S
253 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (1)S
FmE
253 0 :M
f124 sf
( )S
260 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
260 0 :M
f67 sf
( )S
263 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 31 M (1. Overview and References)S
FmE
263 0 :M
f146 sf
( )S
265 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 47.667 M -0.137(This specification describes the application of Open Firmware to computer systems that use the PCI Local bus as)W
60 59.667 M (defined in)S
( [1] and [2].)S
FmE
266 0 :M
f67 sf
( )S
269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 94 M (1.1. )S
(References)S
FmE
269 0 :M
f146 sf
( )S
271 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 110.667 M 0.224([1]  )W
FmE
271 0 :M
f172 sf
( )S
273 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
77.104 110.667 M 0.224(IEEE Std 1275-1994, IEEE Standard for Boot \(Initialization Configuration\) Firmware: Core Practices and)W
60 122.667 M (Requirements)S
FmE
274 0 :M
f146 sf
( )S
276 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114.978 122.667 M (, published by IEEE.)S
60 138.667 M ([2])S
( )S
FmE
276 0 :M
f172 sf
( )S
278 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
74.155 138.667 M ( PCI Local Bus Specification, Revision 2.1, June 1, 1995)S
FmE
279 0 :M
f146 sf
( )S
281 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301.05 138.667 M (, published by the PCI Special Interest Group.)S
60 154.667 M ([)S
(3])S
0.122(  )W
FmE
281 0 :M
f172 sf
( )S
283 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76.899 154.667 M (P)S
0.122(CI-to-PCI Bridge Architecture Specification, Revision 1.0 April 5, 199)W
(4)S
FmE
284 0 :M
f146 sf
( )S
286 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
371.402 154.667 M 0.122( , published by the PCI Special In-)W
60 166.667 M (terest Group.)S
60 182.667 M ([)S
(4])S
-0.229(  )W
FmE
286 0 :M
f172 sf
( )S
288 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76.197 182.667 M -0.229(Open Firmware Recommended Practice:  Generic Names)W
FmE
289 0 :M
f146 sf
( )S
291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306.388 182.667 M -0.229(, published by the Open Firmware Working Group.)W
FmE
291 0 :M
f67 sf
( )S
294 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 217 M (1.2. Definitions of Terms)S
FmE
294 0 :M
f135 sf
( )S
296 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 233.667 M (bus controller:)S
FmE
297 0 :M
f146 sf
( )S
299 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123.032 233.667 M (  a hardware device that implements a PCI bus.)S
FmE
299 0 :M
f135 sf
( )S
301 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 249.667 M (hard decode:)S
FmE
302 0 :M
f146 sf
( )S
304 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.818 249.667 M (  a decoding which is not based upon a base register, but, rather, is fixed.)S
FmE
304 0 :M
f135 sf
( )S
306 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 265.667 M (PCI device:)S
FmE
307 0 :M
f146 sf
( )S
309 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.697 265.667 M (  a hardware device that connects to or \"plugs in\" to a PCI bus)S
(.)S
FmE
309 0 :M
f135 sf
( )S
311 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 281.666 M (P)S
-0.167(CI function:)W
FmE
312 0 :M
f146 sf
( )S
314 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118.427 281.666 M -0.167(  one of a number of logically-independent parts of a PCI device. Many PCI devices have only one)W
60 293.666 M (function per device; in such cases, the terms \"PCI function\" and \"PCI device\" can be used interchangeably.)S
FmE
314 0 :M
f135 sf
( )S
316 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 311 M 0.257(PCI-to-PCI b)W
(ridge:)S
FmE
317 0 :M
f92 sf
( )S
320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.275 311 M 0.309(  )W
FmE
320 0 :M
f146 sf
( )S
322 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.892 311 M 0.257(a hardware device that is, from an electrical standpoint, a single PCI function on one PCI)W
60 323.666 M (bus \(the \"parent\" bus\) and the bus controller of a secondary PCI bus \(the \"child\" bus\).)S
FmE
322 0 :M
f135 sf
( )S
324 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 339.666 M (PCI domain:)S
FmE
325 0 :M
f146 sf
( )S
327 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.269 339.666 M (  a group of PCI buses connected together in a tree topology by )S
(PCI-to-PCI b)S
(ridges.)S
FmE
327 0 :M
f135 sf
( )S
329 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 355.666 M -0.237(relocatable region:)W
FmE
330 0 :M
f146 sf
( )S
332 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.002 355.666 M -0.237(  a range of PCI address space whose base address is established by a single base address reg-)W
60 367.666 M (ister.)S
FmE
332 0 :M
f135 sf
( )S
334 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 383.666 M (Master PCI bus:)S
FmE
335 0 :M
f146 sf
( )S
337 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131.084 383.666 M (  within a PCI domain, the PCI bus that forms the root of the tree structure.)S
FmE
337 0 :M
f135 sf
( )S
339 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 399.666 M -0.004(bus node:)W
FmE
340 0 :M
f146 sf
( )S
342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.388 399.666 M -0.004(  an Open Firmware device node that represents a bus controller.  In cases where a node represents the)W
60 411.666 M -0.262(interface, or \"bridge\", between one bus and another, the node is both a bus node relative to the bus it controls, and)W
60 423.666 M -0.408(a child node of its parent bus.  Note that an Open Firmware device node is not in itself a physical hardware device;)W
60 435.666 M (rather, it is a software abstraction that describes a hardware device.)S
FmE
342 0 :M
f135 sf
( )S
344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 451.666 M -0.227(child node:)W
FmE
345 0 :M
f146 sf
( )S
347 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107.27 451.666 M -0.227(  an Open Firmware device node that represents a PCI function.  Such a node can correspond to either)W
60 463.666 M 0.162(a device that is \"hardwired\" to a planar PCI bus, or to an \"add in\" expansion card that is plugged into a standard)W
60 475.666 M (PCI Expansion Connector.)S
FmE
347 0 :M
f67 sf
( )S
350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 517 M (2. Bus Characteristics)S
60 552 M (2.1. Address Spaces)S
FmE
350 0 :M
f146 sf
( )S
352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 568.666 M (PCI has several address spaces \(Memory, I/O, Configuration\), with different addressing characteristics.)S
FmE
353 0 :M
f67 sf
( )S
356 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 603 M (2.1.1. Memory Space)S
FmE
356 0 :M
f146 sf
( )S
358 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 619.666 M -0.144(Memory Space is the primary address space of PCI; it corresponds to traditional memory and \"memory-mapped\")W
60 631.666 M 0.314(I/O.  PCI allows for a full 64-bit address range in Memory Space; however, most devices will not require a full)W
60 643.666 M 0.01(64-bit range.  In order to provide compatibility between devices designed for 64-bit addressing and those for 32-)W
60 655.666 M 0.024(bit addressing, the 32-bit address space appears as the first 4 GB region of the 64-bit space; i.e., 64-bit addresses)W
60 667.666 M -0.006(with the 32 most-significant bits equal to 0 are used to access 32-bit devices.  64-bit initiators are required to use)W
60 679.666 M (the 32-bit address protocol for any 64-bit address in which the upper 32 bits are all 0.)S
60 697.666 M -0.388(The PCI specification requires that all of a device\'s relocatable resources must be mappable in Memory Space, i.e.)W
0.502 0.502 0 0.498 0 0 0.502 FmK
40 104 2 54 FmqF
40 176 2 10 FmqF
FmE
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 7 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
358 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
358 0 :M
0 G
f67 sf
( )S
361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
361 0 :M
f92 sf
( )S
364 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (2)S
FmE
364 0 :M
f124 sf
( )S
371 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
371 0 :M
f146 sf
( )S
373 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 29.667 M (it is not permissible for a resource to be mappable only in I/O Space \(described below\).)S
42 47.667 M -0.233(The regions of Memory Space to which a PCI device responds are assigned dynamically during system initializa-)W
42 59.667 M 0.381(tion, by setting device base address registers in Configuration Space \(see below\).  The size of each such region)W
42 71.667 M 0.008(must be a power of two, and the assigned base address must be aligned on a boundary equal to the size of the re-)W
42 83.667 M (gion.)S
42 101.667 M -0.461(The encoding of the base address registers for Memory Space allows a resource to require address allocation with-)W
42 113.667 M 0.114(in the first 1 MB.  This requirement is reflected in the )W
FmE
374 0 :M
f209 sf
( )S
380 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.231 113.667 M 0 0 30(\"reg\")FmTx
FmE
380 0 :M
f146 sf
( )S
382 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
290.231 113.667 M 0.114( property entry for that base register by having the)W
FmE
382 0 :M
f183 sf
( )S
388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 125.667 M 0 0 18(\'t\')FmTx
FmE
388 0 :M
f146 sf
( )S
390 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 125.667 M ( bit set.)S
42 143.667 M -0.058(Memory Space addressing is \"flat\" across a PCI domain, in that addresses are not transformed as they cross )W
(PCI-)S
42 155.667 M -0.081(to-PCI b)W
-0.081(ridges.  The flat address space is not necessarily limited to a single PCI domain; the PCI design attempts)W
42 167.667 M 0.154(to make it possible to have a flat address across multiple PCI domains that are peers of one another on a higher-)W
42 179.666 M (level host address bus)S
(.)S
FmE
391 0 :M
f67 sf
( )S
394 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 214 M (2.1.2. )S
(I)S
(/O Space)S
FmE
394 0 :M
f146 sf
( )S
396 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 230.666 M -0.46(I/O Space is similar to Memory Space, except that it is intended as to be used with the special \"I/O access\" instruc-)W
42 242.666 M 0.4(tions that some processors have. As with Memory Space, I/O Space addresses are assigned dynamically during)W
42 254.666 M (system initialization, and the addressing is \"flat\" across a PCI domain.)S
42 270.666 M 19.012(Relocatable I/O Space )W
FmE
396 0 :M
f172 sf
( )S
398 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
190.934 270.666 M (shall)S
FmE
399 0 :M
f146 sf
( )S
401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.38 270.666 M 19.012( be allocated at addresses of the form)W
FmE
401 0 :M
f220 sf
( )S
406 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 282.666 M 0 0 195(aaaa.aaaa.aaaa.aaaa.aaaa.aa00.aaaa.aaaa)FmTx
FmE
406 0 :M
f146 sf
( )S
408 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237 282.666 M -0.238(.  This guarantees that relocatable I/O addresses will not conflict)W
42 294.666 M 0.419(with hard-decoded address that have non-zero bits in AD[9\3118].  )W
0.419(Some PCI-to-PCI bridges restrict I/O address)W
42 306.666 M (space to 16 bits, thus, relocatable I/O space behind such a bridge shall be of the form: )S
42 322.666 M ( )S
FmE
409 0 :M
f220 sf
( )S
414 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
44.5 322.666 M 0 0 5(0)FmTx
0 0 195(000.0000.0000.0000.aaaa.aa00.aaaa.aaaa.)FmTx
FmE
414 0 :M
f172 sf
( )S
416 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 338.666 M -0.386(Note:  although the PCI specification allows 32-bit I/O Space addresses, many of the processors that have special)W
42 350.666 M -0.028(I/O access instructions present only a 16-bit I/O address.  However, Open Firmware allows for the specification)W
42 362.666 M (of the full 32-bit range.)S
FmE
416 0 :M
f146 sf
( )S
418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 378.666 M 0.608(PCI also allows devices to have I/O base address registers that implement only the low-order 16 bits.  I.e., the)W
42 390.666 M -0.156(upper 16 bits are assumed to be 0.  When probing, after writing all 1s, the data read back will have the high-order)W
42 402.666 M -0.046(16 bits equal to 0, while the low-order 16 bits will reflect the address space requirement.  Address space for such)W
42 414.666 M -0.15(a base register must be allocated within the first 64 KB of I/O Space.  This requirement is reflected in the )W
FmE
419 0 :M
f209 sf
( )S
425 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462 414.666 M 0 0 30(\"reg\")FmTx
FmE
425 0 :M
f146 sf
( )S
427 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 426.666 M 0.528(property for that base register by having the )W
FmE
427 0 :M
f183 sf
( )S
433 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
223.921 426.666 M 0 0 18(\'t\')FmTx
FmE
433 0 :M
f146 sf
( )S
435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
241.921 426.666 M 0.528(-bit set.  This is interpretation of the )W
FmE
436 0 :M
f183 sf
( )S
442 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
392.482 426.666 M 0 0 18(\'t\')FmTx
FmE
442 0 :M
f146 sf
( )S
444 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
410.482 426.666 M 0.528(-bit for I/O Space is)W
42 438.666 M -0.31(distinquished from the \"alias\" case by having the )W
FmE
444 0 :M
f183 sf
( )S
450 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.624 438.666 M 0 0 18(\'n\')FmTx
FmE
450 0 :M
f146 sf
( )S
452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.624 438.666 M -0.31(-bit equal to 0 in its )W
FmE
453 0 :M
f209 sf
( )S
459 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.308 438.666 M 0 0 30(\"reg\")FmTx
FmE
459 0 :M
f146 sf
( )S
461 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
364.308 438.666 M -0.31( entry;  the corresponding )W
FmE
461 0 :M
f209 sf
( )S
467 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
467.999 438.666 M 0 0 24(\"as-)FmTx
42 450.666 M 0 0 102(signed-addresses\")FmTx
FmE
467 0 :M
f146 sf
( )S
469 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 450.666 M ( entry )S
FmE
470 0 :M
f172 sf
( )S
472 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.544 450.666 M (shall)S
FmE
472 0 :M
f146 sf
( )S
474 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.99 450.666 M ( have the )S
FmE
475 0 :M
f183 sf
( )S
481 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
227.584 450.666 M 0 0 18(\'t\')FmTx
FmE
481 0 :M
f146 sf
( )S
483 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
245.584 450.666 M (-bit equal to 0.)S
FmE
483 0 :M
f67 sf
( )S
486 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 485 M (2.1.3. Hard-decoded Spaces)S
FmE
486 0 :M
f146 sf
( )S
488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 501.666 M 0.054(PCI allows devices to \"hard-decode\" Memory and I/O addresses;  i.e., the addresses are not subject to relocation)W
42 513.666 M -0.145(via a base register.  These address ranges are represented by having the non-relocatable bit \()W
FmE
489 0 :M
f183 sf
( )S
495 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
407.952 513.666 M 0 0 18(\'n\')FmTx
FmE
495 0 :M
f146 sf
( )S
497 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.952 513.666 M -0.145(\) set in their cor-)W
42 525.666 M -0.246(responding )W
FmE
497 0 :M
f209 sf
( )S
503 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88.687 525.666 M 0 0 30(\"reg\")FmTx
FmE
503 0 :M
f146 sf
( )S
505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118.687 525.666 M -0.246( and )W
FmE
506 0 :M
f209 sf
( )S
512 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.633 525.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
512 0 :M
f146 sf
( )S
514 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
257.633 525.666 M -0.246( properties, where the base-register field of the )W
FmE
514 0 :M
f172 sf
( )S
516 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
444.719 525.666 M (phys.hi)S
FmE
517 0 :M
f146 sf
( )S
519 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
473.325 525.666 M -0.246( is 0.)W
42 541.666 M 0.318(Furthermore, such devices are allowed to \"alias\" their hard-decoded I/O addresses by ignoring all but the lower)W
42 553.666 M 0.341(10 bits of an I/O address.  To conserve )W
FmE
519 0 :M
f209 sf
( )S
525 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.229 553.666 M 0 0 30(\"reg\")FmTx
FmE
525 0 :M
f146 sf
( )S
527 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
232.229 553.666 M 0.341( property space, a bit \(the )W
FmE
528 0 :M
f183 sf
( )S
534 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.39 553.666 M 0 0 18(\'t\')FmTx
FmE
534 0 :M
f146 sf
( )S
536 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.39 553.666 M 0.341(-bit, for ten-bit\) is included in the)W
42 565.666 M 0.136(encoding of hard-decoded \(non-relocatable, )W
FmE
536 0 :M
f183 sf
( )S
542 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
219.948 565.666 M 0 0 18(\'n\')FmTx
FmE
542 0 :M
f146 sf
( )S
544 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.948 565.666 M 0.136(-bit = 1\) I/O address )W
FmE
545 0 :M
f209 sf
( )S
551 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.289 565.666 M 0 0 30(\"reg\")FmTx
FmE
551 0 :M
f146 sf
( )S
553 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.289 565.666 M 0.136( and )W
FmE
553 0 :M
f209 sf
( )S
559 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
372 565.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
559 0 :M
f146 sf
( )S
561 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 577.666 M (entries to indicated that the address range includes all such aliases.)S
FmE
562 0 :M
f67 sf
( )S
565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 611.999 M (2.1.4. Configuration Space)S
FmE
565 0 :M
f146 sf
( )S
567 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 628.666 M 0.381(Configuration Space is used primarily during device initialization.  Each device contains a set of Configuration)W
42 640.666 M -0.222(Registers which are used to identify and configure the device.  Configuration Cycles access a device\'s Configura-)W
42 652.666 M 0.177(tion Registers, including the \"address base registers\" which must be initialized before the device will respond to)W
42 664.666 M (Memory and I/O Space accesses.)S
42 682.666 M 0.305(In contrast to Memory and I/O Space addressing, Configuration Space addressing is effectively \"geographical\",)W
42 694.666 M -0.006(in that the Configuration Space address of a particular device is determined by its physical location on a PCI bus)W
0.502 0.502 0 0.498 0 0 0.502 FmK
22 173 2 45 FmqF
22 288 2 38 FmqF
FmE
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 8 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
567 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
567 0 :M
0 G
f67 sf
( )S
570 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
570 0 :M
f92 sf
( )S
573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (3)S
FmE
573 0 :M
f124 sf
( )S
580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
580 0 :M
f146 sf
( )S
582 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 29.667 M -0.348(\(i.e. the slot in which it is installed\), or more generally, its physical location within a \"tree\" of interconnected )W
(PCI-)S
60 41.667 M (to-PCI b)S
(ridges.)S
60 59.667 M -0.489(The method for generating Configuration Cycles is system-dependent.  In some systems, special registers are used)W
60 71.667 M -0.303(to generate Configuration Space cycles. In other systems, Configuration Space might be memory-mapped as a re-)W
60 83.667 M -0.421(gion within a large physical address space.  In particular, the hardware method for specifying the Bus Number and)W
60 95.667 M 0.203(Device Number is system-dependent.  Bus Number and Device Number are described below as though they are)W
60 107.667 M 0.078(binary-encoded fields within an address; in practice, that is not necessarily true at the hardware level.  However,)W
60 119.667 M -0.28(the representation described below is adequate as an internal software representation, because it is capable of rep-)W
60 131.667 M (resenting the entire possible space of PCI Configuration Space addresses.)S
60 149.667 M (A Configuration Space address consists of several fields:)S
FmE
583 0 :M
f135 sf
( )S
585 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 179.667 M (2.1.4.1. Bus Number:  8 bits.)S
FmE
585 0 :M
f146 sf
( )S
587 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 195.666 M 0.497(Each PCI bus within a PCI domain is assigned a unique identifying number, known as the \"bus number\".  The)W
60 207.666 M -0.218(assignments occur during system initialization, when the bus controllers for the PCI buses within the PCI domain)W
60 219.666 M (are located. The bus number for a particular bus is written into a register in that bus\'s bus controller.)S
60 237.666 M 0.369(During a Configuration Cycle, each bus controller compares the bus number field of the address to its assigned)W
60 249.666 M -0.005(bus number.  If they match, the bus controller selects one of the devices on its PCI bus, according to the value of)W
60 261.666 M -0.126(the Device Number field.  Otherwise, the bus controller either forwards the configuration cycle to its subordinate)W
60 273.666 M (PCI-to-PCI b)S
(ridges \(if the bus number is for one of its subordinate bridges\) or ignores the cycle.)S
FmE
588 0 :M
f135 sf
( )S
590 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 303.666 M (2.1.4.2. Device Number:  5 bits)S
FmE
590 0 :M
f146 sf
( )S
592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 319.666 M 0.479(During a Configuration Cycle, the bus controller selected by the bus number field decodes the Device Number)W
60 331.666 M -0.259(field, activating the single corresponding \"IDSEL\" device select line to enable one of the PCI devices on that bus.)W
60 343.666 M 0.158(For PCI buses with plug-in slots, the Device Number field effectively selects a particular slot.  Electrical limita-)W
60 355.666 M -0.27(tions restrict the number of devices on an individual PCI bus to fewer than the 32 that could otherwise be selected)W
60 367.666 M (by this 5-bit field.)S
60 385.666 M 0.514(Some PCI bus controllers use the same physical wires for the IDSEL lines and higher-numbered address lines,)W
60 397.666 M 0.179(thus, on the bus that is selected by the bus number field, the Device Number does not appear on the address bus)W
60 409.666 M 0.136(in its 5-bit binary-encoded form.  Rather, the 5-bit field is decoded to a \"one of n\" select that asserts exactly one)W
60 421.666 M 0.391(upper address line.  This fact does not affect the logical representation of the Device Number as a 5-bit binary-)W
60 433.666 M (encoded field.)S
FmE
593 0 :M
f172 sf
( )S
595 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 449.666 M -0.392(Note:  the decoding mechanism \(e.g., the address bit selected\) from the Device Number is system dependent.  Fur-)W
60 461.666 M 0.359(thermore, the implementation of the Open Firmware )W
FmE
595 0 :M
f249 sf
( )S
601 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
275.233 461.666 M 0 0 54(config-xx)FmTx
FmE
601 0 :M
f172 sf
( )S
603 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
329.233 461.666 M 0.359( words can \"hide\" this detail.  However, it is)W
60 473.666 M (recommended that an Open Firmware implementation choose a numbering which is meaningful to the user.)S
FmE
604 0 :M
f135 sf
( )S
606 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 503.666 M (2.1.4.3. Function Number:  3 bits)S
FmE
606 0 :M
f146 sf
( )S
608 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 519.666 M 0.271(Each PCI device can have from one to eight logically-independent functions, each with its own independent set)W
60 531.666 M -0.416(of configuration registers.  A PCI device that is selected during a Configuration Cycle decodes the Function Num-)W
60 543.666 M -0.545(ber field to select the appropriate set of configuration registers for that function. The assignment of Function Num-)W
60 555.666 M -0.341(bers to particular functions is a hard-wired characteristic of the individual PCI device.  For a PCI device with only)W
60 567.666 M (one function, the Function Number must be zero.)S
FmE
609 0 :M
f135 sf
( )S
611 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 597.666 M (2.1.4.4. Register Number:  8 bits)S
FmE
611 0 :M
f146 sf
( )S
613 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 613.666 M 0.028(The register number field, decoded by the PCI device, selects a particular register within the set of configuration)W
60 625.666 M -0.316(registers corresponding to the selected function.  The layout \(locations and meanings of particular bits\) of the first)W
60 637.666 M -0.197(few configuration registers \(i.e. those with small register numbers\) is specified by the PCI standard; other config-)W
60 649.666 M 0.7(uration registers are device-specific.  The standard configuration registers perform such functions as assigning)W
60 661.666 M (Memory Space and I/O Space base addresses for the device\'s addressable regions.)S
60 679.666 M 0.332(In many PCI hardware implementations, Configuration Space does not appear as a direct subset of the system\'s)W
60 691.666 M 0.136(physical address space; instead, Configuration Space accesses are performed by a sequence of reads or writes to)W
60 703.666 M (special system registers.)S
FmE
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 9 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
614 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
614 0 :M
f67 sf
( )S
617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
617 0 :M
f92 sf
( )S
620 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (4)S
FmE
620 0 :M
f124 sf
( )S
627 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
627 0 :M
f135 sf
( )S
629 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 29.667 M (2.1.4.5. \"Address-less\" Cycles)S
FmE
630 0 :M
f146 sf
( )S
632 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 45.667 M -0.456(In addition to these address spaces, PCI has two types of transactions in which the address bus is not used.  Special)W
42 57.667 M 0.215(Cycles \(writes\) are \"broadcast\" cycles in which the data conveys all of the information.  Interrupt Acknowledge)W
42 69.667 M 0.169(Cycles \(reads\) are intended to support interrupt control hardware associated with PCI devices.  The PCI specifi-)W
42 81.667 M (cation does not specify the details of such interrupt control hardware.)S
FmE
632 0 :M
f135 sf
( )S
634 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 111.667 M (2.1.4.6. Low-order Address Bits)S
FmE
635 0 :M
f146 sf
( )S
637 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 127.667 M 0.134(The address characteristics described above do not take into account the way that the PCI bus uses the least-sig-)W
42 139.667 M -0.005(nificant two address bits.  In general, at the hardware level, the PCI bus uses the two low address bits \(AD[1::0]\))W
42 151.667 M -0.438(not to identify the particular byte to be accessed, but instead to convey additional information about the data trans-)W
42 163.667 M -0.389(fer, such as the type of address incrementing for burst transfers.  The bytes are selected with \"byte enable\" signals.)W
42 181.667 M -0.11(That hardware subtlety is irrelevant for the purposes of this specification; within the Open Firmware domain, ad-)W
42 193.666 M 0.399(dresses identify individual 8-bit, 16-bit, and 32-bit registers or memory locations in the usual way.  Within this)W
42 205.666 M -0.037(document, \"address\" refers to that software view of an address, which in the case of the two lower address bits is)W
42 217.666 M (not necessarily the same as what is on the PCI address wires.)S
FmE
637 0 :M
f67 sf
( )S
640 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 252 M (2.2. Address Formats and Representations)S
42 287 M (2.2.1. Physical Address Formats)S
FmE
640 0 :M
f135 sf
( )S
642 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 317.666 M (2.2.1.1. Numerical Representation)S
FmE
643 0 :M
f146 sf
( )S
645 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 333.666 M -0.234(\(The Numerical Representation of an address is the format that Open Firmware uses for storing an address within)W
42 345.666 M 0.317(a property value and on the stack, as an argument to a package method.\) The numerical representation of a PCI)W
42 357.666 M -0.145(address consists of three cells, encoded as follows.  For this purpose, the least-significant 32 bits of a cell is used;)W
42 369.666 M -0.56(if the cell size is larger than 32 bits, any additional high-order bits are zero.  Bit# 0 refers to the least-significant bit.)W
FmE
645 0 :M
f183 sf
( )S
651 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 385.666 M 0 0 126(                 Bit#)FmTx
27 N 0 0 210(33222222 22221111 11111100 00000000)FmTx
157.2 397.666 M 0 0 24(    )FmTx
13.8 N 0 0 210(10987654 32109876 54321098 76543210)FmTx
99.6 415.666 M 0 0 78(phys.hi cell:)FmTx
17.4 N 0 0 210(npt000ss bbbbbbbb dddddfff rrrrrrrr)FmTx
99.6 427.666 M 0 0 84(phys.mid cell:)FmTx
11.4 N 0 0 210(hhhhhhhh hhhhhhhh hhhhhhhh hhhhhhhh)FmTx
99.6 439.666 M 0 0 78(phys.lo cell:)FmTx
17.4 N 0 0 210(llllllll llllllll llllllll llllllll)FmTx
FmE
651 0 :M
f146 sf
( )S
653 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 463.666 M (where:)S
FmE
654 0 :M
f183 sf
( )S
660 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 487.666 M 0 0 6(n)FmTx
FmE
660 0 :M
f146 sf
( )S
662 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.2 487.666 M (is 0 if the address is relocatable, 1 otherwise)S
FmE
662 0 :M
f183 sf
( )S
668 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 499.666 M 0 0 6(p)FmTx
FmE
668 0 :M
f146 sf
( )S
670 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.2 499.666 M (is 1 if the addressable region is \"prefetchable\", 0 otherwise)S
FmE
671 0 :M
f183 sf
( )S
677 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 511.666 M 0 0 6(t)FmTx
FmE
677 0 :M
f146 sf
( )S
679 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.2 511.666 M 0.117(is 1 if the address is aliased \(for non-relocatable I/O\), below 1 MB \(for Memory\),)W
159 523.666 M (or below 64 KB \(for relocatable I/O\).)S
FmE
679 0 :M
f183 sf
( )S
685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 535.666 M 0 0 12(ss)FmTx
FmE
685 0 :M
f146 sf
( )S
687 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.2 535.666 M (is the space code, denoting the address space)S
FmE
688 0 :M
f183 sf
( )S
694 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 547.666 M 0 0 48(bbbbbbbb)FmTx
FmE
694 0 :M
f146 sf
( )S
696 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.2 547.666 M (is the 8-bit Bus Number)S
FmE
696 0 :M
f183 sf
( )S
702 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 559.666 M 0 0 30(ddddd)FmTx
FmE
702 0 :M
f146 sf
( )S
704 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.2 559.666 M (is the 5-bit Device Number)S
FmE
705 0 :M
f183 sf
( )S
711 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 571.666 M 0 0 18(fff)FmTx
FmE
711 0 :M
f146 sf
( )S
713 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.2 571.666 M (is the 3-bit Function Number)S
FmE
713 0 :M
f183 sf
( )S
719 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 583.666 M 0 0 48(rrrrrrrr)FmTx
FmE
719 0 :M
f146 sf
( )S
721 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.2 583.666 M (is the 8-bit Register Number)S
FmE
722 0 :M
f183 sf
( )S
728 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 595.666 M 0 0 30(hh\311hh)FmTx
FmE
728 0 :M
f146 sf
( )S
730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.2 595.666 M (is a 32-bit unsigned number)S
FmE
730 0 :M
f183 sf
( )S
736 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.6 607.666 M 0 0 30(ll\311ll)FmTx
FmE
736 0 :M
f146 sf
( )S
738 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.2 607.666 M (is a 32-bit unsigned number)S
42 631.666 M -0.407(When the )W
FmE
739 0 :M
f183 sf
( )S
745 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82.279 631.666 M 0 0 30(hh\311hh)FmTx
FmE
745 0 :M
f146 sf
( )S
747 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.279 631.666 M -0.407( and )W
FmE
747 0 :M
f183 sf
( )S
753 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.902 631.666 M 0 0 30(ll\311ll)FmTx
FmE
753 0 :M
f146 sf
( )S
755 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.902 631.666 M -0.407( fields are concatenated to form a larger number, )W
FmE
756 0 :M
f183 sf
( )S
762 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
354.345 631.666 M 0 0 30(hh\311hh)FmTx
FmE
762 0 :M
f146 sf
( )S
764 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
384.345 631.666 M -0.407( is the most significant por-)W
42 643.666 M (tion and )S
FmE
764 0 :M
f183 sf
( )S
770 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76.995 643.666 M 0 0 30(ll\311ll)FmTx
FmE
770 0 :M
f146 sf
( )S
772 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106.995 643.666 M ( is the least significant portion.)S
42 659.666 M (The \')S
FmE
773 0 :M
f183 sf
( )S
779 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
61.846 659.666 M 0 0 6(p)FmTx
FmE
779 0 :M
f146 sf
( )S
781 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
67.846 659.666 M (\' bit reflects the state of the \"P\" bit in the corresponding hardware Base Address register)S
(.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
22 652.999 2 10 FmqF
FmE
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 10 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
781 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
781 0 :M
0 G
f67 sf
( )S
784 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
784 0 :M
f92 sf
( )S
787 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (5)S
FmE
787 0 :M
f124 sf
( )S
794 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
794 0 :M
f135 sf
( )S
796 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 29.667 M (E)S
(ncoding of type code \"ss\":)S
FmE
797 0 :M
f183 sf
( )S
803 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 47.667 M 0 0 12(00)FmTx
FmE
803 0 :M
f146 sf
( )S
805 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 47.667 M ( denotes  Configuration Space, in which case:)S
FmE
805 0 :M
f183 sf
( )S
811 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 59.667 M 0 0 6(n)FmTx
FmE
811 0 :M
f146 sf
( )S
813 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 59.667 M (must be zero)S
FmE
814 0 :M
f183 sf
( )S
820 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 71.667 M 0 0 6(p)FmTx
FmE
820 0 :M
f146 sf
( )S
822 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 71.667 M (must be zero)S
FmE
822 0 :M
f183 sf
( )S
828 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 83.667 M 0 0 6(t)FmTx
FmE
828 0 :M
f146 sf
( )S
830 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 83.667 M (must be zero)S
FmE
831 0 :M
f183 sf
( )S
837 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 95.667 M 0 0 48(bbbbbbbb)FmTx
FmE
837 0 :M
f146 sf
( )S
839 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333 95.667 M (,)S
FmE
839 0 :M
f183 sf
( )S
845 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.5 95.667 M 0 0 30(ddddd)FmTx
FmE
845 0 :M
f146 sf
( )S
847 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.5 95.667 M (,)S
FmE
848 0 :M
f183 sf
( )S
854 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
368 95.667 M 0 0 18(fff)FmTx
FmE
854 0 :M
f146 sf
( )S
856 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
386 95.667 M (,)S
FmE
856 0 :M
f183 sf
( )S
862 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
388.5 95.667 M 0 0 54(rrrrrrrrr)FmTx
FmE
862 0 :M
f146 sf
( )S
864 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
442.5 95.667 M -0.127(is the Configura-)W
285 107.667 M (tion Space address)S
FmE
865 0 :M
f183 sf
( )S
871 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 119.667 M 0 0 30(hh\311hh)FmTx
FmE
871 0 :M
f146 sf
( )S
873 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
315 119.667 M (,)S
FmE
873 0 :M
f183 sf
( )S
879 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
317.5 119.667 M 0 0 30(ll\311ll)FmTx
FmE
879 0 :M
f146 sf
( )S
881 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
347.5 119.667 M ( )S
(must be zero)S
FmE
882 0 :M
f183 sf
( )S
888 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 143.667 M 0 0 12(01)FmTx
FmE
888 0 :M
f146 sf
( )S
890 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 143.667 M ( denotes  I/O Space, in which case:)S
FmE
890 0 :M
f183 sf
( )S
896 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 155.667 M 0 0 6(p)FmTx
FmE
896 0 :M
f146 sf
( )S
898 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 155.667 M (must be zero)S
FmE
899 0 :M
f183 sf
( )S
905 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 167.666 M 0 0 6(t)FmTx
FmE
905 0 :M
f146 sf
( )S
907 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 167.666 M (is set if 10-bit aliasing is present \(for non-relocatable\),)S
285 179.666 M (or below 64 KB required \(for relocatable\).)S
FmE
907 0 :M
f183 sf
( )S
913 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 191.666 M 0 0 48(bbbbbbbb)FmTx
FmE
913 0 :M
f146 sf
( )S
915 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.6 191.666 M (,)S
FmE
916 0 :M
f183 sf
( )S
922 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.1 191.666 M 0 0 30(ddddd)FmTx
FmE
922 0 :M
f146 sf
( )S
924 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.1 191.666 M (,)S
FmE
924 0 :M
f183 sf
( )S
930 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.6 191.666 M 0 0 18(fff)FmTx
FmE
930 0 :M
f146 sf
( )S
932 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.6 191.666 M (,)S
FmE
933 0 :M
f183 sf
( )S
939 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
221.1 191.666 M 0 0 48(rrrrrrrr)FmTx
FmE
939 0 :M
f146 sf
( )S
941 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 191.666 M (identifies the region\'s Base Address Register )S
FmE
941 0 :M
f183 sf
( )S
947 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 203.666 M 0 0 48(rrrrrrrr)FmTx
FmE
947 0 :M
f146 sf
( )S
949 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333 203.666 M ( can be 0x10, 0x14, 0x18, 0x1c, 0x20 or )S
285 215.666 M (0x24 \(for relocatable\).)S
FmE
950 0 :M
f183 sf
( )S
956 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 227.666 M 0 0 48(rrrrrrrr)FmTx
FmE
956 0 :M
f146 sf
( )S
958 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333 227.666 M ( )S
(i)S
(s 0x00 for non-relocatable)S
FmE
958 0 :M
f183 sf
( )S
964 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 239.666 M 0 0 30(hh\311hh)FmTx
FmE
964 0 :M
f146 sf
( )S
966 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 239.666 M (must be zero)S
60 251.666 M (    If )S
FmE
967 0 :M
f183 sf
( )S
973 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.155 251.666 M 0 0 6(n)FmTx
FmE
973 0 :M
f146 sf
( )S
975 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.155 251.666 M ( is 0:)S
FmE
975 0 :M
f183 sf
( )S
981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 251.666 M 0 0 30(ll\311ll)FmTx
FmE
981 0 :M
f146 sf
( )S
983 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.6 251.666 M ( )S
134.9 N -0.621(is the 32-bit offset from the start of the relocatable region )W
285 263.666 M (of I/O Space)S
60 275.666 M (    If )S
FmE
984 0 :M
f183 sf
( )S
990 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.155 275.666 M 0 0 6(n)FmTx
FmE
990 0 :M
f146 sf
( )S
992 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.155 275.666 M ( is 1:)S
FmE
992 0 :M
f183 sf
( )S
998 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 275.666 M 0 0 30(ll\311ll)FmTx
FmE
998 0 :M
f146 sf
( )S
1000 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.6 275.666 M ( )S
134.9 N (is the 32-bit I/O Space address)S
FmE
1001 0 :M
f183 sf
( )S
1007 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 299.666 M 0 0 12(10)FmTx
FmE
1007 0 :M
f146 sf
( )S
1009 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 299.666 M ( denotes  32-bit-address Memory Space, in which case:)S
FmE
1009 0 :M
f183 sf
( )S
1015 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 311.666 M 0 0 6(p)FmTx
FmE
1015 0 :M
f146 sf
( )S
1017 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 311.666 M (m)S
(ay be either 0 or 1)S
FmE
1018 0 :M
f183 sf
( )S
1024 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 323.666 M 0 0 6(t)FmTx
FmE
1024 0 :M
f146 sf
( )S
1026 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 323.666 M (is set if an address below 1 MB is required)S
FmE
1026 0 :M
f183 sf
( )S
1032 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 335.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1032 0 :M
f146 sf
( )S
1034 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.6 335.666 M (,)S
FmE
1035 0 :M
f183 sf
( )S
1041 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.1 335.666 M 0 0 30(ddddd)FmTx
FmE
1041 0 :M
f146 sf
( )S
1043 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.1 335.666 M (,)S
FmE
1043 0 :M
f183 sf
( )S
1049 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.6 335.666 M 0 0 18(fff)FmTx
FmE
1049 0 :M
f146 sf
( )S
1051 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.6 335.666 M (,)S
FmE
1052 0 :M
f183 sf
( )S
1058 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
221.1 335.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1058 0 :M
f146 sf
( )S
1060 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.1 335.666 M ( )S
13.4 N -0.005(identifies the relocatable region\'s Base Address Register)W
FmE
1060 0 :M
f183 sf
( )S
1066 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 347.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1066 0 :M
f146 sf
( )S
1068 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333 347.666 M -0.362( can be 0x10, 0x14, 0x18, 0x1c, 0x20, 0x24, )W
285 359.666 M (0x30 \(relocatable\))S
FmE
1069 0 :M
f183 sf
( )S
1075 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 371.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1075 0 :M
f146 sf
( )S
1077 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333 371.666 M ( is 0x00 for non-relocatable)S
FmE
1077 0 :M
f183 sf
( )S
1083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 383.666 M 0 0 30(hh\311hh)FmTx
FmE
1083 0 :M
f146 sf
( )S
1085 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.6 383.666 M ( )S
134.9 N (must be zero)S
60 395.666 M (    If )S
FmE
1086 0 :M
f183 sf
( )S
1092 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.155 395.666 M 0 0 6(n)FmTx
FmE
1092 0 :M
f146 sf
( )S
1094 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.155 395.666 M ( is 0:)S
FmE
1094 0 :M
f183 sf
( )S
1100 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 395.666 M 0 0 30(ll\311ll)FmTx
FmE
1100 0 :M
f146 sf
( )S
1102 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 395.666 M -0.621(is the 32-bit offset from the start of the relocatable region )W
285 407.666 M (of 32-bit address Memory Space)S
60 419.666 M (    If )S
FmE
1103 0 :M
f183 sf
( )S
1109 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.155 419.666 M 0 0 6(n)FmTx
FmE
1109 0 :M
f146 sf
( )S
1111 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.155 419.666 M ( is 1:)S
FmE
1111 0 :M
f183 sf
( )S
1117 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 419.666 M 0 0 30(ll\311ll)FmTx
FmE
1117 0 :M
f146 sf
( )S
1119 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 419.666 M (is the 32-bit Memory Space address)S
FmE
1120 0 :M
f183 sf
( )S
1126 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 443.666 M 0 0 12(11)FmTx
FmE
1126 0 :M
f146 sf
( )S
1128 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 443.666 M ( denotes  64-bit-address Memory Space, in which case:)S
FmE
1128 0 :M
f183 sf
( )S
1134 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 455.666 M 0 0 6(p)FmTx
FmE
1134 0 :M
f146 sf
( )S
1136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 455.666 M (may be either 0 or 1)S
FmE
1137 0 :M
f183 sf
( )S
1143 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 467.666 M 0 0 6(t)FmTx
FmE
1143 0 :M
f146 sf
( )S
1145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 467.666 M (must be 0)S
FmE
1145 0 :M
f183 sf
( )S
1151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 479.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1151 0 :M
f146 sf
( )S
1153 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.6 479.666 M (,)S
FmE
1154 0 :M
f183 sf
( )S
1160 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.1 479.666 M 0 0 30(ddddd)FmTx
FmE
1160 0 :M
f146 sf
( )S
1162 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.1 479.666 M (,)S
FmE
1162 0 :M
f183 sf
( )S
1168 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.6 479.666 M 0 0 18(fff)FmTx
FmE
1168 0 :M
f146 sf
( )S
1170 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.6 479.666 M (,)S
FmE
1171 0 :M
f183 sf
( )S
1177 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
221.1 479.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1177 0 :M
f146 sf
( )S
1179 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 479.666 M (identifies the first register of the relocatable region\'s )S
285 491.666 M (Base Address )S
(Register pair.  )S
FmE
1179 0 :M
f183 sf
( )S
1185 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
401.064 491.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1185 0 :M
f146 sf
( )S
1187 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
449.064 491.666 M ( can be 0x10, )S
285 503.666 M (0x14, 0x18, 0x1c, or 0x20)S
60 515.666 M (    If )S
FmE
1188 0 :M
f183 sf
( )S
1194 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.155 515.666 M 0 0 6(n)FmTx
FmE
1194 0 :M
f146 sf
( )S
1196 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.155 515.666 M ( is 0:)S
FmE
1196 0 :M
f183 sf
( )S
1202 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 515.666 M 0 0 30(hh\311hh)FmTx
FmE
1202 0 :M
f146 sf
( )S
1204 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.6 515.666 M (,)S
FmE
1205 0 :M
f183 sf
( )S
1211 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.1 515.666 M 0 0 30(ll\311ll)FmTx
FmE
1211 0 :M
f146 sf
( )S
1213 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 515.666 M -0.621(is the 64-bit offset from the start of the relocatable region )W
285 527.666 M -0.324(of 64-bit address Memory Space to the start of the subre-)W
285 539.666 M (gion)S
60 551.666 M (    If )S
FmE
1213 0 :M
f183 sf
( )S
1219 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
79.155 551.666 M 0 0 6(n)FmTx
FmE
1219 0 :M
f146 sf
( )S
1221 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.155 551.666 M ( is 1:)S
FmE
1222 0 :M
f183 sf
( )S
1228 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 551.666 M 0 0 30(hh\311hh)FmTx
FmE
1228 0 :M
f146 sf
( )S
1230 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.6 551.666 M (,)S
FmE
1230 0 :M
f183 sf
( )S
1236 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.1 551.666 M 0 0 30(ll\311ll)FmTx
FmE
1236 0 :M
f146 sf
( )S
1238 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 551.666 M (is the 64-bit Memory Space address)S
FmE
1239 0 :M
f172 sf
( )S
1241 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 567.666 M -0.155(Note:  Although the bit format of the phys.hi cell is generally consistent with the bit format of a particular kind of)W
60 579.666 M 0.301(hardware mechanism for Configuration Space access that is recommended by the PCI standard, the use of that)W
60 591.666 M -0.358(format does not imply that the hardware must use the same format. The numerical representation specified herein)W
60 603.666 M -0.358(contains the information needed to select a particular hardware device, specifying the format by which that infor-)W
60 615.666 M 0.202(mation is communicated among elements of Open Firmware firmware and client programs.  A driver for a par-)W
60 627.666 M 0.596(ticular PCI bus hardware implementation is free to extract that information and reformat as necessary for the)W
60 639.666 M (hardware.)S
60 657.666 M 0.159(Note:  Although the )W
FmE
1241 0 :M
f146 sf
( )S
1243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.732 657.666 M 0.159(PCI Local Bus Specification)W
FmE
1244 0 :M
f172 sf
( )S
1246 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.343 657.666 M 0.159( defines both prefetchable and non-prefetchable 64-bit-address)W
60 669.666 M -0.605(Memory Space, the )W
FmE
1246 0 :M
f146 sf
( )S
1248 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.592 669.666 M -0.605(PCI-to-PCI B)W
-0.605(ridge Architecture Specification)W
FmE
1249 0 :M
f172 sf
( )S
1251 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
318.755 669.666 M -0.605( does not specify a standard means of supporting)W
60 681.666 M (non-prefetchable 64-bit-address Memory Space across )S
(PCI-to-PCI b)S
(ridges. )S
0.502 0.502 0 0.498 0 0 0.502 FmK
40 23 2 10 FmqF
40 113 2 10 FmqF
40 221 2 10 FmqF
40 305 2 10 FmqF
FmE
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 11 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
1251 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1251 0 :M
0 G
f67 sf
( )S
1254 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
1254 0 :M
f92 sf
( )S
1257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (6)S
FmE
1257 0 :M
f124 sf
( )S
1264 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
1264 0 :M
f135 sf
( )S
1266 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 29.667 M (2.2.1.2. Text Representation)S
FmE
1267 0 :M
f146 sf
( )S
1269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 45.667 M (The text representation of a PCI address is one of the following forms:)S
FmE
1269 0 :M
f183 sf
( )S
1275 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 57.667 M 0 0 12(DD)FmTx
78 69.667 M 0 0 24(DD,F)FmTx
78 81.667 M 0 0 138([n]i[t]DD,F,RR,NNNNNNNN)FmTx
78 93.667 M 0 0 156([n]m[t][p]DD,F,RR,NNNNNNNN)FmTx
78 105.667 M 0 0 186([n]x[p]DD,F,RR,NNNNNNNNNNNNNNNN)FmTx
FmE
1275 0 :M
f146 sf
( )S
1277 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 121.667 M (where:)S
FmE
1278 0 :M
f183 sf
( )S
1284 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 133.667 M 0 0 12(DD)FmTx
FmE
1284 0 :M
f146 sf
( )S
1286 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 133.667 M (is an ASCII hexadecimal number in the range )S
FmE
1286 0 :M
f183 sf
( )S
1292 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
371.481 133.667 M 0 0 24(0\3111F)FmTx
78 145.667 M 0 0 6(F)FmTx
FmE
1292 0 :M
f146 sf
( )S
1294 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 145.667 M (is an ASCII numeral in the range )S
FmE
1295 0 :M
f183 sf
( )S
1301 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.67 145.667 M 0 0 18(0\3117)FmTx
78 157.667 M 0 0 12(RR)FmTx
FmE
1301 0 :M
f146 sf
( )S
1303 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 157.667 M (is an ASCII hexadecimal number in the range )S
FmE
1303 0 :M
f183 sf
( )S
1309 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
371.481 157.667 M 0 0 24(0\311FF)FmTx
78 169.666 M 0 0 48(NNNNNNNN)FmTx
FmE
1309 0 :M
f146 sf
( )S
1311 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 169.666 M (is an ASCII hexadecimal number in the range )S
FmE
1312 0 :M
f183 sf
( )S
1318 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
371.481 169.666 M 0 0 60(0\311FFFFFFFF)FmTx
78 181.666 M 0 0 96(NNNNNNNNNNNNNNNN)FmTx
FmE
1318 0 :M
f146 sf
( )S
1320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 181.666 M (is )S
(an )S
(ASCII )S
(hexadecimal )S
(number )S
(in )S
(the )S
(range )S
FmE
1320 0 :M
f183 sf
( )S
1326 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
371.481 181.666 M 0 0 108(0\311FFFFFFFFFFFFFFFF)FmTx
78 193.666 M 0 0 18([n])FmTx
FmE
1326 0 :M
f146 sf
( )S
1328 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 193.666 M (is the letter \')S
FmE
1329 0 :M
f183 sf
( )S
1335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.723 193.666 M 0 0 6(n)FmTx
FmE
1335 0 :M
f146 sf
( )S
1337 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.723 193.666 M (\', whose presence is optional)S
FmE
1337 0 :M
f183 sf
( )S
1343 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 205.666 M 0 0 18([t])FmTx
FmE
1343 0 :M
f146 sf
( )S
1345 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 205.666 M (is the letter \')S
FmE
1346 0 :M
f183 sf
( )S
1352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.723 205.666 M 0 0 6(t)FmTx
FmE
1352 0 :M
f146 sf
( )S
1354 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.723 205.666 M (\', whose presence is optional)S
FmE
1354 0 :M
f183 sf
( )S
1360 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 217.666 M 0 0 18([p])FmTx
FmE
1360 0 :M
f146 sf
( )S
1362 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 217.666 M (is the letter \')S
FmE
1363 0 :M
f183 sf
( )S
1369 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.723 217.666 M 0 0 6(p)FmTx
FmE
1369 0 :M
f146 sf
( )S
1371 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.723 217.666 M (\', whose presence is optional)S
FmE
1371 0 :M
f183 sf
( )S
1377 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 229.666 M 0 0 6(i)FmTx
FmE
1377 0 :M
f146 sf
( )S
1379 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 229.666 M (is the letter \')S
FmE
1380 0 :M
f183 sf
( )S
1386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.723 229.666 M 0 0 6(i)FmTx
FmE
1386 0 :M
f146 sf
( )S
1388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.723 229.666 M (\')S
FmE
1388 0 :M
f183 sf
( )S
1394 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 241.666 M 0 0 6(m)FmTx
FmE
1394 0 :M
f146 sf
( )S
1396 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 241.666 M (is the letter \')S
FmE
1397 0 :M
f183 sf
( )S
1403 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.723 241.666 M 0 0 6(m)FmTx
FmE
1403 0 :M
f146 sf
( )S
1405 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.723 241.666 M (\')S
FmE
1405 0 :M
f183 sf
( )S
1411 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 253.666 M 0 0 6(x)FmTx
FmE
1411 0 :M
f146 sf
( )S
1413 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 253.666 M (is the letter \')S
FmE
1414 0 :M
f183 sf
( )S
1420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.723 253.666 M 0 0 6(x)FmTx
FmE
1420 0 :M
f146 sf
( )S
1422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.723 253.666 M (\')S
FmE
1422 0 :M
f183 sf
( )S
1428 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 265.666 M 0 0 6(,)FmTx
FmE
1428 0 :M
f146 sf
( )S
1430 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 265.666 M (is the character \')S
FmE
1431 0 :M
f183 sf
( )S
1437 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.81 265.666 M 0 0 6(,)FmTx
FmE
1437 0 :M
f146 sf
( )S
1439 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.81 265.666 M (\' \(comma\))S
42 281.666 M (The correspondence between the text representations and numerical representation is as follows:)S
FmE
1439 0 :M
f183 sf
( )S
1445 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 297.666 M 0 0 12(DD)FmTx
FmE
1445 0 :M
f146 sf
( )S
1447 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 313.666 M (corresponds to a Configuration Space address with the numerical value:)S
FmE
1448 0 :M
f183 sf
( )S
1454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 325.666 M 0 0 12(ss)FmTx
FmE
1454 0 :M
f146 sf
( )S
1456 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 325.666 M ( )S
(is 00)S
FmE
1456 0 :M
f183 sf
( )S
1462 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 337.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1462 0 :M
f146 sf
( )S
1464 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 337.666 M ( )S
(is the parent\'s bus number)S
FmE
1465 0 :M
f183 sf
( )S
1471 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 349.666 M 0 0 30(ddddd)FmTx
FmE
1471 0 :M
f146 sf
( )S
1473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 349.666 M ( )S
(is the binary encoding of )S
FmE
1473 0 :M
f183 sf
( )S
1479 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.412 349.666 M 0 0 12(DD)FmTx
132 361.666 M 0 0 18(fff)FmTx
FmE
1479 0 :M
f146 sf
( )S
1481 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 361.666 M ( )S
(is zero)S
FmE
1482 0 :M
f183 sf
( )S
1488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 373.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1488 0 :M
f146 sf
( )S
1490 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 373.666 M ( )S
(is zero)S
FmE
1490 0 :M
f183 sf
( )S
1496 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 385.666 M 0 0 36(hh\311hh )FmTx
FmE
1496 0 :M
f146 sf
( )S
1498 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 385.666 M (is zero)S
FmE
1499 0 :M
f183 sf
( )S
1505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 397.666 M 0 0 30(ll\311ll)FmTx
FmE
1505 0 :M
f146 sf
( )S
1507 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 397.666 M ( )S
(is zero)S
FmE
1507 0 :M
f183 sf
( )S
1513 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100.32 415.666 M 0 0 24(DD,F)FmTx
FmE
1513 0 :M
f146 sf
( )S
1515 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 431.666 M (corresponds to a Configuration Space address with the numerical value:)S
FmE
1516 0 :M
f183 sf
( )S
1522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 443.666 M 0 0 12(ss)FmTx
FmE
1522 0 :M
f146 sf
( )S
1524 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 443.666 M ( )S
(is 00)S
FmE
1524 0 :M
f183 sf
( )S
1530 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 455.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1530 0 :M
f146 sf
( )S
1532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 455.666 M ( )S
(is the parent\'s bus number)S
FmE
1533 0 :M
f183 sf
( )S
1539 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 467.666 M 0 0 30(ddddd)FmTx
FmE
1539 0 :M
f146 sf
( )S
1541 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 467.666 M ( )S
(is the binary encoding of )S
FmE
1541 0 :M
f183 sf
( )S
1547 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.412 467.666 M 0 0 12(DD)FmTx
132 479.666 M 0 0 18(fff)FmTx
FmE
1547 0 :M
f146 sf
( )S
1549 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 479.666 M ( )S
(is the binary encoding of )S
FmE
1550 0 :M
f183 sf
( )S
1556 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
254.412 479.666 M 0 0 6(F)FmTx
132 491.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1556 0 :M
f146 sf
( )S
1558 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 491.666 M ( )S
(is zero)S
FmE
1558 0 :M
f183 sf
( )S
1564 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 503.666 M 0 0 30(hh\311hh)FmTx
FmE
1564 0 :M
f146 sf
( )S
1566 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 503.666 M ( )S
(is zero)S
FmE
1567 0 :M
f183 sf
( )S
1573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 515.666 M 0 0 30(ll\311ll)FmTx
FmE
1573 0 :M
f146 sf
( )S
1575 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 515.666 M ( )S
(is zero)S
FmE
1575 0 :M
f183 sf
( )S
1581 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 539.666 M 0 0 138([n]i[t]DD,F,RR,NNNNNNNN)FmTx
FmE
1581 0 :M
f146 sf
( )S
1583 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 563.666 M -0.068(corresponds to a relocatable \(if \')W
FmE
1584 0 :M
f183 sf
( )S
1590 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
241.775 563.666 M 0 0 6(n)FmTx
FmE
1590 0 :M
f146 sf
( )S
1592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.775 563.666 M -0.068(\' is not present\) or a non-relocatable \(if \')W
FmE
1592 0 :M
f183 sf
( )S
1598 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406.857 563.666 M 0 0 6(n)FmTx
FmE
1598 0 :M
f146 sf
( )S
1600 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
412.857 563.666 M -0.068(\' is present\) 32-bit   )W
114 575.666 M -0.082(I/O Space address with the numerical value.  If \')W
FmE
1601 0 :M
f183 sf
( )S
1607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
305.522 575.666 M 0 0 6(t)FmTx
FmE
1607 0 :M
f146 sf
( )S
1609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
311.522 575.666 M -0.082(\' is present, only the low-order 10 bits of an   )W
114 587.666 M -0.549(I/O address range is indicated;  aliases are assumed )W
-0.549( f)W
-0.549(or all high-order bits.  The numerical value )W
114 599.666 M (is:)S
FmE
1609 0 :M
f183 sf
( )S
1615 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 611.666 M 0 0 12(ss)FmTx
FmE
1615 0 :M
f146 sf
( )S
1617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 611.666 M ( is )S
FmE
1618 0 :M
f183 sf
( )S
1624 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
155.667 611.666 M 0 0 12(01)FmTx
132 623.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1624 0 :M
f146 sf
( )S
1626 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 623.666 M ( )S
(is the parent\'s bus number)S
FmE
1626 0 :M
f183 sf
( )S
1632 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 635.666 M 0 0 30(ddddd)FmTx
FmE
1632 0 :M
f146 sf
( )S
1634 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 635.666 M ( is the binary encoding of )S
FmE
1635 0 :M
f183 sf
( )S
1641 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.412 635.666 M 0 0 12(DD)FmTx
132 647.666 M 0 0 18(fff)FmTx
FmE
1641 0 :M
f146 sf
( )S
1643 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 647.666 M ( )S
(is the binary encoding of )S
FmE
1643 0 :M
f183 sf
( )S
1649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
254.412 647.666 M 0 0 6(F)FmTx
132 659.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1649 0 :M
f146 sf
( )S
1651 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 659.666 M ( is the binary encoding of )S
FmE
1652 0 :M
f183 sf
( )S
1658 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.412 659.666 M 0 0 12(RR)FmTx
132 671.666 M 0 0 30(hh\311hh)FmTx
FmE
1658 0 :M
f146 sf
( )S
1660 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 671.666 M ( )S
(is zero)S
FmE
1660 0 :M
f183 sf
( )S
1666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 683.666 M 0 0 30(ll\311ll)FmTx
FmE
1666 0 :M
f146 sf
( )S
1668 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 683.666 M ( )S
(is the binary encoding of )S
FmE
1669 0 :M
f183 sf
( )S
1675 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.412 683.666 M 0 0 48(NNNNNNNN)FmTx
0.502 0.502 0 0.498 0 0 0.502 FmK
22 355 2 10 FmqF
22 472.999 2 22 FmqF
22 580.999 2 10 FmqF
22 640.999 2 10 FmqF
FmE
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 12 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
1675 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1675 0 :M
0 G
f67 sf
( )S
1678 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
1678 0 :M
f92 sf
( )S
1681 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (7)S
FmE
1681 0 :M
f124 sf
( )S
1688 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
1688 0 :M
f183 sf
( )S
1694 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.6 29.667 M 0 0 156([n]m[t][p]DD,F,RR,NNNNNNNN)FmTx
FmE
1694 0 :M
f146 sf
( )S
1696 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 45.667 M 0.388(corresponds to a relocatable \(if \')W
FmE
1697 0 :M
f183 sf
( )S
1703 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.055 45.667 M 0 0 6(n)FmTx
FmE
1703 0 :M
f146 sf
( )S
1705 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.055 45.667 M 0.388(\' is not present\) or a non-relocatable \(if \')W
FmE
1705 0 :M
f183 sf
( )S
1711 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
430.785 45.667 M 0 0 6(n)FmTx
FmE
1711 0 :M
f146 sf
( )S
1713 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
436.785 45.667 M 0.388(\' is present\) 32-bit)W
132 57.667 M -0.39(Memory Space address.  If \')W
FmE
1714 0 :M
f183 sf
( )S
1720 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
241.797 57.667 M 0 0 6(t)FmTx
FmE
1720 0 :M
f146 sf
( )S
1722 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.797 57.667 M -0.39(\' is present, the address is within the first 1 MB of memory address)W
132 69.667 M (space.   The the numerical value is:)S
FmE
1722 0 :M
f183 sf
( )S
1728 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 81.667 M 0 0 12(ss)FmTx
FmE
1728 0 :M
f146 sf
( )S
1730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 81.667 M ( )S
(is )S
FmE
1731 0 :M
f183 sf
( )S
1737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.667 81.667 M 0 0 12(10)FmTx
150 93.667 M 0 0 48(bbbbbbbb)FmTx
FmE
1737 0 :M
f146 sf
( )S
1739 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 93.667 M ( )S
(is the parent\'s bus number)S
FmE
1739 0 :M
f183 sf
( )S
1745 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 105.667 M 0 0 30(ddddd)FmTx
FmE
1745 0 :M
f146 sf
( )S
1747 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 105.667 M ( )S
(is the binary encoding of )S
FmE
1748 0 :M
f183 sf
( )S
1754 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.412 105.667 M 0 0 12(DD)FmTx
150 117.667 M 0 0 18(fff)FmTx
FmE
1754 0 :M
f146 sf
( )S
1756 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 117.667 M ( )S
(is the binary encoding of )S
FmE
1756 0 :M
f183 sf
( )S
1762 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.412 117.667 M 0 0 6(F)FmTx
150 129.667 M 0 0 48(rrrrrrrr)FmTx
FmE
1762 0 :M
f146 sf
( )S
1764 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 129.667 M ( )S
(is the binary encoding of )S
FmE
1765 0 :M
f183 sf
( )S
1771 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.412 129.667 M 0 0 12(RR)FmTx
150 141.667 M 0 0 30(hh\311hh)FmTx
FmE
1771 0 :M
f146 sf
( )S
1773 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 141.667 M ( is zero)S
FmE
1773 0 :M
f183 sf
( )S
1779 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 153.667 M 0 0 30(ll\311ll)FmTx
FmE
1779 0 :M
f146 sf
( )S
1781 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 153.667 M ( )S
(is the binary encoding of )S
FmE
1782 0 :M
f183 sf
( )S
1788 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.412 153.667 M 0 0 48(NNNNNNNN)FmTx
117.6 177.666 M 0 0 186([n]x[p]DD,F,RR,NNNNNNNNNNNNNNNN)FmTx
FmE
1788 0 :M
f146 sf
( )S
1790 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 193.666 M (corresponds to a relocatable \(if \')S
FmE
1790 0 :M
f183 sf
( )S
1796 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.115 193.666 M 0 0 6(n)FmTx
FmE
1796 0 :M
f146 sf
( )S
1798 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.115 193.666 M (\' is not present\) or a non-relocatable \(if \')S
FmE
1799 0 :M
f183 sf
( )S
1805 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.742 193.666 M 0 0 6(n)FmTx
FmE
1805 0 :M
f146 sf
( )S
1807 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
431.742 193.666 M (\' is present\) 64-bit )S
132 205.666 M (Memory Space address with the numerical value:)S
FmE
1807 0 :M
f183 sf
( )S
1813 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 217.666 M 0 0 12(ss)FmTx
FmE
1813 0 :M
f146 sf
( )S
1815 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 217.666 M ( )S
(is )S
FmE
1816 0 :M
f183 sf
( )S
1822 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.667 217.666 M 0 0 12(10)FmTx
150 229.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1822 0 :M
f146 sf
( )S
1824 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 229.666 M ( )S
(is the parent\'s bus number)S
FmE
1824 0 :M
f183 sf
( )S
1830 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 241.666 M 0 0 30(ddddd)FmTx
FmE
1830 0 :M
f146 sf
( )S
1832 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 241.666 M ( )S
(is the binary encoding of )S
FmE
1833 0 :M
f183 sf
( )S
1839 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.412 241.666 M 0 0 12(DD)FmTx
150 253.666 M 0 0 18(fff)FmTx
FmE
1839 0 :M
f146 sf
( )S
1841 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 253.666 M ( )S
(is the binary encoding of )S
FmE
1841 0 :M
f183 sf
( )S
1847 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.412 253.666 M 0 0 6(F)FmTx
150 265.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1847 0 :M
f146 sf
( )S
1849 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 265.666 M ( is the binary encoding of )S
FmE
1850 0 :M
f183 sf
( )S
1856 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.412 265.666 M 0 0 12(RR)FmTx
150 277.666 M 0 0 30(hh\311hh)FmTx
FmE
1856 0 :M
f146 sf
( )S
1858 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 277.666 M (,)S
FmE
1858 0 :M
f183 sf
( )S
1864 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.5 277.666 M 0 0 30(ll\311ll)FmTx
FmE
1864 0 :M
f146 sf
( )S
1866 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
212.5 277.666 M ( is the binary encoding of )S
FmE
1867 0 :M
f183 sf
( )S
1873 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
316.912 277.666 M 0 0 96(NNNNNNNNNNNNNNNN)FmTx
FmE
1873 0 :M
f146 sf
( )S
1875 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 301.666 M -0.146(Conversion of hexadecimal numbers from text representation to numeric representation shall be case-insensitive,)W
60 313.666 M (and leading zeros shall be permitted but not required.)S
60 331.666 M -0.042(Conversion from numeric representation to text representation shall use the lower case forms of the hexadecimal)W
60 343.666 M 0.348(digits in the range )W
FmE
1875 0 :M
f183 sf
( )S
1881 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.816 343.666 M 0 0 18(a\311f)FmTx
FmE
1881 0 :M
f146 sf
( )S
1883 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.816 343.666 M 0.348(, suppressing leading zeroes, and the )W
FmE
1884 0 :M
f183 sf
( )S
1890 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
304.737 343.666 M 0 0 12(DD)FmTx
FmE
1890 0 :M
f146 sf
( )S
1892 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
316.737 343.666 M 0.348( form shall be used for Configuration Space ad-)W
60 355.666 M (dresses where )S
FmE
1892 0 :M
f183 sf
( )S
1898 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118.296 355.666 M 0 0 18(fff)FmTx
FmE
1898 0 :M
f146 sf
( )S
1900 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136.296 355.666 M ( is zero.)S
FmE
1901 0 :M
f135 sf
( )S
1903 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 385.666 M (2.2.1.3. Unit Address Representation)S
FmE
1903 0 :M
f146 sf
( )S
1905 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 401.666 M -0.43(As required by this specification\'s definition of the )W
FmE
1906 0 :M
f209 sf
( )S
1912 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
261.622 401.666 M 0 0 30(\"reg\")FmTx
FmE
1912 0 :M
f146 sf
( )S
1914 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.622 401.666 M -0.43( property, a function\'s \"unit-number\" \(i.e. the first com-)W
60 413.666 M -0.07(ponent of its \")W
FmE
1914 0 :M
f209 sf
( )S
1920 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
116.361 413.666 M 0 0 24(reg\")FmTx
FmE
1920 0 :M
f146 sf
( )S
1922 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.361 413.666 M -0.07( value\) is the Configuration Space address of the function\'s configuration registers. Since the)W
60 425.666 M 1.049(\"unit-number\" is the address that appears in an Open Firmware \'device path\', it follows that only the )W
FmE
1923 0 :M
f183 sf
( )S
1929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.012 425.666 M 0 0 12(DD)FmTx
FmE
1929 0 :M
f146 sf
( )S
1931 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
492.012 425.666 M 1.049( and)W
FmE
1931 0 :M
f183 sf
( )S
1937 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 437.666 M 0 0 30(DD,FF)FmTx
FmE
1937 0 :M
f146 sf
( )S
1939 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 437.666 M ( forms of the text representation can appear in a \'device path\'.)S
FmE
1940 0 :M
f172 sf
( )S
1942 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 453.666 M -0.37(Note:  Since the predominant use of the text representation is within \'device paths\', text representations of I/O and)W
60 465.666 M (Memory Space addresses are rarely seen by casual users.)S
60 481.666 M -0.167(Note:  The bus number does not appear in the text representation.  If the bus number were present, then the path-)W
60 493.666 M -0.104(name of a particular device would depend on the particular assignment of bus numbers to bus controllers, so the)W
60 505.666 M -0.025(pathname could change if )W
-0.025(PCI-to-PCI b)W
-0.025(ridges were added or removed from other slots.  \(It is generally undesir-)W
60 517.666 M 0.257(able for the pathname of a particular device to depend on the presence or absence of other devices that are not)W
60 529.666 M -0.432(its ancestors in the device tree.\)  The combination of a device node\'s position in the device tree, its Device Number)W
60 541.666 M 0.266(and its Function Number uniquely select an individual function based on physical characteristics of the system,)W
60 553.666 M (so the function\'s pathname does not change unless the device is physically moved.)S
60 569.666 M 0.154(Note:  The bus number appears in the numerical representation because that makes it easier to implement Con-)W
60 581.666 M 0.309(figuration Space access methods.  The )W
FmE
1942 0 :M
f249 sf
( )S
1948 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
217.653 581.666 M 0 0 66(decode-unit)FmTx
FmE
1948 0 :M
f172 sf
( )S
1950 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.653 581.666 M 0.309( method automatically inserts the bus number in the nu-)W
60 593.666 M (merical representation; it can do so because each bus node knows the bus number of the bus it represents.)S
FmE
1951 0 :M
f146 sf
( )S
1953 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 611.666 M (Open Firmware implications:)S
60 629.666 M -0.085(Since some processors cannot generate I/O cycles directly, I/O Space accesses must be done with the register ac-)W
60 641.666 M (cess words \(e.g.,)S
FmE
1953 0 :M
f260 sf
( )S
1958 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126.357 641.666 M 0 0 20( rb@)FmTx
FmE
1958 0 :M
f146 sf
( )S
1960 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.357 641.666 M (, )S
FmE
1961 0 :M
f260 sf
( )S
1966 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.357 641.666 M 0 0 15(rw!)FmTx
FmE
1966 0 :M
f146 sf
( )S
1968 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.357 641.666 M (\).)S
60 659.666 M -0.269(It is recommended that a range of virtual addresses be set aside for use by )W
FmE
1968 0 :M
f260 sf
( )S
1973 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.322 659.666 M 0 0 30(map-in)FmTx
FmE
1973 0 :M
f146 sf
( )S
1975 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.322 659.666 M -0.269( to I/O Space devices so that the)W
60 671.666 M (register access words can determine when an I/O cycle needs to be generated.)S
60 689.666 M -0.226(Since Configuration Space often does not appear as a subset of the system\'s physical address space, this firmware)W
60 701.666 M 0.718(specification provides bus-specific methods to access Configuration Space.  Likewise, it provides methods for)W
0.502 0.502 0 0.498 0 0 0.502 FmK
40 111 2 22 FmqF
40 247 2 10 FmqF
FmE
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 13 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
1976 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1976 0 :M
0 G
f67 sf
( )S
1979 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
1979 0 :M
f92 sf
( )S
1982 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (8)S
FmE
1982 0 :M
f124 sf
( )S
1989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
1989 0 :M
f146 sf
( )S
1991 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 29.667 M (Special Cycles and Interrupt Acknowledge Cycles.)S
FmE
1992 0 :M
f67 sf
( )S
1995 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 64 M (2.3. Bus-specific Configuration Variables)S
FmE
1995 0 :M
f146 sf
( )S
1997 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 80.667 M -0.056(An Open Firmware-compliant User Interface on a system with a single built-in PCI bus )W
FmE
1997 0 :M
f172 sf
( )S
1999 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
393.868 80.667 M (may)S
FmE
2000 0 :M
f146 sf
( )S
2002 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
410.526 80.667 M -0.056( implement the)W
42 92.667 M (following PCI-specific Configuration Variable.)S
FmE
2002 0 :M
f260 sf
( )S
2007 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 106.667 M 0 0 70(pci-probe-list)FmTx
FmE
2007 0 :M
f146 sf
( )S
2009 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.687 106.667 M (\( -- list-str list-len \))S
116.468 N (N)S
FmE
2010 0 :M
f271 sf
( )S
2012 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 118 M (Holds list of slots to probe with )S
FmE
2012 0 :M
f260 sf
( )S
2017 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.734 118 M 0 0 45(probe-pci)FmTx
FmE
2017 0 :M
f271 sf
( )S
2019 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220.734 118 M ( .)S
60 133 M (A configuration variable containing a string, formatted as described in the following section, indicating the set of slots )S
60 142 M -0.137(that will be probed when )W
FmE
2019 0 :M
f260 sf
( )S
2024 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.033 142 M 0 0 45(probe-pci)FmTx
FmE
2024 0 :M
f271 sf
( )S
2026 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196.033 142 M -0.137( is executed.  The maximum length shall be sufficient to contain a string listing all )W
60 151 M (of the PCI bus\'s implemented slots.)S
FmE
2026 0 :M
f282 sf
( )S
2028 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 163 M (Configuration Variable Type)S
FmE
2029 0 :M
f271 sf
( )S
2031 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.984 163 M (: string)S
FmE
2031 0 :M
f282 sf
( )S
2033 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 175 M (Default value)S
FmE
2033 0 :M
f271 sf
( )S
2035 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.234 175 M (: a system-dependent value that includes all available slots, in numerically-ascending order.)S
FmE
2035 0 :M
f293 sf
( )S
2037 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 187 M (Note: )S
FmE
2038 0 :M
f260 sf
( )S
2043 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82.243 187 M 0 0 70(pci-probe-list)FmTx
FmE
2043 0 :M
f293 sf
( )S
2045 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
152.243 187 M ( is intended for the common case of a system with a single built-in PCI bus.  On systems with )S
60 196 M -0.598(multiple PCI buses, fine-grained control over the probe order can be achieved by repeated execution of the  )W
FmE
2045 0 :M
f260 sf
( )S
2050 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
440.348 196 M 0 0 50(probe-self)FmTx
FmE
2050 0 :M
f293 sf
( )S
2052 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
490.348 196 M -0.598( )W
60 205 M -0.079(method within individual bus nodes.  In any case, the ability to control the probe order is primarily intended as a conve-)W
60 214 M (nience when debugging faulty expansion cards.  Normally, the default probe order \(all available slots\) is used.)S
FmE
2052 0 :M
f67 sf
( )S
2055 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 246 M (2.4. Format of a Probe List)S
FmE
2055 0 :M
f146 sf
( )S
2057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 262.667 M 0.118(A PCI probe list is a text string consisting of a series of lower-case hexadecimal numbers separated by commas.)W
42 274.667 M -0.197(Each number is in the range )W
FmE
2058 0 :M
f183 sf
( )S
2064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
155.214 274.667 M 0 0 24(0\3111F)FmTx
FmE
2064 0 :M
f146 sf
( )S
2066 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
179.214 274.667 M -0.197(, corresponding to the slot with the same Device Number.  For a given PCI bus)W
42 286.667 M (implementation, only the numbers corresponding to existing slots are valid.)S
42 304.667 M (The first number in the series specifies the first slot to be probed, and so on.)S
FmE
2066 0 :M
f67 sf
( )S
2069 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 339 M (2.5. FCode Evaluation Semantics)S
FmE
2069 0 :M
f146 sf
( )S
2071 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 355.667 M (The Open Firmware driver for a PCI domain shall probe its plug-in slots according to the following algorithm.)S
FmE
2072 0 :M
f271 sf
( )S
2074 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 370 M (Enter \"probe state\", thus affecting subsequent behavior of the )S
FmE
2074 0 :M
f260 sf
( )S
2079 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.251 370 M 0 0 30(map-in)FmTx
FmE
2079 0 :M
f271 sf
( )S
2081 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.251 370 M ( and )S
FmE
2081 0 :M
f260 sf
( )S
2086 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
330.746 370 M 0 0 35(map-out)FmTx
FmE
2086 0 :M
f271 sf
( )S
2088 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.746 370 M ( methods.)S
60 382 M (Scan all slots in numerical order.  For each slot, read the header type field in the configuration register set for function )S
60 391 M (number 0.  If the header type field indicates a PCI-to-PCI bridge, perform the function described in the Probing PCI-to-)S
60 400 M -0.029(PCI bridges section.  If the header type field indicates a multi-function device, perform the following sequence for each )W
60 409 M -0.128(of the functions that are present \(as determined by the presence of a non-FFFFh value in the Vendor ID field of the func-)W
60 418 M (tion\'s Configuration Space header\).  Otherwise, perform the following sequence for the card\'s function number 0. The )S
60 427 M -0.079(first attempted access to each function )W
FmE
2088 0 :M
f293 sf
( )S
2090 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
199.454 427 M (shall)S
FmE
2091 0 :M
f271 sf
( )S
2093 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.955 427 M -0.079( use  )W
FmE
2093 0 :M
f260 sf
( )S
2098 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
235.462 427 M 0 0 25(lpeek)FmTx
FmE
2098 0 :M
f271 sf
( )S
2100 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.462 427 M -0.079(, because in some systems an attempted access to a non-existent )W
60 436 M (device might result in a processor exception \(e.g. a \"bus error\"\).)S
FmE
2100 0 :M
f293 sf
( )S
2102 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 448 M (Note:  Although some PCI implementations will not generate processor exceptions for aborted cycles, that is not an in-)S
60 457 M -0.377(herent limitation of PCI itself, but instead an implementation choice that is appropriate for some system architectures.  A )W
60 466 M -0.126(PCI host bridge knows if it terminated a cycle with a master abort.  Since the PC system architecture lacks the notion of )W
60 475 M (a bus error, PC to PCI host bridges cannot report a bus error to the PC, so they have to complete the cycle and return )S
60 484 M (all ones to the x86 processor.  However, in a non-PC system, the PCI host bridge could terminate the processor cycle )S
60 493 M (with a bus error.  Open Firmware )S
FmE
2102 0 :M
f321 sf
( )S
2104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.985 493 M (peek)S
FmE
2105 0 :M
f293 sf
( )S
2107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
201.974 493 M ( and )S
FmE
2107 0 :M
f321 sf
( )S
2109 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
219.974 493 M (poke)S
FmE
2109 0 :M
f293 sf
( )S
2111 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.469 493 M ( can behave in their normal way; if the processor can get a bus error, )S
60 502 M -0.256(peek and poke can report it.  If not, )W
FmE
2111 0 :M
f321 sf
( )S
2113 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.911 502 M (peek)S
FmE
2114 0 :M
f293 sf
( )S
2116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
203.9 502 M -0.256( and )W
FmE
2116 0 :M
f321 sf
( )S
2118 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
221.389 502 M (poke)S
FmE
2118 0 :M
f293 sf
( )S
2120 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238.884 502 M -0.256( will never say they got a bus error, they will just return whatever data )W
60 511 M -0.18(the cycle yielded.  This is not a problem, because the probing process involves doing a )W
FmE
2120 0 :M
f321 sf
( )S
2122 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
371.03 511 M (peek)S
FmE
2123 0 :M
f293 sf
( )S
2125 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
388.019 511 M -0.18( and also looking at the data )W
60 520 M (to see if it is right.)S
FmE
2125 0 :M
f271 sf
( )S
2127 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 532 M (Create the following properties from the information given in the configuration space header.)S
FmE
2127 0 :M
f260 sf
( )S
2132 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 541 M 0 0 55(\"vendor-id\")FmTx
78 553 M 0 0 55(\"device-id\")FmTx
78 565 M 0 0 65(\"revision-id\")FmTx
78 577 M 0 0 60(\"class-code\")FmTx
78 589 M 0 0 60(\"interrupts\")FmTx
78 601 M 0 0 55(\"min-grant\")FmTx
FmE
2132 0 :M
f271 sf
( )S
2134 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 601 M (\(Unless Header Type is 01h\))S
FmE
2134 0 :M
f260 sf
( )S
2139 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 613 M 0 0 65(\"max-latency\")FmTx
FmE
2139 0 :M
f271 sf
( )S
2141 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 613 M (\(Unless Header Type is 01h\))S
FmE
2142 0 :M
f260 sf
( )S
2147 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 625 M 0 0 70(\"devsel-speed\")FmTx
78 637 M 0 0 95(\"fast-back-to-back\")FmTx
78 649 M 0 0 70(\"subsystem-id\")FmTx
78 661 M 0 0 85(\"cache-line-size\")FmTx
78 673 M 0 0 105(\"subsystem-vendor-id\")FmTx
78 685 M 0 0 75(\"66mhz-capable\")FmTx
78 697 M 0 0 75(\"udf-supported\")FmTx
0.502 0.502 0 0.498 0 0 0.502 FmK
22 349 2 351 FmqF
FmE
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 14 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
2147 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2147 0 :M
0 G
f67 sf
( )S
2150 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
2150 0 :M
f92 sf
( )S
2153 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (9)S
FmE
2153 0 :M
f124 sf
( )S
2160 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
2160 0 :M
f293 sf
( )S
2162 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 29 M (Note: The feasibility of automatically creating the above properties depends on the ability to recognize the config-)S
96 38 M -0.12(uration header format. At present, there are two such formats - the base format defined by the )W
FmE
2162 0 :M
f271 sf
( )S
2164 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
434.631 38 M -0.12(PCI Local Bus Spec-)W
96 47 M (ification)S
FmE
2165 0 :M
f293 sf
( )S
2167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.986 47 M -0.291( and the PCI-to-PCI bridge format defined by the )W
FmE
2167 0 :M
f271 sf
( )S
2169 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303.565 47 M -0.291(PCI-to-PCI Bridge Architecture Specification)W
FmE
2169 0 :M
f293 sf
( )S
2171 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
467.372 47 M -0.291(. Those two )W
96 56 M -0.647(formats are almost, but not entirely, consistent with respect to the fields defined above \(in particular, the max-latency )W
96 65 M -0.153(and min-grant fields have a different meaning in the bridge header format\). If additional formats are defined in the )W
96 74 M -0.096(future, then it is possible that firmware written before those formats are defined will not be able to recognize them. )W
96 83 M (The question arises: Should the firmware assume that, with respect to the above fields, new formats are consistent )S
96 92 M -0.272(with the existing ones, creating the properties without regard to header type, or should the firmware do nothing if it )W
96 101 M (sees an unrecognized header type. The latter is, in some sense, safer, but it also precludes forwards compatibility, )S
96 110 M (which is a serious deficiency.)S
FmE
2171 0 :M
f271 sf
( )S
2173 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 122 M (Then determine whether or not the function has a expansion ROM image containing an FCode Program.)S
FmE
2174 0 :M
f293 sf
( )S
2176 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 134 M -0.055(Note: The location of the Expansion ROM Base Address Register differs between the two currently-defined header )W
96 143 M -0.216(types. Where will it be in future header types? Furthermore, the details of Expansion ROMs on PCI-to-PCI bridges )W
96 152 M (are not specified by the current revision of the PCI-to-PCI bridge spec.)S
FmE
2176 0 :M
f271 sf
( )S
2178 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 164 M (If the function has an FCode Program, evaluate the FCode Program as follows:)S
96 176 M -0.682(Copy the FCode program from expansion ROM into a temporary buffer in RAM and evaluate it as with )W
FmE
2178 0 :M
f260 sf
( )S
2183 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
459.613 176 M 0 0 45(byte-load)FmTx
FmE
2183 0 :M
f271 sf
( )S
2185 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
504.613 176 M -0.682(.  )W
96 185 M -0.505(\(The temporary RAM buffer may be deallocated afterwards.\)  Set the )W
FmE
2185 0 :M
f260 sf
( )S
2190 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
342.31 185 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
2190 0 :M
f271 sf
( )S
2192 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
432.31 185 M -0.505( property to the offset )W
96 194 M (of the ROM image at which the FCode was found.)S
96 206 M -0.189(When the FCode Program begins execution, )W
FmE
2193 0 :M
f260 sf
( )S
2198 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.572 206 M 0 0 50(my-address)FmTx
FmE
2198 0 :M
f271 sf
( )S
2200 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306.572 206 M -0.189( and )W
FmE
2200 0 :M
f260 sf
( )S
2205 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
323.69 206 M 0 0 40(my-space)FmTx
FmE
2205 0 :M
f271 sf
( )S
2207 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
363.69 206 M -0.189( together return the Configuration Space )W
96 215 M (address of the device\'s configuration register set.)S
FmE
2207 0 :M
f293 sf
( )S
2209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 227 M (Note: Since the phys.mid and phys.lo components of Configuration Spaces addresses must be zero, )S
FmE
2209 0 :M
f260 sf
( )S
2214 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
472.176 227 M 0 0 30(my-ad-)FmTx
114 236 M 0 0 25(dress)FmTx
FmE
2214 0 :M
f293 sf
( )S
2216 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
139 236 M -0.276( returns a pair of zeros; the interesting phys.hi information, which is necessary for accessing the config-)W
114 245 M (uration registers via the )S
FmE
2217 0 :M
f260 sf
( )S
2222 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.983 245 M 0 0 45(config-xx)FmTx
FmE
2222 0 :M
f293 sf
( )S
2224 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.983 245 M ( methods, is returned by )S
FmE
2224 0 :M
f260 sf
( )S
2229 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.961 245 M 0 0 40(my-space)FmTx
FmE
2229 0 :M
f293 sf
( )S
2231 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
376.961 245 M (.)S
FmE
2231 0 :M
f271 sf
( )S
2233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 257 M (The FCode Program is responsible for creating the )S
FmE
2233 0 :M
f260 sf
( )S
2238 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
280.432 257 M 0 0 30(\"name\")FmTx
FmE
2238 0 :M
f271 sf
( )S
2240 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
310.432 257 M ( and )S
FmE
2241 0 :M
f260 sf
( )S
2246 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
327.927 257 M 0 0 25(\"reg\")FmTx
FmE
2246 0 :M
f271 sf
( )S
2248 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.927 257 M ( properties.)S
78 269 M (If the function does not have an FCode Program:)S
96 281 M (Create the following properties from information in the device\'s Configuration Space registers:)S
FmE
2248 0 :M
f260 sf
( )S
2253 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 293 M 0 0 35(\"reg\"  )FmTx
FmE
2253 0 :M
f271 sf
( )S
2255 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131 293 M (Create the following entries, in the order shown:)S
114 305 M (\245)S
14.851 N (An entry describing the Configuration Space for the device.)S
114 317 M (\245)S
14.851 N (For each active base address register, in Configuration Space order, an entry describing the entire space )S
132 326 M (mapped by that base address register \(or, register pair\).  The )S
FmE
2255 0 :M
f293 sf
( )S
2257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.637 326 M (phys-mid)S
FmE
2257 0 :M
f271 sf
( )S
2259 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.624 326 M ( and )S
FmE
2260 0 :M
f293 sf
( )S
2262 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
401.119 326 M (phys-lo)S
FmE
2262 0 :M
f271 sf
( )S
2264 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
427.609 326 M ( components of these )S
132 335 M (entries are to be zero, and the size components are to be derived by probing the base address register \(or )S
132 344 M (register pair\).)S
114 356 M (\245)S
14.851 N (If the device\'s expansion ROM Base Address Register indicates a non-zero size, an entry describing the )S
132 365 M (expansion ROM, constructed as for normal base address registers.)S
114 377 M (\245)S
14.851 N (If applicable, \"legacy\" entries described in section )S
(7.)S
(, in the order shown.)S
FmE
2264 0 :M
f293 sf
( )S
2266 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 389 M (Note: Without FCode, it is not possible to determine whether or not there are multiple base address reg-)S
132 398.667 M (isters mapping the same resource, so it is not possible to create an )S
FmE
2266 0 :M
f348 sf
( )S
2271 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.95 398.667 M 0 0 70(\"alternate-reg)FmTx
FmE
2271 0 :M
f359 sf
( )S
2277 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
443.95 398.667 M 0 0 6(\")FmTx
FmE
2277 0 :M
f293 sf
( )S
2279 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
449.95 398.667 M (  property.)S
132 411 M -0.156(Note: the number of active base address registers depends in part on the header type configuration field; )W
132 420 M -0.119(in particular, header types 0x01and 0x81, denoting the standard PCI-to-PCI bridge header format, have )W
132 429 M (at most two base address registers, whereas header types 0x00 and 0x80have up to seven base address )S
132 438 M (registers \(including the Expansion ROM\'s\).)S
FmE
2280 0 :M
f260 sf
( )S
2285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 450.667 M 0 0 30(\"name\")FmTx
FmE
2285 0 :M
f271 sf
( )S
2287 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 450.667 M (Based on the PCI Class Code register, pick a name from Table 1.  If none apply, generate a name of the )S
132 460 M (form \")S
FmE
2287 0 :M
f220 sf
( )S
2292 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
155.412 460 M 0 0 60(pciVVVV,DDDD)FmTx
FmE
2292 0 :M
f271 sf
( )S
2294 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
215.412 460 M (\" as described below under )S
FmE
2294 0 :M
f260 sf
( )S
2299 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
314.79 460 M 0 0 60(\"compatible\")FmTx
FmE
2299 0 :M
f271 sf
( )S
2301 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
374.79 460 M (.)S
FmE
2301 0 :M
f260 sf
( )S
2306 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 472 M 0 0 60(\"compatible\")FmTx
FmE
2306 0 :M
f271 sf
( )S
2308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156 472 M (   Construct a name of the form )S
FmE
2309 0 :M
f260 sf
( )S
2314 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270.708 472 M 0 0 60(pciVVVV,DDDD)FmTx
FmE
2314 0 :M
f271 sf
( )S
2316 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
330.708 472 M (.  If the Subsystem ID field in the configuration )S
132 481 M (registers for this device is non-zero, )S
FmE
2316 0 :M
f220 sf
( )S
2321 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.186 481 M 0 0 45(VVVV,DDDD)FmTx
FmE
2321 0 :M
f271 sf
( )S
2323 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
308.186 481 M ( )S
FmE
2323 0 :M
f293 sf
( )S
2325 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
310.436 481 M (shall)S
FmE
2325 0 :M
f271 sf
( )S
2327 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
327.937 481 M ( be the Subsystem Vendor ID and Subsystem ID )S
132 490 M -0.173(respectively; otherwise )W
FmE
2328 0 :M
f220 sf
( )S
2333 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
217.112 490 M 0 0 45(VVVV,DDDD)FmTx
FmE
2333 0 :M
f271 sf
( )S
2335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.112 490 M -0.173( )W
FmE
2335 0 :M
f293 sf
( )S
2337 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
264.19 490 M (shall)S
FmE
2337 0 :M
f271 sf
( )S
2339 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
281.691 490 M -0.173( be the value of the Vendor ID and Device ID fields.  )W
FmE
2339 0 :M
f220 sf
( )S
2344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
472.851 490 M 0 0 20(VVVV)FmTx
FmE
2344 0 :M
f271 sf
( )S
2346 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
492.851 490 M -0.173( and )W
FmE
2347 0 :M
f220 sf
( )S
2352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 499 M 0 0 20(DDDD)FmTx
FmE
2352 0 :M
f271 sf
( )S
2354 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
152 499 M ( are ASCII hexadecimal numbers, lower case, without leading zeros. )S
96 511 M -0.207(Create the )W
FmE
2354 0 :M
f260 sf
( )S
2359 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
134.563 511 M 0 0 95(\"power-consumption\")FmTx
FmE
2359 0 :M
f271 sf
( )S
2361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
229.563 511 M -0.207( property from the state of the PRSNT1# and PRSNT2# connector, if possible.)W
78 523 M -0.064(Disable fixed-address response by clearing the Bus Master, Memory Space and IO Space bits in the Command Register.)W
78 535 M -0.095(After all slots have been so probed, exit \"probe state\" and assign base addresses \(by allocating the address space and set-)W
78 544 M -0.227(ting the base address register\) for each distinct base address register \(or register pair\).  The size of the allocated space for )W
78 553 M -0.219(a base register or register pair shall be the maximum of the size indicated by the base address register or register pair and )W
78 562 M -0.589(the size reported by the )W
FmE
2361 0 :M
f260 sf
( )S
2366 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
161.264 562 M 0 0 25(\"reg\")FmTx
FmE
2366 0 :M
f271 sf
( )S
2368 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.264 562 M -0.589( property.  For each child node, create an )W
FmE
2368 0 :M
f260 sf
( )S
2373 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
330.638 562 M 0 0 100(\"assigned-addresses\")FmTx
FmE
2373 0 :M
f271 sf
( )S
2375 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
430.638 562 M -0.589( property, with entries )W
78 571 M (for each address base register \(or register pair\) for which an address was assigned.)S
78 583 M (On the host bus, set the Cache Line Size register for each master bridge to the system cache line size if that line size is )S
78 592 M -0.178(supported by the bridge or zero otherwise.  On subordinate buses, set the Cache Line Size to the value of the Cache Line )W
78 601 M (Size register of the bridge for that bus if that line size is supported by the bridge or zero otherwise.)S
78 613 M (On each PCI bus within the domain, set the Latency Timer registers for each master to values appropriate for the other )S
78 622 M (devices on that bus, according to the values of the other device\'s MIN_GNT and MAX_LAT registers.)S
78 634 M -0.433(On each PCI bus within the domain, if all target devices on that bus have \"fast back-to-back\" capability, set the \"fast back-)W
78 643 M (to-back\" enable bits in the Command registers of master devices.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
40 23 2 623 FmqF
FmE
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 15 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
2376 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2376 0 :M
0 G
f67 sf
( )S
2379 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
2379 0 :M
f92 sf
( )S
2382 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (10)S
FmE
2382 0 :M
f124 sf
( )S
2389 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
2389 0 :M
f67 sf
( )S
2392 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
46 322 M (3. Bus Nodes Properties and Methods)S
FmE
2392 0 :M
f172 sf
( )S
2394 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
46 338.667 M 0.461(Note: A )W
0.461(PCI-to-PCI b)W
0.461(ridge is a parent of one PCI bus and a child of another. Consequently, a device node)W
46 350.667 M (representing a PCI bridge is both a Bus Node and a Child Node, with both sets of properties and methods.)S
FmE
2395 0 :M
f67 sf
( )S
2398 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
46 385 M (3.1. )S
(Bus Node )S
(Properties)S
46 420 M (3.1.1. Open Firmware-defined Properties for Bus Nodes)S
FmE
2398 0 :M
f146 sf
( )S
2400 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
46 436.667 M -0.543(The following standard properties, as defined in Open Firmware, have special meanings or interpretations for PCI.)W
FmE
2400 0 :M
f260 sf
( )S
2405 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
46 462.667 M 0 0 65(\"device_type\")FmTx
FmE
2405 0 :M
f146 sf
( )S
2407 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
454.441 462.667 M (S)S
FmE
2408 0 :M
f271 sf
( )S
2410 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 477 M -0.488(Standard )W
FmE
2410 0 :M
f293 sf
( )S
2412 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97.75 477 M (prop-name)S
FmE
2412 0 :M
f271 sf
( )S
2414 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.237 477 M -0.488(  to specify the implemented interface. prop-encoded-array:  a string encoded with )W
FmE
2414 0 :M
f260 sf
( )S
2419 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
428.75 477 M 0 0 65(encode-string)FmTx
FmE
2419 0 :M
f271 sf
( )S
2421 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
493.75 477 M (.)S
64 489 M -0.13(The meaning of this property is as defined in Open Firmware.  A Standard Package conforming to this specification and )W
64 498 M (corresponding to a device that implements a PCI bus shall implement this property with the string value )S
FmE
2422 0 :M
f220 sf
( )S
2427 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
440.146 498 M 0 0 25(\"pci\")FmTx
FmE
2427 0 :M
f271 sf
( )S
2429 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
465.146 498 M (.)S
FmE
2429 0 :M
f260 sf
( )S
2434 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
46 511.667 M 0 0 80(\"#address-cells\")FmTx
FmE
2434 0 :M
f146 sf
( )S
2436 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
454.441 511.667 M (S)S
FmE
2436 0 :M
f271 sf
( )S
2438 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 526 M (Standard )S
FmE
2439 0 :M
f293 sf
( )S
2441 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.238 526 M (prop-name)S
FmE
2441 0 :M
f271 sf
( )S
2443 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.725 526 M ( to define the number of cells necessary to represent a physical address.)S
FmE
2443 0 :M
f293 sf
( )S
2445 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 538 M (prop-encoded-array)S
FmE
2445 0 :M
f271 sf
( )S
2447 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136.969 538 M (:  Integer constant 3, encoded with )S
FmE
2448 0 :M
f260 sf
( )S
2453 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.422 538 M 0 0 50(encode-int)FmTx
FmE
2453 0 :M
f271 sf
( )S
2455 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.422 538 M (.)S
64 550 M (The value of )S
FmE
2455 0 :M
f260 sf
( )S
2460 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.727 550 M 0 0 80(\"#address-cells\")FmTx
FmE
2460 0 :M
f271 sf
( )S
2462 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
191.727 550 M ( for PCI Bus Nodes is 3.)S
FmE
2462 0 :M
f260 sf
( )S
2467 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
46 563.667 M 0 0 65(\"#size-cells\")FmTx
FmE
2467 0 :M
f146 sf
( )S
2469 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
454.441 563.667 M (S)S
FmE
2470 0 :M
f271 sf
( )S
2472 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 578 M (Standard )S
FmE
2472 0 :M
f293 sf
( )S
2474 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.238 578 M (prop-name)S
FmE
2474 0 :M
f271 sf
( )S
2476 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.725 578 M ( to define the number of cells necessary to represent the length of a physical address range.)S
FmE
2476 0 :M
f293 sf
( )S
2478 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 590 M (prop-encoded-array)S
FmE
2479 0 :M
f271 sf
( )S
2481 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136.969 590 M (:  Integer constant 2, encoded as with)S
FmE
2481 0 :M
f260 sf
( )S
2486 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270.917 590 M 0 0 55( encode-int)FmTx
FmE
2486 0 :M
f271 sf
( )S
2488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.917 590 M (.)S
64 602 M (The value of )S
FmE
2488 0 :M
f260 sf
( )S
2493 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.727 602 M 0 0 65(\"#size-cells\")FmTx
FmE
2493 0 :M
f271 sf
( )S
2495 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
176.727 602 M ( for PCI Bus Nodes is 2, reflecting PCI\'s 64-bit address space.)S
FmE
2495 0 :M
f260 sf
( )S
2500 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
46 615.667 M 0 0 25(\"reg\")FmTx
FmE
2500 0 :M
f146 sf
( )S
2502 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
454.441 615.667 M (S)S
FmE
2503 0 :M
f271 sf
( )S
2505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 630 M (Standard )S
FmE
2505 0 :M
f293 sf
( )S
2507 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.238 630 M (prop-name)S
FmE
2507 0 :M
f271 sf
( )S
2509 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.725 630 M (  to define the package\'s unit-address.)S
64 642 M (For nodes representing PCI)S
(-t)S
(o)S
(-P)S
(CI bridges, the )S
FmE
2510 0 :M
f260 sf
( )S
2515 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.195 642 M 0 0 25(\"reg\")FmTx
FmE
2515 0 :M
f271 sf
( )S
2517 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
261.195 642 M ( property is as defined for PCI Child Nodes.  The value denotes )S
64 651 M (the Configuration Space address of the bridge\'s configuration registers.)S
64 663 M (For bridges from some other bus to PCI bus, the )S
FmE
2517 0 :M
f260 sf
( )S
2522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.711 663 M 0 0 25(\"reg\")FmTx
FmE
2522 0 :M
f271 sf
( )S
2524 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
264.711 663 M ( property is as defined for that other bus)S
(.)S
FmE
2524 0 :M
0 0 .5 :F
f67 sf
( )S
2527 0 :M
FrMacBegin
0.502 0.502 0 0.498 0 0 0.502 FmK
0 FmP
149.072 51 M (T)S
-1.104 N (able 1: )S
(Generic Names based upon Class Code)S
FmE
2527 0 :M
0 G
f220 sf
( )S
2532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
65.5 73 M -1.5 0 30(Class )FmTx
68 84 M 0 0 20(Code)FmTx
131 78.5 M 0 0 30(\"name\")FmTx
200.5 73 M -2.5 0 30(Class )FmTx
203 84 M 0 0 20(Code)FmTx
278.5 78.5 M 0 0 30(\"name\")FmTx
361.5 73 M -2.5 0 30(Class )FmTx
364 84 M 0 0 20(Code)FmTx
425.5 78.5 M 0 0 30(\"name\")FmTx
62 101 M 0 0 30(000100)FmTx
14 N 0 0 35(display)FmTx
57 N 0 0 30(0500xx)FmTx
12 N 0 0 30(memory)FmTx
89 N 0 0 30(0801xx)FmTx
12 N 0 0 70(dma-controller)FmTx
62 116 M 0 0 30(0100xx)FmTx
14 N 0 0 20(scsi)FmTx
72 N 0 0 30(0501xx)FmTx
12 N 0 0 25(flash)FmTx
94 N 0 0 30(0802xx)FmTx
12 N 0 0 25(timer)FmTx
62 131 M 0 0 30(0101xx)FmTx
14 N 0 0 15(ide)FmTx
77 N 0 0 30(0600xx)FmTx
12 N 0 0 20(host)FmTx
99 N 0 0 30(0803xx)FmTx
12 N 0 0 15(rtc)FmTx
62 146 M 0 0 30(0102xx)FmTx
14 N 0 0 15(fdc)FmTx
77 N 0 0 30(0601xx)FmTx
12 N 0 0 15(isa)FmTx
104 N 0 0 30(0900xx)FmTx
12 N 0 0 40(keyboard)FmTx
62 161 M 0 0 30(0103xx)FmTx
14 N 0 0 15(ipi)FmTx
77 N 0 0 30(0602xx)FmTx
12 N 0 0 20(eisa)FmTx
99 N 0 0 30(0901xx)FmTx
12 N 0 0 15(pen)FmTx
62 176 M 0 0 30(0104xx)FmTx
14 N 0 0 20(raid)FmTx
72 N 0 0 30(0603xx)FmTx
12 N 0 0 15(mca)FmTx
104 N 0 0 30(0902xx)FmTx
12 N 0 0 25(mouse)FmTx
62 191 M 0 0 30(0200xx)FmTx
14 N 0 0 40(ethernet)FmTx
52 N 0 0 30(0604xx)FmTx
12 N 0 0 15(pci)FmTx
104 N 0 0 30(0Axxxx)FmTx
12 N 0 0 20(dock)FmTx
62 206 M 0 0 30(0201xx)FmTx
14 N 0 0 50(token-ring)FmTx
42 N 0 0 30(0605xx)FmTx
12 N 0 0 30(pcmcia)FmTx
89 N 0 0 30(0Bxxxx)FmTx
12 N 0 0 15(cpu)FmTx
62 221 M 0 0 30(0202xx)FmTx
14 N 0 0 20(fddi)FmTx
72 N 0 0 30(0606xx)FmTx
12 N 0 0 25(nubus)FmTx
94 N 0 0 30(0C00xx)FmTx
12 N 0 0 40(firewire)FmTx
62 236 M 0 0 30(0203xx)FmTx
14 N 0 0 15(atm)FmTx
77 N 0 0 30(0607xx)FmTx
12 N 0 0 35(cardbus)FmTx
84 N 0 0 30(0C01xx)FmTx
12 N 0 0 50(access-bus)FmTx
62 251 M 0 0 30(03xxxx)FmTx
14 N 0 0 35(display)FmTx
57 N 0 0 30(0700xx)FmTx
12 N 0 0 30(serial)FmTx
89 N 0 0 30(0C02xx)FmTx
12 N 0 0 15(ssa)FmTx
62 266 M 0 0 30(0400xx)FmTx
14 N 0 0 25(video)FmTx
67 N 0 0 30(0701xx)FmTx
12 N 0 0 40(parallel)FmTx
79 N 0 0 30(0C03xx)FmTx
12 N 0 0 15(usb)FmTx
62 281 M 0 0 30(0401xx)FmTx
14 N 0 0 25(sound)FmTx
67 N 0 0 30(0800xx)FmTx
12 N 0 0 100(interrupt-controller)FmTx
19 N 0 0 30(0C04xx)FmTx
12 N 0 0 65(fibre-channel)FmTx
0.502 0.502 0 0.498 0 0 0.502 FmK
56 61.25 FmB
0 224.5 FmL
0 0.5 FmSo
100 60.75 FmB
0 225.5 FmL
0 0.25 FmSo
192 60.75 FmB
0 225.5 FmL
0 0.25 FmSo
234 60.75 FmB
0 225.5 FmL
0 0.25 FmSo
353 60.75 FmB
0 225.5 FmL
0 0.25 FmSo
395 60.75 FmB
0 225.5 FmL
0 0.25 FmSo
486 61.25 FmB
0 224.5 FmL
0 0.5 FmSo
55.75 61 FmB
430.5 0 FmL
0 0.5 FmSo
55.75 91 FmB
430.5 0 FmL
0 0.5 FmSo
55.75 106 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 121 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 136 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 151 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 166 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 181 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 196 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 211 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 226 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 241 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 256 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 271 FmB
430.5 0 FmL
0 0.25 FmSo
55.75 286 FmB
430.5 0 FmL
0 0.5 FmSo
26 24 2 9 FmqF
26 43 2 12 FmqF
FmE
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 16 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
2532 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2532 0 :M
0 G
f67 sf
( )S
2535 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
2535 0 :M
f92 sf
( )S
2538 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (11)S
FmE
2538 0 :M
f124 sf
( )S
2545 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
2545 0 :M
f260 sf
( )S
2550 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 29.667 M 0 0 40(\"ranges\")FmTx
FmE
2550 0 :M
f146 sf
( )S
2552 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 29.667 M (S)S
FmE
2553 0 :M
f271 sf
( )S
2555 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 44 M (Standard )S
FmE
2555 0 :M
f293 sf
( )S
2557 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.238 44 M (prop-name)S
FmE
2557 0 :M
f271 sf
( )S
2559 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.725 44 M (  to define the mapping of parent address to child address spaces.)S
78 56 M -0.005(This property )W
FmE
2559 0 :M
f293 sf
( )S
2561 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.973 56 M (shall)S
FmE
2562 0 :M
f271 sf
( )S
2564 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.474 56 M -0.005( be present for all PCI bus bridges.  In particular, for PCI-to-PCI bridges, this property )W
FmE
2564 0 :M
f293 sf
( )S
2566 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
459.524 56 M (shall)S
FmE
2566 0 :M
f271 sf
( )S
2568 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
477.025 56 M -0.005( indicate )W
78 65 M (the settings of the mapping registers, thus representing the addresses to which the bridge will respond.  For PCI-to-PCI )S
78 74 M -0.372(bridges, there shall be an entry in the )W
FmE
2568 0 :M
f260 sf
( )S
2573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.223 74 M 0 0 40(\"ranges\")FmTx
FmE
2573 0 :M
f271 sf
( )S
2575 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.223 74 M -0.372( property for each of the Memory, Prefetchable Memory and/or I/O spac-)W
78 83 M (es if that address space is mapped through the bridge.)S
(  If no addresses are mapped through the bridge, the )S
FmE
2576 0 :M
f260 sf
( )S
2581 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
459.344 83 M 0 0 40(\"ranges\")FmTx
FmE
2581 0 :M
f271 sf
( )S
2583 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
499.344 83 M ( )S
78 92 M (property shall be absent.)S
FmE
2583 0 :M
f67 sf
( )S
2586 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 124 M (3.1.2. )S
(B)S
(us-specific Properties for Bus Nodes)S
FmE
2586 0 :M
f260 sf
( )S
2591 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 138.667 M 0 0 85(\322clock-frequency\323)FmTx
FmE
2591 0 :M
f146 sf
( )S
2593 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 138.667 M (S)S
FmE
2593 0 :M
f293 sf
( )S
2595 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 153 M (prop-name)S
FmE
2596 0 :M
f271 sf
( )S
2598 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.487 153 M (, denotes frequency of PCI clock.)S
FmE
2598 0 :M
f293 sf
( )S
2600 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 165 M (prop-encoded-array)S
FmE
2600 0 :M
f271 sf
( )S
2602 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 165 M -0.352(:  An integer, encoded as with )W
FmE
2602 0 :M
f260 sf
( )S
2607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.466 165 M 0 0 50(encode-int)FmTx
FmE
2607 0 :M
f271 sf
( )S
2609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
308.466 165 M -0.352(, that represents the clock frequency, in hertz, of the PCI )W
78 174 M (bus for which this node is the parent.)S
FmE
2610 0 :M
f260 sf
( )S
2615 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 187.667 M 0 0 55(\"bus-range\")FmTx
FmE
2615 0 :M
f146 sf
( )S
2617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 187.667 M (S)S
FmE
2617 0 :M
f293 sf
( )S
2619 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 202 M (prop-name)S
FmE
2619 0 :M
f271 sf
( )S
2621 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.487 202 M (, denotes range of bus numbers controlled by this PCI bus.)S
FmE
2622 0 :M
f293 sf
( )S
2624 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 214 M (prop-encoded-array)S
FmE
2624 0 :M
f271 sf
( )S
2626 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 214 M -0.38(:  Two integers, each encoded as with )W
FmE
2626 0 :M
f260 sf
( )S
2631 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285.617 214 M 0 0 50(encode-int)FmTx
FmE
2631 0 :M
f271 sf
( )S
2633 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.617 214 M -0.38(, the first representing the bus number of the PCI )W
78 223 M -0.213(bus implemented by the bus controller represented by this node \(the )W
FmE
2633 0 :M
f293 sf
( )S
2635 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.328 223 M -0.213(secondary bus)W
FmE
2636 0 :M
f271 sf
( )S
2638 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.85 223 M -0.213( number in )W
-0.213(PCI-to-PCI b)W
-0.213(ridge nomen-)W
78 232 M -0.05(clature\), and the second representing the largest bus number of any PCI bus in the portion of the PCI domain that is sub-)W
78 241 M (ordinate to this node \(the )S
FmE
2638 0 :M
f293 sf
( )S
2640 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
170.221 241 M (subordinate bus)S
FmE
2640 0 :M
f271 sf
( )S
2642 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
227.968 241 M ( number in )S
(PCI-to-PCI b)S
(ridge nomenclature\).)S
FmE
2642 0 :M
f260 sf
( )S
2647 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 252.667 M 0 0 60(\"slot-names\")FmTx
FmE
2647 0 :M
f146 sf
( )S
2649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 252.667 M (S)S
FmE
2650 0 :M
f293 sf
( )S
2652 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 267 M (prop-name)S
FmE
2652 0 :M
f271 sf
( )S
2654 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.487 267 M (, describes external labeling of add-in slots.)S
FmE
2654 0 :M
f293 sf
( )S
2656 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 279 M (prop-encoded-array)S
FmE
2657 0 :M
f271 sf
( )S
2659 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 279 M -0.145(:  An integer, encoded as with )W
FmE
2659 0 :M
f260 sf
( )S
2664 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.912 279 M 0 0 50(encode-int)FmTx
FmE
2664 0 :M
f271 sf
( )S
2666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
309.912 279 M -0.145(, followed by a list of strings, each encoded as with )W
FmE
2666 0 :M
f260 sf
( )S
2671 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
495 279 M 0 0 15(en-)FmTx
78 288 M 0 0 55(code-string)FmTx
FmE
2671 0 :M
f271 sf
( )S
2673 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133 288 M (.)S
78 300 M -0.436(The integer portion of the property value is a bitmask of available slots; for each add-in slot on the bus, the bit correspond-)W
78 309 M -0.534(ing to that slot\'s Device Number is set.  The least-significant bit corresponds to Device Number 0, the next bit corresponds )W
78 318 M (to Device Number 1, etc.  The number of following strings is the same as the number of slots; the first string gives the )S
78 327 M (label that is printed on the chassis for the slot with the smallest Device Number, and so on)S
(.)S
FmE
2673 0 :M
f260 sf
( )S
2678 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 338.667 M 0 0 100(\"bus-master-capable\")FmTx
FmE
2678 0 :M
f146 sf
( )S
2680 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 338.667 M (S)S
FmE
2681 0 :M
f293 sf
( )S
2683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 353 M (prop-name)S
FmE
2683 0 :M
f271 sf
( )S
2685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.487 353 M (, describes whether the device is wired to be PCI bus master capable.)S
FmE
2685 0 :M
f293 sf
( )S
2687 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 365 M (prop-encoded-array)S
FmE
2688 0 :M
f271 sf
( )S
2690 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 365 M (:  An integer, encoded as with )S
FmE
2690 0 :M
f260 sf
( )S
2695 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.929 365 M 0 0 50(encode-int)FmTx
FmE
2695 0 :M
f271 sf
( )S
2697 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
310.929 365 M (.)S
78 377 M -0.428(The property value is a bitmask indicating whether the device is wired to be bus master capable.  The bit being set implies )W
78 386 M (that the device is so wired and the bit being reset implies that the device is not so wired.  The least significant bit corre-)S
78 395 M (sponds to Device Number 0, the next bit corresponds to Device Number 1, etc.)S
FmE
2697 0 :M
f67 sf
( )S
2700 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 439 M (3.2. )S
(Bus Node )S
(Methods)S
60 474 M (3.2.1. Open Firmware-defined Methods for Bus Nodes)S
FmE
2700 0 :M
f146 sf
( )S
2702 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 490.667 M -0.417(A Standard Package implementing the )W
FmE
2703 0 :M
f183 sf
( )S
2709 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214.254 490.667 M 0 0 30(\"pci\")FmTx
FmE
2709 0 :M
f146 sf
( )S
2711 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
244.254 490.667 M -0.417( device type shall implement the following standard methods as de-)W
60 502.667 M -0.251(fined in Open Firmware, with the physical address representations as specified in section 2.1 of this standard, and)W
60 514.667 M (with additional PCI-specific semantics)S
FmE
2711 0 :M
f370 sf
( )S
2713 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214.668 510.667 M (1)S
FmE
2713 0 :M
f146 sf
( )S
2715 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.668 514.667 M (:)S
FmE
2716 0 :M
f260 sf
( )S
2721 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 526 M 0 0 20(open)FmTx
FmE
2721 0 :M
f271 sf
( )S
2723 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.766 526 M ( \( -- okay? \))S
68.766 N (Prepare this device for subsequent use)S
FmE
2723 0 :M
f260 sf
( )S
2728 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 536 M 0 0 25(close)FmTx
FmE
2728 0 :M
f271 sf
( )S
2730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
195.76 536 M (\( -- \))S
81.76 N (Close this previously-open device)S
FmE
2730 0 :M
f260 sf
( )S
2735 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 548 M 0 0 30(map-in)FmTx
FmE
2735 0 :M
f271 sf
( )S
2737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.767 548 M (\( phys.low phys.mid phys.hi size -- virt \))S
16.767 N (Map the specified subregion.)S
78 563 M (PCI-to-PCI b)S
(ridges pass through addresses unchanged.  Consequently, a )S
(PCI-to-PCI b)S
(ridge node\'s implementation of )S
FmE
2737 0 :M
f260 sf
( )S
2742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 572 M 0 0 30(map-in)FmTx
FmE
2742 0 :M
f271 sf
( )S
2744 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108 572 M ( typically just forwards the request to its parent.)S
FmE
60 584 450 16 rC
2745 0 :M
FrMacBegin
60 584.6 450 14.4 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
60 584.6 450 14.4 FmqF
0 FmP
69 588.416 FmB
144 0 FmL
2 0.5 FmSo
FmE
gR
gS 0 0 552 728 rC
2745 0 :M
f370 sf
( )S
2747 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 601.667 M (1.)S
FmE
2747 0 :M
f146 sf
( )S
2749 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84 605.667 M 0.72(The method )W
FmE
2750 0 :M
f209 sf
( )S
2756 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.982 605.667 M 0 0 54(add-range)FmTx
FmE
2756 0 :M
f146 sf
( )S
2758 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
189.982 605.667 M 0.72( is reserved and shall not be implemented in future releases of OFW. The)W
78 617.667 M 0.326(presence of this method in the PCI node indicates to child nodes both that the )W
FmE
2758 0 :M
f209 sf
( )S
2764 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
394.753 617.667 M 0 0 36(map-in)FmTx
FmE
2764 0 :M
f146 sf
( )S
2766 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
430.753 617.667 M 0.326( method of this)W
78 629.667 M 0.232(bus node requires that the )W
FmE
2767 0 :M
f172 sf
( )S
2769 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.397 629.667 M (phys.lo)S
FmE
2769 0 :M
f146 sf
( )S
2771 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.003 629.667 M 0.232( address to be extracted from the )W
FmE
2772 0 :M
f183 sf
( )S
2778 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
347.613 629.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
2778 0 :M
f146 sf
( )S
2780 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
467.613 629.667 M 0.232( prop-)W
78 641.667 M 1.061(erty  and that the )W
FmE
2780 0 :M
f209 sf
( )S
2786 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153 641.667 M 0 0 6(g)FmTx
0 0 126(et-inherited-property)FmTx
FmE
2786 0 :M
f146 sf
( )S
2788 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285 641.667 M 1.061( method does not return the )W
FmE
2789 0 :M
f183 sf
( )S
2795 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
403.555 641.667 M 0 0 48(prop-len)FmTx
FmE
2795 0 :M
f146 sf
( )S
2797 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
451.555 641.667 M 1.061( \(only the)W
FmE
2797 0 :M
f183 sf
( )S
2803 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 653.667 M 0 0 54(prop-addr)FmTx
FmE
2803 0 :M
f146 sf
( )S
2805 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 653.667 M 0.024( and )W
FmE
2806 0 :M
f183 sf
( )S
2812 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.487 653.667 M 0 0 30(false)FmTx
FmE
2812 0 :M
f146 sf
( )S
2814 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.487 653.667 M 0.024(\) if the property is found.  The non-existence of this method indicates to child)W
78 665.667 M -0.506(nodes that the )W
FmE
2814 0 :M
f172 sf
( )S
2816 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
134.521 665.667 M (phys.lo)S
FmE
2817 0 :M
f146 sf
( )S
2819 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.127 665.667 M -0.506( address is an offset relative to the base address \(when )W
FmE
2819 0 :M
f183 sf
( )S
2825 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
376.617 665.667 M 0 0 6(n)FmTx
FmE
2825 0 :M
f146 sf
( )S
2827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
382.617 665.667 M -0.506(=0\) and that )W
FmE
2828 0 :M
f209 sf
( )S
2834 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
432 665.667 M 0 0 60(get-inher-)FmTx
78 677.667 M 0 0 78(ited-property)FmTx
FmE
2834 0 :M
f146 sf
( )S
2836 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156 677.667 M 1.054( returns three stack items \()W
FmE
2836 0 :M
f183 sf
( )S
2842 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.048 677.667 M 0 0 54(prop-addr)FmTx
FmE
2842 0 :M
f146 sf
( )S
2844 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
321.048 677.667 M 1.054( )W
FmE
2845 0 :M
f183 sf
( )S
2851 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
324.602 677.667 M 0 0 48(prop-len)FmTx
FmE
2851 0 :M
f146 sf
( )S
2853 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
372.602 677.667 M 1.054( and )W
FmE
2853 0 :M
f183 sf
( )S
2859 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
394.148 677.667 M 0 0 30(false)FmTx
FmE
2859 0 :M
f146 sf
( )S
2861 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
424.148 677.667 M 1.054(\) if the inherited)W
78 689.667 M (property is found.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
40 77 2 18 FmqF
FmE
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 17 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
2862 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2862 0 :M
0 G
f67 sf
( )S
2865 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
2865 0 :M
f92 sf
( )S
2868 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (12)S
FmE
2868 0 :M
f124 sf
( )S
2875 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
2875 0 :M
f271 sf
( )S
2877 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 29 M -0.28(For a master PCI bus node in \"probe state\", if the physical address is relocatable, the )W
FmE
2877 0 :M
f260 sf
( )S
2882 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
361.742 29 M 0 0 30(map-in)FmTx
FmE
2882 0 :M
f271 sf
( )S
2884 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
391.742 29 M -0.28(  method shall assign a base )W
60 38 M (address and set the appropriate base address register to that address.  Such \"probe state\" assignments are temporary and )S
60 47 M (are not necessarily valid after the corresponding )S
FmE
2885 0 :M
f260 sf
( )S
2890 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
235.159 47 M 0 0 35(map-out)FmTx
FmE
2890 0 :M
f271 sf
( )S
2892 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270.159 47 M (.)S
FmE
2892 0 :M
f260 sf
( )S
2897 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 56 M 0 0 35(map-out)FmTx
FmE
2897 0 :M
f271 sf
( )S
2899 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.267 56 M (\( virt size -- \))S
66.267 N (Destroy mapping from previous map-in)S
60 71 M (PCI-to-PCI b)S
(ridges pass through addresses unchanged.  Consequently, a )S
(PCI-to-PCI b)S
(ridge node\'s implementation of )S
FmE
2899 0 :M
f260 sf
( )S
2904 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 80 M 0 0 35(map-out)FmTx
FmE
2904 0 :M
f271 sf
( )S
2906 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95 80 M ( typically just forwards the request to its parent.)S
60 92 M -0.019(For a master PCI bus node in \"probe state\", if the physical address is relocatable and there are no other active mappings )W
60 101 M -0.27(within the relocatable region containing that address, the )W
FmE
2906 0 :M
f260 sf
( )S
2911 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
264.011 101 M 0 0 35(map-out)FmTx
FmE
2911 0 :M
f271 sf
( )S
2913 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.011 101 M -0.27( method shall unassign the base address of the region, )W
60 110 M -0.053(freeing the corresponding range of PCI address space for later re-use.  A Standard FCode program shall unmap \(as with )W
FmE
2914 0 :M
f260 sf
( )S
2919 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 119 M 0 0 35(map-out)FmTx
FmE
2919 0 :M
f271 sf
( )S
2921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95 119 M (\) all base addresses that it mapped and shall )S
(disable m)S
(emory or I/O space access in the Command Register.)S
FmE
2921 0 :M
f260 sf
( )S
2926 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 128 M 0 0 45(dma-alloc)FmTx
FmE
2926 0 :M
f271 sf
( )S
2928 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.267 128 M (\( size -- virt \))S
66.267 N (Allocate a memory region for later use)S
FmE
2928 0 :M
f260 sf
( )S
2933 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 140 M 0 0 40(dma-free)FmTx
FmE
2933 0 :M
f271 sf
( )S
2935 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.267 140 M (\( virt size -- \))S
66.267 N (Free memory allocated with dma-alloc)S
FmE
2935 0 :M
f260 sf
( )S
2940 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 152 M 0 0 50(dma-map-in)FmTx
FmE
2940 0 :M
f271 sf
( )S
2942 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
122.419 152 M (\( .. virt size cacheable? -- devaddr \))S
26.419 N (Convert virtual address to device bus DMA address.)S
FmE
2943 0 :M
f260 sf
( )S
2948 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 164 M 0 0 55(dma-map-out)FmTx
FmE
2948 0 :M
f271 sf
( )S
2950 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.65 164 M (\( virt devaddr size -- \))S
50.65 N (Free DMA mapping set up with dma-map-in)S
FmE
2950 0 :M
f260 sf
( )S
2955 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 176 M 0 0 40(dma-sync)FmTx
FmE
2955 0 :M
f271 sf
( )S
2957 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.65 176 M (\( virt devaddr size -- \))S
50.65 N (Synchronize \(flush\) DMA memory caches)S
FmE
2957 0 :M
f260 sf
( )S
2962 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 188 M 0 0 50(probe-self)FmTx
0 0 5( )FmTx
FmE
2962 0 :M
f271 sf
( )S
2964 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
97 188 M (\( arg-str arg-len reg-str reg-len fcode-str fcode-len -- \))S
(Interpret FCode, as a child of this node)S
FmE
2964 0 :M
f260 sf
( )S
2969 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 200 M 0 0 55(decode-unit)FmTx
FmE
2969 0 :M
f271 sf
( )S
2971 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.767 200 M (\( addr len -- phys.lo phys.mid phys.hi \))S
19.767 N (Convert text representation of address to numerical repre-)S
276 210 M (sentation)S
FmE
2972 0 :M
f260 sf
( )S
2977 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 220 M 0 0 55(encode-unit)FmTx
FmE
2977 0 :M
f271 sf
( )S
2979 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.767 220 M (\( phys.lo phys.mid phys.hi -- addr len \))S
19.767 N (Convert numerical representation of address to text repre-)S
276 230 M (sentation)S
FmE
2979 0 :M
f172 sf
( )S
2981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 244.667 M -0.051(Note:  The PCI bus is little-endian; i.e. a byte address whose least-significant two bits are both zero uses the bus)W
42 256.667 M 0.054(byte lane containing the least-significant portion of a 32-bit quantity.  Typically, a bridge from a big-endian bus)W
42 268.667 M 0.065(to a PCI bus will swap the byte lanes so that the order of a sequence of bytes is preserved when that sequence is)W
42 280.667 M -0.45(transferred across the bridge.  As a result, the hardware changes the position of bytes within a 32-bit quantity that)W
42 292.667 M -0.096(is viewed as a 32-bit unit, rather than as a sequence of individually-addressed bytes.  In order to properly imple-)W
42 304.667 M -0.501(ment the semantics of the Open Firmware register access words \(e.g.  )W
FmE
2981 0 :M
f381 sf
( )S
2983 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
318.121 304.667 M (rl!\))S
FmE
2984 0 :M
f172 sf
( )S
2986 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
332.006 304.667 M -0.501(, the device node for such byte-swapping)W
42 316.667 M (bridges must substitute versions of those words that \"undo\" the hardware byte-swapping.)S
FmE
2986 0 :M
f67 sf
( )S
2989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 351 M (3.2.2. Bus-specific Methods for Bus Nodes)S
42 386 M (3.2.3. Configuration Access Words)S
FmE
2989 0 :M
f146 sf
( )S
2991 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 402.667 M -0.028(The methods described below have execution semantics similar \(especially with respect to write-buffer flushing,)W
42 414.667 M 0.285(atomicity, etc.\)  to those of the register access words \(e.g., )W
FmE
2992 0 :M
f209 sf
( )S
2998 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
280.032 414.667 M 0 0 6(r)FmTx
FmE
2998 0 :M
f135 sf
( )S
3000 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
286.032 414.667 M (b@)S
FmE
3000 0 :M
f146 sf
( )S
3002 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.89 414.667 M 0.285(, )W
FmE
3003 0 :M
f135 sf
( )S
3005 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306.175 414.667 M (rw!)S
FmE
3005 0 :M
f146 sf
( )S
3007 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
321.161 414.667 M 0.285(\); in most implementations, these methods)W
42 426.667 M (will be implemented via the register access words.)S
42 442.667 M -0.28(The data type \'config-addr\' refers to the \'phys.hi\' cell of the numerical representation of a Configuration Space ad-)W
42 453.666 M (dress.  The \'config-addr\' shall be aligned to the data type of the access. )S
FmE
3008 0 :M
f260 sf
( )S
3013 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 466.666 M 0 0 45(config-l@)FmTx
FmE
3013 0 :M
f271 sf
( )S
3015 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.028 466.666 M (\( config-addr -- data \))S
78 478 M (Performs a 32-bit Configuration Read.)S
FmE
3015 0 :M
f260 sf
( )S
3020 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 497.666 M 0 0 45(config-l!)FmTx
FmE
3020 0 :M
f271 sf
( )S
3022 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.028 497.666 M (\( data config-addr -- \))S
78 509 M (Performs a 32-bit Configuration Write.)S
FmE
3022 0 :M
f260 sf
( )S
3027 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 528.666 M 0 0 45(config-w@)FmTx
FmE
3027 0 :M
f271 sf
( )S
3029 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.028 528.666 M (\( config-addr -- data \))S
78 540 M (Performs a 16-bit Configuration Read.)S
FmE
3030 0 :M
f260 sf
( )S
3035 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 559.666 M 0 0 45(config-w!)FmTx
FmE
3035 0 :M
f271 sf
( )S
3037 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.028 559.666 M (\( data config-addr -- \))S
78 571 M (Performs a 16-bit Configuration Write.)S
FmE
3037 0 :M
f260 sf
( )S
3042 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 590.666 M 0 0 45(config-b@)FmTx
FmE
3042 0 :M
f271 sf
( )S
3044 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.028 590.666 M (\( config-addr -- data \))S
78 602 M (Performs an 8-bit Configuration Read.)S
FmE
3044 0 :M
f260 sf
( )S
3049 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 621.666 M 0 0 45(config-b!)FmTx
FmE
3049 0 :M
f271 sf
( )S
3051 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.028 621.666 M (\( data config-addr -- \))S
78 633 M (Performs an 8-bit Configuration Write.)S
FmE
3051 0 :M
f260 sf
( )S
3056 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 648.666 M 0 0 120(assign-package-addresses)FmTx
FmE
3056 0 :M
f271 sf
( )S
3058 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270.39 648.666 M (\( phandle -- \))S
78 660 M (Assigns addresses \(i.e., creates )S
FmE
3059 0 :M
f220 sf
( )S
3064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
191.192 660 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3064 0 :M
f271 sf
( )S
3066 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.192 660 M ( property\) for the child node denoted by )S
FmE
3066 0 :M
f293 sf
( )S
3068 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
437.137 660 M (phandle)S
FmE
3068 0 :M
f271 sf
( )S
3070 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.132 660 M (.)S
FmE
endp
%%Page: 18 18
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 18 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
3070 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3070 0 :M
f67 sf
( )S
3073 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
3073 0 :M
f92 sf
( )S
3076 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (13)S
FmE
3076 0 :M
f124 sf
( )S
3083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
3083 0 :M
f135 sf
( )S
3085 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 29.667 M (3.2.3.1. Address-less Access Words)S
FmE
3086 0 :M
f260 sf
( )S
3091 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 43.667 M 0 0 40(intr-ack)FmTx
FmE
3091 0 :M
f209 sf
( )S
3097 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 43.667 M 0 0 6( )FmTx
FmE
3097 0 :M
f146 sf
( )S
3099 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106 43.667 M (      )S
FmE
3099 0 :M
f220 sf
( )S
3104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121 43.667 M 0 0 35( \( -- \))FmTx
FmE
3104 0 :M
f271 sf
( )S
3106 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 55 M (Performs a PCI Interrupt Acknowledge Cycle.)S
FmE
3106 0 :M
f260 sf
( )S
3111 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 74.667 M 0 0 45(special-!)FmTx
FmE
3111 0 :M
f146 sf
( )S
3113 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
105 74.667 M (       )S
FmE
3114 0 :M
f220 sf
( )S
3119 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
122.5 74.667 M 0 0 80(\( data bus# -- \))FmTx
FmE
3119 0 :M
f271 sf
( )S
3121 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 86 M (Performs a PCI Special Cycle on the indicated )S
FmE
3121 0 :M
f220 sf
( )S
3126 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.44 86 M 0 0 20(bus#)FmTx
FmE
3126 0 :M
f271 sf
( )S
3128 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.44 86 M (.)S
FmE
3128 0 :M
f293 sf
( )S
3130 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 101 M -0.387(Note: Standard )W
-0.387(PCI-to-PCI b)W
-0.387(ridges provide a mechanism for converting Configuration Cycles with particular addresses )W
78 110 M -0.477(to Special Cycles. Consequently, for a )W
-0.477(PCI-to-PCI b)W
-0.477(ridge, the likely implementation of )W
FmE
3131 0 :M
f260 sf
( )S
3136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
386.437 110 M 0 0 45(special-!)FmTx
FmE
3136 0 :M
f293 sf
( )S
3138 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
431.437 110 M -0.477( involves invoking the )W
78 119 M (parent node\'s )S
FmE
3138 0 :M
f260 sf
( )S
3143 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.915 119 M 0 0 45(config-l!)FmTx
FmE
3143 0 :M
f293 sf
( )S
3145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.915 119 M ( method.)S
FmE
3145 0 :M
f67 sf
( )S
3148 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 160 M (4. Child Node)S
( Properties and Methods)S
FmE
3148 0 :M
f172 sf
( )S
3150 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 176.667 M 0.2(Note: A )W
0.2(PCI-to-PCI b)W
0.2(ridge is a parent of one PCI bus and a child of another. Consequently, a device node rep-)W
60 188.667 M (resenting a PCI bridge is both a Bus Node and a Child Node, with both sets of properties and methods.)S
FmE
3151 0 :M
f67 sf
( )S
3154 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 223 M (4.1. )S
(Child Node P)S
(roperties)S
60 258 M (4.1.1. Open Firmware-defined Properties for Child Nodes)S
FmE
3154 0 :M
f146 sf
( )S
3156 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 274.667 M (The following properties, as defined in Open Firmware, have special meanings or interpretations for PCI)S
(.)S
FmE
3156 0 :M
f260 sf
( )S
3161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 288.667 M 0 0 5(\")FmTx
0 0 25(name\")FmTx
FmE
3161 0 :M
f146 sf
( )S
3163 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 288.667 M (S)S
FmE
3164 0 :M
f271 sf
( )S
3166 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 303 M (Standard )S
FmE
3166 0 :M
f293 sf
( )S
3168 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.238 303 M (prop-name)S
FmE
3168 0 :M
f271 sf
( )S
3170 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.725 303 M (, defines device\325s name.)S
FmE
3170 0 :M
f293 sf
( )S
3172 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 315 M (prop-encoded-array)S
FmE
3173 0 :M
f271 sf
( )S
3175 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 315 M (:  device name, encoded as with )S
FmE
3175 0 :M
f260 sf
( )S
3180 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.921 315 M 0 0 65(encode-string)FmTx
FmE
3180 0 :M
f271 sf
( )S
3182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
332.921 315 M (.)S
78 327 M -0.504(For devices with FCode, the name is defined by the FCode program.  In accordance with the Generic Names Recommend-)W
78 336 M (ed Practice [4], it should represent the general nature of the device.)S
78 348 M (For devices without FCode, the name is derived from the PCI Class Code, as described in section 2.5.)S
FmE
3182 0 :M
f260 sf
( )S
3187 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 359 M 0 0 55(\"compatible)FmTx
0 0 5(\")FmTx
FmE
3187 0 :M
f271 sf
( )S
3189 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 373 M (Standard )S
FmE
3189 0 :M
f293 sf
( )S
3191 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.238 373 M (prop-name)S
FmE
3192 0 :M
f271 sf
( )S
3194 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.725 373 M (, defines devices with which this device is compatible.)S
FmE
3194 0 :M
f293 sf
( )S
3196 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 385 M (prop-encoded-array)S
FmE
3196 0 :M
f271 sf
( )S
3198 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 385 M (:  The concatenation, as with )S
FmE
3198 0 :M
f260 sf
( )S
3203 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.679 385 M 0 0 35(encode+)FmTx
FmE
3203 0 :M
f271 sf
( )S
3205 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.679 385 M (, of an arbitrary number of text strings, each encoded with)S
78 394 M ( )S
FmE
3206 0 :M
f260 sf
( )S
3211 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
80.25 394 M 0 0 65(encode-string)FmTx
FmE
3211 0 :M
f271 sf
( )S
3213 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145.25 394 M (.)S
78 406 M (As defined in [1] and [4], this property lists devices with which this device is compatible.)S
FmE
3213 0 :M
f293 sf
( )S
3215 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 418 M -0.071(Note 1:  It is better to identify the function as a whole, instead of identifying only the \"chip\" that is directly connected to )W
78 427 M -0.14(the PCI bus \(e.g.:  use )W
FmE
3215 0 :M
f348 sf
( )S
3220 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.632 427 M 0 0 5(\")FmTx
FmE
3220 0 :M
f220 sf
( )S
3225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.632 427 M 0 0 45(IBM,v915\")FmTx
FmE
3225 0 :M
f293 sf
( )S
3227 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
209.632 427 M -0.14( instead of )W
FmE
3227 0 :M
f348 sf
( )S
3232 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
248.96 427 M 0 0 5(\")FmTx
FmE
3232 0 :M
f220 sf
( )S
3237 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.96 427 M 0 0 35(S3,928\")FmTx
FmE
3237 0 :M
f293 sf
( )S
3239 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288.96 427 M -0.14(\) because there may be numerous other display adapters that )W
78 436 M -0.542(use the same graphics chip, but which are not entirely compatible due to the presence of different support chips like DACs )W
78 445 M (and programmable clock generators.)S
78 457.667 M -0.246(Note 2:  Devices with FCode may put a name of the form  )W
FmE
3240 0 :M
f183 sf
( )S
3246 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.501 457.667 M 0 0 72(pciVVVV,DDDD)FmTx
FmE
3246 0 :M
f293 sf
( )S
3248 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.501 457.667 M -0.246(\) in )W
FmE
3248 0 :M
f249 sf
( )S
3254 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
370.504 457.667 M 0 0 6(\")FmTx
FmE
3254 0 :M
f209 sf
( )S
3260 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
376.504 457.667 M 0 0 66(compatible\")FmTx
FmE
3260 0 :M
f293 sf
( )S
3262 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
442.504 457.667 M -0.246( if they present the )W
78 467 M (same interface that the non-FCode algorithm \(section 2.5\) does.)S
FmE
3262 0 :M
f260 sf
( )S
3267 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 478.667 M 0 0 25(\"reg\")FmTx
FmE
3267 0 :M
f146 sf
( )S
3269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 478.667 M (S)S
FmE
3270 0 :M
f271 sf
( )S
3272 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 493 M (S)S
(tandard )S
FmE
3272 0 :M
f293 sf
( )S
3274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.238 493 M (prop-name)S
FmE
3274 0 :M
f271 sf
( )S
3276 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.725 493 M (, defines device\'s addressable regions.)S
FmE
3276 0 :M
f293 sf
( )S
3278 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 505 M (prop-encoded-array)S
FmE
3279 0 :M
f271 sf
( )S
3281 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 505 M (:  Arbitrary number of \()S
FmE
3281 0 :M
f293 sf
( )S
3283 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.177 505 M (phys-addr size)S
FmE
3283 0 :M
f271 sf
( )S
3285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288.412 505 M (\) pairs.)S
FmE
3285 0 :M
f293 sf
( )S
3287 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 517 M (phys-addr)S
FmE
3288 0 :M
f271 sf
( )S
3290 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114.49 517 M -0.085( is \()W
FmE
3290 0 :M
f293 sf
( )S
3292 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.816 517 M -0.085(phys.lo phys.mid phys.hi)W
FmE
3292 0 :M
f271 sf
( )S
3294 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
215.879 517 M -0.085(\), encoded as with )W
FmE
3294 0 :M
f260 sf
( )S
3299 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.262 517 M 0 0 55(encode-phys)FmTx
FmE
3299 0 :M
f271 sf
( )S
3301 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.262 517 M -0.085(. )W
FmE
3302 0 :M
f293 sf
( )S
3304 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
342.677 517 M (size)S
FmE
3304 0 :M
f271 sf
( )S
3306 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.172 517 M -0.085( is a pair of integers, each encoded as with )W
FmE
3306 0 :M
f260 sf
( )S
3311 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 526 M 0 0 50(encode-int)FmTx
FmE
3311 0 :M
f271 sf
( )S
3313 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128 526 M ( .)S
78 538 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least )S
78 547 M (significant 32 bits thereof.)S
78 559 M -0.623(This property is mandatory for PCI Child Nodes, as defined by Open Firmware.  The property value consists of a sequence )W
78 568 M -0.373(of \()W
FmE
3313 0 :M
f293 sf
( )S
3315 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90.367 568 M -0.373(phys-addr, size)W
FmE
3316 0 :M
f271 sf
( )S
3318 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.479 568 M -0.373(\) pairs.  In the first such pair, the )W
FmE
3318 0 :M
f293 sf
( )S
3320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.816 568 M (phys-addr)S
FmE
3320 0 :M
f271 sf
( )S
3322 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297.306 568 M -0.373( component shall be the Configuration Space address of the )W
78 577 M (beginning of the function\'s set of configuration registers \(i.e.  the )S
FmE
3322 0 :M
f220 sf
( )S
3327 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.782 577 M 0 0 40(rrrrrrrr)FmTx
FmE
3327 0 :M
f271 sf
( )S
3329 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.782 577 M ( field is zero\) and the )S
FmE
3330 0 :M
f293 sf
( )S
3332 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
432.242 577 M (size)S
FmE
3332 0 :M
f271 sf
( )S
3334 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
445.738 577 M ( component shall )S
78 586 M -0.015(be zero.  Each additional \()W
FmE
3334 0 :M
f293 sf
( )S
3336 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
172.377 586 M -0.015(phys-addr, size)W
FmE
3336 0 :M
f271 sf
( )S
3338 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.847 586 M -0.015(\) pair shall specify the address of an addressable region of Memory Space or I/)W
78 595 M (O Space associated with the function.  In these pairs, if the \")S
FmE
3339 0 :M
f220 sf
( )S
3344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
295.085 595 M 0 0 5(n)FmTx
FmE
3344 0 :M
f271 sf
( )S
3346 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.085 595 M (\" bit of phys.hi is 0, reflecting a relocatable address, then )S
FmE
3346 0 :M
f293 sf
( )S
3348 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 604 M (phys.mid)S
FmE
3348 0 :M
f271 sf
( )S
3350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
110.243 604 M -0.086( and )W
FmE
3350 0 :M
f293 sf
( )S
3352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.565 604 M (phys.lo)S
FmE
3353 0 :M
f271 sf
( )S
3355 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.31 604 M -0.086( specify an address relative to the value of the associated base register. In general this value will be )W
78 613 M -0.192(zero, specifying an address range corresponding directly to the hardware\'s.  If the \")W
FmE
3355 0 :M
f220 sf
( )S
3360 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.899 613 M 0 0 5(n)FmTx
FmE
3360 0 :M
f271 sf
( )S
3362 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
378.899 613 M -0.192(\" bit of phys.hi is 1, reflecting a non-)W
78 622 M (relocatable address, then )S
FmE
3362 0 :M
f293 sf
( )S
3364 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.949 622 M (phys.mid)S
FmE
3364 0 :M
f271 sf
( )S
3366 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
201.192 622 M ( and )S
FmE
3367 0 :M
f293 sf
( )S
3369 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.687 622 M (phys.hi)S
FmE
3369 0 :M
f271 sf
( )S
3371 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
244.432 622 M ( specify an absolute PCI address.)S
78 634 M -0.559(In the event that a function has an addressable region that can be accessed relative to more than one Base Address Register )W
78 643 M -0.078(\(for example, in Memory Space relative to one Base Register, and in I/O Space relative to another\), only the primary ac-)W
78 652 M -0.266(cess path \(typically, the one in Memory Space\) shall be listed in the )W
FmE
3371 0 :M
f260 sf
( )S
3376 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.455 652 M 0 0 25(\"reg\")FmTx
FmE
3376 0 :M
f271 sf
( )S
3378 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345.455 652 M -0.266( property, and the secondary access path shall )W
78 661 M (be listed in the )S
FmE
3378 0 :M
f260 sf
( )S
3383 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.987 661 M 0 0 75(\"alternate-reg\")FmTx
FmE
3383 0 :M
f271 sf
( )S
3385 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
207.987 661 M ( property.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
40 268 2 24 FmqF
40 321 2 149 FmqF
FmE
endp
%%Page: 19 19
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 19 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
3386 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3386 0 :M
0 G
f67 sf
( )S
3389 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
3389 0 :M
f92 sf
( )S
3392 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (14)S
FmE
3392 0 :M
f124 sf
( )S
3399 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
3399 0 :M
f293 sf
( )S
3401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 29 M -0.12(Note:  The device FCode is free to construct the second and later pairs in any order, including or omitting references to )W
60 38 M (base address registers, hard-decoded registers, and so on.  However, for compatibility between FCode and earlier non-)S
60 47 M (FCode versions of a device and between Open Firmware and non-Open Firmware systems, it is recommended that the )S
60 56 M (device FCode construct the )S
FmE
3401 0 :M
f348 sf
( )S
3406 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.96 56 M 0 0 25(\"reg\")FmTx
FmE
3406 0 :M
f293 sf
( )S
3408 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
185.96 56 M (  property  )S
FmE
3409 0 :M
f271 sf
( )S
3411 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
225.95 56 M (exactly)S
FmE
3411 0 :M
f293 sf
( )S
3413 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
251.935 56 M ( as the platform firmware would have in the absence of device )S
60 65 M (FCode, as described )S
(in Section 2.5.)S
FmE
3413 0 :M
f260 sf
( )S
3418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 78.667 M 0 0 60(\"interrupts\")FmTx
FmE
3418 0 :M
f146 sf
( )S
3420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.441 78.667 M (S)S
FmE
3421 0 :M
f293 sf
( )S
3423 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 93 M (prop-name)S
FmE
3423 0 :M
f271 sf
( )S
3425 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.487 93 M (, the presence of which indicates that the function represented by this node is connected to a PCI expansion )S
60 102 M (connector\'s interrupt line.)S
FmE
3425 0 :M
f293 sf
( )S
3427 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 114 M (prop-encoded-array)S
FmE
3427 0 :M
f271 sf
( )S
3429 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.969 114 M -0.417(:  Integer, encoded as with )W
FmE
3430 0 :M
f260 sf
( )S
3435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
227.676 114 M 0 0 50(encode-int)FmTx
FmE
3435 0 :M
f271 sf
( )S
3437 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
277.676 114 M -0.417(.  The integer represents the interrupt line to which this func-)W
60 123 M (tion\'s interrupt is connected; INTA=1, INTB=2, INTC=3, INTD=4.  This value is determined from the contents of the )S
60 132 M (device\'s Configuration Interrupt Pin Register. )S
FmE
3437 0 :M
f67 sf
( )S
3440 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 166 M (4.1.2. Bus-specific Properties for Child Nodes)S
FmE
3440 0 :M
f146 sf
( )S
3442 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 182.667 M -0.093(Standard Packages corresponding to devices that are children of a PCI bus shall implement the following prop-)W
42 194.667 M (erties, if applicable.)S
FmE
3442 0 :M
f260 sf
( )S
3447 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 224.667 M 0 0 75(\"alternate-reg\")FmTx
FmE
3447 0 :M
f146 sf
( )S
3449 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.441 224.667 M (S)S
FmE
3450 0 :M
f293 sf
( )S
3452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 239 M (prop-name)S
FmE
3452 0 :M
f271 sf
( )S
3454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.487 239 M (, defines alternate access paths for addressable regions.)S
FmE
3454 0 :M
f293 sf
( )S
3456 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 251 M (prop-encoded-array)S
FmE
3457 0 :M
f271 sf
( )S
3459 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.969 251 M (: Arbitrary number of \()S
FmE
3459 0 :M
f293 sf
( )S
3461 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
215.927 251 M (phys-addr size)S
FmE
3461 0 :M
f271 sf
( )S
3463 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.162 251 M (\) pairs.)S
FmE
3463 0 :M
f293 sf
( )S
3465 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 263 M -0.23(phys-addr )W
FmE
3466 0 :M
f271 sf
( )S
3468 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.51 263 M -0.23(is \()W
FmE
3468 0 :M
f293 sf
( )S
3470 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.526 263 M -0.23(phys.lo phys.mid phys.hi)W
FmE
3470 0 :M
f271 sf
( )S
3472 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.3 263 M -0.23(\), encoded as with )W
FmE
3472 0 :M
f260 sf
( )S
3477 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
264.104 263 M 0 0 60(encode-phys.)FmTx
FmE
3477 0 :M
f271 sf
( )S
3479 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
324.104 263 M -0.23( )W
FmE
3480 0 :M
f293 sf
( )S
3482 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
326.124 263 M (size)S
FmE
3482 0 :M
f271 sf
( )S
3484 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
339.62 263 M -0.23( is a pair of integers, each encoded as with )W
FmE
3484 0 :M
f260 sf
( )S
3489 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 272 M 0 0 50(encode-int)FmTx
FmE
3489 0 :M
f271 sf
( )S
3491 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
110 272 M ( .)S
60 284 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least )S
60 293 M (significant 32 bits thereof.)S
60 305 M -0.298(This property describes alternative access paths for the addressable regions described by the )W
FmE
3491 0 :M
f260 sf
( )S
3496 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.717 305 M 0 0 25(\"reg\")FmTx
FmE
3496 0 :M
f271 sf
( )S
3498 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
414.717 305 M -0.298( property.  Typically, )W
60 314 M (an alternative access path exists when a particular part of a device can be accessed either in Memory Space or in I/O )S
60 323 M -0.308(Space, with a separate Base Address register for each of the two access paths.  The primary access paths are described by )W
60 332 M (the )S
FmE
3499 0 :M
f260 sf
( )S
3504 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
73.245 332 M 0 0 25(\"reg\")FmTx
FmE
3504 0 :M
f271 sf
( )S
3506 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.245 332 M ( property, and the secondary access paths, if any, are described by the )S
FmE
3506 0 :M
f260 sf
( )S
3511 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351.122 332 M 0 0 75(\"alternate-reg\")FmTx
FmE
3511 0 :M
f271 sf
( )S
3513 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
426.122 332 M ( property.)S
60 344 M -0.317(If the function has no alternative access paths, the device node shall have no )W
FmE
3513 0 :M
f260 sf
( )S
3518 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
332.196 344 M 0 0 75(\"alternate-reg\")FmTx
FmE
3518 0 :M
f271 sf
( )S
3520 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
407.196 344 M -0.317( property.  If the device )W
60 353 M -0.401(has alternative access paths, each entry \(i.e. each )W
FmE
3520 0 :M
f293 sf
( )S
3522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.438 353 M -0.401(phys-addr size)W
FmE
3523 0 :M
f271 sf
( )S
3525 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
286.273 353 M -0.401( pair\) of its value represents the secondary access path for )W
60 362 M -0.229(the addressable region whose primary access path is in the corresponding entry of the )W
FmE
3525 0 :M
f260 sf
( )S
3530 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
366.666 362 M 0 0 25(\"reg\")FmTx
FmE
3530 0 :M
f271 sf
( )S
3532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
391.666 362 M -0.229( property value.  If the num-)W
60 371 M -0.056(ber of )W
FmE
3532 0 :M
f260 sf
( )S
3537 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
83.372 371 M 0 0 75(\"alternate-reg\")FmTx
FmE
3537 0 :M
f271 sf
( )S
3539 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
158.372 371 M -0.056( entries exceeds the number of )W
FmE
3539 0 :M
f260 sf
( )S
3544 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.98 371 M 0 0 25(\"reg\")FmTx
FmE
3544 0 :M
f271 sf
( )S
3546 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
294.98 371 M -0.056( property entries, the additional entries denote address-)W
60 380 M -0.349(able regions that are not represented by )W
FmE
3547 0 :M
f260 sf
( )S
3552 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
201.234 380 M 0 0 25(\"reg\")FmTx
FmE
3552 0 :M
f271 sf
( )S
3554 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.234 380 M -0.349( property entries, and are thus not intended to be used in normal operation; )W
60 389 M (such regions might, for example, be used for diagnostic functions. If the number of )S
FmE
3554 0 :M
f260 sf
( )S
3559 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
361.142 389 M 0 0 75(\"alternate-reg\")FmTx
FmE
3559 0 :M
f271 sf
( )S
3561 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
436.142 389 M ( entries is less )S
60 398 M -0.313(than the number of )W
FmE
3561 0 :M
f260 sf
( )S
3566 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.222 398 M 0 0 25(\"reg\")FmTx
FmE
3566 0 :M
f271 sf
( )S
3568 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
154.222 398 M -0.313( entries, the regions described by the extra )W
FmE
3568 0 :M
f260 sf
( )S
3573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
305.895 398 M 0 0 25(\"reg\")FmTx
FmE
3573 0 :M
f271 sf
( )S
3575 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
330.895 398 M -0.313( entries do not have alternative access paths.  )W
60 407 M -0.316(An )W
FmE
3576 0 :M
f260 sf
( )S
3581 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72.931 407 M 0 0 75(\"alternate-reg\")FmTx
FmE
3581 0 :M
f271 sf
( )S
3583 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.931 407 M -0.316( entry whose )W
FmE
3583 0 :M
f293 sf
( )S
3585 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
195.215 407 M -0.316(phys.hi )W
FmE
3585 0 :M
f271 sf
( )S
3587 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222.894 407 M -0.316(component is zero indicates that the corresponding region does not have an )W
60 416 M -0.029(alternative access path; such an entry can be used as a \"place holder\" to preserve the positions of later entries relative to )W
60 425 M -0.211(the corresponding )W
FmE
3587 0 :M
f260 sf
( )S
3592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126.552 425 M 0 0 25(\"reg\")FmTx
FmE
3592 0 :M
f271 sf
( )S
3594 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.552 425 M -0.211( entries.  The first )W
FmE
3595 0 :M
f260 sf
( )S
3600 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.465 425 M 0 0 75(\"alternate-reg\")FmTx
FmE
3600 0 :M
f271 sf
( )S
3602 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.465 425 M -0.211( entry, corresponding to the )W
FmE
3602 0 :M
f260 sf
( )S
3607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
391.874 425 M 0 0 25(\"reg\")FmTx
FmE
3607 0 :M
f271 sf
( )S
3609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
416.874 425 M -0.211( entry describing the )W
60 434 M (function\'s Configuration Space registers, shall have a )S
FmE
3609 0 :M
f293 sf
( )S
3611 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.546 434 M (phys.hi)S
FmE
3611 0 :M
f271 sf
( )S
3613 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.292 434 M ( component of zero.)S
FmE
3614 0 :M
f260 sf
( )S
3619 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 447.667 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
3619 0 :M
f146 sf
( )S
3621 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.441 447.667 M (S)S
FmE
3621 0 :M
f293 sf
( )S
3623 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 462 M (prop-name)S
FmE
3623 0 :M
f271 sf
( )S
3625 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.487 462 M (, denotes offset of FCode image within the device\'s Expansion ROM.)S
FmE
3626 0 :M
f293 sf
( )S
3628 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 474 M (prop-encode-)S
(array)S
FmE
3628 0 :M
f271 sf
( )S
3630 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.469 474 M (:)S
( one integer, encoded as with )S
FmE
3630 0 :M
f260 sf
( )S
3635 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238.176 474 M 0 0 50(encode-int)FmTx
FmE
3635 0 :M
f271 sf
( )S
3637 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288.176 474 M (.)S
60 486 M (This property indicates the offset of the PCI Expansion ROM image within the device\'s Expansion ROM in which the )S
60 495 M -0.487(FCode image was found;  i.e., the offset of the 0xAA55 signature of that image\'s PCI Expansion ROM Header. This value )W
FmE
3637 0 :M
f293 sf
( )S
3639 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 504 M (shall)S
FmE
3640 0 :M
f271 sf
( )S
3642 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
77.501 504 M ( be generated before the FCode is evaluated.  Note that the absence of this property indicates that no FCode exists )S
60 513 M (for this device node.)S
FmE
3642 0 :M
f260 sf
( )S
3647 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 526.667 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3647 0 :M
f146 sf
( )S
3649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.441 526.667 M (S)S
FmE
3649 0 :M
f293 sf
( )S
3651 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 541 M (prop-name)S
FmE
3652 0 :M
f271 sf
( )S
3654 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
99.487 541 M (, denotes assigned physical addresses)S
FmE
3654 0 :M
f293 sf
( )S
3656 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 553 M (prop-encoded-array)S
FmE
3656 0 :M
f271 sf
( )S
3658 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.969 553 M (:  Zero to six \()S
FmE
3658 0 :M
f293 sf
( )S
3660 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.203 553 M (phys-addr size)S
FmE
3661 0 :M
f271 sf
( )S
3663 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.438 553 M (\) pairs.)S
FmE
3663 0 :M
f293 sf
( )S
3665 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 565 M (phys-addr)S
FmE
3665 0 :M
f271 sf
( )S
3667 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96.49 565 M -0.085( is \()W
FmE
3667 0 :M
f293 sf
( )S
3669 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.816 565 M -0.085(phys.lo phys.mid phys.hi)W
FmE
3670 0 :M
f271 sf
( )S
3672 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.879 565 M -0.085(\), encoded as with )W
FmE
3672 0 :M
f260 sf
( )S
3677 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
265.262 565 M 0 0 55(encode-phys)FmTx
FmE
3677 0 :M
f271 sf
( )S
3679 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.262 565 M -0.085(. )W
FmE
3679 0 :M
f293 sf
( )S
3681 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
324.677 565 M (size)S
FmE
3681 0 :M
f271 sf
( )S
3683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.172 565 M -0.085( is a pair of integers, each encoded as with )W
FmE
3684 0 :M
f260 sf
( )S
3689 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 574 M 0 0 50(encode-int)FmTx
FmE
3689 0 :M
f271 sf
( )S
3691 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
110 574 M ( .)S
60 586 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least)S
( )S
60 595 M (significant 32 bits thereof)S
(.)S
60 607 M (E)S
(ach entry \(i.e.  each )S
FmE
3691 0 :M
f293 sf
( )S
3693 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
138.201 607 M (phys-addr size)S
FmE
3693 0 :M
f271 sf
( )S
3695 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
190.436 607 M ( pair\) in this property value corresponds to either one or two \(in the case 64-bit-ad-)S
60 616 M -0.178(dress Memory Space\) of the function\'s Configuration Space base address registers.  The entry indicates the physical PCI )W
60 625 M -0.253(domain address that has been assigned to that base address register \(or register pair\), and the size in bytes of the assigned )W
60 634 M -0.548(region.  The size shall be a power of two \(since the structure of PCI Base Address registers forces the decoding granularity )W
60 643 M (to powers of two\).  The \')S
FmE
3695 0 :M
f220 sf
( )S
3700 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.337 643 M 0 0 5(n)FmTx
FmE
3700 0 :M
f271 sf
( )S
3702 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.337 643 M (\' bit of each )S
FmE
3703 0 :M
f293 sf
( )S
3705 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.436 643 M (phys-addr)S
FmE
3705 0 :M
f271 sf
( )S
3707 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.926 643 M ( shall be set to 1, indicating that the address is absolute \(within the PCI )S
60 652 M (domain\'s address space\), not relative to the start of a relocatable region.  The type code shall not be \'00\' \(Configuration )S
60 661 M (Space\).  The \')S
FmE
3707 0 :M
f220 sf
( )S
3712 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.094 661 M 0 0 135(bbbbbbbb,ddddd,fff,rrrrrrrr)FmTx
FmE
3712 0 :M
f271 sf
( )S
3714 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
244.094 661 M (\' field indicates the base register to which the entry applies, and the )S
60 670 M (\')S
FmE
3714 0 :M
f220 sf
( )S
3719 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
61.619 670 M 0 0 55(hh\311hh,ll\311ll)FmTx
FmE
3719 0 :M
f271 sf
( )S
3721 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
116.619 670 M (\' field contains the assigned address.)S
60 682 M (If addresses have not yet been assigned to the function\'s relocatable regions, this property shall be absent.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
22 59 2 9 FmqF
22 589 2 21 FmqF
FmE
endp
%%Page: 20 20
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 20 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
3722 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3722 0 :M
0 G
f67 sf
( )S
3725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
3725 0 :M
f92 sf
( )S
3728 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (15)S
FmE
3728 0 :M
f124 sf
( )S
3735 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
3735 0 :M
f271 sf
( )S
3737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 29 M (The values reported in )S
FmE
3737 0 :M
f260 sf
( )S
3742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.962 29 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3742 0 :M
f271 sf
( )S
3744 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.962 29 M ( represent the physical addresses that have been assigned.  If Open )S
78 38 M -0.289(Firmware can not assign address space for a resource \(e.g., the address space has been exhausted\), that resources will not )W
78 47 M -0.397(have an entry in the )W
FmE
3745 0 :M
f260 sf
( )S
3750 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.234 47 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3750 0 :M
f271 sf
( )S
3752 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.234 47 M -0.397( property.  If no resources were assigned address space, the )W
FmE
3752 0 :M
f260 sf
( )S
3757 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
460 47 M 0 0 50(\"assigned-)FmTx
78 56 M 0 0 50(addresses\")FmTx
FmE
3757 0 :M
f271 sf
( )S
3759 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128 56 M ( property )S
FmE
3759 0 :M
f293 sf
( )S
3761 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.985 56 M (shall)S
FmE
3761 0 :M
f271 sf
( )S
3763 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.486 56 M ( have a )S
FmE
3764 0 :M
f293 sf
( )S
3766 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208.22 56 M (prop-encoded-array)S
FmE
3766 0 :M
f271 sf
( )S
3768 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
281.189 56 M ( of zero length.)S
FmE
3768 0 :M
f293 sf
( )S
3770 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 68 M -0.194(Note: There is no implied correspondence between the order of entries in the )W
FmE
3770 0 :M
f392 sf
( )S
3775 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
355.143 68 M 0 0 5(\")FmTx
FmE
3775 0 :M
f260 sf
( )S
3780 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
360.143 68 M 0 0 15(reg)FmTx
FmE
3780 0 :M
f392 sf
( )S
3785 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
375.143 68 M 0 0 5(\")FmTx
FmE
3785 0 :M
f293 sf
( )S
3787 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
380.143 68 M -0.194( property value and order of entries )W
78 77 M (in the )S
FmE
3788 0 :M
f392 sf
( )S
3793 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100.496 77 M 0 0 5(\")FmTx
FmE
3793 0 :M
f260 sf
( )S
3798 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
105.496 77 M 0 0 90(assigned-addresses)FmTx
FmE
3798 0 :M
f392 sf
( )S
3803 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
195.496 77 M 0 0 5(\")FmTx
FmE
3803 0 :M
f293 sf
( )S
3805 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.496 77 M ( property value.  The correspondence between the )S
FmE
3805 0 :M
f392 sf
( )S
3810 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
382.68 77 M 0 0 5(\")FmTx
FmE
3810 0 :M
f260 sf
( )S
3815 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
387.68 77 M 0 0 15(reg)FmTx
FmE
3815 0 :M
f392 sf
( )S
3820 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
402.68 77 M 0 0 5(\")FmTx
FmE
3820 0 :M
f293 sf
( )S
3822 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
407.68 77 M ( entries and )S
FmE
3822 0 :M
f392 sf
( )S
3827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
452.42 77 M 0 0 5(\")FmTx
FmE
3827 0 :M
f260 sf
( )S
3832 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
457.42 77 M 0 0 45(assigned-)FmTx
78 86 M 0 0 45(addresses)FmTx
FmE
3832 0 :M
f392 sf
( )S
3837 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123 86 M 0 0 5(\")FmTx
FmE
3837 0 :M
f293 sf
( )S
3839 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128 86 M ( entries is determined by matching the fields denoting the Base Address register.)S
FmE
3839 0 :M
f260 sf
( )S
3844 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 99.667 M 0 0 95(\"power-consumption\")FmTx
FmE
3844 0 :M
f146 sf
( )S
3846 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 99.667 M (S)S
FmE
3847 0 :M
f293 sf
( )S
3849 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 114 M (prop-name)S
FmE
3849 0 :M
f271 sf
( )S
3851 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.487 114 M (, describes function\'s power requirements)S
FmE
3851 0 :M
f293 sf
( )S
3853 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 126 M (prop-encoded-array)S
FmE
3854 0 :M
f271 sf
( )S
3856 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 126 M (: list of integers, encoded as with )S
FmE
3856 0 :M
f260 sf
( )S
3861 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.928 126 M 0 0 50(encode-int)FmTx
FmE
3861 0 :M
f271 sf
( )S
3863 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
321.928 126 M (, describing the device\'s maximum power consump-)S
78 135 M -0.607(tion in microwatts, categorized by the various power rails and the device\'s power-management state \(standby or fully-on\).  )W
78 144 M (The ints are encoded in the following order:)S
96 156 M -0.513(unspecified standby, unspecified full-on, +5V standby, +5V full-on, +3.3V standby, +3.3V full-on, I/O pwr standby, )W
96 165 M (I/O pwr full-on, reserved standby, reserved full-on)S
78 177 M -0.321(The \"unspecified\" entries indicate that the power division among the various rails is unknown.  The \"unspecified\" entries )W
78 186 M (shall be zero if any of the other entries are non-zero.  The \"unspecified\" entries are provided so that the )S
FmE
3863 0 :M
f260 sf
( )S
3868 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.909 186 M 0 0 55(\"power-con-)FmTx
78 195 M 0 0 45(sumption\")FmTx
FmE
3868 0 :M
f271 sf
( )S
3870 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123 195 M ( property can be created for devices without FCode, from the information on the PRSNT1# and PRSNT2# )S
78 204 M (connector pins.)S
78 216 M (If the number of ints in the encoded property value is less than ten, the power consumption is zero for the cases corre-)S
78 225 M -0.27(sponding to the missing entries.  For example, if there are four ints, they correspond to the two \"unspecified\" and the two )W
78 234 M (\"+5\" numbers, and the others are zero.)S
FmE
3870 0 :M
f135 sf
( )S
3872 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 263.667 M (4.1.2.1. Standard PCI Configuration Properties)S
FmE
3873 0 :M
f146 sf
( )S
3875 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 279.667 M -0.46(The following properties are created during the probing process, after the device node has been created, but before)W
60 291.667 M 0.454(evaluating the device\'s FCode \(if any\).  They represent the values of standard PCI configuration registers. This)W
60 303.667 M (information is likely to be useful for Client and User interfaces.)S
60 319.667 M 0.013(Unless specified otherwise, each of the following properties has a )W
FmE
3875 0 :M
f172 sf
( )S
3877 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.289 319.667 M (prop-encoded-array)S
FmE
3878 0 :M
f146 sf
( )S
3880 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406.365 319.667 M 0.013( whose value is an integer)W
60 331.667 M (taken directly from the corresponding hardware register, encoded as with )S
FmE
3880 0 :M
f209 sf
( )S
3886 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
355.132 331.667 M 0 0 60(encode-int)FmTx
FmE
3886 0 :M
f146 sf
( )S
3888 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
415.132 331.667 M (.)S
FmE
3889 0 :M
f260 sf
( )S
3894 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 345.667 M 0 0 55(\"vendor-id\")FmTx
FmE
3894 0 :M
f146 sf
( )S
3896 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 345.667 M (S)S
FmE
3896 0 :M
f260 sf
( )S
3901 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 359.667 M 0 0 55(\"device-id\")FmTx
FmE
3901 0 :M
f146 sf
( )S
3903 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 359.667 M (S)S
FmE
3904 0 :M
f260 sf
( )S
3909 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 373.667 M 0 0 65(\"revision-id\")FmTx
FmE
3909 0 :M
f146 sf
( )S
3911 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 373.667 M (S)S
FmE
3911 0 :M
f260 sf
( )S
3916 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 387.667 M 0 0 60(\"class-code\")FmTx
FmE
3916 0 :M
f146 sf
( )S
3918 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 387.667 M (S)S
FmE
3919 0 :M
f260 sf
( )S
3924 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 401.666 M 0 0 60(\"interrupts\")FmTx
FmE
3924 0 :M
f146 sf
( )S
3926 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 401.666 M (S)S
FmE
3926 0 :M
f271 sf
( )S
3928 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 416 M (This property shall be present if the Interrupt Pin register is non-zero)S
(,)S
78 425 M (a)S
(nd shall be absent otherwise.)S
FmE
3929 0 :M
f260 sf
( )S
3934 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 436.666 M 0 0 55(\"min-grant\")FmTx
FmE
3934 0 :M
f146 sf
( )S
3936 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 436.666 M (S)S
FmE
3936 0 :M
f260 sf
( )S
3941 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 450.666 M 0 0 65(\"max-latency\")FmTx
FmE
3941 0 :M
f146 sf
( )S
3943 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 450.666 M (S)S
FmE
3944 0 :M
f260 sf
( )S
3949 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 464.666 M 0 0 70(\"devsel-speed\")FmTx
FmE
3949 0 :M
f146 sf
( )S
3951 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 464.666 M (S)S
FmE
3951 0 :M
f260 sf
( )S
3956 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 478.666 M 0 0 85(\"cache-line-size\")FmTx
FmE
3956 0 :M
f146 sf
( )S
3958 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 478.666 M (S)S
FmE
3959 0 :M
f271 sf
( )S
3961 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 490 M (This property shall be present if the function\'s cache line size register is set to a non-zero value,)S
78 500 M (and shall be absent otherwise.)S
FmE
3961 0 :M
f260 sf
( )S
3966 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 512.666 M 0 0 95(\"fast-back-to-back\")FmTx
FmE
3966 0 :M
f183 sf
( )S
3972 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
155 512.666 M 0 0 12(  )FmTx
FmE
3972 0 :M
f146 sf
( )S
3974 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 512.666 M (S)S
FmE
3974 0 :M
f293 sf
( )S
3976 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 524 M (prop-encoded-array)S
FmE
3977 0 :M
f271 sf
( )S
3979 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 524 M (: <none>)S
78 534 M (This property shall be present if the \"Fast Back-to-Back\" bit \(bit 7\) in the function\'s Status Registe)S
(r)S
78 544 M (i)S
(s set)S
(, a)S
(nd shall be absent otherwise)S
(.)S
FmE
3979 0 :M
f260 sf
( )S
3984 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 556.666 M 0 0 5(\")FmTx
0 0 65(subsystem-id\")FmTx
FmE
3984 0 :M
f146 sf
( )S
3986 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 556.666 M (S)S
FmE
3986 0 :M
f271 sf
( )S
3988 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 568 M (This property shall be present if the \"Subsystem ID\" register is non-zero)S
(, a)S
(nd shall be absent otherwise.)S
FmE
3989 0 :M
f260 sf
( )S
3994 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 580.666 M 0 0 105(\"subsystem-vendor-id\")FmTx
FmE
3994 0 :M
f146 sf
( )S
3996 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 580.666 M (S)S
FmE
3996 0 :M
f271 sf
( )S
3998 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 592 M (This property shall be present if the \"Subsystem Vendor ID\" register is non-zero)S
(,)S
78 602 M (a)S
(nd shall be absent otherwise.)S
FmE
3998 0 :M
f260 sf
( )S
4003 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 614.666 M 0 0 75(\"66mhz-capable\")FmTx
FmE
4003 0 :M
f146 sf
( )S
4005 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 614.666 M (S)S
FmE
4006 0 :M
f293 sf
( )S
4008 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 626 M (prop-encoded-array)S
FmE
4008 0 :M
f271 sf
( )S
4010 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 626 M (: <none>)S
78 636 M (This property shall be present if the \"66 MHz Capable\" bit \(bit 6\) in the function\'s Status Registe)S
(r)S
78 646 M (i)S
(s set)S
(, a)S
(nd shall be absent otherwise.)S
FmE
4010 0 :M
f260 sf
( )S
4015 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 658.666 M 0 0 75(\"udf-supported\")FmTx
FmE
4015 0 :M
f146 sf
( )S
4017 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.441 658.666 M (S)S
FmE
4018 0 :M
f293 sf
( )S
4020 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 670 M (prop-encoded-array)S
FmE
4020 0 :M
f271 sf
( )S
4022 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.969 670 M (: <none>)S
78 680 M -0.471(This property shall be present if the \"UDF Supported\" bit \(bit 5\) in the function\'s Status Register is set, and shall be absent )W
78 690 M (otherwise)S
(.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
40 538 2 9 FmqF
40 562 2 9 FmqF
FmE
endp
%%Page: 21 21
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 21 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
4022 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4022 0 :M
0 G
f67 sf
( )S
4025 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
4025 0 :M
f92 sf
( )S
4028 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (16)S
FmE
4028 0 :M
f124 sf
( )S
4035 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
4035 0 :M
f67 sf
( )S
4038 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 31 M (4.2. )S
(Child Node M)S
(ethods)S
FmE
4038 0 :M
f146 sf
( )S
4040 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 47.667 M -0.276(The methods of a child node depend upon its device-type programming model.  However, the standard )W
FmE
4041 0 :M
f209 sf
( )S
4047 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
451.337 47.667 M 0 0 24(open)FmTx
FmE
4047 0 :M
f146 sf
( )S
4049 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
475.337 47.667 M -0.276( and)W
FmE
4049 0 :M
f209 sf
( )S
4055 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 59.667 M 0 0 30(close)FmTx
FmE
4055 0 :M
f146 sf
( )S
4057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 59.667 M ( methods for PCI devices have some PCI-specific details as described below.)S
FmE
4058 0 :M
f209 sf
( )S
4064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 73.667 M 0 0 24(open)FmTx
FmE
4064 0 :M
f183 sf
( )S
4070 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237 73.667 M 0 0 114(\( -- true | false \))FmTx
FmE
4070 0 :M
f146 sf
( )S
4072 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.441 73.667 M (S)S
FmE
4072 0 :M
f271 sf
( )S
4074 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 88 M (Prepare the device for subsequent use.)S
60 100 M -0.279(Since the probing process leaves the decoding disabled for a PCI device, the device driver must explicitly enable the PCI )W
60 109 M -0.286(address spaces that it requires by setting the Memory Space and/or IO Space bits in the Command register;  If  the device )W
60 118 M -0.349(requires the use of bus mastering capabilities, it must also set the Bus Master bit.  The setting of these bits should be done )W
60 127 M (with read-modify-write accesses to the Command register.)S
FmE
4074 0 :M
f209 sf
( )S
4080 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 138.667 M 0 0 30(close)FmTx
FmE
4080 0 :M
f183 sf
( )S
4086 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276 138.667 M 0 0 36(\( -- \))FmTx
FmE
4086 0 :M
f146 sf
( )S
4088 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.441 138.667 M (S)S
FmE
4089 0 :M
f271 sf
( )S
4091 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 153.667 M (Close this previously)S
FmE
4091 0 :M
f260 sf
( )S
4096 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.99 153.667 M 0 0 5( )FmTx
FmE
4096 0 :M
f209 sf
( )S
4102 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.99 153.667 M 0 0 6(o)FmTx
0 0 18(pen)FmTx
FmE
4102 0 :M
f271 sf
( )S
4104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.99 153.667 M (ed device.)S
60 166.667 M -0.112(The )W
FmE
4104 0 :M
f209 sf
( )S
4110 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76.13 166.667 M 0 0 30(close)FmTx
FmE
4110 0 :M
f271 sf
( )S
4112 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106.13 166.667 M -0.112( method for a PCI device must clear the Bus Master, Memory Space and IO Space bits in its Command reg-)W
60 176 M (ister.  The clearing of these bits should be done by a read-modify-write sequence to the Command register.)S
FmE
4113 0 :M
f67 sf
( )S
4116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 215 M (5. )S
(Bus-specific User Interface Commands)S
FmE
4116 0 :M
f146 sf
( )S
4118 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 231.667 M -0.025(An Open Firmware-compliant User Interface on a system with )W
-0.025(one or more built-in PCI buses )W
FmE
4118 0 :M
f172 sf
( )S
4120 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
420.089 231.667 M (s)S
(hould)S
FmE
4121 0 :M
f146 sf
( )S
4123 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
446.756 231.667 M -0.025( implement)W
42 243.667 M (the following PCI-specific user interface commands.)S
FmE
4123 0 :M
f209 sf
( )S
4129 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 257.667 M 0 0 54(probe-pci)FmTx
FmE
4129 0 :M
f146 sf
( )S
4131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274.845 257.667 M (        \( -- \))S
FmE
4132 0 :M
f271 sf
( )S
4134 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 272 M (Interprets FCode for all built-in PCI slots..)S
60 284 M (For each of the system\'s built-in PCI domains, perform the PCI probing algorithm as defined in section 2.5.)S
FmE
4134 0 :M
f209 sf
( )S
4140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 295.667 M 0 0 6(m)FmTx
0 0 84(ake-properties)FmTx
FmE
4140 0 :M
f146 sf
( )S
4142 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.845 295.667 M (\( -- \))S
FmE
4142 0 :M
f271 sf
( )S
4144 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 310 M (Create the default PCI properties \(as described above for )S
FmE
4145 0 :M
f260 sf
( )S
4150 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.642 310 M 0 0 45(probe-pci)FmTx
FmE
4150 0 :M
f271 sf
( )S
4152 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
311.642 310 M (\) for the )S
FmE
4152 0 :M
f293 sf
( )S
4154 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
342.872 310 M (current instance)S
FmE
4154 0 :M
f271 sf
( )S
4156 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
401.602 310 M (.)S
60 322 M (This user interface word is intended to be used for debugging FCode within the context of )S
FmE
4156 0 :M
f260 sf
( )S
4161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
386.395 322 M 0 0 65(begin-package)FmTx
FmE
4161 0 :M
f271 sf
( )S
4163 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
451.395 322 M ( \311 )S
FmE
4164 0 :M
f260 sf
( )S
4169 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
464.895 322 M 0 0 20(end-)FmTx
60 331 M 0 0 35(package)FmTx
FmE
4169 0 :M
f271 sf
( )S
4171 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95 331 M (.  This word )S
FmE
4171 0 :M
f293 sf
( )S
4173 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.74 331 M (should)S
FmE
4173 0 :M
f271 sf
( )S
4175 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.741 331 M ( be )S
(executed b)S
(efore evaluating the FCode for the node.)S
FmE
4175 0 :M
f209 sf
( )S
4181 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 342.667 M 0 0 96(assign-addresses)FmTx
FmE
4181 0 :M
f146 sf
( )S
4183 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.845 342.667 M (\( -- )S
(\))S
FmE
4184 0 :M
f271 sf
( )S
4186 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 357 M (A)S
(ssign addresses for the )S
FmE
4186 0 :M
f293 sf
( )S
4188 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.963 357 M (current instance)S
FmE
4188 0 :M
f271 sf
( )S
4190 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208.693 357 M (.)S
60 369 M (This user interface word is intended to be used for debugging Fcode within the context of )S
FmE
4191 0 :M
f260 sf
( )S
4196 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
384.387 369 M 0 0 65(begin-package)FmTx
FmE
4196 0 :M
f271 sf
( )S
4198 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
449.387 369 M ( \311 )S
FmE
4198 0 :M
f260 sf
( )S
4203 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
462.887 369 M 0 0 20(end-)FmTx
60 378 M 0 0 35(package)FmTx
FmE
4203 0 :M
f271 sf
( )S
4205 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95 378 M (.)S
-0.468(  Executing this word causes addresses to be assigned to this node \(based on the current )W
FmE
4205 0 :M
f260 sf
( )S
4210 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406.433 378 M 0 0 25(\"reg\")FmTx
FmE
4210 0 :M
f271 sf
( )S
4212 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
431.433 378 M -0.468( property value\), )W
60 387 M (creating an )S
FmE
4212 0 :M
f260 sf
( )S
4217 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.974 387 M 0 0 100(\"assigned-addresses\")FmTx
FmE
4217 0 :M
f271 sf
( )S
4219 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
201.974 387 M ( )S
( )S
(property )S
(reflecting t)S
(hose addresses.  This word should be executed after evalu-)S
60 396 M (ating the FCode for  the node.)S
FmE
4220 0 :M
f67 sf
( )S
4223 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 435 M (6. Probing PCI-)S
(to-)S
(PCI bridges)S
FmE
4223 0 :M
f146 sf
( )S
4225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 451.666 M -0.424(The recursive algorithm described in this section allows bus number and address assignment to be done in a single)W
42 463.666 M -0.314(depth-first manner.  Bus numbers are assigned on the way down the PCI bus )W
-0.314(hierarchy a)W
-0.314(nd addresses are assigned)W
42 475.666 M (to on the way back up.  Another algorithm may be used.)S
FmE
4225 0 :M
f172 sf
( )S
4227 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 491.666 M 0.511(Note: while this is a simple algorithm \(e.g., it does not require a \"global\" address allocation pass\), it does not)W
42 503.666 M (provide the most optimal system-wide address assignment.)S
FmE
4228 0 :M
f146 sf
( )S
4230 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 519.666 M 0.051(If the function is a standard )W
0.051(PCI-to-PCI b)W
0.051(ridge \(as indicated by the class code and the header type fields\), set the)W
42 531.666 M 0.5(bridge\'s Primary Bus # register to the bus number of the parent bus, assign the next bus number to that bridge,)W
42 543.666 M 0.243(setting its Secondary Bus # register to that number, set the bridge\'s Subordinate Bus # register to )W
FmE
4230 0 :M
f183 sf
( )S
4236 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
434.482 543.666 M 0 0 24(0xFF)FmTx
FmE
4236 0 :M
f146 sf
( )S
4238 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
458.482 543.666 M 0.243(, and re-)W
42 555.666 M (cursively scan the slots of that bridge\'s subordinate bus.)S
42 571.666 M -0.488(When that recursive scanning process returns, set the bridge\'s Subordinate Bus # register to the largest bus number)W
42 583.666 M 0.066(assigned during the recursive scan.   At this point, bus numbers have been assigned to all subordinate buses, and)W
42 595.666 M 0.842(addresses have been assigned for all devices on the )W
0.842(subordinate b)W
0.842(uses, for this bridge within the PCI domain.)W
42 607.666 M 0.27(Then, assign addresses to all devices on the Secondary Bus and set the Memory Base, Memory Limit, I/O Base)W
42 619.666 M -0.107(and I/O Limit registers of the bridge to their appropriate values and enable Memory and I/O transactions.  Due to)W
42 631.666 M -0.165(the mapping characteristics of )W
-0.165(PCI-to-PCI b)W
-0.165(ridges, the ranges of Memory addresses for subordinate devices )W
FmE
4239 0 :M
f172 sf
( )S
4241 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
472.554 631.666 M (shall)S
FmE
4241 0 :M
f146 sf
( )S
4243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 643.666 M (be aligned to 1 MB boundaries, and the ranges of I/O addresses )S
FmE
4244 0 :M
f172 sf
( )S
4246 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.294 643.666 M (shall)S
FmE
4246 0 :M
f146 sf
( )S
4248 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
317.74 643.666 M ( be aligned to 4 KB boundaries.)S
42 659.666 M -0.251(After setting the Memory Base, Memory Limit, I/O Base and I/O Limit registers, create a )W
FmE
4249 0 :M
f260 sf
( )S
4254 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
398.636 659.666 M 0 0 40(\"ranges\")FmTx
FmE
4254 0 :M
f146 sf
( )S
4256 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
438.636 659.666 M -0.251( property that)W
42 671.666 M (represents the Memory and I/O mappings that have been established.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
22 225 2 10 FmqF
22 266 2 33 FmqF
FmE
endp
%%Page: 22 22
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 22 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
0 0 .5 :F
4256 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4256 0 :M
0 G
f67 sf
( )S
4259 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
4259 0 :M
f92 sf
( )S
4262 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (17)S
FmE
4262 0 :M
f124 sf
( )S
4269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
4269 0 :M
f67 sf
( )S
4272 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 31 M (7. )S
(Legacy devices)S
FmE
4272 0 :M
f146 sf
( )S
4274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 47.667 M 0.45(\"Legacy\" VGA and IDE devices that are implemented on PCI will typically have the same \"hard-decoded\" ad-)W
60 59.667 M -0.518(dresses as they did on ISA.  Such devices that have FCode can use explicit indication of their address requirements)W
60 71.667 M 0.566(as described above.  However, for cards that have no FCode image, Open Firmware )W
FmE
4275 0 :M
f172 sf
( )S
4277 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
405.833 71.667 M (shall)S
FmE
4277 0 :M
f146 sf
( )S
4279 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.279 71.667 M 0.566( assume the standard)W
60 83.667 M -0.022(address ranges and )W
FmE
4280 0 :M
f172 sf
( )S
4282 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.949 83.667 M (shall)S
FmE
4282 0 :M
f146 sf
( )S
4284 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.395 83.667 M -0.022( create the )W
FmE
4285 0 :M
f209 sf
( )S
4291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.905 83.667 M 0 0 30(\"reg\")FmTx
FmE
4291 0 :M
f146 sf
( )S
4293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
230.905 83.667 M -0.022( property with these ranges, in addition to any relocatable regions that)W
60 95.667 M (have base registers.)S
60 111.667 M (For VGA devices \(class-code = )S
FmE
4293 0 :M
f183 sf
( )S
4299 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.633 111.667 M 0 0 48(0x000100)FmTx
FmE
4299 0 :M
f146 sf
( )S
4301 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.633 111.667 M ( or )S
FmE
4302 0 :M
f183 sf
( )S
4308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.96 111.667 M 0 0 48(0x030000)FmTx
FmE
4308 0 :M
f146 sf
( )S
4310 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297.96 111.667 M (\), the address ranges are:)S
FmE
4310 0 :M
f183 sf
( )S
4316 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 123.667 M 0 0 66(0x3B0-0x3BB)FmTx
FmE
4316 0 :M
f146 sf
( )S
4318 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 123.667 M (\(I/O, aliased; )S
FmE
4319 0 :M
f183 sf
( )S
4325 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.692 123.667 M 0 0 6(t)FmTx
FmE
4325 0 :M
f146 sf
( )S
4327 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
264.692 123.667 M (=1\))S
FmE
4327 0 :M
f183 sf
( )S
4333 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 134.667 M 0 0 66(0x3C0-0x3DF)FmTx
FmE
4333 0 :M
f146 sf
( )S
4335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 134.667 M (\(I/O, aliased; )S
FmE
4336 0 :M
f183 sf
( )S
4342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.692 134.667 M 0 0 6(t)FmTx
FmE
4342 0 :M
f146 sf
( )S
4344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
264.692 134.667 M (=1\))S
FmE
4344 0 :M
f183 sf
( )S
4350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 145.667 M 0 0 90(0xA0000-0xBFFFF)FmTx
FmE
4350 0 :M
f146 sf
( )S
4352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 145.667 M (\(Memory, below 1MB, )S
FmE
4353 0 :M
f183 sf
( )S
4359 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.256 145.667 M 0 0 6(t)FmTx
FmE
4359 0 :M
f146 sf
( )S
4361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
305.256 145.667 M (=1\))S
60 160.667 M (For IDE devices \(class-code = )S
FmE
4361 0 :M
f183 sf
( )S
4367 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.63 160.667 M 0 0 48(0x010100)FmTx
FmE
4367 0 :M
f146 sf
( )S
4369 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.63 160.667 M (\), the address ranges are:)S
FmE
4370 0 :M
f183 sf
( )S
4376 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 172.667 M 0 0 66(0x1F0-0x1F7)FmTx
FmE
4376 0 :M
f146 sf
( )S
4378 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 172.667 M (Primary Command Block \(I/O\))S
FmE
4378 0 :M
f183 sf
( )S
4384 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 183.666 M 0 0 30(0x3F6)FmTx
FmE
4384 0 :M
f146 sf
( )S
4386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 183.666 M (Primary Control Block \(I/O\))S
FmE
4387 0 :M
f183 sf
( )S
4393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 194.666 M 0 0 66(0x170-0x17F)FmTx
FmE
4393 0 :M
f146 sf
( )S
4395 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 194.666 M (Secondary Command Block \(I/O\))S
FmE
4395 0 :M
f183 sf
( )S
4401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 205.666 M 0 0 30(0x376)FmTx
FmE
4401 0 :M
f146 sf
( )S
4403 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 205.666 M (Secondary Control Block \(I/O\))S
FmE
4404 0 :M
f67 sf
( )S
4407 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 246 M (8. )S
(Relationship between PCI Base Registers and Open Firmware Properties)S
FmE
4407 0 :M
f146 sf
( )S
4409 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 262.666 M -0.5(Especially in the case of a PCI device with onboard FCode support, there is no particular relationship between PCI)W
60 274.666 M -0.552(base registers and the )W
FmE
4409 0 :M
f209 sf
( )S
4415 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.079 274.666 M 0 0 30(\"reg\")FmTx
FmE
4415 0 :M
f146 sf
( )S
4417 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
176.079 274.666 M -0.552( and )W
FmE
4418 0 :M
f209 sf
( )S
4424 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.413 274.666 M 0 0 114(\"assigned-addresses)FmTx
FmE
4424 0 :M
f135 sf
( )S
4426 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
308.413 274.666 M (\")S
FmE
4426 0 :M
f146 sf
( )S
4428 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.962 274.666 M -0.552( properties.  A particular base register may or may)W
60 286.666 M -0.568(not be represented in )W
FmE
4429 0 :M
f209 sf
( )S
4435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.801 286.666 M 0 0 24(\"reg)FmTx
FmE
4435 0 :M
f146 sf
( )S
4437 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.801 286.666 M -0.568(\" and )W
FmE
4437 0 :M
f209 sf
( )S
4443 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
190.184 286.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4443 0 :M
f146 sf
( )S
4445 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
310.184 286.666 M -0.568(, and those properties may contain entries referring)W
60 298.666 M -0.005(to addresses not controlled by any base register.  No particular ordering is required in either the )W
FmE
4446 0 :M
f209 sf
( )S
4452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
443.633 298.666 M 0 0 30(\"reg\")FmTx
FmE
4452 0 :M
f146 sf
( )S
4454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
473.633 298.666 M -0.005( property)W
60 310.666 M 0.304(or the )W
FmE
4454 0 :M
f209 sf
( )S
4460 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
86.152 310.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4460 0 :M
f146 sf
( )S
4462 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.152 310.666 M 0.304( property.  A client wishing to make use of the addressing information pro-)W
60 322.666 M -0.507(vided by Open Firmware must scan the )W
FmE
4463 0 :M
f209 sf
( )S
4469 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.118 322.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4469 0 :M
f146 sf
( )S
4471 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.118 322.666 M -0.507( property looking for an entry specifying the)W
60 334.666 M (desired base-register field in its )S
FmE
4471 0 :M
f172 sf
( )S
4473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
187.991 334.666 M (phys.hi)S
FmE
4474 0 :M
f146 sf
( )S
4476 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.597 334.666 M (.)S
FmE
4476 0 :M
f67 sf
( )S
4479 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 376 M (9. ROM Image Format for FCode:)S
FmE
4479 0 :M
f135 sf
( )S
4481 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
105 392.666 M (Offset from start)S
105 404.666 M (of ROM Image)S
106.581 N (Data)S
FmE
4482 0 :M
f183 sf
( )S
4488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.032 420.666 M 0 0 54(00h - 01h)FmTx
FmE
4488 0 :M
f146 sf
( )S
4490 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 420.666 M (ROM signature field of ROM Header \(PCI spec 6.3.1.1\))S
FmE
4490 0 :M
f183 sf
( )S
4496 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.536 436.666 M 0 0 54(02h - 03h)FmTx
FmE
4496 0 :M
f146 sf
( )S
4498 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 436.666 M -0.312(Pointer to FCode program.  This is a 16-bit field that is the offset from the start of )W
186 448.666 M -0.468(the ROM image and points to the FCode Program.  The field is in little-endian for-)W
186 460.666 M (mat.  \(This field is within the \"Reserved for processor-unique data\" field of the )S
186 472.666 M (ROM Header.\))S
FmE
4499 0 :M
f183 sf
( )S
4505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.536 488.666 M 0 0 54(04h - 17h)FmTx
FmE
4505 0 :M
f146 sf
( )S
4507 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 488.666 M (Reserved \(remainder of \"Reserved for processor-unique data\" field of the ROM )S
186 500.666 M (Header\).)S
FmE
4507 0 :M
f183 sf
( )S
4513 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.536 516.666 M 0 0 54(18h - 19h)FmTx
FmE
4513 0 :M
f146 sf
( )S
4515 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 516.666 M (\"Pointer to PCI Data Structure\" field of ROM Header)S
(.)S
FmE
4516 0 :M
f183 sf
( )S
4522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.536 532.666 M 0 0 18(1Ah)FmTx
0 0 48( - FFFFh)FmTx
FmE
4522 0 :M
f146 sf
( )S
4524 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 532.666 M (The PCI Data Structure \(PCI spec 6.3.1.2\), Vital Product Data, and FCode Pro-)S
186 544.666 M -0.213(gram can each begin anywhere within this range, in any order.  The \"Code Type\" )W
186 556.666 M (field of the PCI Data Structure shall have the value \")S
FmE
4524 0 :M
f183 sf
( )S
4530 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
396.659 556.666 M 0 0 6(1)FmTx
FmE
4530 0 :M
f146 sf
( )S
4532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
402.659 556.666 M (\".)S
186 572.666 M (The FCode Program is as described in Open Firmware; its size is given by the )S
186 584.666 M (standard Open Firmware FCode Program header.  FCode bytes shall appear at )S
186 596.666 M (consecutive byte addresses.)S
FmE
4533 0 :M
f67 sf
( )S
4536 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 637.999 M (10. Encapsulated Drivers)S
FmE
4536 0 :M
f146 sf
( )S
4538 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 654.666 M -0.155(This section describes a mechanism which allows the encapsulation of run-time drivers within the standard Open)W
60 666.666 M (Firmware expansion ROM.)S
60 682.666 M -0.322(The FCode contained within a PCI card\'s expansion ROM provides for Open Firmware drivers for the device.  To)W
60 694.666 M 0.216(enhance the \"plug-and-play\" of cards in common system platforms, it is desirable to be able to include run-time)W
FmE
endp
%%Page: 23 23
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 23 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
4538 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4538 0 :M
f67 sf
( )S
4541 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
4541 0 :M
f92 sf
( )S
4544 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (18)S
FmE
4544 0 :M
f124 sf
( )S
4551 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
4551 0 :M
f146 sf
( )S
4553 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 29.667 M (drivers within this expansion ROM, thus eliminating the extra step of installing drivers onto the OS boot device.)S
42 45.667 M -0.283(The information about run-time drivers is encoded as additional standard properties within the device tree.  These)W
42 57.667 M -0.054(properties are created by the FCode probe code of the plug-in card, and are used by the OS to locate and load the)W
42 69.667 M 0.274(appropriate driver.  Two new properties are defined;  they differ as to how the location of the run-time driver is)W
42 81.667 M (defined.)S
FmE
4554 0 :M
f183 sf
( )S
4560 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 95.667 M 0 0 60(\"driver,\311\")FmTx
FmE
4560 0 :M
f146 sf
( )S
4562 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
102 95.667 M ( format)S
FmE
4562 0 :M
f271 sf
( )S
4564 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 110 M (This property, encoded as with )S
FmE
4564 0 :M
f260 sf
( )S
4569 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.46 110 M 0 0 60(encode-bytes)FmTx
FmE
4569 0 :M
f271 sf
( )S
4571 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.46 110 M (, contains the run-time driver.)S
FmE
4572 0 :M
f146 sf
( )S
4574 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 123.667 M -0.02(This format is used when the run-time driver is contained within the FCode image, itself.  The value of the prop-)W
42 135.667 M -0.589(erty )W
(is)S
59.456 136.667 FmB
6.667 0 FmL
0 0.5 FmSo
66.123 135.667 M -0.589( the encapsulated driver;  the )W
FmE
4574 0 :M
f183 sf
( )S
4580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.312 135.667 M 0 0 108(prop-addr,prop-len)FmTx
FmE
4580 0 :M
f146 sf
( )S
4582 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288.312 135.667 M -0.589( reported by the various \"get-property\" FCodes and/)W
42 147.667 M -0.03(or )W
FmE
4583 0 :M
f183 sf
( )S
4589 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
52.798 147.667 M 0 0 42(getprop)FmTx
FmE
4589 0 :M
f146 sf
( )S
4591 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94.798 147.667 M -0.03( Client interface call represent the location and size of the driver within the device tree\'s data space.)W
42 159.667 M (I.e., )S
FmE
4591 0 :M
f209 sf
( )S
4597 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
59.766 159.667 M 0 0 72(decode-bytes)FmTx
FmE
4597 0 :M
f146 sf
( )S
4599 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131.766 159.667 M ( could be used to copy the driver into the desired run-time location.)S
FmE
4600 0 :M
f183 sf
( )S
4606 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 173.667 M 0 0 84(\"driver-reg,\311\")FmTx
FmE
4606 0 :M
f146 sf
( )S
4608 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 173.667 M ( format)S
FmE
4608 0 :M
f271 sf
( )S
4610 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 188 M (This property, encoded as with the )S
FmE
4610 0 :M
f260 sf
( )S
4615 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.705 188 M 0 0 25(\"reg\")FmTx
FmE
4615 0 :M
f282 sf
( )S
4617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
211.705 188 M ( )S
FmE
4618 0 :M
f271 sf
( )S
4620 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.955 188 M (standard property , contains a relative pointer to the run-time driver.)S
FmE
4620 0 :M
f146 sf
( )S
4622 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 201.666 M -0.521(This format is used when the driver is not directly contained within the FCode image, but rather, is located in some)W
42 213.666 M -0.323(other portion of the Expansion ROM.  The value is encoded in a )W
FmE
4622 0 :M
f260 sf
( )S
4627 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297.169 213.666 M 0 0 25(\"reg\")FmTx
FmE
4627 0 :M
f146 sf
( )S
4629 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.169 213.666 M -0.323( format, where the address is relative to the)W
42 225.666 M 0.623(expansion ROM\'s base address.  This format conserves device tree \(and, FCode\) space, but requires the OS to)W
42 237.666 M 0.235(perform the actions of mapping in the Expansion ROM, using the information supplied by this property and the)W
FmE
4630 0 :M
f260 sf
( )S
4635 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 249.666 M 0 0 100(\"assigned-addresses\")FmTx
FmE
4635 0 :M
f146 sf
( )S
4637 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
142 249.666 M ( for the Expansion ROM, and copying the driver, itself.)S
FmE
4637 0 :M
f172 sf
( )S
4639 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 265.666 M 1.061(Note:  the )W
FmE
4640 0 :M
f392 sf
( )S
4645 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
87.114 265.666 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
4645 0 :M
f172 sf
( )S
4647 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.114 265.666 M 1.061( property facilitates the generation of this property within the context of the)W
42 277.666 M -0.351(FCode\'s image.  The driver can be located relative to the ROM image that contains the FCode \(but, does not have)W
42 289.666 M -0.371(to be within the FCode, itself\) without regard to the location of that ROM image relative to others within the same)W
42 301.666 M 0.061(Expansion ROM.  I.e., \"self-relocating\" images containing )W
0.061(encapsulated d)W
0.061(rivers can be created that can be )W
(con-)S
42 313.666 M 0.675(catenated w)W
0.675(ith other images without altering any data within an image \(except, of course, for the Indicator to)W
42 325.666 M (properly indicate the last image\).)S
FmE
4647 0 :M
f67 sf
( )S
4650 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 360 M (10.1. Naming conventions)S
FmE
4650 0 :M
f146 sf
( )S
4652 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 376.666 M 0.011(The complete property name for these encapsulated drivers is chosen to allow multiple drivers to co-exist within)W
42 388.666 M -0.257(the expansion ROM.  An OS will locate its desired driver by an exact match of its property name among any such)W
FmE
4653 0 :M
f183 sf
( )S
4659 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 400.666 M 0 0 54(\"driver,\")FmTx
FmE
4659 0 :M
f146 sf
( )S
4661 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 400.666 M -0.217( \(\")W
FmE
4661 0 :M
f183 sf
( )S
4667 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
105.69 400.666 M 0 0 72(driver-reg,\")FmTx
FmE
4667 0 :M
f146 sf
( )S
4669 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.69 400.666 M -0.217(\) properties contained within the device tree for this device.  The formats of the)W
42 412.666 M (complete names are:)S
FmE
4670 0 :M
f183 sf
( )S
4676 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 428.666 M 0 0 48(\"driver,)FmTx
FmE
4676 0 :M
f359 sf
( )S
4682 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 428.666 M 0 0 54(OS-vendor)FmTx
FmE
4682 0 :M
f183 sf
( )S
4688 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 428.666 M 0 0 6(,)FmTx
FmE
4688 0 :M
f359 sf
( )S
4694 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 428.666 M 0 0 42(OS-type)FmTx
FmE
4694 0 :M
f183 sf
( )S
4700 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 428.666 M 0 0 6(,)FmTx
FmE
4700 0 :M
f359 sf
( )S
4706 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 428.666 M 0 0 90(Instruction-set)FmTx
FmE
4706 0 :M
f183 sf
( )S
4712 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288 428.666 M 0 0 6(\")FmTx
42 440.666 M 0 0 72(\"driver-reg,)FmTx
FmE
4712 0 :M
f359 sf
( )S
4718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 440.666 M 0 0 54(OS-vendor)FmTx
FmE
4718 0 :M
f183 sf
( )S
4724 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 440.666 M 0 0 6(,)FmTx
FmE
4724 0 :M
f359 sf
( )S
4730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 440.666 M 0 0 42(OS-type)FmTx
FmE
4730 0 :M
f183 sf
( )S
4736 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216 440.666 M 0 0 6(,)FmTx
FmE
4736 0 :M
f359 sf
( )S
4742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 440.666 M 0 0 90(Instruction-set)FmTx
FmE
4742 0 :M
f183 sf
( )S
4748 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
312 440.666 M 0 0 6(\")FmTx
FmE
4748 0 :M
f146 sf
( )S
4750 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 456.666 M -0.191(The OS-vendor component is as defined for device-names;  i.e., organizational unique identifier \(e.g., stock sym-)W
42 468.666 M (bol\).  The OS-type & Instruction-set components are defined by the OS-vendor.  An example would be:)S
FmE
4750 0 :M
f183 sf
( )S
4756 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 484.666 M 0 0 186(\"driver-reg,AAPL,MacOS,PowerPC\")FmTx
FmE
4756 0 :M
f67 sf
( )S
4759 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 526 M (11. )S
(Examples of )S
FmE
4759 0 :M
f403 sf
( )S
4766 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.988 526 M 0 0 35(\"reg\")FmTx
FmE
4766 0 :M
f67 sf
( )S
4769 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.988 526 M ( and )S
FmE
4769 0 :M
f403 sf
( )S
4776 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.33 526 M 0 0 147(\"assigned-addresses\" )FmTx
FmE
4776 0 :M
f67 sf
( )S
4779 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333.33 526 M (properties)S
FmE
4779 0 :M
f146 sf
( )S
4781 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 542.666 M -0.205(The examples in these sections demonstrate the generation and use of the )W
FmE
4782 0 :M
f209 sf
( )S
4788 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.972 542.666 M 0 0 30(\"reg\")FmTx
FmE
4788 0 :M
f146 sf
( )S
4790 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
364.972 542.666 M -0.205( and )W
FmE
4790 0 :M
f209 sf
( )S
4796 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.999 542.666 M 0 0 108(\"assigned-address-)FmTx
42 554.666 M 0 0 18(es\")FmTx
FmE
4796 0 :M
f146 sf
( )S
4798 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 554.666 M 0.419( properties for PCI devices.  The first sections demonstrate how )W
FmE
4799 0 :M
f209 sf
( )S
4805 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
321.724 554.666 M 0 0 30(\"reg\")FmTx
FmE
4805 0 :M
f146 sf
( )S
4807 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351.724 554.666 M 0.419( and )W
FmE
4807 0 :M
f209 sf
( )S
4813 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
372 554.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4813 0 :M
f146 sf
( )S
4815 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 566.666 M -0.391(properties get created while the last sections show how a Client can use the information to determine PCI address-)W
42 578.666 M (es of device resources.)S
42 594.666 M (In the following examples:)S
FmE
4816 0 :M
f183 sf
( )S
4822 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
69 606.666 M 0 0 6(x)FmTx
0 0 18(xxx)FmTx
FmE
4822 0 :M
f146 sf
( )S
4824 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 606.666 M (represents the bus, device, function numbers as appropriate)S
FmE
4824 0 :M
f183 sf
( )S
4830 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
69 618.666 M 0 0 6(h)FmTx
0 0 42(hhhhhhh)FmTx
FmE
4830 0 :M
f146 sf
( )S
4832 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 618.666 M (represents the high 32 bits of a PCI domain address)S
FmE
4833 0 :M
f183 sf
( )S
4839 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
69 630.666 M 0 0 6(l)FmTx
0 0 42(lllllll)FmTx
FmE
4839 0 :M
f146 sf
( )S
4841 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150 630.666 M (represents the low 32 bits of a PCI domain address)S
FmE
4841 0 :M
f67 sf
( )S
4844 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 664.999 M (11.1. )S
(Creation of )S
FmE
4844 0 :M
f403 sf
( )S
4851 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.307 664.999 M 0 0 35(\"reg\")FmTx
FmE
4851 0 :M
f67 sf
( )S
4854 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.307 664.999 M ( and )S
FmE
4854 0 :M
f403 sf
( )S
4861 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
190.648 664.999 M 0 0 126(\"assigned-address\")FmTx
FmE
4861 0 :M
f67 sf
( )S
4864 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
316.648 664.999 M ( properties)S
FmE
4864 0 :M
f146 sf
( )S
4866 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 681.666 M 0.643(The following sections describe several scenarios of how )W
FmE
4867 0 :M
f209 sf
( )S
4873 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.154 681.666 M 0 0 30(\"reg\")FmTx
FmE
4873 0 :M
f146 sf
( )S
4875 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
308.154 681.666 M 0.643( and )W
FmE
4875 0 :M
f209 sf
( )S
4881 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.879 681.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4881 0 :M
f146 sf
( )S
4883 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
448.879 681.666 M 0.643( properties)W
42 693.666 M (would get created in various situations.)S
FmE
endp
%%Page: 24 24
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 24 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
4884 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4884 0 :M
f67 sf
( )S
4887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
4887 0 :M
f92 sf
( )S
4890 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (19)S
FmE
4890 0 :M
f124 sf
( )S
4897 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
4897 0 :M
f67 sf
( )S
4900 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 31 M (11.1.1. )S
(A single 256-byte address base register, without FCode.)S
FmE
4900 0 :M
f146 sf
( )S
4902 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 47.667 M (This example device has a single a single 256-byte, non-prefetchable memory range and no Expansion ROM:)S
96 63.667 M (Base address register )S
FmE
4903 0 :M
f183 sf
( )S
4909 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.897 63.667 M 0 0 24(0x10)FmTx
FmE
4909 0 :M
f146 sf
( )S
4911 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.897 63.667 M (:)S
132 79.667 M 1.057(Discovered to be present, and requiring )W
FmE
4911 0 :M
f183 sf
( )S
4917 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.552 79.667 M 0 0 30(0x100)FmTx
FmE
4917 0 :M
f146 sf
( )S
4919 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.552 79.667 M 1.057( bytes of address space, by reading)W
FmE
4920 0 :M
f183 sf
( )S
4926 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 91.667 M 0 0 60(0xFFFFFF00)FmTx
FmE
4926 0 :M
f146 sf
( )S
4928 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 91.667 M ( after writing )S
FmE
4928 0 :M
f183 sf
( )S
4934 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.692 91.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4934 0 :M
f146 sf
( )S
4936 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
306.692 91.667 M (.)S
96 107.667 M (Base address register )S
FmE
4937 0 :M
f183 sf
( )S
4943 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.897 107.667 M 0 0 24(0x14)FmTx
FmE
4943 0 :M
f146 sf
( )S
4945 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.897 107.667 M (:)S
132 123.667 M 6.16(Not present, as discovered by reading back )W
FmE
4945 0 :M
f183 sf
( )S
4951 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
349.487 123.667 M 0 0 60(0x00000000)FmTx
FmE
4951 0 :M
f146 sf
( )S
4953 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
409.487 123.667 M 6.16( after writing)W
FmE
4954 0 :M
f183 sf
( )S
4960 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 135.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4960 0 :M
f146 sf
( )S
4962 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 135.667 M (.)S
96 151.667 M (\(same for )S
FmE
4962 0 :M
f183 sf
( )S
4968 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136.527 151.667 M 0 0 24(0x18)FmTx
FmE
4968 0 :M
f146 sf
( )S
4970 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.527 151.667 M (, )S
FmE
4971 0 :M
f183 sf
( )S
4977 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.527 151.667 M 0 0 24(0x1C)FmTx
FmE
4977 0 :M
f146 sf
( )S
4979 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
189.527 151.667 M (, )S
FmE
4979 0 :M
f183 sf
( )S
4985 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.527 151.667 M 0 0 24(0x20)FmTx
FmE
4985 0 :M
f146 sf
( )S
4987 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.527 151.667 M (, )S
FmE
4988 0 :M
f183 sf
( )S
4994 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
223.527 151.667 M 0 0 24(0x24)FmTx
FmE
4994 0 :M
f146 sf
( )S
4996 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.527 151.667 M (, and )S
FmE
4996 0 :M
f183 sf
( )S
5002 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.466 151.667 M 0 0 24(0x30)FmTx
FmE
5002 0 :M
f146 sf
( )S
5004 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
293.466 151.667 M (\))S
FmE
5005 0 :M
f209 sf
( )S
5011 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 167.667 M 0 0 30(\"reg\")FmTx
FmE
5011 0 :M
f146 sf
( )S
5013 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 167.667 M ( property \(created during probing\))S
FmE
5013 0 :M
f183 sf
( )S
5019 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 179.667 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
96 191.667 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
96 201.666 M 0 0 264(02xxxx10 00000000 00000000 00000000 00000100)FmTx
FmE
5019 0 :M
f209 sf
( )S
5025 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 215.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5025 0 :M
f146 sf
( )S
5027 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 215.666 M ( property \(created after probing, during address assignment\))S
FmE
5028 0 :M
f183 sf
( )S
5034 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 229.666 M 0 0 264(82xxxx10 00000000 llllll00 00000000 00000100)FmTx
FmE
5034 0 :M
f146 sf
( )S
5036 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 245.666 M (with the resulting base address registers contents:)S
FmE
5036 0 :M
f183 sf
( )S
5042 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 261.666 M 0 0 30(0x10:)FmTx
42 N 0 0 48(llllll00)FmTx
FmE
5042 0 :M
f67 sf
( )S
5045 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 296 M (11.1.2. )S
(A simple VGA device, without FCode.)S
FmE
5045 0 :M
f146 sf
( )S
5047 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 312.666 M -0.596(This example consists of a simple VGA device, with no relocatable regions and a 4K non-FCode Expansion ROM.)W
96 328.666 M (Base address register )S
FmE
5048 0 :M
f183 sf
( )S
5054 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.897 328.666 M 0 0 24(0x10)FmTx
FmE
5054 0 :M
f146 sf
( )S
5056 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.897 328.666 M (:)S
132 344.666 M 1.48(Discovered to be not implemented by reading back a )W
FmE
5056 0 :M
f183 sf
( )S
5062 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
358.848 344.666 M 0 0 60(0x00000000)FmTx
FmE
5062 0 :M
f146 sf
( )S
5064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
418.848 344.666 M 1.48( after writing)W
FmE
5065 0 :M
f183 sf
( )S
5071 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 356.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5071 0 :M
f146 sf
( )S
5073 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192 356.666 M (.)S
96 372.666 M (\(same for )S
FmE
5073 0 :M
f183 sf
( )S
5079 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136.527 372.666 M 0 0 24(0x14)FmTx
FmE
5079 0 :M
f146 sf
( )S
5081 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.527 372.666 M (, )S
FmE
5082 0 :M
f183 sf
( )S
5088 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.527 372.666 M 0 0 24(0x18)FmTx
FmE
5088 0 :M
f146 sf
( )S
5090 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
189.527 372.666 M (, )S
FmE
5090 0 :M
f183 sf
( )S
5096 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.527 372.666 M 0 0 24(0x1C)FmTx
FmE
5096 0 :M
f146 sf
( )S
5098 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.527 372.666 M (, )S
FmE
5099 0 :M
f183 sf
( )S
5105 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
223.527 372.666 M 0 0 24(0x20)FmTx
FmE
5105 0 :M
f146 sf
( )S
5107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.527 372.666 M (, )S
FmE
5107 0 :M
f183 sf
( )S
5113 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.527 372.666 M 0 0 24(0x24)FmTx
FmE
5113 0 :M
f146 sf
( )S
5115 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276.527 372.666 M (\))S
96 388.666 M (Expansion ROM base address register \()S
FmE
5116 0 :M
f183 sf
( )S
5122 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
254.547 388.666 M 0 0 24(0x30)FmTx
FmE
5122 0 :M
f146 sf
( )S
5124 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.547 388.666 M (\):)S
132 404.666 M -0.034(Discovered to be present, and requiring 0x1000 bytes by reading back a 0xFFFFF000)W
132 416.666 M (after writing 0xFFFFFFFF.)S
FmE
5124 0 :M
f209 sf
( )S
5130 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 432.666 M 0 0 30(\"reg\")FmTx
FmE
5130 0 :M
f146 sf
( )S
5132 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 432.666 M ( property \(created during probing\))S
FmE
5133 0 :M
f183 sf
( )S
5139 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 444.666 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
96 456.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
96 466.666 M 0 0 264(02xxxx30 00000000 00000000 00000000 00001000)FmTx
96 476.666 M 0 0 144(81xxxx00 00000000 000003)FmTx
0 0 12(B0)FmTx
0 0 102( 00000000 0000000)FmTx
0 0 6(C)FmTx
96 486.666 M 0 0 144(81xxxx00 00000000 000003)FmTx
0 0 12(C0)FmTx
0 0 108( 00000000 00000020)FmTx
96 496.666 M 0 0 126(82xxxx00 00000000 000)FmTx
0 0 12(A0)FmTx
0 0 126(000 00000000 00020000)FmTx
FmE
5139 0 :M
f209 sf
( )S
5145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 510.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5145 0 :M
f146 sf
( )S
5147 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180 510.666 M ( property \(created after probing, during address assignment\))S
FmE
5147 0 :M
f183 sf
( )S
5153 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 526.666 M 0 0 264(82xxxx30 00000000 lllll000 00000000 00001000)FmTx
FmE
5153 0 :M
f146 sf
( )S
5155 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 542.666 M (with the resulting base address registers:)S
FmE
5156 0 :M
f183 sf
( )S
5162 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 558.666 M 0 0 30(0x30:)FmTx
42 N 0 0 48(lllll000)FmTx
FmE
5162 0 :M
f67 sf
( )S
5165 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 592.999 M (11.1.3. )S
(A single 256 resource, Memory and I/O accessible, without FCode)S
FmE
5165 0 :M
f146 sf
( )S
5167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 609.666 M 0.404(This example consists of a device that has a single resource, requiring 256 bytes of address space, but which is)W
60 621.666 M 0.346(accessible as either I/O or Memory mapping;  i.e., it contains two address base registers, one for I/O Space and)W
60 633.666 M -0.377(one for Memory Space.  For this example, no Expansion ROM base address register is implemented;  hence, there)W
60 645.666 M (is no FCode.)S
96 661.666 M (Base address register )S
FmE
5167 0 :M
f183 sf
( )S
5173 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.897 661.666 M 0 0 24(0x10)FmTx
FmE
5173 0 :M
f146 sf
( )S
5175 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.897 661.666 M (:)S
132 677.666 M -0.624(Discovered to be a Memory base address register, requiring 256 bytes of address space,)W
132 689.666 M (by reading back a )S
FmE
5176 0 :M
f183 sf
( )S
5182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
205.298 689.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
5182 0 :M
f146 sf
( )S
5184 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
265.298 689.666 M ( after writing )S
FmE
5184 0 :M
f183 sf
( )S
5190 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
319.991 689.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5190 0 :M
f146 sf
( )S
5192 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
379.991 689.666 M (.)S
FmE
endp
%%Page: 25 25
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 25 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
5193 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
5193 0 :M
f67 sf
( )S
5196 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
5196 0 :M
f92 sf
( )S
5199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (20)S
FmE
5199 0 :M
f124 sf
( )S
5206 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
5206 0 :M
f146 sf
( )S
5208 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 29.667 M (Base address register )S
FmE
5209 0 :M
f183 sf
( )S
5215 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.897 29.667 M 0 0 24(0x14)FmTx
FmE
5215 0 :M
f146 sf
( )S
5217 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.897 29.667 M (:)S
114 45.667 M 0.035(Discovered to be a I/O base address register, requiring 256 bytes of address space, by)W
114 57.667 M (reading back a )S
FmE
5217 0 :M
f183 sf
( )S
5223 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174.798 57.667 M 0 0 60(0xFFFFFF01)FmTx
FmE
5223 0 :M
f146 sf
( )S
5225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.798 57.667 M ( after writing )S
FmE
5226 0 :M
f183 sf
( )S
5232 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
289.491 57.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5232 0 :M
f146 sf
( )S
5234 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
349.491 57.667 M (.)S
78 73.667 M (Base address registers )S
FmE
5234 0 :M
f183 sf
( )S
5240 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.786 73.667 M 0 0 24(0x18)FmTx
FmE
5240 0 :M
f146 sf
( )S
5242 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.786 73.667 M (, )S
FmE
5243 0 :M
f183 sf
( )S
5249 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.786 73.667 M 0 0 24(0x1C)FmTx
FmE
5249 0 :M
f146 sf
( )S
5251 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
221.786 73.667 M (,)S
( )S
FmE
5251 0 :M
f183 sf
( )S
5257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.786 73.667 M 0 0 24(0x20)FmTx
FmE
5257 0 :M
f146 sf
( )S
5259 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.786 73.667 M (, )S
FmE
5260 0 :M
f183 sf
( )S
5266 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.786 73.667 M 0 0 24(0x24)FmTx
FmE
5266 0 :M
f146 sf
( )S
5268 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.786 73.667 M ( and )S
FmE
5268 0 :M
f183 sf
( )S
5274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.225 73.667 M 0 0 24(0x30)FmTx
FmE
5274 0 :M
f146 sf
( )S
5276 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
323.225 73.667 M (:)S
114 89.667 M 1.48(Discovered to be not implemented by reading back a )W
FmE
5277 0 :M
f183 sf
( )S
5283 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
340.848 89.667 M 0 0 60(0x00000000)FmTx
FmE
5283 0 :M
f146 sf
( )S
5285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.848 89.667 M 1.48( after writing)W
FmE
5285 0 :M
f183 sf
( )S
5291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 101.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5291 0 :M
f146 sf
( )S
5293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 101.667 M (.)S
FmE
5294 0 :M
f209 sf
( )S
5300 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 117.667 M 0 0 30(\"reg\")FmTx
FmE
5300 0 :M
f146 sf
( )S
5302 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 117.667 M ( property \(created during probing\))S
FmE
5302 0 :M
f183 sf
( )S
5308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 133.667 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
78 145.667 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
78 155.667 M 0 0 264(02xxxx10 00000000 00000000 00000000 00000100)FmTx
78 165.667 M 0 0 264(01xxxx14 00000000 00000000 00000000 00000100)FmTx
FmE
5308 0 :M
f209 sf
( )S
5314 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 189.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5314 0 :M
f146 sf
( )S
5316 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162 189.666 M ( property \(created after probing, during address assignment\))S
FmE
5317 0 :M
f183 sf
( )S
5323 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 201.666 M 0 0 264(81xxxx14 00000000 llllll00 00000000 00000100)FmTx
78 211.666 M 0 0 108(82xxxx10 00000000 )FmTx
0 0 42(mmmmmm0)FmTx
0 0 114(0 00000000 00000100)FmTx
FmE
5323 0 :M
f146 sf
( )S
5325 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 225.666 M (with the resulting base registers:)S
FmE
5325 0 :M
f183 sf
( )S
5331 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 237.666 M 0 0 30(0x10:)FmTx
42 N 0 0 42(mmmmmm0)FmTx
0 0 6(0)FmTx
FmE
5331 0 :M
f146 sf
( )S
5333 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 237.666 M (\(a memory address\))S
FmE
5334 0 :M
f183 sf
( )S
5340 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 247.666 M 0 0 30(0x14:)FmTx
42 N 0 0 48(llllll01)FmTx
FmE
5340 0 :M
f146 sf
( )S
5342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222 247.666 M (\(an I/O address\))S
FmE
5342 0 :M
f172 sf
( )S
5344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 261.666 M -0.081(Note that this platform appears to allocate I/O space first, yielding an assigned-addresses property in a different)W
42 273.666 M (order from the reg property.)S
FmE
5345 0 :M
f67 sf
( )S
5348 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 308 M (11.1.4. )S
(A single 256 resource, Memory and I/O accessible, with FCode.)S
FmE
5348 0 :M
f146 sf
( )S
5350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 324.666 M -0.044(The same function as in 11.4, but with 4K of FCode that reveals that the first 32 bytes of the registers are unused)W
42 336.666 M (and the second 32 bytes are used only for diagnostic purposes:)S
78 368.666 M (Base address register )S
FmE
5350 0 :M
f183 sf
( )S
5356 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.897 368.666 M 0 0 24(0x10)FmTx
FmE
5356 0 :M
f146 sf
( )S
5358 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.897 368.666 M (:)S
114 384.666 M -0.624(Discovered to be a Memory base address register, requiring 256 bytes of address space,)W
114 396.666 M (by reading back a )S
FmE
5359 0 :M
f183 sf
( )S
5365 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
187.298 396.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
5365 0 :M
f146 sf
( )S
5367 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.298 396.666 M ( after writing )S
FmE
5367 0 :M
f183 sf
( )S
5373 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301.991 396.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5373 0 :M
f146 sf
( )S
5375 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
361.991 396.666 M (.)S
78 412.666 M (Base address register )S
FmE
5376 0 :M
f183 sf
( )S
5382 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.897 412.666 M 0 0 24(0x14)FmTx
FmE
5382 0 :M
f146 sf
( )S
5384 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.897 412.666 M (:)S
114 428.666 M 0.035(Discovered to be a I/O base address register, requiring 256 bytes of address space, by)W
114 440.666 M (reading back a )S
FmE
5384 0 :M
f183 sf
( )S
5390 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174.798 440.666 M 0 0 60(0xFFFFFF01)FmTx
FmE
5390 0 :M
f146 sf
( )S
5392 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.798 440.666 M ( after writing )S
FmE
5393 0 :M
f183 sf
( )S
5399 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
289.491 440.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5399 0 :M
f146 sf
( )S
5401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
349.491 440.666 M (.)S
78 456.666 M (Base address registers )S
FmE
5401 0 :M
f183 sf
( )S
5407 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.786 456.666 M 0 0 24(0x18)FmTx
FmE
5407 0 :M
f146 sf
( )S
5409 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.786 456.666 M (, )S
FmE
5410 0 :M
f183 sf
( )S
5416 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.786 456.666 M 0 0 24(0x1C)FmTx
FmE
5416 0 :M
f146 sf
( )S
5418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
221.786 456.666 M (,)S
( )S
FmE
5418 0 :M
f183 sf
( )S
5424 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.786 456.666 M 0 0 24(0x20)FmTx
FmE
5424 0 :M
f146 sf
( )S
5426 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.786 456.666 M (, )S
FmE
5427 0 :M
f183 sf
( )S
5433 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.786 456.666 M 0 0 24(0x24)FmTx
FmE
5433 0 :M
f146 sf
( )S
5435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.786 456.666 M (:)S
114 472.666 M 1.48(Discovered to be not implemented by reading back a )W
FmE
5435 0 :M
f183 sf
( )S
5441 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
340.848 472.666 M 0 0 60(0x00000000)FmTx
FmE
5441 0 :M
f146 sf
( )S
5443 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.848 472.666 M 1.48( after writing)W
FmE
5444 0 :M
f183 sf
( )S
5450 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 484.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5450 0 :M
f146 sf
( )S
5452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 484.666 M (.)S
78 500.666 M (Expansion ROM base address register \()S
FmE
5452 0 :M
f183 sf
( )S
5458 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.547 500.666 M 0 0 24(0x30)FmTx
FmE
5458 0 :M
f146 sf
( )S
5460 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.547 500.666 M (\):)S
114 516.666 M 0.557(Discovered to be present, and requiring )W
FmE
5461 0 :M
f183 sf
( )S
5467 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
277.552 516.666 M 0 0 36(0x1000)FmTx
FmE
5467 0 :M
f146 sf
( )S
5469 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.552 516.666 M 0.557( bytes of address space, by reading)W
FmE
5469 0 :M
f183 sf
( )S
5475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114 528.666 M 0 0 60(0xFFFFF000)FmTx
FmE
5475 0 :M
f146 sf
( )S
5477 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 528.666 M ( after writing )S
FmE
5478 0 :M
f183 sf
( )S
5484 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228.692 528.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
5484 0 :M
f146 sf
( )S
5486 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288.692 528.666 M (.)S
42 544.666 M 0.455(The Expansion ROM is discovered to contain a valid FCode image which is evaluated.  This FCode creates its)W
42 556.666 M (own )S
FmE
5486 0 :M
f260 sf
( )S
5491 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
61.719 556.666 M 0 0 25(\"reg\")FmTx
FmE
5491 0 :M
f146 sf
( )S
5493 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
86.719 556.666 M ( property, reflecting knowledge of the intended usage of the addressable resource.)S
FmE
5494 0 :M
f209 sf
( )S
5500 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 572.666 M 0 0 30(\"reg\")FmTx
FmE
5500 0 :M
f146 sf
( )S
5502 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
72 572.666 M ( property \(created during probing by the FCode program\))S
FmE
5502 0 :M
f183 sf
( )S
5508 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 588.666 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
78 600.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
78 610.666 M 0 0 264(02xxxx10 00000000 00000040 00000000 000000C0)FmTx
FmE
5508 0 :M
f209 sf
( )S
5514 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 634.666 M 0 0 90(\"alternate-reg\")FmTx
FmE
5514 0 :M
f146 sf
( )S
5516 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 634.666 M ( property \(created during probing by the FCode program)S
(\))S
FmE
endp
%%Page: 26 26
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 26 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
5517 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
5517 0 :M
f67 sf
( )S
5520 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
5520 0 :M
f92 sf
( )S
5523 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (21)S
FmE
5523 0 :M
f124 sf
( )S
5530 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
5530 0 :M
f183 sf
( )S
5536 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 29.667 M 0 0 264(00000000 00000000 00000000 00000000 00000000)FmTx
96 39.667 M 0 0 252(01xxxx14 00000000 00000040 00000000 000000)FmTx
0 0 12(C0)FmTx
0 0 18( *1)FmTx
96 49.667 M 0 0 282(02xxxx10 00000000 00000020 00000000 00000020 *2)FmTx
96 59.667 M 0 0 276(01xxxx14 00000000 00000020 00000000 00000020 *)FmTx
0 0 6(3)FmTx
FmE
5536 0 :M
f209 sf
( )S
5542 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 75.667 M 0 0 60(    Notes:)FmTx
FmE
5542 0 :M
f183 sf
( )S
5548 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 91.667 M 0 0 288(    *1 Secondary access to operational registers)FmTx
96 101.667 M 0 0 270(    *2 Primary access to diagnostic registers)FmTx
96 111.667 M 0 0 282(    *3 Secondary access to diagnostic registers)FmTx
FmE
5548 0 :M
f209 sf
( )S
5554 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 125.667 M 0 0 6(\")FmTx
0 0 120(assigned-addresses\" )FmTx
FmE
5554 0 :M
f146 sf
( )S
5556 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186 125.667 M (property \(created after probing, during address assignment\))S
FmE
5557 0 :M
f183 sf
( )S
5563 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 137.667 M 0 0 264(81xxxx14 00000000 llllll00 00000000 00000100)FmTx
96 147.667 M 0 0 108(82xxxx10 00000000 )FmTx
0 0 42(mmmmmm0)FmTx
0 0 114(0 00000000 00000100)FmTx
FmE
5563 0 :M
f146 sf
( )S
5565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 171.666 M (with the resulting base registers:)S
FmE
5565 0 :M
f183 sf
( )S
5571 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 183.666 M 0 0 30(0x10:)FmTx
42 N 0 0 42(mmmmmm0)FmTx
0 0 6(0)FmTx
FmE
5571 0 :M
f146 sf
( )S
5573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 183.666 M (\(a memory address\))S
FmE
5574 0 :M
f183 sf
( )S
5580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 193.666 M 0 0 30(0x14:)FmTx
42 N 0 0 48(llllll01)FmTx
FmE
5580 0 :M
f146 sf
( )S
5582 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 193.666 M (\(an I/O address)S
(\))S
FmE
5582 0 :M
f67 sf
( )S
5585 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 226 M (11.2. )S
(Computing PCI addresses from )S
FmE
5585 0 :M
f403 sf
( )S
5592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.29 226 M 0 0 35(\"reg\")FmTx
FmE
5592 0 :M
f67 sf
( )S
5595 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.29 226 M ( and )S
FmE
5595 0 :M
f403 sf
( )S
5602 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
312.632 226 M 0 0 140(\"assigned-addresses\")FmTx
FmE
5602 0 :M
f146 sf
( )S
5604 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 242.666 M 0.646(The following sections show how a device driver or Client program could use the information provided in the)W
FmE
5605 0 :M
f209 sf
( )S
5611 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 254.666 M 0 0 30(\"reg\")FmTx
FmE
5611 0 :M
f146 sf
( )S
5613 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 254.666 M ( and )S
FmE
5613 0 :M
f209 sf
( )S
5619 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.438 254.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5619 0 :M
f146 sf
( )S
5621 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
229.438 254.666 M ( properties.)S
60 270.666 M 0.214(The phrases \"PCI address space\" or \"PCI domain\" indicate an address is the PCI physical address space as used)W
60 282.666 M 0.243(on the PCI bus in question.  This PCI physical address space is not necessarily the same as the physical address)W
60 294.666 M -0.56(space in which a processor would access the PCI resource.  Especially in the case of PCI I/O space, host PCI bridg-)W
60 306.666 M 0.405(es \(i.e., PCI bridges that are attached to the processor bus\) may perform an address translation function.  In the)W
60 318.666 M -0.393(following examples, another sequence of steps is, in general, necessary to determine the appropriate processor ad-)W
60 330.666 M (dress to use.  The information necessary for these steps is contained in the )S
FmE
5622 0 :M
f209 sf
( )S
5628 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
358.494 330.666 M 0 0 48(\"ranges\")FmTx
FmE
5628 0 :M
f146 sf
( )S
5630 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406.494 330.666 M ( properties of bus nodes.)S
FmE
5630 0 :M
f67 sf
( )S
5633 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 365 M (11.2.1. )S
(Determining the address of a register of example in Section )S
(11.1.4.)S
FmE
5633 0 :M
f146 sf
( )S
5635 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 381.666 M 0.436(Problem: Given the last device described in Section )W
(11.1.4.)S
0.436(, determine the physical address associated with the)W
60 393.666 M (3rd byte of its operational registers.)S
60 409.666 M 0.36(1.  Extract the second )W
FmE
5636 0 :M
f172 sf
( )S
5638 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.653 409.666 M (phys-addr,size)S
FmE
5638 0 :M
f146 sf
( )S
5640 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208.692 409.666 M 0.36( pair from the )W
FmE
5641 0 :M
f209 sf
( )S
5647 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.327 409.666 M 0 0 30(\"reg\")FmTx
FmE
5647 0 :M
f146 sf
( )S
5649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297.327 409.666 M 0.36( property.  \(We know to use the second pair because)W
60 421.666 M -0.186(the first pair is the Configuration Space entry and the device documentation tells us that the second pair is the op-)W
60 433.666 M (erational registers.\))S
60 449.666 M (2.  Note that the \325)S
FmE
5649 0 :M
f183 sf
( )S
5655 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.976 449.666 M 0 0 6(n)FmTx
FmE
5655 0 :M
f146 sf
( )S
5657 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.976 449.666 M (\325 bit is zero, indicating a relocatable region.  Note that the )S
FmE
5658 0 :M
f183 sf
( )S
5664 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
369.208 449.666 M 0 0 48(rrrrrrrr)FmTx
FmE
5664 0 :M
f146 sf
( )S
5666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
417.208 449.666 M ( field is )S
FmE
5666 0 :M
f183 sf
( )S
5672 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
449.698 449.666 M 0 0 24(0x10)FmTx
FmE
5672 0 :M
f146 sf
( )S
5674 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
473.698 449.666 M (.)S
60 465.666 M 0.203(3.  Search the )W
FmE
5675 0 :M
f209 sf
( )S
5681 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.73 465.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5681 0 :M
f146 sf
( )S
5683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.73 465.666 M 0.203(  property for an entry with an )W
FmE
5683 0 :M
f183 sf
( )S
5689 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
362.078 465.666 M 0 0 48(rrrrrrrr)FmTx
FmE
5689 0 :M
f146 sf
( )S
5691 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
410.078 465.666 M 0.203( field of )W
FmE
5692 0 :M
f183 sf
( )S
5698 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
444.837 465.666 M 0 0 24(0x10)FmTx
FmE
5698 0 :M
f146 sf
( )S
5700 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.837 465.666 M 0.203(.  Find the)W
60 477.666 M (second entry.)S
60 493.666 M 0.092(4.  Add the )W
FmE
5700 0 :M
f172 sf
( )S
5702 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107.306 493.666 M (phys_mid,phys_lo)S
FmE
5703 0 :M
f146 sf
( )S
5705 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
179.237 493.666 M 0.092( value from the )W
FmE
5705 0 :M
f209 sf
( )S
5711 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
242.912 493.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
5711 0 :M
f146 sf
( )S
5713 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
362.912 493.666 M 0.092( entry to the )W
FmE
5714 0 :M
f172 sf
( )S
5716 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.821 493.666 M (phys_mid,phys_lo)S
FmE
5716 0 :M
f146 sf
( )S
5718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
485.752 493.666 M 0.092( value)W
60 505.666 M 0.511(\(0x40\) from the )W
FmE
5719 0 :M
f209 sf
( )S
5725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.339 505.666 M 0 0 30(\"reg\")FmTx
FmE
5725 0 :M
f146 sf
( )S
5727 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.339 505.666 M 0.511( entry.  This yields the physical base \(in PCI address space\) of the device\'s operational)W
60 517.666 M (registers.)S
60 533.666 M -0.045(5.  Add this value to the desired register offset, 3.  This yields the \(PCI domain\325s\) physical address of the desired)W
60 545.666 M (register.)S
FmE
5727 0 :M
f67 sf
( )S
5730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 579.999 M (11.2.2. )S
(Determining the address of a register of example in Section )S
(11.1.2.)S
FmE
5730 0 :M
f146 sf
( )S
5732 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 596.666 M -0.119(Problem: Given the VGA device described above \(in Section )W
(11.1.2.)S
-0.119(\), determine the PCI address associated with)W
60 608.666 M (the sequencer index register \(I/O address )S
FmE
5733 0 :M
f183 sf
( )S
5739 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.018 608.666 M 0 0 30(0x3C4)FmTx
FmE
5739 0 :M
f146 sf
( )S
5741 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.018 608.666 M ( in the documentation\).)S
60 624.666 M (\(Of course, we could \"just know\" that the answer is )S
FmE
5741 0 :M
f183 sf
( )S
5747 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.359 624.666 M 0 0 30(0x3C4)FmTx
FmE
5747 0 :M
f146 sf
( )S
5749 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.359 624.666 M (, but let\'s do it according to the book.\))S
60 640.666 M -0.177(1.  Extract the fourth )W
FmE
5750 0 :M
f172 sf
( )S
5752 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.636 640.666 M (phys-addr,size)S
FmE
5752 0 :M
f146 sf
( )S
5754 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.676 640.666 M -0.177(  pair from the )W
FmE
5755 0 :M
f209 sf
( )S
5761 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
261.487 640.666 M 0 0 30(\"reg\")FmTx
FmE
5761 0 :M
f146 sf
( )S
5763 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.487 640.666 M -0.177( property.  \(We know to use the fourth pair because the)W
60 652.666 M -0.478(first pair is the Configuration Space entry, the second pair is the ROM, the third pair is the monochrome I/O range,)W
60 664.666 M (the fourth pair is the color I/O range, and the fifth pair is the video memory.\))S
60 680.666 M (2.  Note that the \325)S
FmE
5763 0 :M
f183 sf
( )S
5769 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.976 680.666 M 0 0 6(n)FmTx
FmE
5769 0 :M
f146 sf
( )S
5771 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.976 680.666 M (\325 bit is one, indicating a non-relocatable region.)S
60 696.666 M -0.327(3.  Add the )W
FmE
5772 0 :M
f172 sf
( )S
5774 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
105.629 696.666 M (phys_mid,phys_lo)S
FmE
5774 0 :M
f146 sf
( )S
5776 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.56 696.666 M -0.327( values from this )W
FmE
5777 0 :M
f209 sf
( )S
5783 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
245.677 696.666 M 0 0 30(\"reg\")FmTx
FmE
5783 0 :M
f146 sf
( )S
5785 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
275.677 696.666 M -0.327( entry to the desired register offset, 4.  This yields the phys-)W
FmE
endp
%%Page: 27 27
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 27 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
5785 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
5785 0 :M
f67 sf
( )S
5788 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 4 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 2.0)S
FmE
5788 0 :M
f92 sf
( )S
5791 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (22)S
FmE
5791 0 :M
f124 sf
( )S
5798 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
-3 32 M 0 0 14( 1)FmTx
-3 44 M 0 0 14( 2)FmTx
-3 56 M 0 0 14( 3)FmTx
-3 68 M 0 0 14( 4)FmTx
-3 80 M 0 0 14( 5)FmTx
-3 92 M 0 0 14( 6)FmTx
-3 104 M 0 0 14( 7)FmTx
-3 116 M 0 0 14( 8)FmTx
-3 128 M 0 0 14( 9)FmTx
-3 140 M 0 0 14(10)FmTx
-3 152 M 0 0 14(11)FmTx
-3 164 M 0 0 14(12)FmTx
-3 176 M 0 0 14(13)FmTx
-3 188 M 0 0 14(14)FmTx
-3 200 M 0 0 14(15)FmTx
-3 212 M 0 0 14(16)FmTx
-3 224 M 0 0 14(17)FmTx
-3 236 M 0 0 14(18)FmTx
-3 248 M 0 0 14(19)FmTx
-3 260 M 0 0 14(20)FmTx
-3 272 M 0 0 14(21)FmTx
-3 284 M 0 0 14(22)FmTx
-3 296 M 0 0 14(23)FmTx
-3 308 M 0 0 14(24)FmTx
-3 320 M 0 0 14(25)FmTx
-3 332 M 0 0 14(26)FmTx
-3 344 M 0 0 14(27)FmTx
-3 356 M 0 0 14(28)FmTx
-3 368 M 0 0 14(29)FmTx
-3 380 M 0 0 14(30)FmTx
-3 392 M 0 0 14(31)FmTx
-3 404 M 0 0 14(32)FmTx
-3 416 M 0 0 14(33)FmTx
-3 428 M 0 0 14(34)FmTx
-3 440 M 0 0 14(35)FmTx
-3 452 M 0 0 14(36)FmTx
-3 464 M 0 0 14(37)FmTx
-3 476 M 0 0 14(38)FmTx
-3 488 M 0 0 14(39)FmTx
-3 500 M 0 0 14(40)FmTx
-3 512 M 0 0 14(41)FmTx
-3 524 M 0 0 14(42)FmTx
-3 536 M 0 0 14(43)FmTx
-3 548 M 0 0 14(44)FmTx
-3 560 M 0 0 14(45)FmTx
-3 572 M 0 0 14(46)FmTx
-3 584 M 0 0 14(47)FmTx
-3 596 M 0 0 14(48)FmTx
-3 608 M 0 0 14(49)FmTx
-3 620 M 0 0 14(50)FmTx
-3 632 M 0 0 14(51)FmTx
-3 644 M 0 0 14(52)FmTx
-3 656 M 0 0 14(53)FmTx
-3 668 M 0 0 14(54)FmTx
-3 680 M 0 0 14(55)FmTx
-3 692 M 0 0 14(56)FmTx
-3 704 M 0 0 14(57)FmTx
FmE
5798 0 :M
f146 sf
( )S
5800 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 29.667 M (ical address \(in the PCI domain\) of the sequencer index register.)S
FmE
5801 0 :M
f67 sf
( )S
5804 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 71 M (12. )S
(Use of the )S
FmE
5804 0 :M
f209 sf
( )S
5810 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
113.64 71 M 0 0 48(\"ranges\")FmTx
FmE
5810 0 :M
f67 sf
( )S
5813 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
161.64 71 M ( property)S
FmE
5813 0 :M
f146 sf
( )S
5815 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 87.667 M 0.373(The )W
FmE
5815 0 :M
f209 sf
( )S
5821 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60.42 87.667 M 0 0 48(\"ranges\")FmTx
FmE
5821 0 :M
f146 sf
( )S
5823 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108.42 87.667 M 0.373( property of Open Firmware represents how address transformation is done across bus bridges.)W
42 99.667 M 0.224(The )W
FmE
5824 0 :M
f209 sf
( )S
5830 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60.271 99.667 M 0 0 48(\"ranges\")FmTx
FmE
5830 0 :M
f146 sf
( )S
5832 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108.271 99.667 M 0.224( property conveys this information for PCI, but the use of the property is not as straightforward)W
42 111.667 M (as on some other busses.)S
42 127.667 M 0.366(In particular, the )W
FmE
5832 0 :M
f172 sf
( )S
5834 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111.95 127.667 M (phys.hi)S
FmE
5835 0 :M
f146 sf
( )S
5837 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
140.555 127.667 M 0.366( fields of the child address spaces in the )W
FmE
5837 0 :M
f209 sf
( )S
5843 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
305.177 127.667 M 0 0 48(\"ranges\")FmTx
FmE
5843 0 :M
f146 sf
( )S
5845 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.177 127.667 M 0.366( property for PCI does not contain)W
42 139.667 M 1.347(the same information as )W
FmE
5846 0 :M
f209 sf
( )S
5852 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145.684 139.667 M 0 0 30(\"reg\")FmTx
FmE
5852 0 :M
f146 sf
( )S
5854 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.684 139.667 M 1.347( property entries within PCI nodes.  The only information that is present in)W
FmE
5854 0 :M
f209 sf
( )S
5860 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
42 151.667 M 0 0 48(\"ranges\")FmTx
FmE
5860 0 :M
f146 sf
( )S
5862 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90 151.667 M -0.246( )W
FmE
5863 0 :M
f172 sf
( )S
5865 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
92.254 151.667 M (phys.hi)S
FmE
5865 0 :M
f146 sf
( )S
5867 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
120.86 151.667 M -0.246(  entries are the non-relocatable, prefetchable and the PCI address space bits for which the en-)W
42 163.667 M -0.523(try applies.  I.e., only the )W
FmE
5868 0 :M
f183 sf
( )S
5874 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.053 163.667 M 0 0 6(n)FmTx
FmE
5874 0 :M
f260 sf
( )S
5879 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.053 163.667 M -1.046 0 10(, )FmTx
FmE
5879 0 :M
f183 sf
( )S
5885 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156.007 163.667 M 0 0 6(p)FmTx
FmE
5885 0 :M
f146 sf
( )S
5887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.007 163.667 M -0.523( and )W
FmE
5887 0 :M
f183 sf
( )S
5893 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.4 163.667 M 0 0 12(ss)FmTx
FmE
5893 0 :M
f146 sf
( )S
5895 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.4 163.667 M -0.523( bits are present; the )W
FmE
5896 0 :M
f183 sf
( )S
5902 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.804 163.667 M 0 0 48(bbbbbbbb)FmTx
FmE
5902 0 :M
f146 sf
( )S
5904 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.804 163.667 M -0.523(, )W
FmE
5904 0 :M
f183 sf
( )S
5910 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.281 163.667 M 0 0 30(ddddd)FmTx
FmE
5910 0 :M
f146 sf
( )S
5912 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
355.281 163.667 M -0.523(, )W
FmE
5913 0 :M
f183 sf
( )S
5919 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
359.758 163.667 M 0 0 18(fff)FmTx
FmE
5919 0 :M
f146 sf
( )S
5921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
377.758 163.667 M -0.523( and )W
FmE
5921 0 :M
f183 sf
( )S
5927 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
396.151 163.667 M 0 0 48(rrrrrrrr)FmTx
FmE
5927 0 :M
f146 sf
( )S
5929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
444.151 163.667 M -0.523( fields are 0.)W
42 179.667 M 0.205(When an address is to be mapped through a PCI bus bridge node, the )W
FmE
5930 0 :M
f172 sf
( )S
5932 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
323.402 179.667 M (phys.hi)S
FmE
5932 0 :M
f146 sf
( )S
5934 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.008 179.667 M 0.205( value of the address to be mapped)W
42 191.667 M 0.107(and the child field of a )W
FmE
5935 0 :M
f209 sf
( )S
5941 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.381 191.667 M 0 0 48(\"ranges\")FmTx
FmE
5941 0 :M
f146 sf
( )S
5943 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.381 191.667 M 0.107( entry should be masked so that only the )W
FmE
5943 0 :M
f183 sf
( )S
5949 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
347.918 191.667 M 0 0 12(ss)FmTx
FmE
5949 0 :M
f146 sf
( )S
5951 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
359.918 191.667 M 0.107( bits are compared.  I.e., the only)W
42 203.667 M (portion of )S
FmE
5952 0 :M
f172 sf
( )S
5954 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
84.212 203.667 M (phys.hi)S
FmE
5954 0 :M
f146 sf
( )S
5956 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.818 203.667 M ( that should participate in the range determination is the address space indicator \(the )S
FmE
5957 0 :M
f183 sf
( )S
5963 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
451.565 203.667 M 0 0 12(ss)FmTx
FmE
5963 0 :M
f146 sf
( )S
5965 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
463.565 203.667 M ( bits\).)S
FmE
endp
%%Page: 28 28
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 28 of 28)setjob
%%EndPageSetup
gS 0 0 552 728 rC
5965 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
5965 0 :M
f67 sf
( )S
5968 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 4 M (Revision 2.0)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
5968 0 :M
f92 sf
( )S
5971 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 734 M (23)S
FmE
5971 0 :M
f124 sf
( )S
5978 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
15 32 M 0 0 14( 1)FmTx
15 44 M 0 0 14( 2)FmTx
15 56 M 0 0 14( 3)FmTx
15 68 M 0 0 14( 4)FmTx
15 80 M 0 0 14( 5)FmTx
15 92 M 0 0 14( 6)FmTx
15 104 M 0 0 14( 7)FmTx
15 116 M 0 0 14( 8)FmTx
15 128 M 0 0 14( 9)FmTx
15 140 M 0 0 14(10)FmTx
15 152 M 0 0 14(11)FmTx
15 164 M 0 0 14(12)FmTx
15 176 M 0 0 14(13)FmTx
15 188 M 0 0 14(14)FmTx
15 200 M 0 0 14(15)FmTx
15 212 M 0 0 14(16)FmTx
15 224 M 0 0 14(17)FmTx
15 236 M 0 0 14(18)FmTx
15 248 M 0 0 14(19)FmTx
15 260 M 0 0 14(20)FmTx
15 272 M 0 0 14(21)FmTx
15 284 M 0 0 14(22)FmTx
15 296 M 0 0 14(23)FmTx
15 308 M 0 0 14(24)FmTx
15 320 M 0 0 14(25)FmTx
15 332 M 0 0 14(26)FmTx
15 344 M 0 0 14(27)FmTx
15 356 M 0 0 14(28)FmTx
15 368 M 0 0 14(29)FmTx
15 380 M 0 0 14(30)FmTx
15 392 M 0 0 14(31)FmTx
15 404 M 0 0 14(32)FmTx
15 416 M 0 0 14(33)FmTx
15 428 M 0 0 14(34)FmTx
15 440 M 0 0 14(35)FmTx
15 452 M 0 0 14(36)FmTx
15 464 M 0 0 14(37)FmTx
15 476 M 0 0 14(38)FmTx
15 488 M 0 0 14(39)FmTx
15 500 M 0 0 14(40)FmTx
15 512 M 0 0 14(41)FmTx
15 524 M 0 0 14(42)FmTx
15 536 M 0 0 14(43)FmTx
15 548 M 0 0 14(44)FmTx
15 560 M 0 0 14(45)FmTx
15 572 M 0 0 14(46)FmTx
15 584 M 0 0 14(47)FmTx
15 596 M 0 0 14(48)FmTx
15 608 M 0 0 14(49)FmTx
15 620 M 0 0 14(50)FmTx
15 632 M 0 0 14(51)FmTx
15 644 M 0 0 14(52)FmTx
15 656 M 0 0 14(53)FmTx
15 668 M 0 0 14(54)FmTx
15 680 M 0 0 14(55)FmTx
15 692 M 0 0 14(56)FmTx
15 704 M 0 0 14(57)FmTx
FmE
5978 0 :M
f67 sf
( )S
5981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 31 M (13. Example of use of add-ranges check)S
FmE
5981 0 :M
f220 sf
( )S
5986 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 43 M 0 0 325(   \\ Flag is true if the parent\'s map-in method doesn\'t work with)FmTx
60 52 M 0 0 135(   \\ relocatable addresses.)FmTx
60 61 M 0 0 15(   )FmTx
60 70 M 0 0 160(   : map-in-broken?  \( -- flag \))FmTx
60 79 M 0 0 335(      \\ Look for the method that is present when the bug is present)FmTx
60 88 M 0 0 340(      \" add-range\"  my-parent  ihandle>phandle   \( adr len phandle \))FmTx
60 97 M 0 0 410(      find-method  dup  if  nip  then            \( flag \)  \\ Discard xt if present)FmTx
60 106 M 0 0 20(   ;)FmTx
60 115 M 0 0 15(   )FmTx
60 124 M 0 0 15(   )FmTx
60 133 M 0 0 400(   \\ Return phys.lo and phys.mid of the address assigned to the PCI base address)FmTx
60 142 M 0 0 180(   \\ register indicated by phys.hi .)FmTx
60 151 M 0 0 15(   )FmTx
60 160 M 0 0 310(   : get-base-address  \( phys.hi -- phys.lo phys.mid phys.hi \))FmTx
60 169 M 0 0 15(   )FmTx
60 178 M 0 0 305(      \" assigned-addresses\" get-my-property  if   \( phys.hi \))FmTx
60 187 M 0 0 210(         .\" No address property found!\" cr)FmTx
60 196 M 0 0 310(         0 0 rot  exit                            \\ Error exit)FmTx
60 205 M 0 0 255(      then                      \( phys.hi adr len \))FmTx
60 214 M 0 0 15(   )FmTx
60 223 M 0 0 295(      rot >r                    \( adr len \)  \( r: phys.hi \))FmTx
60 232 M 0 0 225(      \\ Found assigned-addresses, get address)FmTx
60 241 M 0 0 325(      begin  dup  while         \( adr len\' \)  \\ Loop over entries)FmTx
60 250 M 0 0 345(         decode-phys            \( adr len\' phys.lo phys.mid phys.hi \))FmTx
60 259 M 0 0 415(         h# ff and  r@ h# ff and  =  if  \( adr len\' phys.lo phys.mid \)  \\ This one?)FmTx
60 268 M 0 0 395(            2swap 2drop         \( phys.lo phys.mid \)          \\ This is the one)FmTx
60 277 M 0 0 300(            r> exit             \( phys.lo phys.mid phys.hi \))FmTx
60 286 M 0 0 380(         else                   \( adr len\' phys.lo phys.mid \) \\ Not this one)FmTx
60 295 M 0 0 220(            2drop               \( adr len\' \))FmTx
60 304 M 0 0 220(         then                   \( adr len\' \))FmTx
60 313 M 0 0 355(         decode-int drop decode-int drop        \\ Discard boring fields)FmTx
60 322 M 0 0 60(      repeat)FmTx
60 331 M 0 0 175(      2drop                     \( \))FmTx
60 340 M 0 0 15(   )FmTx
60 349 M 0 0 195(      .\" Base address not assigned!\" cr)FmTx
60 358 M 0 0 15(   )FmTx
60 367 M 0 0 235(      0 0 r>                    \( 0 0 phys.hi \))FmTx
60 376 M 0 0 20(   ;)FmTx
60 385 M 0 0 15(   )FmTx
60 394 M 0 0 15(   )FmTx
60 403 M 0 0 390(   \\ Example code to compute the phys.lo..hi arguments for \"map-in\", using the)FmTx
60 412 M 0 0 370(   \\ above functions so that the code works both on systems that implement)FmTx
60 421 M 0 0 380(   \\ map-in according to the PCI binding document, and also on systems whose)FmTx
60 430 M 0 0 385(   \\ PCI map-in method requires phys.lo,phys.mid to contain the assigned base)FmTx
60 439 M 0 0 65(   \\ address.)FmTx
60 448 M 0 0 15(   )FmTx
60 457 M 0 0 355(      \\ Compute entire phys.lo..hi address for base address register 10)FmTx
60 466 M 0 0 120(      map-in-broken?  if)FmTx
60 475 M 0 0 380(         my-space h# 8200.0010 +  get-base-address        \( phys.lo,mid,hi \))FmTx
60 484 M 0 0 50(      else)FmTx
60 493 M 0 0 380(         0 0  my-space h# 200.0010 +                      \( phys.lo,mid,hi \))FmTx
60 502 M 0 0 380(      then                                                \( phys.lo,mid,hi \))FmTx
60 511 M 0 0 15(   )FmTx
60 520 M 0 0 15(   )FmTx
60 529 M 0 0 380(   \\ An FCode driver that need not work on systems with the map-in bug could)FmTx
60 538 M 0 0 365(   \\ use the following code, omitting the definitions of \"map-in-broken?\")FmTx
60 547 M 0 0 140(   \\ and \"get-base-address\".)FmTx
60 556 M 0 0 20(   \\)FmTx
60 565 M 0 0 375(   \\    0 0  my-space h# 200.0010 +                      \( phys.lo,mid,hi \))FmTx
FmE
endp
%%Trailer
end
%%EOF
