%!PS-Adobe-3.0
%%Title: (PCI Binding 1.6)
%%Creator: (FrameMaker5: LaserWriter 8 8.2.2)
%%CreationDate: (14:08 Thursday, October 26, 1995)
%%For: (Ron Hochsprung)
%%Pages: 24
%%DocumentFonts: Times-Bold Times-BoldItalic Times-Roman Times-Italic Courier Courier-Bold Courier-BoldOblique Courier-Oblique
%%DocumentNeededFonts: Times-Bold Times-BoldItalic Times-Roman Times-Italic Courier Courier-Bold Courier-BoldOblique Courier-Oblique
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%ADO_ImageableArea: 14 7 598 784
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(PCI Binding 1.6)def
/Creator(FrameMaker5: LaserWriter 8 8.2.2)def
/CreationDate(14:08 Thursday, October 26, 1995)def
/For(Ron Hochsprung)def
/Pages 1 def
end def end
/md 188 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *InputSlot Cassette

%%EndFeature
}featurecleanup
(Ron Hochsprung)setjob
/mT[1 0 0 -1 14 784]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Bold
%%IncludeFont: Times-BoldItalic
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Italic
%%IncludeFont: Courier
%%IncludeFont: Courier-Bold
%%IncludeFont: Courier-BoldOblique
%%IncludeFont: Courier-Oblique
/f0_1/Times-Bold
:mre
/f0_24 f0_1 24 scf
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f0_9 f0_1 9 scf
/f1_1/Times-BoldItalic
:mre
/f1_24 f1_1 24 scf
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f2_1/Times-Roman
:mre
/f2_12 f2_1 12 scf
/f2_10 f2_1 10 scf
/f2_9 f2_1 9 scf
/f3_1/Times-Italic
:mre
/f3_10 f3_1 10 scf
/f3_9 f3_1 9 scf
/f4_1/Courier
:mre
/f4_12 f4_1 12 scf
/f4_10 f4_1 10 scf
/f4_9 f4_1 9 scf
/f5_1/Courier-Bold
:mre
/f5_12 f5_1 12 scf
/f5_10 f5_1 10 scf
/f5_9 f5_1 9 scf
/f8_1/Courier-BoldOblique
:mre
/f8_10 f8_1 10 scf
/f8_9 f8_1 9 scf
/f10_1/Courier-Oblique
:mre
/f10_10 f10_1 10 scf
/f10_9 f10_1 9 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
% Frame PostScript Prolog for use with Macintosh Frame Products 5.0
% Copyright (c) 1986-95 Frame Technology Corp.  All rights reserved.
%%BeginProcSet: "FrameMacDict" 500 7
userdict/FrameMacDict 250 dict put FrameMacDict begin systemdict/setpacking
known{/fMSP currentpacking def true setpacking}if[/fM1/fM18/fM2/fM3/fM4/fMAB
/fM5/fM6/fM8/fM9/fMBC/fMBM/fMC/fMCD/fMCG/fMCK/fMCM/fMCl/fMCO/fMef/fMet/fMeh
/fMew/fMey/fMex/fMei/fMej/fMek/fMel/fMFl/fMGC/fMGL/fMGM/fMIx/fMJB/fMJC/fMJG
/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMN/fMNC/fMNg/fMND/fMOx/fMPC/fMPH/fMPt/fMRC
/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMdm/fMatrix/fMa2/fMi/fMk/fms/fmBS/fMdp/freq
/sangle/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/fM1B/fM0B/fMdc/fMds]{0
def}forall/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCl
fML1{/statusdict where{pop statusdict/processcolors known{statusdict
/processcolors get exec 1 gt}{F}ifelse}{F}ifelse}{T}ifelse def/FmBD{bind def}
bind def/fmBx{[exch{dup/FrameMacDict eq{pop FrameMacDict}{dup type dup
/arraytype eq exch/packedarraytype eq or{dup xcheck{fmBi}if}if}ifelse}forall]
cvx}FmBD/fmBi{bind fmBx}FmBD fML1{userdict/FrMacBegin{FrameMacDict begin}fmBi
put/FmE{end}FmBD}{/fMdc 6 array def userdict/FrMacBegin{FrameMacDict begin/fMds
currentcolorspace store mark 0 0 0 0 0 currentcolor fMdc astore pop cleartomark
}fmBi put/FmE{fMds setcolorspace mark fMdc aload pop setcolor cleartomark end}
FmBD}ifelse/fMEd 35 dict def/fmPE{fMEd 3 1 roll fmBi put}bind def/T true def/F
false def userdict/fMSuccessfull F put userdict/fMSi F put userdict/fM7 known
not{userdict/fM7 0 put}if/fmXD{exch def}FmBD/FmG/gsave load def/FmR/grestore
load def/fm_l/grestoreall load def/fm_v/save load def/fm_g/setgray load def
/fm_r/setrgbcolor load def/fm_h/sethsbcolor load def/fm_f/fill load def/fm_e
/eofill load def/fm_t/stroke load def/fm_m/imagemask load def/fm_i/image load
def/fm_s/show load def/fm_a/ashow load def/fm_w/widthshow load def/fm_y
/awidthshow load def/RealKshow/kshow load def/fMdm matrix defaultmatrix def
/fMatrix matrix def/fMa2 matrix def/fmSM{fMatrix currentmatrix pop}FmBD/fmRM{
fMatrix setmatrix}FmBD/FmRF{currentpoint 2 copy translate 4 2 roll{-1 1 scale}
if rotate neg exch neg exch translate}FmBD/fmax{2 copy lt{exch}if pop}FmBD/fmin
{2 copy gt{exch}if pop}FmBD systemdict/pdfmark known{/fMAB true def/FmPD
/pdfmark load def/FmPT/fm_s load def currentdistillerparams/CoreDistVersion get
2000 ge{/FmPD2/pdfmark load def/FmPA{mark exch/Dest exch 5 3 roll/View[/XYZ
null 6 -2 roll FmDC exch pop null]/DEST FmPD}FmBD}{/FmPD2/cleartomark load def
/FmPA{pop pop pop}FmBD}ifelse}{/fMAB false def/FmPD/cleartomark load def/FmPD2
/cleartomark load def/FmPT/pop load def/FmPA{pop pop pop}FmBD}ifelse/FmDC{
transform fMdm itransform cvi exch cvi exch}FmBD/FmBx{dup 3 index lt{3 1 roll
exch}if 1 index 4 index lt{4 -1 roll 3 1 roll exch 4 1 roll}if}FmBD/fmgS 32
array def/fMgt 0 def/fMtp 0 def/fmSG{fmgS fMgt get dup null eq{pop fmgS fMgt 10
dict dup 4 1 roll put}if 3 1 roll put}FmBD/fmGG{fMgt -1 -1{fmgS exch get dup
null ne{2 copy exch known{2 copy exch get/_notdef ne{exch get dup exit}if}if}if
pop}for pop}FmBD/gsave{FrameMacDict begin FmG/fMgt fMgt 1 add def fmgS fMgt get
dup null eq{pop}{dup dup{pop/_notdef put dup}forall pop pop}ifelse end}fmPE
/grestore{FrameMacDict begin fMgt fMtp gt{/fMgt fMgt 1 sub def}if FmR null fmCN
end}fmPE/grestoreall{FrameMacDict begin/fMgt fMtp def fm_l null fmCN end}fmPE
/save{FrameMacDict/fm_v get exec FrameMacDict begin/fMgt fMgt 1 add def fmgS
fMgt get dup null eq{pop}{dup dup{pop/_notdef put dup}forall pop pop}ifelse
/fMtp fMgt def end}fmPE/fMND F def/fMCC null fmSG/fMOP F fmSG/fMKO F fmSG/fmRY{
1 exch sub 3 1 roll 1 exch sub 3 1 roll 1 exch sub 3 1 roll 3 copy 2 copy le{
pop}{exch pop}ifelse 2 copy le{pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1
roll 7 1 roll sub 6 1 roll sub 5 1 roll sub 4 1 roll}fmSG/fmkn{2 copy known{get
T}{pop pop false}ifelse}FmBD/fmfp{exch currentfont dup/FontMatrix get exch
/FontInfo fmkn{T}{currentfont/df fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix get
mtx concatmatrix exch T}{pop pop pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1
roll fmkn{exch 0 3 1 roll dtransform neg exch pop exch pop}{pop exec}ifelse}{
exec}ifelse}FmBD/fmdl{3 index 16 and 0 ne{FmG currentlinewidth 2. div dup
rmoveto currentpoint newpath moveto 2 index 0 rlineto fm_t FmR}if 3 index 24
and 0 ne{FmG currentrgbcolor dup 4 1 roll eq 3 1 roll eq and{1 currentgray sub
setgray}{1 setgray}ifelse 2 index 0 rlineto fm_t FmR FmG 2 index 0 rlineto
strokepath .24 setlinewidth fm_t FmR}{2 index 0 rlineto fm_t 0 0 moveto}ifelse}
FmBD/FmUl{FmG/fM2 fmXD currentpoint/UnderlineThickness{fM2 15 div}fmfp abs dup
setlinewidth/fM1 fmXD 4 index 1 and 0 ne{newpath 2 copy moveto 0
/UnderlinePosition{fM2 10 div neg}fmfp neg rmoveto fmdl}if 4 index 2 and 0 ne{
newpath 2 copy moveto 0/XHeight{FmG newpath 0 0 moveto(x)F charpath flattenpath
pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop fM2 2. mul 3. div neg}if}fmfp
2. div rmoveto fmdl}if 4 index 4 and 0 ne{newpath 2 copy moveto 0/CapHeight{FmG
newpath 0 0 moveto(H)F charpath flattenpath pathbbox 4 -1 roll pop pop pop FmR
dup 0 eq{pop fM2 3. mul 4. div neg}if}fmfp fM1 sub rmoveto fmdl}if pop pop pop
pop pop FmR}FmBD/FmTx{/fM3 fmXD/fM2 fmXD/fM1 fmXD 0 32 fM1 fM3 stringwidth pop
fM2 sub fM3 length div sub 0 fM3 fm_y}FmBD/fMN 0 def/fMC 1 def/fMM 2 def/fMY 3
def/fMK 4 def/fMS 5 def/fMNg 0 currenttransfer exec .5 gt def/fMCM fMN def/fMJK
0 def/fMJY 0 def/fMJM 0 def/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1 def/fMCG 1
def/fMPt null def/fMCK[0 0 0 1 0 0 0]def/fmCH{fML1{14 dict dup begin fMCl{
/HalftoneType 2 def currentcolorscreen[/GraySpotFunction/GrayAngle
/GrayFrequency/BlueSpotFunction/BlueAngle/BlueFrequency/GreenSpotFunction
/GreenAngle/GreenFrequency/RedSpotFunction/RedAngle/RedFrequency]{exch def}
forall}{/HalftoneType 1 def currentscreen[/SpotFunction/Angle/Frequency]{exch
def}forall}ifelse statusdict/checkscreen known{statusdict/accuratescreens get
exec}{F}ifelse/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{
fML1{begin statusdict/checkscreen known{currentdict/AccurateScreens known{
AccurateScreens}{F}ifelse statusdict/setaccuratescreens get exec}if
HalftoneType 1 eq{Frequency Angle currentdict/SpotFunction get setscreen}{
HalftoneType 2 eq{fMCl{RedFrequency RedAngle currentdict/RedSpotFunction get
GreenFrequency GreenAngle currentdict/GreenSpotFunction get BlueFrequency
BlueAngle currentdict/BlueSpotFunction get GrayFrequency GrayAngle currentdict
/GraySpotFunction get setcolorscreen}{GrayFrequency GrayAngle currentdict
/GraySpotFunction get setscreen}ifelse}if}ifelse end}{sethalftone}ifelse}FmBD
/FmCS{14 dict begin/HalftoneType 2 def/AccurateScreens exch def
/GraySpotFunction exch def/GrayAngle exch def/GrayFrequency exch def
/BlueSpotFunction exch def/BlueAngle exch def/BlueFrequency exch def
/GreenSpotFunction exch def/GreenAngle exch def/GreenFrequency exch def
/RedSpotFunction exch def/RedAngle exch def/RedFrequency exch def currentdict
dup end/fMPH exch def fmSH}FmBD/FmSS{5 dict begin/HalftoneType 1 def
/AccurateScreens exch def/SpotFunction exch def/Angle exch def/Frequency exch
def currentdict dup end/fMPH exch def fmSH}FmBD/fMPH fmCH def/fmcp{/FmPr2 exch
cvlit def/FmPr1 exch cvlit def/FmPrn FmPr1 length FmPr2 length add array def
FmPrn 0 FmPr1 putinterval FmPrn FmPr1 length FmPr2 putinterval FmPrn cvx}FmBD
/fmEp{sub dup 0 lt{neg}if .001 le}FmBD/fmQC{2 copy 0 get exch 0 get fmEp{2 copy
1 get exch 1 get fmEp{2 copy 2 get exch 2 get fmEp{3 get exch 3 get fmEp}{pop
pop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/fmQR{2 copy 4 get exch 0
get fmEp{2 copy 5 get exch 1 get fmEp{6 get exch 2 get fmEp}{pop pop F}ifelse}{
pop pop F}ifelse}FmBD/FmSC{/fMCM fmXD/fMJB fmXD/fMJG fmXD/fMJR fmXD/fMJK fmXD
/fMJY fmXD/fMJM fmXD/fMJC fmXD fmCC}FmBD/FmSP{/fMCM fmXD fmCC}FmBD
/FrameSetSepColors{FrameMacDict begin[exch 1 add 1 roll]/fMSC exch def end}fmBi
def/fmLC{fMSC{exch dup 3 -1 roll fmQC{pop T exit}if}forall dup T ne{pop F}if}
FmBD/fmLR{fMSC{exch dup 3 -1 roll fmQR{pop T exit}if}forall dup T ne{pop F}if}
FmBD/fmLM{fMSC{exch dup 3 -1 roll dup 7 get 3 -1 roll eq{exch pop T exit}{pop}
ifelse}forall dup T ne{pop F}if}FmBD/fmCN{fMND F fMCM fMN ne{/fMOP fmGG{/fMKO
fmGG{pop T}if}if}if dup/fMND exch def{pop pop}{exch dup null ne{exch pop dup
type dup/integertype eq exch/realtype eq or{fm_g}{setcolor}ifelse}{pop{1 fm_g}
if}ifelse}ifelse}FmBD/fill{FrameMacDict begin fMND{newpath}{fm_f}ifelse end}
fmPE/eofill{FrameMacDict begin fMND{newpath}{fm_e}ifelse end}fmPE/stroke{
FrameMacDict begin fMND{newpath}{fm_t}ifelse end}fmPE/imagemask{FrameMacDict
begin fMND{FmG nulldevive fm_m FmR}{fm_m}ifelse end}fmPE/fmNX{load fMND{FmG
fMa2 currentmatrix end nulldevice setmatrix exec currentpoint FrameMacDict/FmR
get exec moveto}{end exec}ifelse}fmBi def/show{FrameMacDict begin/fm_s fmNX}
fmPE/ashow{FrameMacDict begin/fm_a fmNX}fmPE/widthshow{FrameMacDict begin/fm_w
fmNX}fmPE/awidthshow{FrameMacDict begin/fm_y fmNX}fmPE/kshow{FrameMacDict begin
/RealKshow fmNX}fmPE/image{FrameMacDict begin fMCM fMN ne fMCM fMK ne and{FmG
/fMOP fmGG{nulldevice}{fMNg{{pop 0}}{{pop 1}}ifelse settransfer}ifelse/fm_i
load end exec FmR}{/fm_i load end exec}ifelse}fmPE/fMGM T def/fMBM F def
/setcustomcolor where{pop}{/findcmykcustomcolor{0 0 0 4 -1 roll 8 array astore}
fmPE/findrgbcustomcolor{FrameMacDict begin 4 1 roll 3 copy/fmRY fmGG exec 8 4
roll 4 -1 roll 8 array astore end}fmPE/findgraycustomcolor{0 0 0 exch 1 exch
sub exch findcmykcustomcolor}fmPE/findhsbcustomcolor{FrameMacDict begin 4 1
roll gsave fm_h currentrgbcolor grestore 4 -1 roll findrgbcustomcolor end}fmPE
/setcustomcolor{FrameMacDict begin dup type dup/integertype eq exch/realtype eq
or not{1.0}if exch dup/fMCC exch fmSG/fMBM F def fMCM fMN eq{0 4 getinterval
aload pop 4{4 index mul 4 1 roll}repeat fmSK pop}{dup{7 get}stopped{pop 4 get}
if fmLM{exch pop 0 4 getinterval aload pop fMCM fMS eq{fMJK eq exch fMJY eq and
exch fMJM eq and exch fMJC eq and{1 exch sub F}{pop 1 T}ifelse}{5{pop}repeat 1
T}ifelse}{fMCM fMK eq{3 get F}{fMCM fMY eq{2 get F}{fMCM fMM eq{1 get F}{fMCM
fMC eq{0 get F}{pop 0 T}ifelse}ifelse}ifelse}ifelse 3 1 roll mul 1 exch sub
exch}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/setoverprint{FrameMacDict begin
/fMOP exch fmSG null fmCN end}fmPE/currentoverprint{FrameMacDict begin/fMOP
fmGG end}fmPE}ifelse/fmCC{fMCM fMN eq{fMGM fML1 or not{[/Pattern[/DeviceCMYK]]
setcolorspace fMCK 0 4 getinterval aload pop fMPt setcolor}{fMCK 3 get 1.0 ge{
fMCG fm_g}{fMAB not fMCl fMGM and and{0 1 3{fMCK exch get 1 fMCG sub mul}for
fmSK}{4 1 6{fMCK exch get fMGM{1 exch sub 1 fMCG sub mul 1 exch sub}{1.0 lt{
fMCG}{1}ifelse}ifelse}for fm_r}ifelse}ifelse}ifelse null/fMKO F fmSG}{fMBM{fMCG
F}{fMCK 0 4 getinterval aload fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch
fMJM eq and exch fMJC eq and{fMCG F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{
fMCM fMK eq{fMCG 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY
eq{pop fMCG 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop
pop fMCG 1.0 exch sub mul 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop fMCG
1.0 exch sub mul 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse}ifelse/fMKO exch fmSG fMGM fML1 or not{[/Pattern[/DeviceGray]]
setcolorspace fMPt}{fMGM not fML1 and{dup 1 lt{pop fMCG}if}if}ifelse}ifelse
fmCN}FmBD/setgray{FrameMacDict begin fMCM fMN eq{F}{fMCM fMK eq{F}{fMCM fMS eq
fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{F}{pop 1 T}ifelse}ifelse}ifelse/fMKO
exch fmSG fmCN end}fmPE/setrgbcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{
fm_r}{3 copy[4 1 roll]fmLR{fMCM fMS eq{fMJB eq exch fMJG eq and exch fMJR eq
and{0 F}{1 T}ifelse}{pop pop pop 1 T}ifelse}{/fmRY fmGG exec fMCM fMK eq{1.0
exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop
F}{fMCM fMM eq{pop pop 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop 1.0
exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch
fmSG fmCN}ifelse end}fmPE/sethsbcolor{FrameMacDict begin fMCM fMN eq{fm_h}{fm_h
currentrgbcolor setrgbcolor}ifelse end}fmPE/setcmykcolor where{pop/fmSK
/setcmykcolor load def}{/fmSK{4 1 roll 3{3 index add 0 fmax 1 fmin 1 exch sub 3
1 roll}repeat fm_r pop}FmBD}ifelse/currentcmykcolor where{pop}{
/currentcmykcolor{FrameMacDict begin currentrgbcolor/fmRY fmGG exec end}fmPE}
ifelse/setcmykcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{fmSK}{4 copy[5 1
roll]fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and exch fMJC eq
and{0 F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{fMCM fMK eq{1.0 exch sub 4 1
roll pop pop pop dup 1.0 ge}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop dup
1.0 ge}{fMCM fMM eq{pop pop 1.0 exch sub exch pop dup 1.0 ge}{fMCM fMC eq{pop
pop pop 1.0 exch sub dup 1.0 ge}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/fMFl[0 .1 .3 .5 .7 .9 .97 1<
0f1e3c78f0e1c387><0f87c3e1f0783c1e><cccccccccccccccc><ffff0000ffff0000><814224
1818244281><0102040810204080><8040201008040201>]def fML1{/patScreenDict 7 dict
dup begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c1e>[
135{pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff0000
ffff0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}dup
.75 2 sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<8040201008
040201>[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/fMPP 5 dict dup begin<0f87
c3e1f0783c1e>{3 setlinewidth -1 -1 moveto 9 9 lineto fm_t 4 -4 moveto 12 4
lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0f1e3c78f0e1c387>{3 setlinewidth
-1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12 moveto 12 4
lineto fm_t}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t
-1 -1 moveto 9 9 lineto fm_t}FmBD<8040201008040201>{1 setlinewidth -1 -1 moveto
9 9 lineto fm_t 4 -4 moveto 12 4 lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<
0102040810204080>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4
lineto fm_t 4 12 moveto 12 4 lineto fm_t}FmBD end def/fMPD 15 dict dup begin
/PatternType 1 def/PaintType 2 def/TilingType 3 def/BBox[0 0 8 8]def/XStep 8
def/YStep 8 def/PaintProc{begin fMPP fmBS known{fMPP fmBS get exec}{8 8 T[1 0 0
-1 0 8]fmBS fm_m}ifelse end}FmBD end def}ifelse/fMdp 72 0 fMdm dtransform dup
mul exch dup mul add sqrt def/freq fMdp dup 72 div round dup 0 eq{pop 1}if 8
mul div def/sangle 1 0 fMdm dtransform exch atan def sangle fMa2 rotate fMdm
fMa2 concatmatrix dup 0 get/sflipx exch def 3 get/sflipy exch def fML1{/fmgF{
fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPM fML1{{dup patScreenDict exch
known{patScreenDict exch get aload pop freq mul 5 2 roll fMa2 currentmatrix 1
get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgF sflipy 2 fmgF mul}{sflipx 0
fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{pop}ifelse fMNg{{neg}fmcp}if
bind systemdict/setscreen get exec}{/fmBS fmXD/fM1B 0 def/fM0B 0 def freq 0
fMa2 currentmatrix 1 get 0 ne{90 add/pflipx sflipx 1 fmgF def/pflipy sflipy 2
fmgF def}{/pflipx sflipx 0 fmgF def/pflipy sflipy 3 fmgF neg def}ifelse{pflipy
mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1 add 2 div 8 mul cvi def/yindex yy 1
add 2 div 8 mul cvi def fmBS yindex xindex 8 idiv add get 1 7 xindex 8 mod sub
bitshift and 0 ne fMNg{not}if{/fM1B fM1B 1 add def 1}{/fM0B fM0B 1 add def 0}
ifelse}setscreen fM0B fM0B fM1B add div fMNg{1.0 exch sub}if}ifelse/fMCG exch
def/fMGM F def fmCC}}{/fMPC 8 dict def{dup fMPC exch known{fMPC exch get}{dup
fMPD/fmBS 3 -1 roll put fMPD matrix makepattern dup fMPC 4 -1 roll 3 -1 roll
put}ifelse/fMCG 0 def/fMPt exch def/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{
/fMGM T def fML1{fMPH fmSH}if}if/fMCG exch def fmCC}FmBD/FmP{fMFl exch get dup
type/stringtype eq{fmPM}{fmgr}ifelse}FmBD/FmK{fMCK astore pop/fMBM F def fmCC}
FmBD/FmFB{0 0 0 1 0 0 0 fMCK astore pop/fMCG 0 def/fMBM T def fmCC}FmBD/fMOx
matrix def fMOx currentmatrix pop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD
/FmIO{fmRM}FmBD/FmEO{FmOs restore}FmBD/fm3R[{.3 mul add 1}bind{.59 mul add 2}
bind{.11 mul add round cvi fMs exch fMi exch put/fMi fMi 1 add def 0 0}bind]def
/fm31{/fMi 0 def 0 exch 0 exch{exch fm3R exch get exec}forall pop pop fMs}FmBD
/fm41{0 exch 4 exch{exch 1 sub dup 0 eq{pop 4 1 roll 3 index add 255 fmin 255
exch sub .11 mul 3 1 roll 3 index add 255 fmin 255 exch sub .59 mul 3 1 roll 3
index add 255 fmin 255 exch sub .3 mul add add 255 fmin round cvi fMs exch 3
index exch put pop 1 add 4}if}forall pop pop fMs}FmBD fML1{/Fmi{save userdict
/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD
/fMRC fmXD/fMGC fMGL 1 add array def/setcolortransfer where{pop
currentcolortransfer/gryt fmXD/blut fmXD/grnt fmXD/redt fmXD 0 1 fMGL{/fMIx
fmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNC fMIx get sub def/fMUY 1 fMBC fMIx
get sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU fMk currentundercolorremoval
exec def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt exec put fMNC fMIx 1 0 fMUM
FmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY FmU sub fmax sub blut exec
put fMGC fMIx 1 fMk currentblackgeneration exec sub gryt exec put}for{fMGL mul
cvi fMRC exch get}{fMGL mul cvi fMNC exch get}{fMGL mul cvi fMBC exch get}{fMGL
mul cvi fMGC exch get}setcolortransfer{pop 0}setundercolorremoval{}
setblackgeneration/fM9 T def}{0 1 fMGL{fMGC exch dup dup fMRC exch get .3 mul
exch dup fMNC exch get .59 mul exch fMBC exch get .11 mul add add put}for{fMGL
mul cvi fMGC exch get}currenttransfer fmcp settransfer}ifelse}{dup length 1 sub
/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}currenttransfer fmcp
settransfer}ifelse}{{{1 exch sub}currenttransfer fmcp settransfer}if}ifelse/fM5
fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if
/fM18 fM8 string def fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]{currentfile
fM18 fM5{readstring}{readhexstring}ifelse pop}fM9{{fM18}{fM18}T 3 colorimage}{
fm_i}ifelse fM7 restore}FmBD}{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{
dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD[/Indexed/DeviceRGB
fMGL{dup fMRC exch get exch dup fMNC exch get exch fMBC exch get}]setcolorspace
}{dup length 1 sub/fMGL fmXD/fMGC fmXD[/Indexed/DeviceGray fMGL{fMGC exch get}]
setcolorspace}ifelse}{1 4 index bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGray
fMGL 5 -1 roll{{fMGL div 1 exch sub}}{{fMGL div}}ifelse]setcolorspace}ifelse
/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale
}if/fM18 fM8 string def 7 dict begin/ImageType 1 def/Width fM4 def/Height fM3
def/ImageMatrix[fM4 0 0 fM3 fM4 2 div fM3 2 div]def/DataSource{currentfile fM18
fM5{readstring}{readhexstring}ifelse pop}def/BitsPerComponent fM6 def/Decode[0
fMGL]def currentdict end fm_i fM7 restore}FmBD}ifelse/Fmci{save userdict/fM7 3
-1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD/fM18 fM8 string def
/fMs fM18 0 fM18 length 3 idiv getinterval def translate rotate scale{-1 1
scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{currentfile fM18 fM5
{readstring}{readhexstring}ifelse pop}F 3 colorimage}{{currentfile fM18 fM5{
readstring}{readhexstring}ifelse pop fm31}fm_i}ifelse fM7 restore}FmBD/Fmc4{
save userdict/fM7 3 -1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD
/fM18 fM8 string def/fMs fM18 0 fM18 length 4 idiv getinterval def translate
rotate scale{-1 1 scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop}F 4 colorimage}{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop fm41}fm_i}ifelse fM7
restore}FmBD fML1{/fmAn{transform round .5 sub exch round .5 sub exch
itransform}FmBD/fmAc{transform round 1.5 sub exch round 1.5 sub exch itransform
}FmBD/fmDn{dtransform round exch round exch idtransform}FmBD/fmLn{0 dtransform
exch cvi 2 idiv 2 mul .1 add exch idtransform pop}FmBD/FmCv{fmDn 6 2 roll fmDn
6 2 roll fmDn 6 2 roll rcurveto}FmBD}{T setstrokeadjust/fmAn{}FmBD/fmAc{}FmBD
/fmDn{}FmBD/fmLn{}FmBD/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn moveto}FmBD/M{moveto}
FmBD/N{0 rmoveto}FmBD/S{fm_s}FmBD/A{0 exch fm_a}FmBD/W{0 exch 32 exch fm_w}FmBD
/X{0 exch 0 32 5 2 roll fm_y}FmBD/fmQP{fML1 fMGM or not{FmG dup 1 fm_g exec FmR
}if exec}FmBD/FmB{newpath fmAn moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}
FmBD/FmSo{fmLn setlinewidth setlinecap{fm_t}fmQP 0 0 moveto}FmBD/FmS{fmLn
setlinewidth closepath{fm_t}fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth
setlinecap{closepath}if setdash{fm_t}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{FmG{
fm_e}fmQP FmR}FmBD/fmq{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{fm_t}fmQP
0 0 moveto}FmBD/FmqF{fmq FmG{fm_f}fmQP FmR}FmBD/FmKp{{currentpoint}stopped{F 5
1 roll}{T 7 3 roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{
currentpoint}stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{FmG
newpath fmAn translate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3
roll arc closepath{fm_f}fmQP FmR}FmBD/FmAP{FmG{setdash}if fmLn setlinewidth
setlinecap fmSM newpath 2 index 2 div add exch 3 index 2 div sub exch fmAn 2
index 2 div sub exch 3 index 2 div add exch translate rotate scale 0.0 0.0 1.0
5 3 roll exch arcn{closepath}if fmRM{fm_t}fmQP FmR}FmBD/FmST{FmG fmAn translate
.3 fmLn setlinewidth 0 setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc
fm_f 0 fm_g 0 0 10 0 360 arc fm_t 36{1 0 moveto 0 0 10 -2.5 2.5 arc fm_f 10
rotate}repeat FmR}FmBD/FmSL{FmG fmAn translate .25 fmLn setlinewidth 0
setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0 fm_g 10 .5 fmLn
neg .1{0 0 3 -1 roll 0 360 arc fm_t}for FmR}FmBD/FrameEr where{pop}{userdict
/FrameEr(\000)put}ifelse/fMSJ 100 string def/fmXC{userdict/fMSi 2 index put end
{countdictstack userdict begin/showpage{}def/FmDictStackDepth exch def count
/FmStackDepth exch def}if userdict/fMSuccessfull false put currentfile cvx
stopped pop fMSuccessfull not{/$brkpage where{stop}if systemdict/clear get exec
userdict/FrameEr get 0 1 put FrameMacDict begin FmG systemdict/initmatrix get
exec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}if
exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefont
setfont FrameEr1 fm_s( \()fm_s $error begin errorname 20 string cvs fm_s(, )
fm_s/command load 128 string cvs fm_s end(\))fm_s FrameEr2 print flush
FrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}if
not{exit}if(EndFrame4Picture)eq{exit}if}loop grestore end}if userdict
/fMSuccessfull false put FrameMacDict/fmIR get exec}fmBi def/FmEP{save userdict
/fM7 3 -1 roll put fMEd{userdict 3 1 roll put}forall setoverprint{fMN FmSP}if[
/fMef/fMet/fMeh/fMew/fMey/fMex/fMei/fMej/fMek/fMel]{fmXD}forall fMex fMey
translate fMet rotate fMew fMeh scale fMef{-1 1 scale}if 1 fMej fMel sub div 1
fMek fMei sub div scale fMej fMel add 2 div neg fMei fMek add 2 div neg
translate 0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit[
]0 setdash newpath fML1 not{F setstrokeadjust}if T fmXC}FmBD/FmPI{newpath 0 0
moveto F fmXC}FmBD/FmPc{save userdict/fM7 3 -1 roll put newpath 3 index neg 3
index neg translate 1 -1 scale 0.0 0.0 moveto T fmXC}FmBD/fmIR{fMSi{fM7 type
/savetype eq{end/FmDictStackDepth where{pop countdictstack FmDictStackDepth sub
dup 0 gt{{end}repeat}{pop}ifelse count FmStackDepth sub dup 0 gt{{pop}repeat}{
pop}ifelse}if fM7 restore}if}if FrameMacDict begin}FmBD userdict
/EndFrame4Picture{userdict/fMSi 3 -1 roll put userdict/fMSuccessfull true put
stop}fmBi put/alphaimage where{pop}{/alphaimage{1 ne{limitcheck}if not{
limitcheck}if pop image}fmPE}ifelse/fmDE{systemdict/initgraphics get exec
clippath{pathbbox}stopped{100 100 512 692}if exch pop add 2. div newpath moveto
(Courier-BoldOblique)findfont 18 scalefont setfont currentpoint 2 copy FrameEr3
fm_s 20 sub 2 copy moveto FrameEr4 fm_s 20 sub 2 copy moveto(\()fm_s statusdict
/jobname get fm_s(\))fm_s 20 sub moveto FrameEr5 fm_s showpage}FmBD/cd where{
dup/cd get/FmRealcd fmXD/cd{FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if
/FmRealcd load end exec}fmBi put}{/endp where{dup/endp get/fMRE fmXD/endp{
FrameMacDict/fMRE get exec FrameEr 0 get 0 ne{FrameMacDict begin currentfile
fMSJ{readline}stopped{pop exch pop true}if pop(%%Trailer)eq{fmDE}if end}if}fmBi
put}if}ifelse systemdict/setpacking known{fMSP setpacking}if end
%%EndProcSet
%%FRMSetup
FrameMacDict begin
/FrameEr1(PostScript error)def
/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def
/FrameEr3(FrameMaker has detected one or more)def
/FrameEr4(PostScript errors in this document.)def
/FrameEr5(Please check your output.)def
end
%%FRMEndSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 1 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
0 0 :M
f0_24 sf
( )S
6 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.327 62 M (PCI Bus Binding to:)S
196.993 149 M (IEEE Std 1275-1994)S
207.681 178 M (Standard for Boot)S
151.366 207 M (\(Initialization Configuration\))S
249.701 236 M (Firmware)S
239.005 352 M (Revision 1.6)S
FmE
6 0 :M
f1_24 sf
( )S
12 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.995 410 M (DRAF)S
(T)S
FmE
12 0 :M
f0_24 sf
( )S
18 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214.023 468 M (2)S
(4 October, 1995)S
0.502 0.502 0 0.498 0 0 0.502 FmK
56 336 2 140 FmqF
FmE
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 2 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
18 0 :M
FrMacBegin
0 FmP
0 FmSP
0.502 0.502 0 0.498 0 0 0.502 FmK
38 46 2 10 FmqF
FmE
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 3 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
18 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
18 0 :M
0 G
f0_12 sf
( )S
21 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
21 0 :M
f2_12 sf
( )S
24 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (1)S
FmE
24 0 :M
f4_12 sf
( )S
31 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
31 0 :M
f0_10 sf
( )S
33 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.655 52.667 M (Foreword by the Chairman of the IEEE 1275 Working Group)S
FmE
34 0 :M
f2_10 sf
( )S
36 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.851 64.667 M (\(This foreword is not a part of the Specification.\))S
FmE
36 0 :M
f0_10 sf
( )S
38 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 94.667 M (Introduction)S
FmE
39 0 :M
f2_10 sf
( )S
41 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 110.667 M 0.228(Firmware is the ROM-based software that controls a computer between the time it is turned on and the time the)W
76 122.667 M -0.341(primary operating system takes control of the machine. Firmware\'s responsibilities include testing and initializing)W
76 134.667 M 0.184(the hardware, determining the hardware configuration, loading \(or booting\) the operating system, and providing)W
76 146.667 M (interactive debugging facilities in case of faulty hardware or software.)S
FmE
41 0 :M
f0_10 sf
( )S
43 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 176.667 M (Historical Perspective)S
FmE
44 0 :M
f2_10 sf
( )S
46 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 192.667 M -0.281(Historically, firmware designs have been proprietary and often specific to a particular bus or instruction set archi-)W
76 204.667 M -0.429(tecture \(ISA\). This need not be the case. Firmware can be designed to be machine-independent and easily portable)W
76 216.667 M 0.112(to different hardware. There is a strong analogy with operating systems in this respect. Prior to the advent of the)W
76 228.666 M -0.139(portable UNIX operating system in the mid-seventies, the prevailing wisdom was that operating systems must be)W
76 240.666 M -0.349(heavily tuned to a particular computer system design and thus effectively proprietary to the vendor of that system.)W
76 258.666 M -0.37(The )W
FmE
46 0 :M
f3_10 sf
( )S
48 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
93.677 258.666 M -0.37(IEEE Std 1275-1994 Standard for Boot \(Initialization Configuration\), Core Requirements and Practices)W
FmE
49 0 :M
f2_10 sf
( )S
51 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
507.318 258.666 M -0.37(  \(re-)W
76 270.666 M -0.471(ferred to in the remainder of this document as Open Firmware\) specification is based on Sun Microsystem\'s Open-)W
76 282.666 M 0.738(Boot firmware. The OpenBoot design effort began in 1988, when Sun was building computers based on three)W
76 294.666 M -0.206(different processor families, thus OpenBoot was designed from the outset to be ISA-independent \(independent of)W
76 306.666 M 0.296(the Instruction Set Architecture\). The first version of OpenBoot was introduced on Sun\'s SPARCstation 1 com-)W
76 318.666 M 0.27(puters. Based on experience with those machines, OpenBoot version 2 was developed, and was first shipped on)W
76 330.666 M (SPARCstation 2 computers. This standard is based on OpenBoot version 2.)S
FmE
51 0 :M
f0_10 sf
( )S
53 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 360.666 M (Purpose and Features of the Open Firmware Specification)S
FmE
54 0 :M
f2_10 sf
( )S
56 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 376.666 M (Open Firmware has the following features:)S
94 392.666 M -0.361(Mechanism for loading and executing programs \(such as operating systems\) from disks, tapes, network inter-)W
94 404.666 M (faces, and other devices.)S
94 420.666 M (ISA-independent method for identifying devices \"plugged-in\" to expansion buses, and for providing firm-)S
94 432.666 M (ware and diagnostics drivers for these devices.)S
94 448.666 M (An extensible and programmable command language based on the Forth programming language.)S
94 464.666 M (Methods for managing user-configurable options stored in non-volatile memory.)S
94 480.666 M (A \"call back\" interface allowing other programs to make use of Open Firmware services.)S
94 496.666 M (Debugging tools for hardware, firmware, firmware drivers, and system software.)S
FmE
56 0 :M
f0_10 sf
( )S
58 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 526.666 M (Purpose of this Bus Binding)S
FmE
59 0 :M
f2_10 sf
( )S
61 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 542.666 M -0.063(This document specifies the application of Open Firmware to the PCI Local Bus, including PCI-specific require-)W
76 554.666 M (ments and practices for address format, interrupts, probing, and related properties and methods.)S
76 572.666 M -0.222(The core requirements and practices specified by Open Firmware must be augmented by system-specific require-)W
76 584.666 M 0.168(ments to form a complete specification for the firmware for a particular system. This document establishes such)W
76 596.666 M (additional requirements pertaining to PCI.)S
FmE
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 4 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
61 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
61 0 :M
f0_12 sf
( )S
64 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
64 0 :M
f2_12 sf
( )S
67 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (2)S
FmE
67 0 :M
f4_12 sf
( )S
74 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
74 0 :M
f0_10 sf
( )S
76 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 52.667 M (Task Group Members)S
FmE
77 0 :M
f2_10 sf
( )S
79 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 68.667 M (The following individuals were members of the Task Group that produced this document:)S
58 84.667 M (Ron Hochsprung, Apple Computer, Inc.)S
58 100.667 M (Mitch Bradley, FirmWorks \(Chair, IEEE P1275 Working Group\))S
58 116.667 M (David Kahn, Sun Microsystems, Inc. \(Vice Chair, IEEE P1275 Working Group\))S
58 148.667 M (TRADEMARKS)S
FmE
79 0 :M
f0_10 sf
( )S
81 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 164.667 M (Sun Microsystems)S
FmE
82 0 :M
f2_10 sf
( )S
84 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136.032 164.667 M ( is a registered trademark of Sun Microsystems, Inc. in the United States and other countries.)S
FmE
84 0 :M
f0_10 sf
( )S
86 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 180.667 M (OpenBoot)S
FmE
87 0 :M
f2_10 sf
( )S
89 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.333 180.667 M ( is a trademark of Sun Microsystems, Inc.)S
FmE
89 0 :M
f0_10 sf
( )S
91 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 196.667 M (UNIX)S
FmE
92 0 :M
f2_10 sf
( )S
94 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
83.547 196.667 M ( is a registered trademark of UNIX System Laboratories, Inc.)S
FmE
94 0 :M
f0_10 sf
( )S
96 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 212.667 M (SPARC)S
FmE
97 0 :M
f2_10 sf
( )S
99 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
91.325 212.667 M -0.34( is a registered trademark of SPARC International, Inc. Products bearing the SPARC trademark are based)W
58 224.666 M (on an architecture developed by Sun Microsystems, Inc.)S
FmE
99 0 :M
f0_10 sf
( )S
101 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 240.666 M (SPARCstation)S
FmE
102 0 :M
f2_10 sf
( )S
104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
120.207 240.666 M ( is a trademark of SPARC International, Inc., licensed exclusively to Sun Microsystems, Inc.)S
58 256.666 M -0.561(All other products or services mentioned in this document are identified by the trademarks, service marks, or prod-)W
58 268.666 M 1.103(uct names as designated by the companies who market those products. Inquiries concerning such trademarks)W
58 280.666 M (should be made directly to those companies.)S
58 296.666 M (The latest version of this binding may be found in the Bus Supplements area of the Web page at:)S
FmE
104 0 :M
f4_10 sf
( )S
110 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 312.666 M 0 0 204(http://playground.sun.com/pub/1275)FmTx
FmE
110 0 :M
f0_10 sf
( )S
112 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 349.666 M (Revision History)S
58 365.666 M (Revision 0.1)S
20.337 N (Oct. 7, 1993)S
FmE
113 0 :M
f2_10 sf
( )S
115 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 365.666 M 0.367(First revision distributed outside of task group \(the number 0.1 did)W
238 375.666 M (not appear on  the cover\).)S
FmE
115 0 :M
f0_10 sf
( )S
117 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 389.666 M (Revision 0.2)S
20.337 N (Oct. 28, 1993)S
FmE
118 0 :M
f2_10 sf
( )S
120 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 389.666 M 0.46(Changed the designator for 64-bit memory space from \"M\" to \"x\".)W
238 399.666 M -0.143(Changed the parts of the specification related to )W
-0.143(PCI-to-PCI b)W
(ridges)S
238 409.666 M (to reflect the 0.4 bridge architecture spec.)S
FmE
120 0 :M
f0_10 sf
( )S
122 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 423.666 M (Revision 1.0)S
20.337 N (April 14, 1994)S
FmE
123 0 :M
f2_10 sf
( )S
125 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 423.666 M 0.445(Changed references from P1275 to Open Firmware.  Changed size)W
238 433.666 M (of fields for I/O address representations to reflect PCI architecture.)S
FmE
125 0 :M
f0_10 sf
( )S
127 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 447.666 M (Revision 1.1 )S
17.837 N (June 28, 1994)S
FmE
128 0 :M
f2_10 sf
( )S
130 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 447.666 M (Added \'t\'-bit for aliasing, and discussion of \"hard-decode\" cases.)S
FmE
130 0 :M
f0_10 sf
( )S
132 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 461.666 M (Revision 1.2)S
20.337 N (August 7, 1994)S
FmE
133 0 :M
f2_10 sf
( )S
135 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 461.666 M -0.351(Added note about DD encoding.  Added new standard properties for)W
238 471.666 M -0.269(those of draft Rev 2.1 PCI spec.  Deleted enabling of Memory space)W
238 481.666 M (at post-probe.  Added driver encapsulation description.)S
FmE
135 0 :M
f0_10 sf
( )S
137 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 495.666 M (Revision 1.3)S
20.337 N (September 27, 1994)S
FmE
138 0 :M
f2_10 sf
( )S
140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 495.666 M 0.011(Changed generated name for Subsystem, if present.  Added rule for)W
238 505.666 M (I/O assignment.  Added discussion of )S
(PCI-to-PCI b)S
(ridge probing.)S
FmE
140 0 :M
f0_10 sf
( )S
142 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 519.666 M (Revision 1.4)S
20.337 N (December 16, 1994)S
FmE
143 0 :M
f2_10 sf
( )S
145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 519.666 M 1.45(Added Expansion ROM address assignment, \')W
FmE
145 0 :M
f4_10 sf
( )S
151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
428.673 519.666 M 0 0 6(t)FmTx
FmE
151 0 :M
f2_10 sf
( )S
153 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
434.673 519.666 M 1.45(\' bit for \"below 1)W
238 529.666 M (MB\".)S
FmE
154 0 :M
f0_10 sf
( )S
156 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 543.666 M (Revision 1.5)S
20.337 N (March 20, 1995)S
FmE
156 0 :M
f2_10 sf
( )S
158 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 543.666 M 0.09(Applied proposals 241, 242, 249, 264, 273.  Added Legacy devices)W
238 553.666 M 0.395(section, \"clock-frequencey\" property, clarified address assignment,)W
238 563.666 M (added \'t\' bit for relocatable I/O space.)S
FmE
159 0 :M
f0_10 sf
( )S
161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 577.666 M (Revision 1.6)S
20.337 N (October 12, 1995)S
FmE
161 0 :M
f2_10 sf
( )S
163 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 577.666 M (Applied proposal)S
(s)S
( 274)S
(,286, 287 and 290)S
(.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
38 290 2 47 FmqF
38 393 2 10 FmqF
38 499 2 10 FmqF
38 570.999 2 10 FmqF
FmE
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 5 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
164 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
164 0 :M
0 G
f0_12 sf
( )S
167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
167 0 :M
f2_12 sf
( )S
170 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (3)S
FmE
170 0 :M
f4_12 sf
( )S
177 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
177 0 :M
f0_12 sf
( )S
180 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 54 M (1. Overview and References)S
FmE
180 0 :M
f2_10 sf
( )S
182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 70.667 M -0.137(This specification describes the application of Open Firmware to computer systems that use the PCI Local bus as)W
76 82.667 M -0.061(defined in )W
FmE
183 0 :M
f3_10 sf
( )S
185 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118.64 82.667 M -0.061(PCI Local Bus Specification, Revision 2.)W
(1,)S
-0.061( June 1, 1995 )W
FmE
185 0 :M
f2_10 sf
( )S
187 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
344.989 82.667 M -0.061( and )W
FmE
188 0 :M
f3_10 sf
( )S
190 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
364.307 82.667 M -0.061(PCI-to-PCI B)W
-0.061(ridge Architecture Specifi-)W
76 94.667 M (cation, Revision 1.0 April 5, 1994)S
FmE
190 0 :M
f2_10 sf
( )S
192 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.98 94.667 M ( and is to be used in conjunction with those documents.)S
FmE
193 0 :M
f0_12 sf
( )S
196 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 129 M (1.1. Definitions of Terms)S
FmE
196 0 :M
f0_10 sf
( )S
198 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 145.667 M (bus controller:)S
FmE
198 0 :M
f2_10 sf
( )S
200 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
139.032 145.667 M (  a hardware device that implements a PCI bus.)S
FmE
201 0 :M
f0_10 sf
( )S
203 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 161.667 M (hard decode:)S
FmE
203 0 :M
f2_10 sf
( )S
205 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131.818 161.667 M (  a decoding which is not based upon a base register, but, rather, is fixed.)S
FmE
206 0 :M
f0_10 sf
( )S
208 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 177.667 M -0.171(PCI device:)W
FmE
208 0 :M
f2_10 sf
( )S
210 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.526 177.667 M -0.171(  a hardware device that connects to or \"plugs in\" to a PCI bus PCI function:  one of a number of log-)W
76 189.667 M -0.144(ically-independent parts of a PCI device. Many PCI devices have only one function per device; in such cases, the)W
76 201.667 M (terms \"PCI function\" and \"PCI device\" can be used interchangeably.)S
FmE
211 0 :M
f0_10 sf
( )S
213 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 219 M 0.257(PCI-to-PCI b)W
(ridge:)S
FmE
213 0 :M
f2_12 sf
( )S
216 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.275 219 M 0.309(  )W
FmE
216 0 :M
f2_10 sf
( )S
218 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.892 219 M 0.257(a hardware device that is, from an electrical standpoint, a single PCI function on one PCI)W
76 231.667 M (bus \(the \"parent\" bus\) and the bus controller of a secondary PCI bus \(the \"child\" bus\).)S
FmE
219 0 :M
f0_10 sf
( )S
221 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 247.667 M (PCI domain:)S
FmE
221 0 :M
f2_10 sf
( )S
223 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131.269 247.667 M (  a group of PCI buses connected together in a tree topology by )S
(PCI-to-PCI b)S
(ridges.)S
FmE
224 0 :M
f0_10 sf
( )S
226 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 263.667 M -0.237(relocatable region:)W
FmE
226 0 :M
f2_10 sf
( )S
228 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156.002 263.667 M -0.237(  a range of PCI address space whose base address is established by a single base address reg-)W
76 275.666 M (ister.)S
FmE
229 0 :M
f0_10 sf
( )S
231 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 291.666 M (Master PCI bus:)S
FmE
231 0 :M
f2_10 sf
( )S
233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.084 291.666 M (  within a PCI domain, the PCI bus that forms the root of the tree structure.)S
FmE
234 0 :M
f0_10 sf
( )S
236 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 307.666 M -0.004(bus node:)W
FmE
236 0 :M
f2_10 sf
( )S
238 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.388 307.666 M -0.004(  an Open Firmware device node that represents a bus controller.  In cases where a node represents the)W
76 319.666 M -0.262(interface, or \"bridge\", between one bus and another, the node is both a bus node relative to the bus it controls, and)W
76 331.666 M -0.408(a child node of its parent bus.  Note that an Open Firmware device node is not in itself a physical hardware device;)W
76 343.666 M (rather, it is a software abstraction that describes a hardware device.)S
FmE
239 0 :M
f0_10 sf
( )S
241 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 359.666 M -0.227(child node:)W
FmE
241 0 :M
f2_10 sf
( )S
243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123.27 359.666 M -0.227(  an Open Firmware device node that represents a PCI function.  Such a node can correspond to either)W
76 371.666 M 0.162(a device that is \"hardwired\" to a planar PCI bus, or to an \"add in\" expansion card that is plugged into a standard)W
76 383.666 M (PCI Expansion Connector.)S
FmE
244 0 :M
f0_12 sf
( )S
247 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 425 M (2. Bus Characteristics)S
76 460 M (2.1. Address Spaces)S
FmE
247 0 :M
f2_10 sf
( )S
249 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 476.666 M (PCI has several address spaces \(Memory, I/O, Configuration\), with different addressing characteristics.)S
FmE
249 0 :M
f0_12 sf
( )S
252 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 511 M (2.1.1. Memory Space)S
FmE
252 0 :M
f2_10 sf
( )S
254 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 527.666 M -0.144(Memory Space is the primary address space of PCI; it corresponds to traditional memory and \"memory-mapped\")W
76 539.666 M 0.314(I/O.  PCI allows for a full 64-bit address range in Memory Space; however, most devices will not require a full)W
76 551.666 M 0.01(64-bit range.  In order to provide compatibility between devices designed for 64-bit addressing and those for 32-)W
76 563.666 M 0.024(bit addressing, the 32-bit address space appears as the first 4 GB region of the 64-bit space; i.e., 64-bit addresses)W
76 575.666 M -0.006(with the 32 most-significant bits equal to 0 are used to access 32-bit devices.  64-bit initiators are required to use)W
76 587.666 M (the 32-bit address protocol for any 64-bit address in which the upper 32 bits are all 0.)S
76 605.666 M -0.388(The PCI specification requires that all of a device\'s relocatable resources must be mappable in Memory Space, i.e.)W
76 617.666 M (it is not permissible for a resource to be mappable only in I/O Space \(described below\).)S
76 635.666 M -0.233(The regions of Memory Space to which a PCI device responds are assigned dynamically during system initializa-)W
76 647.666 M 0.381(tion, by setting device base address registers in Configuration Space \(see below\).  The size of each such region)W
76 659.666 M 0.008(must be a power of two, and the assigned base address must be aligned on a boundary equal to the size of the re-)W
76 671.666 M (gion.)S
76 689.666 M -0.461(The encoding of the base address registers for Memory Space allows a resource to require address allocation with-)W
76 701.666 M 0.114(in the first 1 MB.  This requirement is reflected in the )W
FmE
255 0 :M
f5_10 sf
( )S
261 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
294.231 701.666 M 0 0 30(\"reg\")FmTx
FmE
261 0 :M
f2_10 sf
( )S
263 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
324.231 701.666 M 0.114( property entry for that base register by having the)W
FmE
263 0 :M
f4_10 sf
( )S
269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 713.666 M 0 0 18(\'t\')FmTx
FmE
269 0 :M
f2_10 sf
( )S
271 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 713.666 M ( bit set.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
56 76 2 10 FmqF
56 211 2 12 FmqF
56 241 2 10 FmqF
FmE
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 6 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
272 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
272 0 :M
0 G
f0_12 sf
( )S
275 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
275 0 :M
f2_12 sf
( )S
278 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (4)S
FmE
278 0 :M
f4_12 sf
( )S
285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
285 0 :M
f2_10 sf
( )S
287 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 52.667 M -0.058(Memory Space addressing is \"flat\" across a PCI domain, in that addresses are not transformed as they cross )W
(PCI-)S
58 64.667 M -0.081(to-PCI b)W
-0.081(ridges.  The flat address space is not necessarily limited to a single PCI domain; the PCI design attempts)W
58 76.667 M 0.154(to make it possible to have a flat address across multiple PCI domains that are peers of one another on a higher-)W
58 88.667 M (level host address bus.)S
58 106.667 M -0.237(An early revision of the PCI specification admitted the possibility that some devices might respond to fixed \(non-)W
58 118.667 M -0.495(relocatable\) address ranges. The current revision permits this behavior for VGA and IDE devices, but it is possible)W
58 130.667 M 0.519(that some other devices still behave that way.  The current specification allows devices to respond to fixed ad-)W
58 142.667 M 0.135(dresses after a system reset, but provides a standard way to disable such response, which devices are required to)W
58 154.667 M (implement.)S
FmE
288 0 :M
f0_12 sf
( )S
291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 189 M (2.1.2. I/O Space)S
FmE
291 0 :M
f2_10 sf
( )S
293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 205.667 M -0.46(I/O Space is similar to Memory Space, except that it is intended as to be used with the special \"I/O access\" instruc-)W
58 217.667 M 0.4(tions that some processors have. As with Memory Space, I/O Space addresses are assigned dynamically during)W
58 229.666 M (system initialization, and the addressing is \"flat\" across a PCI domain.)S
58 245.666 M 19.012(Relocatable I/O Space )W
FmE
293 0 :M
f3_10 sf
( )S
295 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.934 245.666 M (shall)S
FmE
296 0 :M
f2_10 sf
( )S
298 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.38 245.666 M 19.012( be allocated at addresses of the form)W
FmE
298 0 :M
f4_9 sf
( )S
303 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 257.666 M 0 0 195(aaaa.aaaa.aaaa.aaaa.aaaa.aa00.aaaa.aaaa)FmTx
FmE
303 0 :M
f2_10 sf
( )S
305 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253 257.666 M -0.238(.  This guarantees that relocatable I/O addresses will not conflict)W
58 269.666 M -0.283(with hard-decoded address that have non-zero bits in AD[9\3118].  Because )W
-0.283(PCI-to-PCI b)W
-0.283(ridges restrict I/O address)W
58 281.666 M 7.728(space to 16 bits, relocatable I/O Space across )W
7.728(PCI-to-PCI b)W
7.728(ridges )W
FmE
306 0 :M
f3_10 sf
( )S
308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
398.226 281.666 M (shall)S
FmE
308 0 :M
f2_10 sf
( )S
310 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
417.671 281.666 M 7.728( be of the form)W
FmE
311 0 :M
f4_9 sf
( )S
316 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 293 M 0 0 200(0000.0000.0000.0000.aaaa.aa00.aaaa.aaaa.)FmTx
FmE
316 0 :M
f3_10 sf
( )S
318 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 308.666 M -0.386(Note:  although the PCI specification allows 32-bit I/O Space addresses, many of the processors that have special)W
58 320.666 M -0.028(I/O access instructions present only a 16-bit I/O address.  However, Open Firmware allows for the specification)W
58 332.666 M (of the full 32-bit range.)S
FmE
318 0 :M
f2_10 sf
( )S
320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 348.666 M 0.608(PCI also allows devices to have I/O base address registers that implement only the low-order 16 bits.  I.e., the)W
58 360.666 M -0.156(upper 16 bits are assumed to be 0.  When probing, after writing all 1s, the data read back will have the high-order)W
58 372.666 M -0.046(16 bits equal to 0, while the low-order 16 bits will reflect the address space requirement.  Address space for such)W
58 384.666 M -0.15(a base register must be allocated within the first 64 KB of I/O Space.  This requirement is reflected in the )W
FmE
321 0 :M
f5_10 sf
( )S
327 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
478 384.666 M 0 0 30(\"reg\")FmTx
FmE
327 0 :M
f2_10 sf
( )S
329 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 396.666 M 0.528(property for that base register by having the )W
FmE
329 0 :M
f4_10 sf
( )S
335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.921 396.666 M 0 0 18(\'t\')FmTx
FmE
335 0 :M
f2_10 sf
( )S
337 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
257.921 396.666 M 0.528(-bit set.  This is interpretation of the )W
FmE
338 0 :M
f4_10 sf
( )S
344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
408.482 396.666 M 0 0 18(\'t\')FmTx
FmE
344 0 :M
f2_10 sf
( )S
346 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
426.482 396.666 M 0.528(-bit for I/O Space is)W
58 408.666 M -0.31(distinquished from the \"alias\" case by having the )W
FmE
346 0 :M
f4_10 sf
( )S
352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.624 408.666 M 0 0 18(\'n\')FmTx
FmE
352 0 :M
f2_10 sf
( )S
354 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.624 408.666 M -0.31(-bit equal to 0 in its )W
FmE
355 0 :M
f5_10 sf
( )S
361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.308 408.666 M 0 0 30(\"reg\")FmTx
FmE
361 0 :M
f2_10 sf
( )S
363 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
380.308 408.666 M -0.31( entry;  the corresponding )W
FmE
363 0 :M
f5_10 sf
( )S
369 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
483.999 408.666 M 0 0 24(\"as-)FmTx
58 420.666 M 0 0 102(signed-addresses\")FmTx
FmE
369 0 :M
f2_10 sf
( )S
371 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160 420.666 M ( entry )S
FmE
372 0 :M
f3_10 sf
( )S
374 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
185.544 420.666 M (shall)S
FmE
374 0 :M
f2_10 sf
( )S
376 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204.99 420.666 M ( have the )S
FmE
377 0 :M
f4_10 sf
( )S
383 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
243.584 420.666 M 0 0 18(\'t\')FmTx
FmE
383 0 :M
f2_10 sf
( )S
385 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
261.584 420.666 M (-bit equal to 0.)S
FmE
385 0 :M
f0_12 sf
( )S
388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 455 M (2.1.3. Hard-decoded Spaces)S
FmE
388 0 :M
f2_10 sf
( )S
390 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 471.666 M 0.054(PCI allows devices to \"hard-decode\" Memory and I/O addresses;  i.e., the addresses are not subject to relocation)W
58 483.666 M -0.145(via a base register.  These address ranges are represented by having the non-relocatable bit \()W
FmE
391 0 :M
f4_10 sf
( )S
397 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
423.952 483.666 M 0 0 18(\'n\')FmTx
FmE
397 0 :M
f2_10 sf
( )S
399 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
441.952 483.666 M -0.145(\) set in their cor-)W
58 495.666 M -0.246(responding )W
FmE
399 0 :M
f5_10 sf
( )S
405 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.687 495.666 M 0 0 30(\"reg\")FmTx
FmE
405 0 :M
f2_10 sf
( )S
407 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
134.687 495.666 M -0.246( and )W
FmE
408 0 :M
f5_10 sf
( )S
414 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.633 495.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
414 0 :M
f2_10 sf
( )S
416 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.633 495.666 M -0.246( properties, where the base-register field of the )W
FmE
416 0 :M
f3_10 sf
( )S
418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
460.719 495.666 M (phys.hi)S
FmE
419 0 :M
f2_10 sf
( )S
421 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
489.325 495.666 M -0.246( is 0.)W
58 511.666 M 0.318(Furthermore, such devices are allowed to \"alias\" their hard-decoded I/O addresses by ignoring all but the lower)W
58 523.666 M 0.341(10 bits of an I/O address.  To conserve )W
FmE
421 0 :M
f5_10 sf
( )S
427 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.229 523.666 M 0 0 30(\"reg\")FmTx
FmE
427 0 :M
f2_10 sf
( )S
429 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
248.229 523.666 M 0.341( property space, a bit \(the )W
FmE
430 0 :M
f4_10 sf
( )S
436 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
354.39 523.666 M 0 0 18(\'t\')FmTx
FmE
436 0 :M
f2_10 sf
( )S
438 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
372.39 523.666 M 0.341(-bit, for ten-bit\) is included in the)W
58 535.666 M 0.136(encoding of hard-decoded \(non-relocatable, )W
FmE
438 0 :M
f4_10 sf
( )S
444 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
235.948 535.666 M 0 0 18(\'n\')FmTx
FmE
444 0 :M
f2_10 sf
( )S
446 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.948 535.666 M 0.136(-bit = 1\) I/O address )W
FmE
447 0 :M
f5_10 sf
( )S
453 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.289 535.666 M 0 0 30(\"reg\")FmTx
FmE
453 0 :M
f2_10 sf
( )S
455 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
368.289 535.666 M 0.136( and )W
FmE
455 0 :M
f5_10 sf
( )S
461 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
388 535.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
461 0 :M
f2_10 sf
( )S
463 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 547.666 M (entries to indicated that the address range includes all such aliases.)S
FmE
464 0 :M
f0_12 sf
( )S
467 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 582 M (2.1.4. Configuration Space)S
FmE
467 0 :M
f2_10 sf
( )S
469 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 598.666 M 0.381(Configuration Space is used primarily during device initialization.  Each device contains a set of Configuration)W
58 610.666 M -0.222(Registers which are used to identify and configure the device.  Configuration Cycles access a device\'s Configura-)W
58 622.666 M 0.177(tion Registers, including the \"address base registers\" which must be initialized before the device will respond to)W
58 634.666 M (Memory and I/O Space accesses.)S
58 652.666 M 0.305(In contrast to Memory and I/O Space addressing, Configuration Space addressing is effectively \"geographical\",)W
58 664.666 M -0.006(in that the Configuration Space address of a particular device is determined by its physical location on a PCI bus)W
58 676.666 M -0.348(\(i.e. the slot in which it is installed\), or more generally, its physical location within a \"tree\" of interconnected )W
(PCI-)S
58 688.666 M (to-PCI b)S
(ridges.)S
58 706.666 M -0.489(The method for generating Configuration Cycles is system-dependent.  In some systems, special registers are used)W
58 718.666 M -0.303(to generate Configuration Space cycles. In other systems, Configuration Space might be memory-mapped as a re-)W
0.502 0.502 0 0.498 0 0 0.502 FmK
38 46 2 22 FmqF
38 263 2 22 FmqF
38 669.999 2 22 FmqF
FmE
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 7 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
469 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
469 0 :M
0 G
f0_12 sf
( )S
472 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
472 0 :M
f2_12 sf
( )S
475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (5)S
FmE
475 0 :M
f4_12 sf
( )S
482 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
482 0 :M
f2_10 sf
( )S
484 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 52.667 M -0.421(gion within a large physical address space.  In particular, the hardware method for specifying the Bus Number and)W
76 64.667 M 0.203(Device Number is system-dependent.  Bus Number and Device Number are described below as though they are)W
76 76.667 M 0.078(binary-encoded fields within an address; in practice, that is not necessarily true at the hardware level.  However,)W
76 88.667 M -0.28(the representation described below is adequate as an internal software representation, because it is capable of rep-)W
76 100.667 M (resenting the entire possible space of PCI Configuration Space addresses.)S
76 118.667 M (A Configuration Space address consists of several fields:)S
FmE
485 0 :M
f0_10 sf
( )S
487 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 148.667 M (2.1.4.1. Bus Number:  8 bits.)S
FmE
487 0 :M
f2_10 sf
( )S
489 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 164.667 M 0.497(Each PCI bus within a PCI domain is assigned a unique identifying number, known as the \"bus number\".  The)W
76 176.667 M -0.218(assignments occur during system initialization, when the bus controllers for the PCI buses within the PCI domain)W
76 188.667 M (are located. The bus number for a particular bus is written into a register in that bus\'s bus controller.)S
76 206.667 M 0.369(During a Configuration Cycle, each bus controller compares the bus number field of the address to its assigned)W
76 218.666 M -0.005(bus number.  If they match, the bus controller selects one of the devices on its PCI bus, according to the value of)W
76 230.666 M -0.126(the Device Number field.  Otherwise, the bus controller either forwards the configuration cycle to its subordinate)W
76 242.666 M (PCI-to-PCI b)S
(ridges \(if the bus number is for one of its subordinate bridges\) or ignores the cycle.)S
FmE
490 0 :M
f0_10 sf
( )S
492 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 272.666 M (2.1.4.2. Device Number:  5 bits)S
FmE
492 0 :M
f2_10 sf
( )S
494 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 288.666 M 0.479(During a Configuration Cycle, the bus controller selected by the bus number field decodes the Device Number)W
76 300.666 M -0.259(field, activating the single corresponding \"IDSEL\" device select line to enable one of the PCI devices on that bus.)W
76 312.666 M 0.158(For PCI buses with plug-in slots, the Device Number field effectively selects a particular slot.  Electrical limita-)W
76 324.666 M -0.27(tions restrict the number of devices on an individual PCI bus to fewer than the 32 that could otherwise be selected)W
76 336.666 M (by this 5-bit field.)S
76 354.666 M 0.514(Some PCI bus controllers use the same physical wires for the IDSEL lines and higher-numbered address lines,)W
76 366.666 M 0.179(thus, on the bus that is selected by the bus number field, the Device Number does not appear on the address bus)W
76 378.666 M 0.136(in its 5-bit binary-encoded form.  Rather, the 5-bit field is decoded to a \"one of n\" select that asserts exactly one)W
76 390.666 M 0.391(upper address line.  This fact does not affect the logical representation of the Device Number as a 5-bit binary-)W
76 402.666 M (encoded field.)S
FmE
495 0 :M
f3_10 sf
( )S
497 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 418.666 M -0.392(Note:  the decoding mechanism \(e.g., the address bit selected\) from the Device Number is system dependent.  Fur-)W
76 430.666 M 0.359(thermore, the implementation of the Open Firmware )W
FmE
497 0 :M
f8_10 sf
( )S
503 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.233 430.666 M 0 0 54(config-xx)FmTx
FmE
503 0 :M
f3_10 sf
( )S
505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345.233 430.666 M 0.359( words can \"hide\" this detail.  However, it is)W
76 442.666 M (recommended that an Open Firmware implementation choose a numbering which is meaningful to the user.)S
FmE
506 0 :M
f0_10 sf
( )S
508 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 472.666 M (2.1.4.3. Function Number:  3 bits)S
FmE
508 0 :M
f2_10 sf
( )S
510 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 488.666 M 0.271(Each PCI device can have from one to eight logically-independent functions, each with its own independent set)W
76 500.666 M -0.416(of configuration registers.  A PCI device that is selected during a Configuration Cycle decodes the Function Num-)W
76 512.666 M -0.545(ber field to select the appropriate set of configuration registers for that function. The assignment of Function Num-)W
76 524.666 M -0.341(bers to particular functions is a hard-wired characteristic of the individual PCI device.  For a PCI device with only)W
76 536.666 M (one function, the Function Number must be zero.)S
FmE
511 0 :M
f0_10 sf
( )S
513 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 566.666 M (2.1.4.4. Register Number:  8 bits)S
FmE
513 0 :M
f2_10 sf
( )S
515 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 582.666 M 0.028(The register number field, decoded by the PCI device, selects a particular register within the set of configuration)W
76 594.666 M -0.316(registers corresponding to the selected function.  The layout \(locations and meanings of particular bits\) of the first)W
76 606.666 M -0.197(few configuration registers \(i.e. those with small register numbers\) is specified by the PCI standard; other config-)W
76 618.666 M 0.7(uration registers are device-specific.  The standard configuration registers perform such functions as assigning)W
76 630.666 M (Memory Space and I/O Space base addresses for the device\'s addressable regions.)S
76 648.666 M 0.332(In many PCI hardware implementations, Configuration Space does not appear as a direct subset of the system\'s)W
76 660.666 M 0.136(physical address space; instead, Configuration Space accesses are performed by a sequence of reads or writes to)W
76 672.666 M (special system registers.)S
FmE
516 0 :M
f0_10 sf
( )S
518 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 702.666 M (2.1.4.5. \"Address-less\" Cycles)S
FmE
518 0 :M
f2_10 sf
( )S
520 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 718.666 M -0.456(In addition to these address spaces, PCI has two types of transactions in which the address bus is not used.  Special)W
0.502 0.502 0 0.498 0 0 0.502 FmK
56 236 2 10 FmqF
FmE
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 8 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
521 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
521 0 :M
0 G
f0_12 sf
( )S
524 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
524 0 :M
f2_12 sf
( )S
527 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (6)S
FmE
527 0 :M
f4_12 sf
( )S
534 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
534 0 :M
f2_10 sf
( )S
536 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 52.667 M 0.215(Cycles \(writes\) are \"broadcast\" cycles in which the data conveys all of the information.  Interrupt Acknowledge)W
58 64.667 M 0.169(Cycles \(reads\) are intended to support interrupt control hardware associated with PCI devices.  The PCI specifi-)W
58 76.667 M (cation does not specify the details of such interrupt control hardware.)S
FmE
537 0 :M
f0_10 sf
( )S
539 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 106.667 M (2.1.4.6. Low-order Address Bits)S
FmE
539 0 :M
f2_10 sf
( )S
541 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 122.667 M 0.134(The address characteristics described above do not take into account the way that the PCI bus uses the least-sig-)W
58 134.667 M -0.005(nificant two address bits.  In general, at the hardware level, the PCI bus uses the two low address bits \(AD[1::0]\))W
58 146.667 M -0.438(not to identify the particular byte to be accessed, but instead to convey additional information about the data trans-)W
58 158.667 M -0.389(fer, such as the type of address incrementing for burst transfers.  The bytes are selected with \"byte enable\" signals.)W
58 176.667 M -0.11(That hardware subtlety is irrelevant for the purposes of this specification; within the Open Firmware domain, ad-)W
58 188.667 M 0.399(dresses identify individual 8-bit, 16-bit, and 32-bit registers or memory locations in the usual way.  Within this)W
58 200.667 M -0.037(document, \"address\" refers to that software view of an address, which in the case of the two lower address bits is)W
58 212.666 M (not necessarily the same as what is on the PCI address wires.)S
FmE
542 0 :M
f0_12 sf
( )S
545 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 247 M (2.2. Address Formats and Representations)S
58 282 M (2.2.1. Physical Address Formats)S
FmE
545 0 :M
f0_10 sf
( )S
547 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 312.666 M (2.2.1.1. Numerical Representation)S
FmE
547 0 :M
f2_10 sf
( )S
549 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 328.666 M -0.234(\(The Numerical Representation of an address is the format that Open Firmware uses for storing an address within)W
58 340.666 M 0.317(a property value and on the stack, as an argument to a package method.\) The numerical representation of a PCI)W
58 352.666 M -0.145(address consists of three cells, encoded as follows.  For this purpose, the least-significant 32 bits of a cell is used;)W
58 364.666 M -0.56(if the cell size is larger than 32 bits, any additional high-order bits are zero.  Bit# 0 refers to the least-significant bit.)W
FmE
550 0 :M
f4_10 sf
( )S
556 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 380.666 M 0 0 126(                 Bit#)FmTx
27 N 0 0 210(33222222 22221111 11111100 00000000)FmTx
173.2 392.666 M 0 0 24(    )FmTx
13.8 N 0 0 210(10987654 32109876 54321098 76543210)FmTx
115.6 410.666 M 0 0 78(phys.hi cell:)FmTx
17.4 N 0 0 210(npt000ss bbbbbbbb dddddfff rrrrrrrr)FmTx
115.6 422.666 M 0 0 84(phys.mid cell:)FmTx
11.4 N 0 0 210(hhhhhhhh hhhhhhhh hhhhhhhh hhhhhhhh)FmTx
115.6 434.666 M 0 0 78(phys.lo cell:)FmTx
17.4 N 0 0 210(llllllll llllllll llllllll llllllll)FmTx
FmE
556 0 :M
f2_10 sf
( )S
558 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 458.666 M (where:)S
FmE
558 0 :M
f4_10 sf
( )S
564 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 482.666 M 0 0 6(n)FmTx
FmE
564 0 :M
f2_10 sf
( )S
566 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.2 482.666 M (is 0 if the address is relocatable, 1 otherwise)S
FmE
567 0 :M
f4_10 sf
( )S
573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 494.666 M 0 0 6(p)FmTx
FmE
573 0 :M
f2_10 sf
( )S
575 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.2 494.666 M (is 1 if the addressable region is \"prefetchable\", 0 otherwise)S
FmE
575 0 :M
f4_10 sf
( )S
581 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 506.666 M 0 0 6(t)FmTx
FmE
581 0 :M
f2_10 sf
( )S
583 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.2 506.666 M 0.117(is 1 if the address is aliased \(for non-relocatable I/O\), below 1 MB \(for Memory\),)W
175 518.666 M (or below 64 KB \(for relocatable I/O\).)S
FmE
584 0 :M
f4_10 sf
( )S
590 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 530.666 M 0 0 12(ss)FmTx
FmE
590 0 :M
f2_10 sf
( )S
592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.2 530.666 M (is the space code, denoting the address space)S
FmE
592 0 :M
f4_10 sf
( )S
598 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 542.666 M 0 0 48(bbbbbbbb)FmTx
FmE
598 0 :M
f2_10 sf
( )S
600 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.2 542.666 M (is the 8-bit Bus Number)S
FmE
601 0 :M
f4_10 sf
( )S
607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 554.666 M 0 0 30(ddddd)FmTx
FmE
607 0 :M
f2_10 sf
( )S
609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.2 554.666 M (is the 5-bit Device Number)S
FmE
609 0 :M
f4_10 sf
( )S
615 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 566.666 M 0 0 18(fff)FmTx
FmE
615 0 :M
f2_10 sf
( )S
617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.2 566.666 M (is the 3-bit Function Number)S
FmE
618 0 :M
f4_10 sf
( )S
624 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 578.666 M 0 0 48(rrrrrrrr)FmTx
FmE
624 0 :M
f2_10 sf
( )S
626 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.2 578.666 M (is the 8-bit Register Number)S
FmE
626 0 :M
f4_10 sf
( )S
632 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 590.666 M 0 0 30(hh\311hh)FmTx
FmE
632 0 :M
f2_10 sf
( )S
634 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.2 590.666 M (is a 32-bit unsigned number)S
FmE
635 0 :M
f4_10 sf
( )S
641 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.6 602.666 M 0 0 30(ll\311ll)FmTx
FmE
641 0 :M
f2_10 sf
( )S
643 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.2 602.666 M (is a 32-bit unsigned number)S
58 626.666 M -0.407(When the )W
FmE
643 0 :M
f4_10 sf
( )S
649 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.279 626.666 M 0 0 30(hh\311hh)FmTx
FmE
649 0 :M
f2_10 sf
( )S
651 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.279 626.666 M -0.407( and )W
FmE
652 0 :M
f4_10 sf
( )S
658 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.902 626.666 M 0 0 30(ll\311ll)FmTx
FmE
658 0 :M
f2_10 sf
( )S
660 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
176.902 626.666 M -0.407( fields are concatenated to form a larger number, )W
FmE
660 0 :M
f4_10 sf
( )S
666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
370.345 626.666 M 0 0 30(hh\311hh)FmTx
FmE
666 0 :M
f2_10 sf
( )S
668 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.345 626.666 M -0.407( is the most significant por-)W
58 638.666 M (tion and )S
FmE
669 0 :M
f4_10 sf
( )S
675 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
92.995 638.666 M 0 0 30(ll\311ll)FmTx
FmE
675 0 :M
f2_10 sf
( )S
677 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
122.995 638.666 M ( is the least significant portion.)S
58 654.666 M (The \')S
FmE
677 0 :M
f4_10 sf
( )S
683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
77.846 654.666 M 0 0 6(p)FmTx
FmE
683 0 :M
f2_10 sf
( )S
685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
83.846 654.666 M (\' bit reflects the state of the \"P\" bit in the corresponding hardware Base Address register.)S
FmE
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 9 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
686 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
686 0 :M
f0_12 sf
( )S
689 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
689 0 :M
f2_12 sf
( )S
692 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (7)S
FmE
692 0 :M
f4_12 sf
( )S
699 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
699 0 :M
f0_10 sf
( )S
701 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 52.667 M (Encoding of type code \"ss\":)S
FmE
702 0 :M
f4_10 sf
( )S
708 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 70.667 M 0 0 12(00)FmTx
FmE
708 0 :M
f2_10 sf
( )S
710 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88 70.667 M ( denotes  Configuration Space, in which case:)S
FmE
710 0 :M
f4_10 sf
( )S
716 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 82.667 M 0 0 6(n)FmTx
FmE
716 0 :M
f2_10 sf
( )S
718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 82.667 M (must be zero)S
FmE
719 0 :M
f4_10 sf
( )S
725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 94.667 M 0 0 6(p)FmTx
FmE
725 0 :M
f2_10 sf
( )S
727 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 94.667 M (must be zero)S
FmE
727 0 :M
f4_10 sf
( )S
733 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 106.667 M 0 0 6(t)FmTx
FmE
733 0 :M
f2_10 sf
( )S
735 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 106.667 M (must be zero)S
FmE
736 0 :M
f4_10 sf
( )S
742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 118.667 M 0 0 48(bbbbbbbb)FmTx
FmE
742 0 :M
f2_10 sf
( )S
744 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
349 118.667 M (,)S
FmE
744 0 :M
f4_10 sf
( )S
750 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351.5 118.667 M 0 0 30(ddddd)FmTx
FmE
750 0 :M
f2_10 sf
( )S
752 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
381.5 118.667 M (,)S
FmE
753 0 :M
f4_10 sf
( )S
759 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
384 118.667 M 0 0 18(fff)FmTx
FmE
759 0 :M
f2_10 sf
( )S
761 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
402 118.667 M (,)S
FmE
761 0 :M
f4_10 sf
( )S
767 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
404.5 118.667 M 0 0 54(rrrrrrrrr)FmTx
FmE
767 0 :M
f2_10 sf
( )S
769 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
458.5 118.667 M -0.127(is the Configura-)W
301 130.667 M (tion Space address)S
FmE
770 0 :M
f4_10 sf
( )S
776 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 142.667 M 0 0 30(hh\311hh)FmTx
FmE
776 0 :M
f2_10 sf
( )S
778 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
331 142.667 M (,)S
FmE
778 0 :M
f4_10 sf
( )S
784 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333.5 142.667 M 0 0 30(ll\311ll)FmTx
FmE
784 0 :M
f2_10 sf
( )S
786 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
363.5 142.667 M (must be zero)S
FmE
787 0 :M
f4_10 sf
( )S
793 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 166.667 M 0 0 12(01)FmTx
FmE
793 0 :M
f2_10 sf
( )S
795 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88 166.667 M ( denotes  I/O Space, in which case:)S
FmE
795 0 :M
f4_10 sf
( )S
801 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 178.667 M 0 0 6(p)FmTx
FmE
801 0 :M
f2_10 sf
( )S
803 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 178.667 M (must be zero)S
FmE
804 0 :M
f4_10 sf
( )S
810 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 190.666 M 0 0 6(t)FmTx
FmE
810 0 :M
f2_10 sf
( )S
812 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 190.666 M (is set if 10-bit aliasing is present \(for non-relocatable\),)S
301 202.666 M (or below 64 KB required \(for relocatable\).)S
FmE
812 0 :M
f4_10 sf
( )S
818 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 214.666 M 0 0 48(bbbbbbbb)FmTx
FmE
818 0 :M
f2_10 sf
( )S
820 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.6 214.666 M (,)S
FmE
821 0 :M
f4_10 sf
( )S
827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.1 214.666 M 0 0 30(ddddd)FmTx
FmE
827 0 :M
f2_10 sf
( )S
829 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214.1 214.666 M (,)S
FmE
829 0 :M
f4_10 sf
( )S
835 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.6 214.666 M 0 0 18(fff)FmTx
FmE
835 0 :M
f2_10 sf
( )S
837 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.6 214.666 M (,)S
FmE
838 0 :M
f4_10 sf
( )S
844 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.1 214.666 M 0 0 48(rrrrrrrr)FmTx
FmE
844 0 :M
f2_10 sf
( )S
846 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 214.666 M (identifies the region\'s Base Address Register )S
FmE
846 0 :M
f4_10 sf
( )S
852 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 226.666 M 0 0 48(rrrrrrrr)FmTx
FmE
852 0 :M
f2_10 sf
( )S
854 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
349 226.666 M ( can be 0x10, 0x14, 0x18, 0x1c, 0x20 or )S
301 238.666 M (0x24 \(for relocatable\).)S
FmE
855 0 :M
f4_10 sf
( )S
861 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 250.666 M 0 0 48(rrrrrrrr)FmTx
FmE
861 0 :M
f2_10 sf
( )S
863 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
349 250.666 M (is 0x00 for non-relocatable)S
FmE
863 0 :M
f4_10 sf
( )S
869 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 262.666 M 0 0 30(hh\311hh)FmTx
FmE
869 0 :M
f2_10 sf
( )S
871 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 262.666 M (must be zero)S
76 274.666 M (    If )S
FmE
872 0 :M
f4_10 sf
( )S
878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.155 274.666 M 0 0 6(n)FmTx
FmE
878 0 :M
f2_10 sf
( )S
880 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.155 274.666 M ( is 0:)S
FmE
880 0 :M
f4_10 sf
( )S
886 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 274.666 M 0 0 30(ll\311ll)FmTx
FmE
886 0 :M
f2_10 sf
( )S
888 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.6 274.666 M ( )S
134.9 N -0.621(is the 32-bit offset from the start of the relocatable region )W
301 286.666 M (of I/O Space)S
76 298.666 M (    If )S
FmE
889 0 :M
f4_10 sf
( )S
895 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.155 298.666 M 0 0 6(n)FmTx
FmE
895 0 :M
f2_10 sf
( )S
897 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.155 298.666 M ( is 1:)S
FmE
897 0 :M
f4_10 sf
( )S
903 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 298.666 M 0 0 30(ll\311ll)FmTx
FmE
903 0 :M
f2_10 sf
( )S
905 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.6 298.666 M ( )S
134.9 N (is the 32-bit I/O Space address)S
FmE
906 0 :M
f4_10 sf
( )S
912 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 322.666 M 0 0 12(10)FmTx
FmE
912 0 :M
f2_10 sf
( )S
914 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88 322.666 M ( denotes  32-bit-address Memory Space, in which case:)S
FmE
914 0 :M
f4_10 sf
( )S
920 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 334.666 M 0 0 6(p)FmTx
FmE
920 0 :M
f2_10 sf
( )S
922 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 334.666 M ( may be either 0 or 1)S
FmE
923 0 :M
f4_10 sf
( )S
929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 346.666 M 0 0 6(t)FmTx
FmE
929 0 :M
f2_10 sf
( )S
931 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 346.666 M (is set if an address below 1 MB is required)S
FmE
931 0 :M
f4_10 sf
( )S
937 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 358.666 M 0 0 48(bbbbbbbb)FmTx
FmE
937 0 :M
f2_10 sf
( )S
939 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.6 358.666 M (,)S
FmE
940 0 :M
f4_10 sf
( )S
946 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.1 358.666 M 0 0 30(ddddd)FmTx
FmE
946 0 :M
f2_10 sf
( )S
948 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214.1 358.666 M (,)S
FmE
948 0 :M
f4_10 sf
( )S
954 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.6 358.666 M 0 0 18(fff)FmTx
FmE
954 0 :M
f2_10 sf
( )S
956 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.6 358.666 M (,)S
FmE
957 0 :M
f4_10 sf
( )S
963 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.1 358.666 M 0 0 48(rrrrrrrr)FmTx
FmE
963 0 :M
f2_10 sf
( )S
965 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285.1 358.666 M ( )S
13.4 N -0.005(identifies the relocatable region\'s Base Address Register)W
FmE
965 0 :M
f4_10 sf
( )S
971 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 370.666 M 0 0 48(rrrrrrrr)FmTx
FmE
971 0 :M
f2_10 sf
( )S
973 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
349 370.666 M -0.362( can be 0x10, 0x14, 0x18, 0x1c, 0x20, 0x24, )W
301 382.666 M (0x30 \(relocatable\))S
FmE
974 0 :M
f4_10 sf
( )S
980 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 394.666 M 0 0 48(rrrrrrrr)FmTx
FmE
980 0 :M
f2_10 sf
( )S
982 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
349 394.666 M ( is 0x00 for non-relocatable)S
FmE
982 0 :M
f4_10 sf
( )S
988 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 406.666 M 0 0 30(hh\311hh)FmTx
FmE
988 0 :M
f2_10 sf
( )S
990 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.6 406.666 M ( )S
134.9 N (must be zero)S
76 418.666 M (    If )S
FmE
991 0 :M
f4_10 sf
( )S
997 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.155 418.666 M 0 0 6(n)FmTx
FmE
997 0 :M
f2_10 sf
( )S
999 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.155 418.666 M ( is 0:)S
FmE
999 0 :M
f4_10 sf
( )S
1005 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 418.666 M 0 0 30(ll\311ll)FmTx
FmE
1005 0 :M
f2_10 sf
( )S
1007 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 418.666 M -0.621(is the 32-bit offset from the start of the relocatable region )W
301 430.666 M (of 32-bit address Memory Space)S
76 442.666 M (    If )S
FmE
1008 0 :M
f4_10 sf
( )S
1014 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.155 442.666 M 0 0 6(n)FmTx
FmE
1014 0 :M
f2_10 sf
( )S
1016 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.155 442.666 M ( is 1:)S
FmE
1016 0 :M
f4_10 sf
( )S
1022 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 442.666 M 0 0 30(ll\311ll)FmTx
FmE
1022 0 :M
f2_10 sf
( )S
1024 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 442.666 M (is the 32-bit Memory Space address)S
FmE
1025 0 :M
f4_10 sf
( )S
1031 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 466.666 M 0 0 12(11)FmTx
FmE
1031 0 :M
f2_10 sf
( )S
1033 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88 466.666 M ( denotes  64-bit-address Memory Space, in which case:)S
FmE
1033 0 :M
f4_10 sf
( )S
1039 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 478.666 M 0 0 6(p)FmTx
FmE
1039 0 :M
f2_10 sf
( )S
1041 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 478.666 M (may be either 0 or 1)S
FmE
1042 0 :M
f4_10 sf
( )S
1048 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 490.666 M 0 0 6(t)FmTx
FmE
1048 0 :M
f2_10 sf
( )S
1050 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 490.666 M (must be 0)S
FmE
1050 0 :M
f4_10 sf
( )S
1056 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 502.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1056 0 :M
f2_10 sf
( )S
1058 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.6 502.666 M (,)S
FmE
1059 0 :M
f4_10 sf
( )S
1065 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.1 502.666 M 0 0 30(ddddd)FmTx
FmE
1065 0 :M
f2_10 sf
( )S
1067 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214.1 502.666 M (,)S
FmE
1067 0 :M
f4_10 sf
( )S
1073 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.6 502.666 M 0 0 18(fff)FmTx
FmE
1073 0 :M
f2_10 sf
( )S
1075 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.6 502.666 M (,)S
FmE
1076 0 :M
f4_10 sf
( )S
1082 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.1 502.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1082 0 :M
f2_10 sf
( )S
1084 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 502.666 M (identifies the first register of the relocatable region\'s )S
301 514.666 M (Base Address )S
(Register pair.  )S
FmE
1084 0 :M
f4_10 sf
( )S
1090 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
417.064 514.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1090 0 :M
f2_10 sf
( )S
1092 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
465.064 514.666 M ( can be 0x10, )S
301 526.666 M (0x14, 0x18, 0x1c, or 0x20)S
76 538.666 M (    If )S
FmE
1093 0 :M
f4_10 sf
( )S
1099 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.155 538.666 M 0 0 6(n)FmTx
FmE
1099 0 :M
f2_10 sf
( )S
1101 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.155 538.666 M ( is 0:)S
FmE
1101 0 :M
f4_10 sf
( )S
1107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 538.666 M 0 0 30(hh\311hh)FmTx
FmE
1107 0 :M
f2_10 sf
( )S
1109 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.6 538.666 M (,)S
FmE
1110 0 :M
f4_10 sf
( )S
1116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.1 538.666 M 0 0 30(ll\311ll)FmTx
FmE
1116 0 :M
f2_10 sf
( )S
1118 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 538.666 M -0.621(is the 64-bit offset from the start of the relocatable region )W
301 550.666 M -0.324(of 64-bit address Memory Space to the start of the subre-)W
301 562.666 M (gion)S
76 574.666 M (    If )S
FmE
1118 0 :M
f4_10 sf
( )S
1124 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.155 574.666 M 0 0 6(n)FmTx
FmE
1124 0 :M
f2_10 sf
( )S
1126 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.155 574.666 M ( is 1:)S
FmE
1127 0 :M
f4_10 sf
( )S
1133 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 574.666 M 0 0 30(hh\311hh)FmTx
FmE
1133 0 :M
f2_10 sf
( )S
1135 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.6 574.666 M (,)S
FmE
1135 0 :M
f4_10 sf
( )S
1141 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.1 574.666 M 0 0 30(ll\311ll)FmTx
FmE
1141 0 :M
f2_10 sf
( )S
1143 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301 574.666 M (is the 64-bit Memory Space address)S
FmE
1144 0 :M
f3_10 sf
( )S
1146 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 590.666 M -0.155(Note:  Although the bit format of the phys.hi cell is generally consistent with the bit format of a particular kind of)W
76 602.666 M 0.301(hardware mechanism for Configuration Space access that is recommended by the PCI standard, the use of that)W
76 614.666 M -0.358(format does not imply that the hardware must use the same format. The numerical representation specified herein)W
76 626.666 M -0.358(contains the information needed to select a particular hardware device, specifying the format by which that infor-)W
76 638.666 M 0.202(mation is communicated among elements of Open Firmware firmware and client programs.  A driver for a par-)W
76 650.666 M 0.596(ticular PCI bus hardware implementation is free to extract that information and reformat as necessary for the)W
76 662.666 M (hardware.)S
76 680.666 M 0.159(Note:  Although the )W
FmE
1146 0 :M
f2_10 sf
( )S
1148 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.732 680.666 M 0.159(PCI Local Bus Specification)W
FmE
1149 0 :M
f3_10 sf
( )S
1151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.343 680.666 M 0.159( defines both prefetchable and non-prefetchable 64-bit-address)W
76 692.666 M -0.605(Memory Space, the )W
FmE
1151 0 :M
f2_10 sf
( )S
1153 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.592 692.666 M -0.605(PCI-to-PCI B)W
-0.605(ridge Architecture Specification)W
FmE
1154 0 :M
f3_10 sf
( )S
1156 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.755 692.666 M -0.605( does not specify a standard means of supporting)W
76 704.666 M (non-prefetchable 64-bit-address Memory Space across )S
(PCI-to-PCI b)S
(ridges. )S
0.502 0.502 0 0.498 0 0 0.502 FmK
56 685.999 2 22 FmqF
FmE
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 10 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
1156 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1156 0 :M
0 G
f0_12 sf
( )S
1159 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
1159 0 :M
f2_12 sf
( )S
1162 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (8)S
FmE
1162 0 :M
f4_12 sf
( )S
1169 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
1169 0 :M
f0_10 sf
( )S
1171 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 52.667 M (2.2.1.2. Text Representation)S
FmE
1172 0 :M
f2_10 sf
( )S
1174 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 68.667 M (The text representation of a PCI address is one of the following forms:)S
94 80.667 M (DD)S
FmE
1174 0 :M
f4_10 sf
( )S
1180 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 92.667 M 0 0 24(DD,F)FmTx
94 104.667 M 0 0 138([n]i[t]DD,F,RR,NNNNNNNN)FmTx
94 116.667 M 0 0 156([n]m[t][p]DD,F,RR,NNNNNNNN)FmTx
94 128.667 M 0 0 186([n]x[p]DD,F,RR,NNNNNNNNNNNNNNNN)FmTx
FmE
1180 0 :M
f2_10 sf
( )S
1182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 144.667 M (where:)S
FmE
1183 0 :M
f4_10 sf
( )S
1189 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 156.667 M 0 0 12(DD)FmTx
FmE
1189 0 :M
f2_10 sf
( )S
1191 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 156.667 M (is an ASCII hexadecimal number in the range )S
FmE
1191 0 :M
f4_10 sf
( )S
1197 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
387.481 156.667 M 0 0 24(0\3111F)FmTx
94 168.667 M 0 0 6(F)FmTx
FmE
1197 0 :M
f2_10 sf
( )S
1199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 168.667 M (is an ASCII numeral in the range )S
FmE
1200 0 :M
f4_10 sf
( )S
1206 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.67 168.667 M 0 0 18(0\3117)FmTx
94 180.667 M 0 0 12(RR)FmTx
FmE
1206 0 :M
f2_10 sf
( )S
1208 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 180.667 M (is an ASCII hexadecimal number in the range )S
FmE
1208 0 :M
f4_10 sf
( )S
1214 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
387.481 180.667 M 0 0 24(0\311FF)FmTx
94 192.666 M 0 0 48(NNNNNNNN)FmTx
FmE
1214 0 :M
f2_10 sf
( )S
1216 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 192.666 M (is an ASCII hexadecimal number in the range )S
FmE
1217 0 :M
f4_10 sf
( )S
1223 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
387.481 192.666 M 0 0 60(0\311FFFFFFFF)FmTx
94 204.666 M 0 0 96(NNNNNNNNNNNNNNNN)FmTx
FmE
1223 0 :M
f2_10 sf
( )S
1225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 204.666 M (is )S
(an )S
(ASCII )S
(hexadecimal )S
(number )S
(in )S
(the )S
(range )S
FmE
1225 0 :M
f4_10 sf
( )S
1231 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
387.481 204.666 M 0 0 108(0\311FFFFFFFFFFFFFFFF)FmTx
94 216.666 M 0 0 18([n])FmTx
FmE
1231 0 :M
f2_10 sf
( )S
1233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 216.666 M (is the letter \')S
FmE
1234 0 :M
f4_10 sf
( )S
1240 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.723 216.666 M 0 0 6(n)FmTx
FmE
1240 0 :M
f2_10 sf
( )S
1242 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.723 216.666 M (\', whose presence is optional)S
FmE
1242 0 :M
f4_10 sf
( )S
1248 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 228.666 M 0 0 18([t])FmTx
FmE
1248 0 :M
f2_10 sf
( )S
1250 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 228.666 M (is the letter \')S
FmE
1251 0 :M
f4_10 sf
( )S
1257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.723 228.666 M 0 0 6(t)FmTx
FmE
1257 0 :M
f2_10 sf
( )S
1259 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.723 228.666 M (\', whose presence is optional)S
FmE
1259 0 :M
f4_10 sf
( )S
1265 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 240.666 M 0 0 18([p])FmTx
FmE
1265 0 :M
f2_10 sf
( )S
1267 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 240.666 M (is the letter \')S
FmE
1268 0 :M
f4_10 sf
( )S
1274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.723 240.666 M 0 0 6(p)FmTx
FmE
1274 0 :M
f2_10 sf
( )S
1276 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.723 240.666 M (\', whose presence is optional)S
FmE
1276 0 :M
f4_10 sf
( )S
1282 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 252.666 M 0 0 6(i)FmTx
FmE
1282 0 :M
f2_10 sf
( )S
1284 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 252.666 M (is the letter \')S
FmE
1285 0 :M
f4_10 sf
( )S
1291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.723 252.666 M 0 0 6(i)FmTx
FmE
1291 0 :M
f2_10 sf
( )S
1293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.723 252.666 M (\')S
FmE
1293 0 :M
f4_10 sf
( )S
1299 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 264.666 M 0 0 6(m)FmTx
FmE
1299 0 :M
f2_10 sf
( )S
1301 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 264.666 M (is the letter \')S
FmE
1302 0 :M
f4_10 sf
( )S
1308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.723 264.666 M 0 0 6(m)FmTx
FmE
1308 0 :M
f2_10 sf
( )S
1310 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.723 264.666 M (\')S
FmE
1310 0 :M
f4_10 sf
( )S
1316 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 276.666 M 0 0 6(x)FmTx
FmE
1316 0 :M
f2_10 sf
( )S
1318 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 276.666 M (is the letter \')S
FmE
1319 0 :M
f4_10 sf
( )S
1325 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.723 276.666 M 0 0 6(x)FmTx
FmE
1325 0 :M
f2_10 sf
( )S
1327 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.723 276.666 M (\')S
FmE
1327 0 :M
f4_10 sf
( )S
1333 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 288.666 M 0 0 6(,)FmTx
FmE
1333 0 :M
f2_10 sf
( )S
1335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 288.666 M (is the character \')S
FmE
1336 0 :M
f4_10 sf
( )S
1342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.81 288.666 M 0 0 6(,)FmTx
FmE
1342 0 :M
f2_10 sf
( )S
1344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.81 288.666 M (\' \(comma\))S
58 304.666 M (The correspondence between the text representations and numerical representation is as follows:)S
FmE
1344 0 :M
f4_10 sf
( )S
1350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 320.666 M 0 0 12(DD)FmTx
FmE
1350 0 :M
f2_10 sf
( )S
1352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130 336.666 M (corresponds to a Configuration Space address with the numerical value:)S
FmE
1353 0 :M
f4_10 sf
( )S
1359 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 348.666 M 0 0 12(ss)FmTx
FmE
1359 0 :M
f2_10 sf
( )S
1361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160 348.666 M ( )S
(is 00)S
FmE
1361 0 :M
f4_10 sf
( )S
1367 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 360.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1367 0 :M
f2_10 sf
( )S
1369 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 360.666 M ( )S
(is the parent\'s bus number)S
FmE
1370 0 :M
f4_10 sf
( )S
1376 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 372.666 M 0 0 30(ddddd)FmTx
FmE
1376 0 :M
f2_10 sf
( )S
1378 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 372.666 M ( )S
(is the binary encoding of )S
FmE
1378 0 :M
f4_10 sf
( )S
1384 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.412 372.666 M 0 0 12(DD)FmTx
148 384.666 M 0 0 18(fff)FmTx
FmE
1384 0 :M
f2_10 sf
( )S
1386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166 384.666 M (is zero)S
FmE
1387 0 :M
f4_10 sf
( )S
1393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 396.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1393 0 :M
f2_10 sf
( )S
1395 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 396.666 M ( )S
(is zero)S
FmE
1395 0 :M
f4_10 sf
( )S
1401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 408.666 M 0 0 36(hh\311hh )FmTx
FmE
1401 0 :M
f2_10 sf
( )S
1403 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 408.666 M (is zero)S
FmE
1404 0 :M
f4_10 sf
( )S
1410 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 420.666 M 0 0 30(ll\311ll)FmTx
FmE
1410 0 :M
f2_10 sf
( )S
1412 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 420.666 M ( )S
(is zero)S
FmE
1412 0 :M
f4_10 sf
( )S
1418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
116.32 438.666 M 0 0 24(DD,F)FmTx
FmE
1418 0 :M
f2_10 sf
( )S
1420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130 454.666 M (corresponds to a Configuration Space address with the numerical value:)S
FmE
1421 0 :M
f4_10 sf
( )S
1427 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 466.666 M 0 0 12(ss)FmTx
FmE
1427 0 :M
f2_10 sf
( )S
1429 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160 466.666 M ( )S
(is 00)S
FmE
1429 0 :M
f4_10 sf
( )S
1435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 478.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1435 0 :M
f2_10 sf
( )S
1437 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 478.666 M ( )S
(is the parent\'s bus number)S
FmE
1438 0 :M
f4_10 sf
( )S
1444 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 490.666 M 0 0 30(ddddd)FmTx
FmE
1444 0 :M
f2_10 sf
( )S
1446 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 490.666 M ( )S
(is the binary encoding of )S
FmE
1446 0 :M
f4_10 sf
( )S
1452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.412 490.666 M 0 0 12(DD)FmTx
148 502.666 M 0 0 18(fff)FmTx
FmE
1452 0 :M
f2_10 sf
( )S
1454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166 502.666 M (is the binary encoding of )S
FmE
1455 0 :M
f4_10 sf
( )S
1461 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.912 502.666 M 0 0 6(F)FmTx
148 514.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1461 0 :M
f2_10 sf
( )S
1463 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 514.666 M (is zero)S
FmE
1463 0 :M
f4_10 sf
( )S
1469 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 526.666 M 0 0 30(hh\311hh)FmTx
FmE
1469 0 :M
f2_10 sf
( )S
1471 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 526.666 M ( )S
(is zero)S
FmE
1472 0 :M
f4_10 sf
( )S
1478 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 538.666 M 0 0 36(ll\311ll )FmTx
FmE
1478 0 :M
f2_10 sf
( )S
1480 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 538.666 M (is zero)S
FmE
1480 0 :M
f4_10 sf
( )S
1486 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 562.666 M 0 0 138([n]i[t]DD,F,RR,NNNNNNNN)FmTx
FmE
1486 0 :M
f2_10 sf
( )S
1488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130 586.666 M -0.068(corresponds to a relocatable \(if \')W
FmE
1489 0 :M
f4_10 sf
( )S
1495 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
257.775 586.666 M 0 0 6(n)FmTx
FmE
1495 0 :M
f2_10 sf
( )S
1497 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.775 586.666 M -0.068(\' is not present\) or a non-relocatable \(if \')W
FmE
1497 0 :M
f4_10 sf
( )S
1503 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
422.857 586.666 M 0 0 6(n)FmTx
FmE
1503 0 :M
f2_10 sf
( )S
1505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
428.857 586.666 M -0.068(\' is present\) 32-bit   )W
130 598.666 M -0.082(I/O Space address with the numerical value.  If \')W
FmE
1506 0 :M
f4_10 sf
( )S
1512 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
321.522 598.666 M 0 0 6(t)FmTx
FmE
1512 0 :M
f2_10 sf
( )S
1514 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
327.522 598.666 M -0.082(\' is present, only the low-order 10 bits of an   )W
130 610.666 M (I/O address range is indicated;  aliases are assumed to for all high-order bits.  The numerical )S
130 622.666 M (value is:)S
FmE
1514 0 :M
f4_10 sf
( )S
1520 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 634.666 M 0 0 12(ss)FmTx
FmE
1520 0 :M
f2_10 sf
( )S
1522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160 634.666 M ( is )S
FmE
1523 0 :M
f4_10 sf
( )S
1529 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.667 634.666 M 0 0 12(01)FmTx
148 646.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1529 0 :M
f2_10 sf
( )S
1531 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 646.666 M ( )S
(is the parent\'s bus number)S
FmE
1531 0 :M
f4_10 sf
( )S
1537 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 658.666 M 0 0 30(ddddd)FmTx
FmE
1537 0 :M
f2_10 sf
( )S
1539 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 658.666 M ( is the binary encoding of )S
FmE
1540 0 :M
f4_10 sf
( )S
1546 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.412 658.666 M 0 0 12(DD)FmTx
148 670.666 M 0 0 18(fff)FmTx
FmE
1546 0 :M
f2_10 sf
( )S
1548 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166 670.666 M (is the binary encoding of )S
FmE
1548 0 :M
f4_10 sf
( )S
1554 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.912 670.666 M 0 0 6(F)FmTx
148 682.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1554 0 :M
f2_10 sf
( )S
1556 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 682.666 M ( is the binary encoding of )S
FmE
1557 0 :M
f4_10 sf
( )S
1563 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.412 682.666 M 0 0 12(RR)FmTx
148 694.666 M 0 0 30(hh\311hh)FmTx
FmE
1563 0 :M
f2_10 sf
( )S
1565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 694.666 M ( )S
(is zero)S
FmE
1565 0 :M
f4_10 sf
( )S
1571 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 706.666 M 0 0 30(ll\311ll)FmTx
FmE
1571 0 :M
f2_10 sf
( )S
1573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 706.666 M ( )S
(is the binary encoding of )S
FmE
1574 0 :M
f4_10 sf
( )S
1580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.412 706.666 M 0 0 48(NNNNNNNN)FmTx
FmE
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 11 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
1580 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1580 0 :M
f0_12 sf
( )S
1583 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
1583 0 :M
f2_12 sf
( )S
1586 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (9)S
FmE
1586 0 :M
f4_12 sf
( )S
1593 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
1593 0 :M
f4_10 sf
( )S
1599 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.6 52.667 M 0 0 156([n]m[t][p]DD,F,RR,NNNNNNNN)FmTx
FmE
1599 0 :M
f2_10 sf
( )S
1601 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 68.667 M 0.45(corresponds to a relocatable \(if \')W
FmE
1602 0 :M
f4_10 sf
( )S
1608 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.367 68.667 M 0 0 6(n)FmTx
FmE
1608 0 :M
f2_10 sf
( )S
1610 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
284.367 68.667 M 0.45(\' is not present\) or a non-relocatable \(if \'n\' is present\) 32-bit)W
148 80.667 M -0.39(Memory Space address.  If \')W
FmE
1610 0 :M
f4_10 sf
( )S
1616 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
257.797 80.667 M 0 0 6(t)FmTx
FmE
1616 0 :M
f2_10 sf
( )S
1618 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.797 80.667 M -0.39(\' is present, the address is within the first 1 MB of memory address)W
148 92.667 M (space.   The the numerical value is:)S
FmE
1619 0 :M
f4_10 sf
( )S
1625 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166 104.667 M 0 0 12(ss)FmTx
FmE
1625 0 :M
f2_10 sf
( )S
1627 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 104.667 M ( )S
(is )S
FmE
1627 0 :M
f4_10 sf
( )S
1633 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
189.667 104.667 M 0 0 12(10)FmTx
166 116.667 M 0 0 48(bbbbbbbb)FmTx
FmE
1633 0 :M
f2_10 sf
( )S
1635 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214 116.667 M ( )S
(is the parent\'s bus number)S
FmE
1636 0 :M
f4_10 sf
( )S
1642 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166 128.667 M 0 0 30(ddddd)FmTx
FmE
1642 0 :M
f2_10 sf
( )S
1644 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 128.667 M ( )S
(is the binary encoding of )S
FmE
1644 0 :M
f4_10 sf
( )S
1650 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.412 128.667 M 0 0 12(DD)FmTx
166 140.667 M 0 0 18(fff)FmTx
FmE
1650 0 :M
f2_10 sf
( )S
1652 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 140.667 M (is the binary encoding of )S
FmE
1653 0 :M
f4_10 sf
( )S
1659 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285.912 140.667 M 0 0 6(F)FmTx
166 152.667 M 0 0 48(rrrrrrrr)FmTx
FmE
1659 0 :M
f2_10 sf
( )S
1661 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214 152.667 M (is the binary encoding of )S
FmE
1661 0 :M
f4_10 sf
( )S
1667 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
315.912 152.667 M 0 0 12(RR)FmTx
166 164.667 M 0 0 30(hh\311hh)FmTx
FmE
1667 0 :M
f2_10 sf
( )S
1669 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 164.667 M ( is zero)S
FmE
1670 0 :M
f4_10 sf
( )S
1676 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166 176.667 M 0 0 36(ll\311ll )FmTx
FmE
1676 0 :M
f2_10 sf
( )S
1678 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 176.667 M (is the binary encoding of )S
FmE
1678 0 :M
f4_10 sf
( )S
1684 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303.912 176.667 M 0 0 48(NNNNNNNN)FmTx
133.6 200.666 M 0 0 186([n]x[p]DD,F,RR,NNNNNNNNNNNNNNNN)FmTx
FmE
1684 0 :M
f2_10 sf
( )S
1686 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 216.666 M (corresponds to a relocatable \(if \')S
FmE
1687 0 :M
f4_10 sf
( )S
1693 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276.115 216.666 M 0 0 6(n)FmTx
FmE
1693 0 :M
f2_10 sf
( )S
1695 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.115 216.666 M (\' is not present\) or a non-relocatable \(if \')S
FmE
1695 0 :M
f4_10 sf
( )S
1701 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
441.742 216.666 M 0 0 6(n)FmTx
FmE
1701 0 :M
f2_10 sf
( )S
1703 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
447.742 216.666 M (\' is present\) 64-bit )S
148 228.666 M (Memory Space address with the numerical value:)S
FmE
1704 0 :M
f4_10 sf
( )S
1710 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166 240.666 M 0 0 12(ss)FmTx
FmE
1710 0 :M
f2_10 sf
( )S
1712 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 240.666 M ( )S
(is )S
FmE
1712 0 :M
f4_10 sf
( )S
1718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
189.667 240.666 M 0 0 12(10)FmTx
166 252.666 M 0 0 48(bbbbbbbb)FmTx
FmE
1718 0 :M
f2_10 sf
( )S
1720 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214 252.666 M ( )S
(is the parent\'s bus number)S
FmE
1721 0 :M
f4_10 sf
( )S
1727 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166 264.666 M 0 0 30(ddddd)FmTx
FmE
1727 0 :M
f2_10 sf
( )S
1729 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 264.666 M ( )S
(is the binary encoding of )S
FmE
1729 0 :M
f4_10 sf
( )S
1735 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.412 264.666 M 0 0 12(DD)FmTx
166 276.666 M 0 0 18(fff)FmTx
FmE
1735 0 :M
f2_10 sf
( )S
1737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 276.666 M (is the binary encoding of )S
FmE
1738 0 :M
f4_10 sf
( )S
1744 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285.912 276.666 M 0 0 6(F)FmTx
166 288.666 M 0 0 48(rrrrrrrr)FmTx
FmE
1744 0 :M
f2_10 sf
( )S
1746 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
214 288.666 M ( is the binary encoding of )S
FmE
1746 0 :M
f4_10 sf
( )S
1752 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
318.412 288.666 M 0 0 12(RR)FmTx
166 300.666 M 0 0 30(hh\311hh)FmTx
FmE
1752 0 :M
f2_10 sf
( )S
1754 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 300.666 M (,)S
FmE
1755 0 :M
f4_10 sf
( )S
1761 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.5 300.666 M 0 0 30(ll\311ll)FmTx
FmE
1761 0 :M
f2_10 sf
( )S
1763 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228.5 300.666 M ( is the binary encoding of )S
FmE
1763 0 :M
f4_10 sf
( )S
1769 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
332.912 300.666 M 0 0 96(NNNNNNNNNNNNNNNN)FmTx
FmE
1769 0 :M
f2_10 sf
( )S
1771 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 324.666 M -0.146(Conversion of hexadecimal numbers from text representation to numeric representation shall be case-insensitive,)W
76 336.666 M (and leading zeros shall be permitted but not required.)S
76 354.666 M -0.042(Conversion from numeric representation to text representation shall use the lower case forms of the hexadecimal)W
76 366.666 M 0.348(digits in the range )W
FmE
1772 0 :M
f4_10 sf
( )S
1778 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.816 366.666 M 0 0 18(a\311f)FmTx
FmE
1778 0 :M
f2_10 sf
( )S
1780 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.816 366.666 M 0.348(, suppressing leading zeroes, and the )W
FmE
1780 0 :M
f4_10 sf
( )S
1786 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.737 366.666 M 0 0 12(DD)FmTx
FmE
1786 0 :M
f2_10 sf
( )S
1788 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
332.737 366.666 M 0.348( form shall be used for Configuration Space ad-)W
76 378.666 M (dresses where )S
FmE
1789 0 :M
f4_10 sf
( )S
1795 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
134.296 378.666 M 0 0 18(fff)FmTx
FmE
1795 0 :M
f2_10 sf
( )S
1797 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
152.296 378.666 M ( is zero.)S
FmE
1797 0 :M
f0_10 sf
( )S
1799 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 408.666 M (2.2.1.3. Unit Address Representation)S
FmE
1800 0 :M
f2_10 sf
( )S
1802 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 424.666 M -0.43(As required by this specification\'s definition of the )W
FmE
1802 0 :M
f5_10 sf
( )S
1808 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
277.622 424.666 M 0 0 30(\"reg\")FmTx
FmE
1808 0 :M
f2_10 sf
( )S
1810 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
307.622 424.666 M -0.43( property, a function\'s \"unit-number\" \(i.e. the first com-)W
76 436.666 M -0.07(ponent of its \")W
FmE
1811 0 :M
f5_10 sf
( )S
1817 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.361 436.666 M 0 0 24(reg\")FmTx
FmE
1817 0 :M
f2_10 sf
( )S
1819 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156.361 436.666 M -0.07( value\) is the Configuration Space address of the function\'s configuration registers. Since the)W
76 448.666 M 1.049(\"unit-number\" is the address that appears in an Open Firmware \'device path\', it follows that only the )W
FmE
1819 0 :M
f4_10 sf
( )S
1825 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
496.012 448.666 M 0 0 12(DD)FmTx
FmE
1825 0 :M
f2_10 sf
( )S
1827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
508.012 448.666 M 1.049( and)W
FmE
1828 0 :M
f4_10 sf
( )S
1834 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 460.666 M 0 0 30(DD,FF)FmTx
FmE
1834 0 :M
f2_10 sf
( )S
1836 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106 460.666 M ( forms of the text representation can appear in a \'device path\'.)S
FmE
1836 0 :M
f3_10 sf
( )S
1838 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 476.666 M -0.37(Note:  Since the predominant use of the text representation is within \'device paths\', text representations of I/O and)W
76 488.666 M (Memory Space addresses are rarely seen by casual users.)S
76 504.666 M -0.167(Note:  The bus number does not appear in the text representation.  If the bus number were present, then the path-)W
76 516.666 M -0.104(name of a particular device would depend on the particular assignment of bus numbers to bus controllers, so the)W
76 528.666 M -0.025(pathname could change if )W
-0.025(PCI-to-PCI b)W
-0.025(ridges were added or removed from other slots.  \(It is generally undesir-)W
76 540.666 M 0.257(able for the pathname of a particular device to depend on the presence or absence of other devices that are not)W
76 552.666 M -0.432(its ancestors in the device tree.\)  The combination of a device node\'s position in the device tree, its Device Number)W
76 564.666 M 0.266(and its Function Number uniquely select an individual function based on physical characteristics of the system,)W
76 576.666 M (so the function\'s pathname does not change unless the device is physically moved.)S
76 592.666 M 0.154(Note:  The bus number appears in the numerical representation because that makes it easier to implement Con-)W
76 604.666 M 0.309(figuration Space access methods.  The )W
FmE
1839 0 :M
f8_10 sf
( )S
1845 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.653 604.666 M 0 0 66(decode-unit)FmTx
FmE
1845 0 :M
f3_10 sf
( )S
1847 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.653 604.666 M 0.309( method automatically inserts the bus number in the nu-)W
76 616.666 M (merical representation; it can do so because each bus node knows the bus number of the bus it represents.)S
FmE
1847 0 :M
f2_10 sf
( )S
1849 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 634.666 M (Open Firmware implications:)S
76 652.666 M -0.085(Since some processors cannot generate I/O cycles directly, I/O Space accesses must be done with the register ac-)W
76 664.666 M (cess words \(e.g.,)S
FmE
1850 0 :M
f5_9 sf
( )S
1855 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
142.357 664.666 M 0 0 20( rb@)FmTx
FmE
1855 0 :M
f2_10 sf
( )S
1857 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.357 664.666 M (, )S
FmE
1857 0 :M
f5_9 sf
( )S
1862 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.357 664.666 M 0 0 15(rw!)FmTx
FmE
1862 0 :M
f2_10 sf
( )S
1864 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.357 664.666 M (\).)S
76 682.666 M -0.269(It is recommended that a range of virtual addresses be set aside for use by )W
FmE
1865 0 :M
f5_9 sf
( )S
1870 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
369.322 682.666 M 0 0 30(map-in)FmTx
FmE
1870 0 :M
f2_10 sf
( )S
1872 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
399.322 682.666 M -0.269( to I/O Space devices so that the)W
76 694.666 M (register access words can determine when an I/O cycle needs to be generated.)S
76 712.666 M -0.226(Since Configuration Space often does not appear as a subset of the system\'s physical address space, this firmware)W
76 724.666 M 0.718(specification provides bus-specific methods to access Configuration Space.  Likewise, it provides methods for)W
0.502 0.502 0 0.498 0 0 0.502 FmK
56 521.999 2 10 FmqF
FmE
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 12 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
1872 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1872 0 :M
0 G
f0_12 sf
( )S
1875 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
1875 0 :M
f2_12 sf
( )S
1878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (10)S
FmE
1878 0 :M
f4_12 sf
( )S
1885 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
1885 0 :M
f2_10 sf
( )S
1887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 52.667 M (Special Cycles and Interrupt Acknowledge Cycles.)S
FmE
1888 0 :M
f0_12 sf
( )S
1891 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 87 M (2.3. Bus-specific Configuration Variables)S
FmE
1891 0 :M
f2_10 sf
( )S
1893 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 103.667 M -0.056(An Open Firmware-compliant User Interface on a system with a single built-in PCI bus )W
FmE
1893 0 :M
f3_10 sf
( )S
1895 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
409.868 103.667 M (may)S
FmE
1896 0 :M
f2_10 sf
( )S
1898 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
426.526 103.667 M -0.056( implement the)W
58 115.667 M (following PCI-specific Configuration Variable.)S
FmE
1898 0 :M
f5_9 sf
( )S
1903 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 129.667 M 0 0 70(pci-probe-list)FmTx
FmE
1903 0 :M
f2_10 sf
( )S
1905 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.687 129.667 M (\( -- list-str list-len \))S
116.468 N (N)S
FmE
1906 0 :M
f2_9 sf
( )S
1908 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 141 M (Holds list of slots to probe with )S
FmE
1908 0 :M
f5_9 sf
( )S
1913 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
191.734 141 M 0 0 45(probe-pci)FmTx
FmE
1913 0 :M
f2_9 sf
( )S
1915 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.734 141 M ( .)S
76 156 M (A configuration variable containing a string, formatted as described in the following section, indicating the set of slots )S
76 165 M -0.137(that will be probed when )W
FmE
1915 0 :M
f5_9 sf
( )S
1920 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.033 165 M 0 0 45(probe-pci)FmTx
FmE
1920 0 :M
f2_9 sf
( )S
1922 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
212.033 165 M -0.137( is executed.  The maximum length shall be sufficient to contain a string listing all )W
76 174 M (of the PCI bus\'s implemented slots.)S
FmE
1922 0 :M
f0_9 sf
( )S
1924 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 186 M (Configuration Variable Type)S
FmE
1925 0 :M
f2_9 sf
( )S
1927 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
187.984 186 M (: string)S
FmE
1927 0 :M
f0_9 sf
( )S
1929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 198 M (Default value)S
FmE
1929 0 :M
f2_9 sf
( )S
1931 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.234 198 M (: a system-dependent value that includes all available slots, in numerically-ascending order.)S
FmE
1931 0 :M
f3_9 sf
( )S
1933 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 210 M (Note: )S
FmE
1934 0 :M
f5_9 sf
( )S
1939 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.243 210 M 0 0 70(pci-probe-list)FmTx
FmE
1939 0 :M
f3_9 sf
( )S
1941 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168.243 210 M ( is intended for the common case of a system with a single built-in PCI bus.  On systems with )S
76 219 M -0.598(multiple PCI buses, fine-grained control over the probe order can be achieved by repeated execution of the  )W
FmE
1941 0 :M
f5_9 sf
( )S
1946 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
456.348 219 M 0 0 50(probe-self)FmTx
FmE
1946 0 :M
f3_9 sf
( )S
1948 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
506.348 219 M -0.598( )W
76 228 M -0.079(method within individual bus nodes.  In any case, the ability to control the probe order is primarily intended as a conve-)W
76 237 M (nience when debugging faulty expansion cards.  Normally, the default probe order \(all available slots\) is used.)S
FmE
1948 0 :M
f0_12 sf
( )S
1951 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 269 M (2.4. Format of a Probe List)S
FmE
1951 0 :M
f2_10 sf
( )S
1953 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 285.667 M 0.118(A PCI probe list is a text string consisting of a series of lower-case hexadecimal numbers separated by commas.)W
58 297.667 M -0.197(Each number is in the range )W
FmE
1954 0 :M
f4_10 sf
( )S
1960 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.214 297.667 M 0 0 24(0\3111F)FmTx
FmE
1960 0 :M
f2_10 sf
( )S
1962 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
195.214 297.667 M -0.197(, corresponding to the slot with the same Device Number.  For a given PCI bus)W
58 309.667 M (implementation, only the numbers corresponding to existing slots are valid.)S
58 327.667 M (The first number in the series specifies the first slot to be probed, and so on.)S
FmE
1962 0 :M
f0_12 sf
( )S
1965 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 362 M (2.5. FCode Evaluation Semantics)S
FmE
1965 0 :M
f2_10 sf
( )S
1967 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 378.667 M (See the description of )S
FmE
1968 0 :M
f5_10 sf
( )S
1974 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.409 378.667 M 0 0 54(probe-pci)FmTx
FmE
1974 0 :M
f2_10 sf
( )S
1976 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
201.409 378.667 M ( for the precise specification of the FCode evaluation semantics.)S
FmE
1976 0 :M
f0_12 sf
( )S
1979 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 420 M (3. Bus Nodes)S
FmE
1979 0 :M
f3_10 sf
( )S
1981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 436.667 M 0.461(Note: A )W
0.461(PCI-to-PCI b)W
0.461(ridge is a parent of one PCI bus and a child of another. Consequently, a device node)W
58 448.667 M (representing a PCI bridge is both a Bus Node and a Child Node, with both sets of properties and methods.)S
FmE
1982 0 :M
f0_12 sf
( )S
1985 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 483 M (3.1. Properties)S
58 518 M (3.1.1.  Open Firmware-defined Properties for Bus Nodes)S
FmE
1985 0 :M
f2_10 sf
( )S
1987 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 534.666 M -0.543(The following standard properties, as defined in Open Firmware, have special meanings or interpretations for PCI.)W
FmE
1987 0 :M
f5_9 sf
( )S
1992 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 560.666 M 0 0 65(\"device_type\")FmTx
FmE
1992 0 :M
f2_10 sf
( )S
1994 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 560.666 M (S)S
FmE
1995 0 :M
f2_9 sf
( )S
1997 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 575 M -0.488(Standard )W
FmE
1997 0 :M
f3_9 sf
( )S
1999 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.75 575 M (prop-name)S
FmE
1999 0 :M
f2_9 sf
( )S
2001 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.237 575 M -0.488(  to specify the implemented interface. prop-encoded-array:  a string encoded with )W
FmE
2001 0 :M
f5_9 sf
( )S
2006 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
440.75 575 M 0 0 65(encode-string)FmTx
FmE
2006 0 :M
f2_9 sf
( )S
2008 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
505.75 575 M (.)S
76 587 M -0.13(The meaning of this property is as defined in Open Firmware.  A Standard Package conforming to this specification and )W
76 596 M (corresponding to a device that implements a PCI bus shall implement this property with the string value \")S
FmE
2009 0 :M
f4_9 sf
( )S
2014 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
455.817 596 M 0 0 15(pci)FmTx
FmE
2014 0 :M
f2_9 sf
( )S
2016 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
470.817 596 M (\".)S
FmE
2016 0 :M
f5_9 sf
( )S
2021 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 609.666 M 0 0 80(\"#address-cells\")FmTx
FmE
2021 0 :M
f2_10 sf
( )S
2023 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 609.666 M (S)S
FmE
2023 0 :M
f2_9 sf
( )S
2025 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 624 M (Standard )S
FmE
2026 0 :M
f3_9 sf
( )S
2028 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
110.238 624 M (prop-name)S
FmE
2028 0 :M
f2_9 sf
( )S
2030 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.725 624 M ( to define the number of cells necessary to represent a physical address.)S
FmE
2030 0 :M
f3_9 sf
( )S
2032 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 636 M (prop-encoded-array)S
FmE
2032 0 :M
f2_9 sf
( )S
2034 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.969 636 M (:  Integer constant 3, encoded with )S
FmE
2035 0 :M
f5_9 sf
( )S
2040 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
275.422 636 M 0 0 50(encode-int)FmTx
FmE
2040 0 :M
f2_9 sf
( )S
2042 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.422 636 M (.)S
76 648 M (The value of )S
FmE
2042 0 :M
f5_9 sf
( )S
2047 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123.727 648 M 0 0 80(\"#address-cells\")FmTx
FmE
2047 0 :M
f2_9 sf
( )S
2049 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
203.727 648 M ( for PCI Bus Nodes is 3.)S
FmE
2049 0 :M
f5_9 sf
( )S
2054 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 661.666 M 0 0 65(\"#size-cells\")FmTx
FmE
2054 0 :M
f2_10 sf
( )S
2056 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 661.666 M (S)S
FmE
2057 0 :M
f2_9 sf
( )S
2059 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 676 M (Standard )S
FmE
2059 0 :M
f3_9 sf
( )S
2061 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
110.238 676 M (prop-name)S
FmE
2061 0 :M
f2_9 sf
( )S
2063 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.725 676 M ( to define the number of cells necessary to represent the length of a physical address range.)S
FmE
2063 0 :M
f3_9 sf
( )S
2065 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 688 M (prop-encoded-array)S
FmE
2066 0 :M
f2_9 sf
( )S
2068 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.969 688 M (:  Integer constant 2, encoded as with)S
FmE
2068 0 :M
f5_9 sf
( )S
2073 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.917 688 M 0 0 55( encode-int)FmTx
FmE
2073 0 :M
f2_9 sf
( )S
2075 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
337.917 688 M (.)S
76 700 M (The value of )S
FmE
2075 0 :M
f5_9 sf
( )S
2080 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123.727 700 M 0 0 65(\"#size-cells\")FmTx
FmE
2080 0 :M
f2_9 sf
( )S
2082 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.727 700 M ( for PCI Bus Nodes is 2, reflecting PCI\'s 64-bit address space.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
38 430 2 10 FmqF
FmE
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 13 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
2082 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2082 0 :M
0 G
f0_12 sf
( )S
2085 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
2085 0 :M
f2_12 sf
( )S
2088 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (11)S
FmE
2088 0 :M
f4_12 sf
( )S
2095 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
2095 0 :M
f5_9 sf
( )S
2100 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 52.667 M 0 0 25(\"reg\")FmTx
FmE
2100 0 :M
f2_10 sf
( )S
2102 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 52.667 M (S)S
FmE
2103 0 :M
f2_9 sf
( )S
2105 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 67 M (Standard )S
FmE
2105 0 :M
f3_9 sf
( )S
2107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.238 67 M (prop-name)S
FmE
2107 0 :M
f2_9 sf
( )S
2109 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.725 67 M (  to define the package\'s unit-address.)S
94 79 M (For nodes representing PCI)S
(-t)S
(o)S
(-P)S
(CI bridges, the )S
FmE
2109 0 :M
f5_9 sf
( )S
2114 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.195 79 M 0 0 25(\"reg\")FmTx
FmE
2114 0 :M
f2_9 sf
( )S
2116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.195 79 M ( property is as defined for PCI Child Nodes.  The value denotes )S
94 88 M (the Configuration Space address of the bridge\'s configuration registers.)S
94 100 M (For bridges from some other bus to PCI bus, the )S
FmE
2117 0 :M
f5_9 sf
( )S
2122 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.711 100 M 0 0 25(\"reg\")FmTx
FmE
2122 0 :M
f2_9 sf
( )S
2124 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
294.711 100 M ( property is as defined for that other bus)S
(.)S
FmE
2124 0 :M
f5_9 sf
( )S
2129 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 111.667 M 0 0 40(\"ranges\")FmTx
FmE
2129 0 :M
f2_10 sf
( )S
2131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 111.667 M (S)S
FmE
2131 0 :M
f2_9 sf
( )S
2133 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 126 M (Standard )S
FmE
2134 0 :M
f3_9 sf
( )S
2136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.238 126 M (prop-name)S
FmE
2136 0 :M
f2_9 sf
( )S
2138 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.725 126 M (  to define the mapping of parent address to child address spaces.)S
94 138 M -0.005(This property )W
FmE
2138 0 :M
f3_9 sf
( )S
2140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.973 138 M (shall)S
FmE
2140 0 :M
f2_9 sf
( )S
2142 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.474 138 M -0.005( be present for all PCI bus bridges.  In particular, for PCI-to-PCI bridges, this property )W
FmE
2143 0 :M
f3_9 sf
( )S
2145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
475.524 138 M (shall)S
FmE
2145 0 :M
f2_9 sf
( )S
2147 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
493.025 138 M -0.005( indicate )W
94 147 M (the settings of the mapping registers, thus representing the addresses to which the bridge will respond.  For PCI-to-PCI )S
94 156 M -0.372(bridges, there shall be an entry in the )W
FmE
2147 0 :M
f5_9 sf
( )S
2152 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.223 156 M 0 0 40(\"ranges\")FmTx
FmE
2152 0 :M
f2_9 sf
( )S
2154 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.223 156 M -0.372( property for each of the Memory, Prefetchable Memory and/or I/O spac-)W
94 165 M (es if that address space is mapped through the bridge.)S
FmE
2154 0 :M
f0_12 sf
( )S
2157 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 197 M (3.1.2. )S
(B)S
(us-specific Properties for Bus Nodes)S
FmE
2157 0 :M
f5_9 sf
( )S
2162 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 211.667 M 0 0 85(\322clock-frequency\323)FmTx
FmE
2162 0 :M
f2_10 sf
( )S
2164 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 211.667 M (S)S
FmE
2165 0 :M
f3_9 sf
( )S
2167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 226 M (prop-name)S
FmE
2167 0 :M
f2_9 sf
( )S
2169 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.487 226 M (, denotes frequency of PCI clock.)S
FmE
2169 0 :M
f3_9 sf
( )S
2171 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 238 M (prop-encoded-array)S
FmE
2172 0 :M
f2_9 sf
( )S
2174 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.969 238 M -0.352(:  An integer, encoded as with )W
FmE
2174 0 :M
f5_9 sf
( )S
2179 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274.466 238 M 0 0 50(encode-int)FmTx
FmE
2179 0 :M
f2_9 sf
( )S
2181 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
324.466 238 M -0.352(, that represents the clock frequency, in hertz, of the PCI )W
94 247 M (bus for which this node is the parent.)S
FmE
2181 0 :M
f5_9 sf
( )S
2186 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 260.667 M 0 0 55(\"bus-range\")FmTx
FmE
2186 0 :M
f2_10 sf
( )S
2188 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 260.667 M (S)S
FmE
2189 0 :M
f3_9 sf
( )S
2191 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 275 M (prop-name)S
FmE
2191 0 :M
f2_9 sf
( )S
2193 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.487 275 M (, denotes range of bus numbers controlled by this PCI bus.)S
FmE
2193 0 :M
f3_9 sf
( )S
2195 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 287 M (prop-encoded-array)S
FmE
2195 0 :M
f2_9 sf
( )S
2197 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.969 287 M -0.38(:  Two integers, each encoded as with )W
FmE
2198 0 :M
f5_9 sf
( )S
2203 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
301.617 287 M 0 0 50(encode-int)FmTx
FmE
2203 0 :M
f2_9 sf
( )S
2205 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351.617 287 M -0.38(, the first representing the bus number of the PCI )W
94 296 M -0.213(bus implemented by the bus controller represented by this node \(the )W
FmE
2205 0 :M
f3_9 sf
( )S
2207 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.328 296 M -0.213(secondary bus)W
FmE
2207 0 :M
f2_9 sf
( )S
2209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.85 296 M -0.213( number in )W
-0.213(PCI-to-PCI b)W
-0.213(ridge nomen-)W
94 305 M -0.05(clature\), and the second representing the largest bus number of any PCI bus in the portion of the PCI domain that is sub-)W
94 314 M (ordinate to this node \(the )S
FmE
2209 0 :M
f3_9 sf
( )S
2211 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.221 314 M (subordinate bus)S
FmE
2212 0 :M
f2_9 sf
( )S
2214 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
243.968 314 M ( number in )S
(PCI-to-PCI b)S
(ridge nomenclature\).)S
FmE
2214 0 :M
f5_9 sf
( )S
2219 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 325.667 M 0 0 60(\"slot-names\")FmTx
FmE
2219 0 :M
f2_10 sf
( )S
2221 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 325.667 M (S)S
FmE
2221 0 :M
f3_9 sf
( )S
2223 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 340 M (prop-name)S
FmE
2224 0 :M
f2_9 sf
( )S
2226 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.487 340 M (, describes external labeling of add-in slots.)S
FmE
2226 0 :M
f3_9 sf
( )S
2228 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 352 M (prop-encoded-array)S
FmE
2228 0 :M
f2_9 sf
( )S
2230 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.969 352 M -0.145(:  An integer, encoded as with )W
FmE
2230 0 :M
f5_9 sf
( )S
2235 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
275.912 352 M 0 0 50(encode-int)FmTx
FmE
2235 0 :M
f2_9 sf
( )S
2237 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.912 352 M -0.145(, followed by a list of strings, each encoded as with )W
FmE
2238 0 :M
f5_9 sf
( )S
2243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
511 352 M 0 0 15(en-)FmTx
94 361 M 0 0 55(code-string)FmTx
FmE
2243 0 :M
f2_9 sf
( )S
2245 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149 361 M (.)S
94 373 M -0.436(The integer portion of the property value is a bitmask of available slots; for each add-in slot on the bus, the bit correspond-)W
94 382 M -0.534(ing to that slot\'s Device Number is set.  The least-significant bit corresponds to Device Number 0, the next bit corresponds )W
94 391 M (to Device Number 1, etc.  The number of following strings is the same as the number of slots; the first string gives the )S
94 400 M (label that is printed on the chassis for the slot with the smallest Device Number, and so on.)S
FmE
2245 0 :M
f0_12 sf
( )S
2248 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 434 M (3.2. Methods)S
76 469 M (3.2.1. Open Firmware-defined Methods for Bus Nodes)S
FmE
2248 0 :M
f2_10 sf
( )S
2250 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 485.667 M -0.417(A Standard Package implementing the )W
FmE
2250 0 :M
f4_10 sf
( )S
2256 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
230.254 485.667 M 0 0 30(\"pci\")FmTx
FmE
2256 0 :M
f2_10 sf
( )S
2258 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.254 485.667 M -0.417( device type shall implement the following standard methods as de-)W
76 497.667 M -0.251(fined in Open Firmware, with the physical address representations as specified in section 2.1 of this standard, and)W
76 509.667 M (with additional PCI-specific semantics:)S
FmE
2259 0 :M
f5_9 sf
( )S
2264 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 521 M 0 0 20(open)FmTx
FmE
2264 0 :M
f2_9 sf
( )S
2266 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.766 521 M ( \( -- okay? \))S
68.766 N (Prepare this device for subsequent use)S
FmE
2266 0 :M
f5_9 sf
( )S
2271 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 531 M 0 0 25(close)FmTx
FmE
2271 0 :M
f2_9 sf
( )S
2273 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
211.76 531 M (\( -- \))S
81.76 N (Close this previously-open device)S
FmE
2273 0 :M
f5_9 sf
( )S
2278 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 543 M 0 0 30(map-in)FmTx
FmE
2278 0 :M
f2_9 sf
( )S
2280 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
146.767 543 M (\( phys.low phys.mid phys.hi size -- virt \))S
16.767 N (Map the specified subregion.)S
94 558 M (PCI-to-PCI b)S
(ridges pass through addresses unchanged.  Consequently, a )S
(PCI-to-PCI b)S
(ridge node\'s implementation of )S
FmE
2281 0 :M
f5_9 sf
( )S
2286 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 567 M 0 0 30(map-in)FmTx
FmE
2286 0 :M
f2_9 sf
( )S
2288 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124 567 M ( typically just forwards the request to its parent.)S
94 579 M -0.28(For a master PCI bus node in \"probe state\", if the physical address is relocatable, the )W
FmE
2288 0 :M
f5_9 sf
( )S
2293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
395.742 579 M 0 0 30(map-in)FmTx
FmE
2293 0 :M
f2_9 sf
( )S
2295 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.742 579 M -0.28(  method shall assign a base )W
94 588 M (address and set the appropriate base address register to that address.  Such \"probe state\" assignments are temporary and )S
94 597 M (are not necessarily valid after the corresponding )S
FmE
2295 0 :M
f5_9 sf
( )S
2300 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.159 597 M 0 0 35(map-out)FmTx
FmE
2300 0 :M
f2_9 sf
( )S
2302 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
304.159 597 M (.)S
FmE
2302 0 :M
f5_9 sf
( )S
2307 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 606 M 0 0 35(map-out)FmTx
FmE
2307 0 :M
f2_9 sf
( )S
2309 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196.267 606 M (\( virt size -- \))S
66.267 N (Destroy mapping from previous map-in)S
94 621 M (PCI-to-PCI b)S
(ridges pass through addresses unchanged.  Consequently, a )S
(PCI-to-PCI b)S
(ridge node\'s implementation of )S
FmE
2310 0 :M
f5_9 sf
( )S
2315 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 630 M 0 0 35(map-out)FmTx
FmE
2315 0 :M
f2_9 sf
( )S
2317 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129 630 M ( typically just forwards the request to its parent.)S
94 642 M -0.019(For a master PCI bus node in \"probe state\", if the physical address is relocatable and there are no other active mappings )W
94 651 M -0.27(within the relocatable region containing that address, the )W
FmE
2317 0 :M
f5_9 sf
( )S
2322 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.011 651 M 0 0 35(map-out)FmTx
FmE
2322 0 :M
f2_9 sf
( )S
2324 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
333.011 651 M -0.27( method shall unassign the base address of the region, )W
94 660 M -0.053(freeing the corresponding range of PCI address space for later re-use.  A Standard FCode program shall unmap \(as with )W
FmE
2324 0 :M
f5_9 sf
( )S
2329 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 669 M 0 0 35(map-out)FmTx
FmE
2329 0 :M
f2_9 sf
( )S
2331 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129 669 M (\) all base addresses that it mapped and shall )S
(disable m)S
(emory or I/O space access in the Command Register.)S
FmE
2331 0 :M
f5_9 sf
( )S
2336 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 678 M 0 0 45(dma-alloc)FmTx
FmE
2336 0 :M
f2_9 sf
( )S
2338 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196.267 678 M (\( size -- virt \))S
66.267 N (Allocate a memory region for later use)S
FmE
2339 0 :M
f5_9 sf
( )S
2344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 690 M 0 0 40(dma-free)FmTx
FmE
2344 0 :M
f2_9 sf
( )S
2346 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196.267 690 M (\( virt size -- \))S
66.267 N (Free memory allocated with dma-alloc)S
FmE
2346 0 :M
f5_9 sf
( )S
2351 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 702 M 0 0 50(dma-map-in)FmTx
FmE
2351 0 :M
f2_9 sf
( )S
2353 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156.419 702 M (\( .. virt size cacheable? -- devaddr \))S
26.419 N (Convert virtual address to device bus DMA address.)S
FmE
2353 0 :M
f5_9 sf
( )S
2358 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 714 M 0 0 55(dma-map-out)FmTx
FmE
2358 0 :M
f2_9 sf
( )S
2360 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.65 714 M (\( virt devaddr size -- \))S
50.65 N (Free DMA mapping set up with dma-map-in)S
FmE
2360 0 :M
f5_9 sf
( )S
2365 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 726 M 0 0 40(dma-sync)FmTx
FmE
2365 0 :M
f2_9 sf
( )S
2367 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.65 726 M (\( virt devaddr size -- \))S
50.65 N (Synchronize \(flush\) DMA memory caches)S
0.502 0.502 0 0.498 0 0 0.502 FmK
56 73 2 9 FmqF
56 94 2 121 FmqF
56 290 2 9 FmqF
56 308 2 9 FmqF
56 552 2 9 FmqF
56 615 2 9 FmqF
56 663 2 9 FmqF
FmE
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 14 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
2368 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2368 0 :M
0 G
f0_12 sf
( )S
2371 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
2371 0 :M
f2_12 sf
( )S
2374 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (12)S
FmE
2374 0 :M
f4_12 sf
( )S
2381 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
2381 0 :M
f5_9 sf
( )S
2386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 52 M 0 0 50(probe-self)FmTx
0 0 5( )FmTx
FmE
2386 0 :M
f2_9 sf
( )S
2388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
113 52 M (\( arg-str arg-len reg-str reg-len fcode-str fcode-len -- \))S
(Interpret FCode, as a child of this node)S
FmE
2388 0 :M
f5_9 sf
( )S
2393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 64 M 0 0 55(decode-unit)FmTx
FmE
2393 0 :M
f2_9 sf
( )S
2395 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131.767 64 M (\( addr len -- phys.lo phys.mid phys.hi \))S
19.767 N (Convert text representation of address to numerical repre-)S
292 74 M (sentation)S
FmE
2396 0 :M
f5_9 sf
( )S
2401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 84 M 0 0 55(encode-unit)FmTx
FmE
2401 0 :M
f2_9 sf
( )S
2403 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131.767 84 M (\( phys.lo phys.mid phys.hi -- addr len \))S
19.767 N (Convert numerical representation of address to text repre-)S
292 94 M (sentation)S
FmE
2403 0 :M
f3_10 sf
( )S
2405 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 108.667 M -0.051(Note:  The PCI bus is little-endian; i.e. a byte address whose least-significant two bits are both zero uses the bus)W
58 120.667 M 0.054(byte lane containing the least-significant portion of a 32-bit quantity.  Typically, a bridge from a big-endian bus)W
58 132.667 M 0.065(to a PCI bus will swap the byte lanes so that the order of a sequence of bytes is preserved when that sequence is)W
58 144.667 M -0.45(transferred across the bridge.  As a result, the hardware changes the position of bytes within a 32-bit quantity that)W
58 156.667 M -0.096(is viewed as a 32-bit unit, rather than as a sequence of individually-addressed bytes.  In order to properly imple-)W
58 168.667 M -0.501(ment the semantics of the Open Firmware register access words \(e.g.  )W
FmE
2405 0 :M
f1_10 sf
( )S
2407 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.121 168.667 M (rl!\))S
FmE
2408 0 :M
f3_10 sf
( )S
2410 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
348.006 168.667 M -0.501(, the device node for such byte-swapping)W
58 180.667 M (bridges must substitute versions of those words that \"undo\" the hardware byte-swapping.)S
FmE
2410 0 :M
f0_12 sf
( )S
2413 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 215 M (3.2.2. Bus-specific Methods for Bus Nodes)S
58 250 M (3.2.3. Configuration Access Words)S
FmE
2413 0 :M
f2_10 sf
( )S
2415 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 266.667 M -0.028(The methods described below have execution semantics similar \(especially with respect to write-buffer flushing,)W
58 278.667 M 0.285(atomicity, etc.\)  to those of the register access words \(e.g., )W
FmE
2416 0 :M
f5_10 sf
( )S
2422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
296.032 278.667 M 0 0 6(r)FmTx
FmE
2422 0 :M
f0_10 sf
( )S
2424 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.032 278.667 M (b@)S
FmE
2424 0 :M
f2_10 sf
( )S
2426 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
316.89 278.667 M 0.285(, )W
FmE
2427 0 :M
f0_10 sf
( )S
2429 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.175 278.667 M (rw!)S
FmE
2429 0 :M
f2_10 sf
( )S
2431 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
337.161 278.667 M 0.285(\); in most implementations, these methods)W
58 290.667 M (will be implemented via the register access words.)S
58 306.667 M -0.28(The data type \'config-addr\' refers to the \'phys.hi\' cell of the numerical representation of a Configuration Space ad-)W
58 317.666 M (dress.  The \'config-addr\' shall be aligned to the data type of the access. )S
FmE
2432 0 :M
f5_9 sf
( )S
2437 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 330.666 M 0 0 45(config-l@)FmTx
FmE
2437 0 :M
f2_9 sf
( )S
2439 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.028 330.666 M (\( config-addr -- data \))S
94 342 M (Performs a 32-bit Configuration Read.)S
FmE
2439 0 :M
f5_9 sf
( )S
2444 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 361.666 M 0 0 45(config-l!)FmTx
FmE
2444 0 :M
f2_9 sf
( )S
2446 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.028 361.666 M (\( data config-addr -- \))S
94 373 M (Performs a 32-bit Configuration Write.)S
FmE
2446 0 :M
f5_9 sf
( )S
2451 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 392.666 M 0 0 45(config-w@)FmTx
FmE
2451 0 :M
f2_9 sf
( )S
2453 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.028 392.666 M (\( config-addr -- data \))S
94 404 M (Performs a 16-bit Configuration Read.)S
FmE
2454 0 :M
f5_9 sf
( )S
2459 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 423.666 M 0 0 45(config-w!)FmTx
FmE
2459 0 :M
f2_9 sf
( )S
2461 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.028 423.666 M (\( data config-addr -- \))S
94 435 M (Performs a 16-bit Configuration Write.)S
FmE
2461 0 :M
f5_9 sf
( )S
2466 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 454.666 M 0 0 45(config-b@)FmTx
FmE
2466 0 :M
f2_9 sf
( )S
2468 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.028 454.666 M (\( config-addr -- data \))S
94 466 M (Performs an 8-bit Configuration Read.)S
FmE
2468 0 :M
f5_9 sf
( )S
2473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 485.666 M 0 0 45(config-b!)FmTx
FmE
2473 0 :M
f2_9 sf
( )S
2475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.028 485.666 M (\( data config-addr -- \))S
94 497 M (Performs an 8-bit Configuration Write.)S
FmE
2475 0 :M
f5_9 sf
( )S
2480 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 512.666 M 0 0 120(assign-package-addresses)FmTx
FmE
2480 0 :M
f2_9 sf
( )S
2482 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
286.39 512.666 M (\( phandle -- \))S
94 524 M (Assigns addresses \(i.e., creates )S
FmE
2483 0 :M
f4_9 sf
( )S
2488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
207.192 524 M 0 0 100(\"assigned-addresses\")FmTx
FmE
2488 0 :M
f2_9 sf
( )S
2490 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
307.192 524 M ( property\) for the child node denoted by )S
FmE
2490 0 :M
f3_9 sf
( )S
2492 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
453.137 524 M (phandle)S
FmE
2492 0 :M
f2_9 sf
( )S
2494 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
482.132 524 M (.)S
FmE
2494 0 :M
f0_10 sf
( )S
2496 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 559.666 M (3.2.3.1. Address-less Access Words)S
FmE
2497 0 :M
f5_9 sf
( )S
2502 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 573.666 M 0 0 40(intr-ack)FmTx
FmE
2502 0 :M
f5_10 sf
( )S
2508 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98 573.666 M 0 0 6( )FmTx
FmE
2508 0 :M
f2_10 sf
( )S
2510 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104 573.666 M (      )S
FmE
2510 0 :M
f4_9 sf
( )S
2515 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
119 573.666 M 0 0 35( \( -- \))FmTx
FmE
2515 0 :M
f2_9 sf
( )S
2517 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 585 M (Performs a PCI Interrupt Acknowledge Cycle.)S
FmE
2518 0 :M
f5_9 sf
( )S
2523 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 604.666 M 0 0 45(special-!)FmTx
FmE
2523 0 :M
f2_10 sf
( )S
2525 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103 604.666 M (       )S
FmE
2525 0 :M
f4_9 sf
( )S
2530 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
120.5 604.666 M 0 0 80(\( data bus# -- \))FmTx
FmE
2530 0 :M
f2_9 sf
( )S
2532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 616 M (Performs a PCI Special Cycle on the indicated )S
FmE
2532 0 :M
f4_9 sf
( )S
2537 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
245.44 616 M 0 0 20(bus#)FmTx
FmE
2537 0 :M
f2_9 sf
( )S
2539 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
265.44 616 M (.)S
FmE
2540 0 :M
f3_9 sf
( )S
2542 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 631 M -0.387(Note: Standard )W
-0.387(PCI-to-PCI b)W
-0.387(ridges provide a mechanism for converting Configuration Cycles with particular addresses )W
76 640 M -0.477(to Special Cycles. Consequently, for a )W
-0.477(PCI-to-PCI b)W
-0.477(ridge, the likely implementation of )W
FmE
2542 0 :M
f5_9 sf
( )S
2547 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
384.437 640 M 0 0 45(special-!)FmTx
FmE
2547 0 :M
f3_9 sf
( )S
2549 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
429.437 640 M -0.477( involves invoking the )W
76 649 M (parent node\'s )S
FmE
2549 0 :M
f5_9 sf
( )S
2554 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126.915 649 M 0 0 45(config-l!)FmTx
FmE
2554 0 :M
f3_9 sf
( )S
2556 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.915 649 M ( method.)S
FmE
2556 0 :M
f0_12 sf
( )S
2559 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 690 M (4. Child Nodes)S
FmE
2559 0 :M
f3_10 sf
( )S
2561 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 706.666 M 0.2(Note: A )W
0.2(PCI-to-PCI b)W
0.2(ridge is a parent of one PCI bus and a child of another. Consequently, a device node rep-)W
58 718.666 M (resenting a PCI bridge is both a Bus Node and a Child Node, with both sets of properties and methods.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
38 625 2 18 FmqF
38 700 2 10 FmqF
FmE
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 15 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
2562 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2562 0 :M
0 G
f0_12 sf
( )S
2565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
2565 0 :M
f2_12 sf
( )S
2568 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (13)S
FmE
2568 0 :M
f4_12 sf
( )S
2575 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
2575 0 :M
f0_12 sf
( )S
2578 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 54 M (4.1. Properties)S
76 89 M (4.1.1. Open Firmware-defined Properties for Child Nodes)S
FmE
2578 0 :M
f2_10 sf
( )S
2580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 105.667 M (The following properties, as defined in Open Firmware, have special meanings or interpretations for PCI.)S
FmE
2581 0 :M
f5_9 sf
( )S
2586 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 119.667 M 0 0 25(\"reg\")FmTx
FmE
2586 0 :M
f2_10 sf
( )S
2588 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 119.667 M (S)S
FmE
2588 0 :M
f2_9 sf
( )S
2590 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 134 M (Standard )S
FmE
2590 0 :M
f3_9 sf
( )S
2592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.238 134 M (prop-name)S
FmE
2593 0 :M
f2_9 sf
( )S
2595 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.725 134 M (, defines device\'s addressable regions.)S
FmE
2595 0 :M
f3_9 sf
( )S
2597 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 146 M (prop-encoded-array)S
FmE
2597 0 :M
f2_9 sf
( )S
2599 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.969 146 M (:  Arbitrary number of \()S
FmE
2599 0 :M
f3_9 sf
( )S
2601 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.177 146 M (phys-addr size)S
FmE
2602 0 :M
f2_9 sf
( )S
2604 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
304.412 146 M (\) pairs.)S
FmE
2604 0 :M
f3_9 sf
( )S
2606 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 158 M (phys-addr)S
FmE
2606 0 :M
f2_9 sf
( )S
2608 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.49 158 M -0.085( is \()W
FmE
2608 0 :M
f3_9 sf
( )S
2610 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.816 158 M -0.085(phys.lo phys.mid phys.hi)W
FmE
2611 0 :M
f2_9 sf
( )S
2613 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.879 158 M -0.085(\), encoded as with )W
FmE
2613 0 :M
f5_9 sf
( )S
2618 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.262 158 M 0 0 55(encode-phys)FmTx
FmE
2618 0 :M
f2_9 sf
( )S
2620 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
354.262 158 M -0.085(. )W
FmE
2620 0 :M
f3_9 sf
( )S
2622 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
358.677 158 M (size)S
FmE
2622 0 :M
f2_9 sf
( )S
2624 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
372.172 158 M -0.085( is a pair of integers, each encoded as with )W
FmE
2625 0 :M
f5_9 sf
( )S
2630 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 167 M 0 0 50(encode-int)FmTx
FmE
2630 0 :M
f2_9 sf
( )S
2632 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 167 M ( .)S
94 179 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least )S
94 188 M (significant 32 bits thereof.)S
94 200 M -0.623(This property is mandatory for PCI Child Nodes, as defined by Open Firmware.  The property value consists of a sequence )W
94 209 M -0.373(of \()W
FmE
2632 0 :M
f3_9 sf
( )S
2634 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106.367 209 M -0.373(phys-addr, size)W
FmE
2634 0 :M
f2_9 sf
( )S
2636 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.479 209 M -0.373(\) pairs.  In the first such pair, the )W
FmE
2636 0 :M
f3_9 sf
( )S
2638 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276.816 209 M (phys-addr)S
FmE
2639 0 :M
f2_9 sf
( )S
2641 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.306 209 M -0.373( component shall be the Configuration Space address of the )W
94 218 M (beginning of the function\'s set of configuration registers \(i.e.  the )S
FmE
2641 0 :M
f4_9 sf
( )S
2646 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
329.782 218 M 0 0 40(rrrrrrrr)FmTx
FmE
2646 0 :M
f2_9 sf
( )S
2648 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
369.782 218 M ( field is zero\) and the )S
FmE
2648 0 :M
f3_9 sf
( )S
2650 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
448.242 218 M (size)S
FmE
2650 0 :M
f2_9 sf
( )S
2652 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
461.738 218 M ( component shall )S
94 227 M -0.015(be zero.  Each additional \()W
FmE
2653 0 :M
f3_9 sf
( )S
2655 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.377 227 M -0.015(phys-addr, size)W
FmE
2655 0 :M
f2_9 sf
( )S
2657 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
242.847 227 M -0.015(\) pair shall specify the address of an addressable region of Memory Space or I/)W
94 236 M (O Space associated with the function.)S
(  In these pairs, if the \")S
FmE
2657 0 :M
f4_9 sf
( )S
2662 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
311.085 236 M 0 0 5(n)FmTx
FmE
2662 0 :M
f2_9 sf
( )S
2664 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
316.085 236 M (\" bit of phys.hi is 0, reflecting a relocatable address, then )S
FmE
2664 0 :M
f3_9 sf
( )S
2666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 245 M (phys.mid)S
FmE
2667 0 :M
f2_9 sf
( )S
2669 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126.243 245 M -0.086( and )W
FmE
2669 0 :M
f3_9 sf
( )S
2671 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.565 245 M (phys.lo)S
FmE
2671 0 :M
f2_9 sf
( )S
2673 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.31 245 M -0.086( specify an address relative to the value of the associated base register. In general this value will be )W
94 254 M -0.192(zero, specifying an address range corresponding directly to the hardware\'s.  If the \")W
FmE
2673 0 :M
f4_9 sf
( )S
2678 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.899 254 M 0 0 5(n)FmTx
FmE
2678 0 :M
f2_9 sf
( )S
2680 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
394.899 254 M -0.192(\" bit of phys.hi is 1, reflecting a non-)W
94 263 M (relocatable address, then )S
FmE
2681 0 :M
f3_9 sf
( )S
2683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.949 263 M (phys.mid)S
FmE
2683 0 :M
f2_9 sf
( )S
2685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
217.192 263 M ( and )S
FmE
2685 0 :M
f3_9 sf
( )S
2687 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.687 263 M (phys.hi)S
FmE
2687 0 :M
f2_9 sf
( )S
2689 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.432 263 M ( specify an absolute PCI address.)S
94 275 M (I)S
-0.559(n the event that a function has an addressable region that can be accessed relative to more than one Base Address Register )W
94 284 M -0.078(\(for example, in Memory Space relative to one Base Register, and in I/O Space relative to another\), only the primary ac-)W
94 293 M -0.266(cess path \(typically, the one in Memory Space\) shall be listed in the )W
FmE
2690 0 :M
f5_9 sf
( )S
2695 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.455 293 M 0 0 25(\"reg\")FmTx
FmE
2695 0 :M
f2_9 sf
( )S
2697 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
361.455 293 M -0.266( property, and the secondary access path shall )W
94 302 M (be listed in the )S
FmE
2697 0 :M
f5_9 sf
( )S
2702 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.987 302 M 0 0 75(\"alternate-reg\")FmTx
FmE
2702 0 :M
f2_9 sf
( )S
2704 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
223.987 302 M ( property.)S
FmE
2704 0 :M
f3_9 sf
( )S
2706 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 314 M -0.12(Note:  The device FCode is free to construct the second and later pairs in any order, including or omitting references to )W
94 323 M (base address registers, hard-decoded registers, and so on.  However, for compatibility between FCode and earlier non-)S
94 332 M (FCode versions of a device and between Open Firmware and non-Open Firmware systems, it is recommended that the )S
94 341 M (device FCode construct the )S
FmE
2706 0 :M
f10_9 sf
( )S
2711 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.96 341 M 0 0 25(\"reg\")FmTx
FmE
2711 0 :M
f3_9 sf
( )S
2713 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
219.96 341 M (  property  )S
FmE
2714 0 :M
f2_9 sf
( )S
2716 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.95 341 M (exactly)S
FmE
2716 0 :M
f3_9 sf
( )S
2718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285.935 341 M ( as the platform firmware would have in the absence of device )S
94 350 M (FCode, as described under )S
FmE
2718 0 :M
f8_9 sf
( )S
2723 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
193.725 350 M 0 0 45(probe-pci)FmTx
FmE
2723 0 :M
f3_9 sf
( )S
2725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238.725 350 M (.)S
FmE
2725 0 :M
f5_9 sf
( )S
2730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 363.667 M 0 0 60(\"interrupts\")FmTx
FmE
2730 0 :M
f2_10 sf
( )S
2732 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 363.667 M (S)S
FmE
2733 0 :M
f3_9 sf
( )S
2735 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 378 M (prop-name)S
FmE
2735 0 :M
f2_9 sf
( )S
2737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.487 378 M (, the presence of which indicates that the function represented by this node is connected to a PCI expansion )S
94 387 M (connector\'s interrupt line.)S
FmE
2737 0 :M
f3_9 sf
( )S
2739 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 399 M (prop-encoded-array)S
FmE
2740 0 :M
f2_9 sf
( )S
2742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.969 399 M -0.417(:  Integer, encoded as with )W
FmE
2742 0 :M
f5_9 sf
( )S
2747 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
261.676 399 M 0 0 50(encode-int)FmTx
FmE
2747 0 :M
f2_9 sf
( )S
2749 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
311.676 399 M -0.417(.  The integer represents the interrupt line to which this func-)W
94 408 M (tion\'s interrupt is connected; INTA=1, INTB=2, INTC=3, INTD=4.  This value is determined from the contents of the )S
94 417 M (device\'s Configuration Interrupt Pin Register. )S
FmE
2749 0 :M
f0_12 sf
( )S
2752 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 451 M (4.1.2. Bus-specific Properties for Child Nodes)S
FmE
2752 0 :M
f2_10 sf
( )S
2754 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 467.667 M -0.093(Standard Packages corresponding to devices that are children of a PCI bus shall implement the following prop-)W
76 479.667 M (erties, if applicable.)S
FmE
2755 0 :M
f5_9 sf
( )S
2760 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 509.667 M 0 0 75(\"alternate-reg\")FmTx
FmE
2760 0 :M
f2_10 sf
( )S
2762 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 509.667 M (S)S
FmE
2762 0 :M
f3_9 sf
( )S
2764 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 524 M (prop-name)S
FmE
2764 0 :M
f2_9 sf
( )S
2766 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.487 524 M (, defines alternate access paths for addressable regions.)S
FmE
2767 0 :M
f3_9 sf
( )S
2769 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 536 M (prop-encoded-array)S
FmE
2769 0 :M
f2_9 sf
( )S
2771 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.969 536 M (: Arbitrary number of \()S
FmE
2771 0 :M
f3_9 sf
( )S
2773 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.927 536 M (phys-addr size)S
FmE
2773 0 :M
f2_9 sf
( )S
2775 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.162 536 M (\) pairs.)S
FmE
2776 0 :M
f3_9 sf
( )S
2778 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 548 M -0.23(phys-addr )W
FmE
2778 0 :M
f2_9 sf
( )S
2780 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.51 548 M -0.23(is \()W
FmE
2780 0 :M
f3_9 sf
( )S
2782 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.526 548 M -0.23(phys.lo phys.mid phys.hi)W
FmE
2782 0 :M
f2_9 sf
( )S
2784 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.3 548 M -0.23(\), encoded as with )W
FmE
2785 0 :M
f5_9 sf
( )S
2790 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
298.104 548 M 0 0 60(encode-phys.)FmTx
FmE
2790 0 :M
f2_9 sf
( )S
2792 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
358.104 548 M -0.23( )W
FmE
2792 0 :M
f3_9 sf
( )S
2794 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
360.124 548 M (size)S
FmE
2794 0 :M
f2_9 sf
( )S
2796 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.62 548 M -0.23( is a pair of integers, each encoded as with )W
FmE
2796 0 :M
f5_9 sf
( )S
2801 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 557 M 0 0 50(encode-int)FmTx
FmE
2801 0 :M
f2_9 sf
( )S
2803 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 557 M ( .)S
94 569 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least )S
94 578 M (significant 32 bits thereof.)S
94 590 M -0.298(This property describes alternative access paths for the addressable regions described by the )W
FmE
2804 0 :M
f5_9 sf
( )S
2809 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
423.717 590 M 0 0 25(\"reg\")FmTx
FmE
2809 0 :M
f2_9 sf
( )S
2811 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
448.717 590 M -0.298( property.  Typically, )W
94 599 M (an alternative access path exists when a particular part of a device can be accessed either in Memory Space or in I/O )S
94 608 M -0.308(Space, with a separate Base Address register for each of the two access paths.  The primary access paths are described by )W
94 617 M (the )S
FmE
2811 0 :M
f5_9 sf
( )S
2816 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107.245 617 M 0 0 25(\"reg\")FmTx
FmE
2816 0 :M
f2_9 sf
( )S
2818 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.245 617 M ( property, and the secondary access paths, if any, are described by the )S
FmE
2818 0 :M
f5_9 sf
( )S
2823 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.122 617 M 0 0 75(\"alternate-reg\")FmTx
FmE
2823 0 :M
f2_9 sf
( )S
2825 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
460.122 617 M ( property.)S
94 629 M -0.317(If the function has no alternative access paths, the device node shall have no )W
FmE
2825 0 :M
f5_9 sf
( )S
2830 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
366.196 629 M 0 0 75(\"alternate-reg\")FmTx
FmE
2830 0 :M
f2_9 sf
( )S
2832 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
441.196 629 M -0.317( property.  If the device )W
94 638 M -0.401(has alternative access paths, each entry \(i.e. each )W
FmE
2833 0 :M
f3_9 sf
( )S
2835 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.438 638 M -0.401(phys-addr size)W
FmE
2835 0 :M
f2_9 sf
( )S
2837 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.273 638 M -0.401( pair\) of its value represents the secondary access path for )W
94 647 M -0.229(the addressable region whose primary access path is in the corresponding entry of the )W
FmE
2837 0 :M
f5_9 sf
( )S
2842 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.666 647 M 0 0 25(\"reg\")FmTx
FmE
2842 0 :M
f2_9 sf
( )S
2844 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.666 647 M -0.229( property value.  If the num-)W
94 656 M -0.056(ber of )W
FmE
2844 0 :M
f5_9 sf
( )S
2849 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.372 656 M 0 0 75(\"alternate-reg\")FmTx
FmE
2849 0 :M
f2_9 sf
( )S
2851 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.372 656 M -0.056( entries exceeds the number of )W
FmE
2852 0 :M
f5_9 sf
( )S
2857 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303.98 656 M 0 0 25(\"reg\")FmTx
FmE
2857 0 :M
f2_9 sf
( )S
2859 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.98 656 M -0.056( property entries, the additional entries denote address-)W
94 665 M -0.349(able regions that are not represented by )W
FmE
2859 0 :M
f5_9 sf
( )S
2864 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
235.234 665 M 0 0 25(\"reg\")FmTx
FmE
2864 0 :M
f2_9 sf
( )S
2866 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.234 665 M -0.349( property entries, and are thus not intended to be used in normal operation; )W
94 674 M (such regions might, for example, be used for diagnostic functions. If the number of )S
FmE
2866 0 :M
f5_9 sf
( )S
2871 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
395.142 674 M 0 0 75(\"alternate-reg\")FmTx
FmE
2871 0 :M
f2_9 sf
( )S
2873 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
470.142 674 M ( entries is less )S
94 683 M -0.313(than the number of )W
FmE
2873 0 :M
f5_9 sf
( )S
2878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.222 683 M 0 0 25(\"reg\")FmTx
FmE
2878 0 :M
f2_9 sf
( )S
2880 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
188.222 683 M -0.313( entries, the regions described by the extra )W
FmE
2881 0 :M
f5_9 sf
( )S
2886 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
339.895 683 M 0 0 25(\"reg\")FmTx
FmE
2886 0 :M
f2_9 sf
( )S
2888 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
364.895 683 M -0.313( entries do not have alternative access paths.  )W
94 692 M -0.316(An )W
FmE
2888 0 :M
f5_9 sf
( )S
2893 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106.931 692 M 0 0 75(\"alternate-reg\")FmTx
FmE
2893 0 :M
f2_9 sf
( )S
2895 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.931 692 M -0.316( entry whose )W
FmE
2895 0 :M
f3_9 sf
( )S
2897 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
229.215 692 M -0.316(phys.hi )W
FmE
2897 0 :M
f2_9 sf
( )S
2899 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256.894 692 M -0.316(component is zero indicates that the corresponding region does not have an )W
94 701 M -0.029(alternative access path; such an entry can be used as a \"place holder\" to preserve the positions of later entries relative to )W
94 710 M -0.211(the corresponding )W
FmE
2900 0 :M
f5_9 sf
( )S
2905 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.552 710 M 0 0 25(\"reg\")FmTx
FmE
2905 0 :M
f2_9 sf
( )S
2907 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
185.552 710 M -0.211( entries.  The first )W
FmE
2907 0 :M
f5_9 sf
( )S
2912 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.465 710 M 0 0 75(\"alternate-reg\")FmTx
FmE
2912 0 :M
f2_9 sf
( )S
2914 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.465 710 M -0.211( entry, corresponding to the )W
FmE
2914 0 :M
f5_9 sf
( )S
2919 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.874 710 M 0 0 25(\"reg\")FmTx
FmE
2919 0 :M
f2_9 sf
( )S
2921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.874 710 M -0.211( entry describing the )W
94 719 M (function\'s Configuration Space registers, shall have a )S
FmE
2921 0 :M
f3_9 sf
( )S
2923 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.546 719 M (phys.hi)S
FmE
2924 0 :M
f2_9 sf
( )S
2926 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.292 719 M ( component of zero.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
56 230 2 48 FmqF
56 308 2 54 FmqF
FmE
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 16 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
2926 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
2926 0 :M
0 G
f0_12 sf
( )S
2929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
2929 0 :M
f2_12 sf
( )S
2932 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (14)S
FmE
2932 0 :M
f4_12 sf
( )S
2939 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
2939 0 :M
f5_9 sf
( )S
2944 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 56.667 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
2944 0 :M
f2_10 sf
( )S
2946 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 56.667 M (S)S
FmE
2947 0 :M
f3_9 sf
( )S
2949 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 71 M (prop-name)S
FmE
2949 0 :M
f2_9 sf
( )S
2951 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.487 71 M (, denotes offset of FCode image within the device\'s Expansion ROM.)S
FmE
2951 0 :M
f3_9 sf
( )S
2953 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 83 M (prop-encode-)S
(array)S
FmE
2953 0 :M
f2_9 sf
( )S
2955 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.469 83 M (:)S
( one integer, encoded as with )S
FmE
2956 0 :M
f5_9 sf
( )S
2961 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
254.176 83 M 0 0 50(encode-int)FmTx
FmE
2961 0 :M
f2_9 sf
( )S
2963 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
304.176 83 M (.)S
76 95 M (This property indicates the offset of the PCI Expansion ROM image within the device\'s Expansion ROM in which the )S
76 104 M -0.487(FCode image was found;  i.e., the offset of the 0xAA55 signature of that image\'s PCI Expansion ROM Header. This value )W
FmE
2963 0 :M
f3_9 sf
( )S
2965 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 113 M (shall)S
FmE
2965 0 :M
f2_9 sf
( )S
2967 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
93.501 113 M ( be generated before the FCode is evaluated.  Note that the absence of this property indicates that no FCode exists )S
76 122 M (for this device node.)S
FmE
2967 0 :M
f5_9 sf
( )S
2972 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 135.667 M 0 0 100(\"assigned-addresses\")FmTx
FmE
2972 0 :M
f2_10 sf
( )S
2974 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 135.667 M (S)S
FmE
2975 0 :M
f3_9 sf
( )S
2977 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 150 M (prop-name)S
FmE
2977 0 :M
f2_9 sf
( )S
2979 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.487 150 M (, denotes assigned physical addresses)S
FmE
2979 0 :M
f3_9 sf
( )S
2981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 162 M (prop-encoded-array)S
FmE
2982 0 :M
f2_9 sf
( )S
2984 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.969 162 M (:  Zero to six \()S
FmE
2984 0 :M
f3_9 sf
( )S
2986 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.203 162 M (phys-addr size)S
FmE
2986 0 :M
f2_9 sf
( )S
2988 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.438 162 M (\) pairs.)S
FmE
2988 0 :M
f3_9 sf
( )S
2990 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 174 M (phys-addr)S
FmE
2991 0 :M
f2_9 sf
( )S
2993 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112.49 174 M -0.085( is \()W
FmE
2993 0 :M
f3_9 sf
( )S
2995 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.816 174 M -0.085(phys.lo phys.mid phys.hi)W
FmE
2995 0 :M
f2_9 sf
( )S
2997 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.879 174 M -0.085(\), encoded as with )W
FmE
2997 0 :M
f5_9 sf
( )S
3002 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
281.262 174 M 0 0 55(encode-phys)FmTx
FmE
3002 0 :M
f2_9 sf
( )S
3004 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
336.262 174 M -0.085(. )W
FmE
3005 0 :M
f3_9 sf
( )S
3007 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
340.677 174 M (size)S
FmE
3007 0 :M
f2_9 sf
( )S
3009 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
354.172 174 M -0.085( is a pair of integers, each encoded as with )W
FmE
3009 0 :M
f5_9 sf
( )S
3014 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 183 M 0 0 50(encode-int)FmTx
FmE
3014 0 :M
f2_9 sf
( )S
3016 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 183 M ( .)S
76 195 M (The first integer denotes the most-significant 32 bits of the 64-bit region size, and the second integer denotes the least)S
( )S
76 204 M (significant 32 bits thereof.)S
76 216 M (Each entry \(i.e.  each )S
FmE
3016 0 :M
f3_9 sf
( )S
3018 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
154.201 216 M (phys-addr size)S
FmE
3019 0 :M
f2_9 sf
( )S
3021 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.436 216 M ( pair\) in this property value corresponds to either one or two \(in the case 64-bit-ad-)S
76 225 M -0.178(dress Memory Space\) of the function\'s Configuration Space base address registers.  The entry indicates the physical )W
-0.178(PCI )W
76 234 M -0.253(domain )W
-0.253(address that has been assigned to that base address register)W
-0.253( \(or register pair\))W
-0.253(, and the size in bytes of the assigned )W
76 243 M -0.548(region.  The size shall be a power of two \(since the structure of PCI Base Address registers forces the decoding granularity )W
76 252 M (to powers of two\).  The \')S
FmE
3021 0 :M
f4_9 sf
( )S
3026 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.337 252 M 0 0 5(n)FmTx
FmE
3026 0 :M
f2_9 sf
( )S
3028 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.337 252 M (\' bit of each )S
FmE
3028 0 :M
f3_9 sf
( )S
3030 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.436 252 M (phys-addr)S
FmE
3030 0 :M
f2_9 sf
( )S
3032 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.926 252 M ( shall be set to 1, indicating that the address is absolute \(within the PCI )S
76 261 M (domain\'s address space\), not relative to the start of a relocatable region.  The type code shall not be \'00\' \(Configuration )S
76 270.667 M (Space\).  The \')S
FmE
3033 0 :M
f2_10 sf
( )S
3035 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.094 270.667 M (bbbbbbbb)S
FmE
3035 0 :M
f2_9 sf
( )S
3037 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.094 270.667 M (,)S
FmE
3037 0 :M
f2_10 sf
( )S
3039 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.344 270.667 M (ddddd)S
FmE
3040 0 :M
f2_9 sf
( )S
3042 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.344 270.667 M (,)S
FmE
3042 0 :M
f2_10 sf
( )S
3044 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.594 270.667 M (fff)S
FmE
3045 0 :M
f2_9 sf
( )S
3047 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204.576 270.667 M (,)S
FmE
3047 0 :M
f2_10 sf
( )S
3049 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.826 270.667 M (rrrrrrrr)S
FmE
3049 0 :M
f2_9 sf
( )S
3051 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.448 270.667 M (\' field indicates the base register to which the entry applies, and the )S
76 280 M (\')S
FmE
3052 0 :M
f4_9 sf
( )S
3057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
77.619 280 M 0 0 55(hh\311hh,ll\311ll)FmTx
FmE
3057 0 :M
f2_9 sf
( )S
3059 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.619 280 M (\' field contains the assigned address.)S
76 292 M (If addresses have not yet been assigned to the function\'s relocatable regions, this property shall be absent.)S
76 304 M (The values reported in )S
FmE
3059 0 :M
f5_9 sf
( )S
3064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
158.962 304 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3064 0 :M
f2_9 sf
( )S
3066 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.962 304 M ( represent the physical addresses that have been assigned.  If Open )S
76 313 M -0.289(Firmware can not assign address space for a resource \(e.g., the address space has been exhausted\), that resources will not )W
76 322 M -0.397(have an entry in the )W
FmE
3066 0 :M
f5_9 sf
( )S
3071 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.234 322 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3071 0 :M
f2_9 sf
( )S
3073 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.234 322 M -0.397( property.  If no resources were assigned address space, the )W
FmE
3073 0 :M
f5_9 sf
( )S
3078 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
458 322 M 0 0 50(\"assigned-)FmTx
76 331 M 0 0 50(addresses\")FmTx
FmE
3078 0 :M
f2_9 sf
( )S
3080 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 331 M ( property )S
FmE
3081 0 :M
f3_9 sf
( )S
3083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
160.985 331 M (shall)S
FmE
3083 0 :M
f2_9 sf
( )S
3085 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.486 331 M ( have a )S
FmE
3085 0 :M
f3_9 sf
( )S
3087 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.22 331 M (prop-encoded-array)S
FmE
3087 0 :M
f2_9 sf
( )S
3089 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.189 331 M ( of zero length.)S
FmE
3090 0 :M
f3_9 sf
( )S
3092 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 343 M -0.194(Note: There is no implied correspondence between the order of entries in the )W
FmE
3092 0 :M
f8_9 sf
( )S
3097 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.143 343 M 0 0 5(\")FmTx
FmE
3097 0 :M
f5_9 sf
( )S
3102 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
358.143 343 M 0 0 15(reg)FmTx
FmE
3102 0 :M
f8_9 sf
( )S
3107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.143 343 M 0 0 5(\")FmTx
FmE
3107 0 :M
f3_9 sf
( )S
3109 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
378.143 343 M -0.194( property value and order of entries )W
76 352 M (in the )S
FmE
3109 0 :M
f8_9 sf
( )S
3114 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.496 352 M 0 0 5(\")FmTx
FmE
3114 0 :M
f5_9 sf
( )S
3119 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.496 352 M 0 0 90(assigned-addresses)FmTx
FmE
3119 0 :M
f8_9 sf
( )S
3124 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
193.496 352 M 0 0 5(\")FmTx
FmE
3124 0 :M
f3_9 sf
( )S
3126 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.496 352 M ( property value.  The correspondence between the )S
FmE
3126 0 :M
f8_9 sf
( )S
3131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
380.68 352 M 0 0 5(\")FmTx
FmE
3131 0 :M
f5_9 sf
( )S
3136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.68 352 M 0 0 15(reg)FmTx
FmE
3136 0 :M
f8_9 sf
( )S
3141 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.68 352 M 0 0 5(\")FmTx
FmE
3141 0 :M
f3_9 sf
( )S
3143 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
405.68 352 M ( entries and )S
FmE
3144 0 :M
f8_9 sf
( )S
3149 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.42 352 M 0 0 5(\")FmTx
FmE
3149 0 :M
f5_9 sf
( )S
3154 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
455.42 352 M 0 0 45(assigned-)FmTx
76 361 M 0 0 45(addresses)FmTx
FmE
3154 0 :M
f8_9 sf
( )S
3159 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121 361 M 0 0 5(\")FmTx
FmE
3159 0 :M
f3_9 sf
( )S
3161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
126 361 M ( entries is determined by matching the fields denoting the Base Address register.)S
FmE
3161 0 :M
f5_9 sf
( )S
3166 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 374.667 M 0 0 95(\"power-consumption\")FmTx
FmE
3166 0 :M
f2_10 sf
( )S
3168 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 374.667 M (S)S
FmE
3168 0 :M
f3_9 sf
( )S
3170 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 389 M (prop-name)S
FmE
3171 0 :M
f2_9 sf
( )S
3173 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
115.487 389 M (, describes function\'s power requirements)S
FmE
3173 0 :M
f3_9 sf
( )S
3175 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 401 M (prop-encoded-array)S
FmE
3175 0 :M
f2_9 sf
( )S
3177 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.969 401 M (: list of integers, encoded as with )S
FmE
3177 0 :M
f5_9 sf
( )S
3182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.928 401 M 0 0 50(encode-int)FmTx
FmE
3182 0 :M
f2_9 sf
( )S
3184 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
319.928 401 M (, describing the device\'s maximum power consump-)S
76 410 M -0.607(tion in microwatts, categorized by the various power rails and the device\'s power-management state \(standby or fully-on\).  )W
76 419 M (The ints are encoded in the following order:)S
94 431 M -0.513(unspecified standby, unspecified full-on, +5V standby, +5V full-on, +3.3V standby, +3.3V full-on, I/O pwr standby, )W
94 440 M (I/O pwr full-on, reserved standby, reserved full-on)S
76 452 M -0.321(The \"unspecified\" entries indicate that the power division among the various rails is unknown.  The \"unspecified\" entries )W
76 461 M (shall be zero if any of the other entries are non-zero.  The \"unspecified\" entries are provided so that the )S
FmE
3185 0 :M
f5_9 sf
( )S
3190 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
448.909 461 M 0 0 55(\"power-con-)FmTx
76 470 M 0 0 45(sumption\")FmTx
FmE
3190 0 :M
f2_9 sf
( )S
3192 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121 470 M ( property can be created for devices without FCode, from the information on the PRSNT1# and PRSNT2# )S
76 479 M (connector pins.)S
76 491 M (If the number of ints in the encoded property value is less than ten, the power consumption is zero for the cases corre-)S
76 500 M -0.27(sponding to the missing entries.  For example, if there are four ints, they correspond to the two \"unspecified\" and the two )W
76 509 M (\"+5\" numbers, and the others are zero.)S
FmE
3192 0 :M
f0_10 sf
( )S
3194 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 538.667 M (4.1.2.1. Standard PCI Configuration Properties)S
FmE
3194 0 :M
f2_10 sf
( )S
3196 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 554.667 M -0.46(The following properties are created during the probing process, after the device node has been created, but before)W
58 566.667 M 0.454(evaluating the device\'s FCode \(if any\).  They represent the values of standard PCI configuration registers. This)W
58 578.667 M (information is likely to be useful for Client and User interfaces.)S
58 594.667 M 0.013(Unless specified otherwise, each of the following properties has a )W
FmE
3197 0 :M
f3_10 sf
( )S
3199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
323.289 594.667 M (prop-encoded-array)S
FmE
3199 0 :M
f2_10 sf
( )S
3201 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
404.365 594.667 M 0.013( whose value is an integer)W
58 606.667 M (taken directly from the corresponding hardware register, encoded as with )S
FmE
3202 0 :M
f5_10 sf
( )S
3208 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.132 606.667 M 0 0 60(encode-int)FmTx
FmE
3208 0 :M
f2_10 sf
( )S
3210 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.132 606.667 M (.)S
FmE
3210 0 :M
f5_9 sf
( )S
3215 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 620.667 M 0 0 55(\"vendor-id\")FmTx
FmE
3215 0 :M
f2_10 sf
( )S
3217 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 620.667 M (S)S
FmE
3218 0 :M
f5_9 sf
( )S
3223 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 634.666 M 0 0 55(\"device-id\")FmTx
FmE
3223 0 :M
f2_10 sf
( )S
3225 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 634.666 M (S)S
FmE
3225 0 :M
f5_9 sf
( )S
3230 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 648.666 M 0 0 65(\"revision-id\")FmTx
FmE
3230 0 :M
f2_10 sf
( )S
3232 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 648.666 M (S)S
FmE
3233 0 :M
f5_9 sf
( )S
3238 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 662.666 M 0 0 60(\"class-code\")FmTx
FmE
3238 0 :M
f2_10 sf
( )S
3240 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 662.666 M (S)S
FmE
3240 0 :M
f5_9 sf
( )S
3245 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 676.666 M 0 0 60(\"interrupts\")FmTx
FmE
3245 0 :M
f2_10 sf
( )S
3247 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 676.666 M (S)S
FmE
3248 0 :M
f2_9 sf
( )S
3250 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 691 M (This property shall be present if the Interrupt Pin register is non-zero, and shall be absent otherwise.)S
FmE
3250 0 :M
f5_9 sf
( )S
3255 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 702.666 M 0 0 55(\"min-grant\")FmTx
FmE
3255 0 :M
f2_10 sf
( )S
3257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 702.666 M (S)S
FmE
3258 0 :M
f5_9 sf
( )S
3263 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 716.666 M 0 0 65(\"max-latency\")FmTx
FmE
3263 0 :M
f2_10 sf
( )S
3265 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.441 716.666 M (S)S
0.502 0.502 0 0.498 0 0 0.502 FmK
38 77 2 9 FmqF
38 219 2 18 FmqF
FmE
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 17 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
3265 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3265 0 :M
0 G
f0_12 sf
( )S
3268 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
3268 0 :M
f2_12 sf
( )S
3271 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (15)S
FmE
3271 0 :M
f4_12 sf
( )S
3278 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
3278 0 :M
f5_9 sf
( )S
3283 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 52.667 M 0 0 70(\"devsel-speed\")FmTx
FmE
3283 0 :M
f2_10 sf
( )S
3285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 52.667 M (S)S
FmE
3286 0 :M
f5_9 sf
( )S
3291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 66.667 M 0 0 95(\"fast-back-to-back\")FmTx
FmE
3291 0 :M
f4_10 sf
( )S
3297 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171 66.667 M 0 0 12(  )FmTx
FmE
3297 0 :M
f2_10 sf
( )S
3299 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 66.667 M (S)S
FmE
3299 0 :M
f3_9 sf
( )S
3301 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 78 M (prop-encoded-array)S
FmE
3301 0 :M
f2_9 sf
( )S
3303 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.969 78 M (: <none>)S
94 88 M (This property shall be present if the \"Fast Back-to-Back\" bit \(bit 7\) in the function\'s Status Register is set, and shall be )S
94 98 M (absent otherwise.)S
FmE
3304 0 :M
f5_9 sf
( )S
3309 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 110.667 M 0 0 70(\"subsystem-id\")FmTx
FmE
3309 0 :M
f2_10 sf
( )S
3311 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 110.667 M (S)S
FmE
3311 0 :M
f2_9 sf
( )S
3313 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 122 M (This property shall be present if the \"Subsystem ID\" register is non-zero, and shall be absent otherwise.)S
FmE
3313 0 :M
f5_9 sf
( )S
3318 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 134.667 M 0 0 105(\"subsystem-vendor-id\")FmTx
FmE
3318 0 :M
f2_10 sf
( )S
3320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 134.667 M (S)S
FmE
3321 0 :M
f2_9 sf
( )S
3323 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 146 M (This property shall be present if the \"Subsystem Vendor ID\" register is non-zero, and shall be absent otherwise.)S
FmE
3323 0 :M
f5_9 sf
( )S
3328 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 158.667 M 0 0 75(\"66mhz-capable\")FmTx
FmE
3328 0 :M
f2_10 sf
( )S
3330 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 158.667 M (S)S
FmE
3331 0 :M
f3_9 sf
( )S
3333 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 170 M (prop-encoded-array)S
FmE
3333 0 :M
f2_9 sf
( )S
3335 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.969 170 M (: <none>)S
94 180 M -0.628(This property shall be present if the \"66 MHz Capable\" bit \(bit 6\) in the function\'s Status Register is set, and shall be absent )W
94 190 M (otherwise.)S
FmE
3335 0 :M
f5_9 sf
( )S
3340 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 202.667 M 0 0 75(\"udf-supported\")FmTx
FmE
3340 0 :M
f2_10 sf
( )S
3342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.441 202.667 M (S)S
FmE
3343 0 :M
f3_9 sf
( )S
3345 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 214 M (prop-encoded-array)S
FmE
3345 0 :M
f2_9 sf
( )S
3347 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.969 214 M (: <none>)S
94 224 M -0.471(This property shall be present if the \"UDF Supported\" bit \(bit 5\) in the function\'s Status Register is set, and shall be absent )W
94 234 M (otherwise)S
(.)S
FmE
3347 0 :M
f0_12 sf
( )S
3350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 267 M (4.2. Methods)S
76 309 M (5. Bus-specific User Interface Commands)S
FmE
3350 0 :M
f2_10 sf
( )S
3352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 325.667 M -0.107(An Open Firmware-compliant User Interface on a system with PCI )W
FmE
3353 0 :M
f3_10 sf
( )S
3355 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345.922 325.667 M (should)S
FmE
3355 0 :M
f2_10 sf
( )S
3357 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
372.589 325.667 M -0.107( implement the following PCI-specific)W
76 337.667 M (user interface commands.)S
FmE
3358 0 :M
f5_9 sf
( )S
3363 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 351.667 M 0 0 45(probe-pci)FmTx
FmE
3363 0 :M
f2_10 sf
( )S
3365 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
308.845 351.667 M (        \( -- \))S
FmE
3365 0 :M
f2_9 sf
( )S
3367 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 366 M (Interprets FCode for all built-in PCI slots in numerical order.)S
94 378 M (Enter \"probe state\", thus affecting subsequent behavior of the )S
FmE
3367 0 :M
f5_9 sf
( )S
3372 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
317.251 378 M 0 0 30(map-in)FmTx
FmE
3372 0 :M
f2_9 sf
( )S
3374 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
347.251 378 M ( and )S
FmE
3375 0 :M
f5_9 sf
( )S
3380 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
364.746 378 M 0 0 35(map-out)FmTx
FmE
3380 0 :M
f2_9 sf
( )S
3382 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
399.746 378 M ( methods.)S
94 390 M (Scan all slots in numerical order.  For each slot, read the header type field in the configuration register set for function )S
94 399 M (number 0.  If the header type field indicates a )S
(PCI-to-PCI b)S
(ridge, perform the function described in the Probing )S
(PCI-to-)S
94 408 M -0.029(PCI b)W
-0.029(ridges section.  If the header type field indicates a multi-function device, perform the following sequence for each )W
94 417 M -0.128(of the functions that are present \(as determined by the presence of a non-FFFFh value in the Vendor ID field of the func-)W
94 426 M (tion\'s Configuration Space header\).  Otherwise, perform the following sequence for the card\'s function number 0. The )S
94 435 M -0.079(first attempted access to each function )W
FmE
3382 0 :M
f3_9 sf
( )S
3384 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
233.454 435 M (shall)S
FmE
3384 0 :M
f2_9 sf
( )S
3386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.955 435 M -0.079( use  )W
FmE
3386 0 :M
f5_9 sf
( )S
3391 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.462 435 M 0 0 25(lpeek)FmTx
FmE
3391 0 :M
f2_9 sf
( )S
3393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
294.462 435 M -0.079(, because in some systems an attempted access to a non-existent )W
94 444 M (device might result in a processor exception \(e.g. a \"bus error\"\).)S
FmE
3394 0 :M
f3_9 sf
( )S
3396 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 456 M (Note:  Although some PCI implementations will not generate processor exceptions for aborted cycles, that is not an in-)S
94 465 M -0.377(herent limitation of PCI itself, but instead an implementation choice that is appropriate for some system architectures.  A )W
94 474 M -0.126(PCI host bridge knows if it terminated a cycle with a master abort.  Since the PC system architecture lacks the notion of )W
94 483 M (a bus error, PC to PCI host bridges cannot report a bus error to the PC, so they have to complete the cycle and return )S
94 492 M (all ones to the x86 processor.  However, in a non-PC system, the PCI host bridge could terminate the processor cycle )S
94 501 M (with a bus error.  Open Firmware )S
FmE
3396 0 :M
f1_9 sf
( )S
3398 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.985 501 M (peek)S
FmE
3398 0 :M
f3_9 sf
( )S
3400 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
235.974 501 M ( and )S
FmE
3400 0 :M
f1_9 sf
( )S
3402 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.974 501 M (poke)S
FmE
3403 0 :M
f3_9 sf
( )S
3405 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
271.469 501 M ( can behave in their normal way; if the processor can get a bus error, )S
94 510 M -0.256(peek and poke can report it.  If not, )W
FmE
3405 0 :M
f1_9 sf
( )S
3407 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220.911 510 M (peek)S
FmE
3407 0 :M
f3_9 sf
( )S
3409 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.9 510 M -0.256( and )W
FmE
3409 0 :M
f1_9 sf
( )S
3411 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.389 510 M (poke)S
FmE
3412 0 :M
f3_9 sf
( )S
3414 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
272.884 510 M -0.256( will never say they got a bus error, they will just return whatever data )W
94 519 M -0.18(the cycle yielded.  This is not a problem, because the probing process involves doing a )W
FmE
3414 0 :M
f1_9 sf
( )S
3416 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
405.03 519 M (peek)S
FmE
3416 0 :M
f3_9 sf
( )S
3418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
422.019 519 M -0.18( and also looking at the data )W
94 528 M (to see if it is right.)S
FmE
3418 0 :M
f2_9 sf
( )S
3420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 540 M (Create the following properties from the information given in the configuration space header.)S
FmE
3421 0 :M
f5_9 sf
( )S
3426 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 549 M 0 0 55(\"vendor-id\")FmTx
112 561 M 0 0 55(\"device-id\")FmTx
112 573 M 0 0 65(\"revision-id\")FmTx
112 585 M 0 0 60(\"class-code\")FmTx
112 597 M 0 0 60(\"interrupts\")FmTx
112 609 M 0 0 55(\"min-grant\")FmTx
FmE
3426 0 :M
f2_9 sf
( )S
3428 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 609 M (\(Unless Header Type is 01h\))S
FmE
3428 0 :M
f5_9 sf
( )S
3433 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 621 M 0 0 65(\"max-latency\")FmTx
FmE
3433 0 :M
f2_9 sf
( )S
3435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 621 M (\(Unless Header Type is 01h\))S
FmE
3435 0 :M
f5_9 sf
( )S
3440 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 633 M 0 0 70(\"devsel-speed\")FmTx
112 645 M 0 0 95(\"fast-back-to-back\")FmTx
112 657 M 0 0 70(\"subsystem-id\")FmTx
112 669 M 0 0 105(\"subsystem-vendor-id\")FmTx
112 681 M 0 0 75(\"66mhz-capable\")FmTx
112 693 M 0 0 75(\"udf-supported\")FmTx
FmE
3440 0 :M
f3_9 sf
( )S
3442 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 708 M (Note: The feasibility of automatically creating the above properties depends on the ability to recognize the config-)S
112 717 M -0.12(uration header format. At present, there are two such formats - the base format defined by the )W
FmE
3442 0 :M
f2_9 sf
( )S
3444 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450.631 717 M -0.12(PCI Local Bus Spec-)W
112 726 M (ification)S
FmE
3445 0 :M
f3_9 sf
( )S
3447 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.986 726 M -0.291( and the )W
-0.291(PCI-to-PCI b)W
-0.291(ridge format defined by the )W
FmE
3447 0 :M
f2_9 sf
( )S
3449 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
319.565 726 M -0.291(PCI-to-PCI B)W
-0.291(ridge Architecture Specification)W
FmE
3449 0 :M
f3_9 sf
( )S
3451 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
483.372 726 M -0.291(. Those two )W
0.502 0.502 0 0.498 0 0 0.502 FmK
56 228 2 9 FmqF
56 393 2 18 FmqF
56 720 2 9 FmqF
FmE
endp
%%Page: 18 18
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 18 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
3451 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3451 0 :M
0 G
f0_12 sf
( )S
3454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
3454 0 :M
f2_12 sf
( )S
3457 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (16)S
FmE
3457 0 :M
f4_12 sf
( )S
3464 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
3464 0 :M
f3_9 sf
( )S
3466 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 52 M -0.647(formats are almost, but not entirely, consistent with respect to the fields defined above \(in particular, the max-latency )W
94 61 M -0.153(and min-grant fields have a different meaning in the bridge header format\). If additional formats are defined in the )W
94 70 M -0.096(future, then it is possible that firmware written before those formats are defined will not be able to recognize them. )W
94 79 M (The question arises: Should the firmware assume that, with respect to the above fields, new formats are consistent )S
94 88 M -0.272(with the existing ones, creating the properties without regard to header type, or should the firmware do nothing if it )W
94 97 M (sees an unrecognized header type. The latter is, in some sense, safer, but it also precludes forwards compatibility, )S
94 106 M (which is a serious deficiency.)S
FmE
3466 0 :M
f2_9 sf
( )S
3468 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 118 M (Then determine whether or not the function has a expansion ROM image containing an FCode Program.)S
FmE
3469 0 :M
f3_9 sf
( )S
3471 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 130 M -0.055(Note: The location of the Expansion ROM Base Address Register differs between the two currently-defined header )W
94 139 M -0.216(types. Where will it be in future header types? Furthermore, the details of Expansion ROMs on )W
-0.216(PCI-to-PCI b)W
-0.216(ridges )W
94 148 M (are not specified by the current revision of the )S
(PCI-to-PCI b)S
(ridge spec.)S
FmE
3471 0 :M
f2_9 sf
( )S
3473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 160 M (If the function has an FCode Program, evaluate the FCode Program as follows:)S
94 172 M -0.682(Copy the FCode program from expansion ROM into a temporary buffer in RAM and evaluate it as with )W
FmE
3473 0 :M
f5_9 sf
( )S
3478 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
457.613 172 M 0 0 45(byte-load)FmTx
FmE
3478 0 :M
f2_9 sf
( )S
3480 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
502.613 172 M -0.682(.  )W
94 181 M -0.505(\(The temporary RAM buffer may be deallocated afterwards.\)  Set the )W
FmE
3480 0 :M
f5_9 sf
( )S
3485 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
340.31 181 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
3485 0 :M
f2_9 sf
( )S
3487 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
430.31 181 M -0.505( property to the offset )W
94 190 M (of the ROM image at which the FCode was found.)S
94 202 M -0.189(When the FCode Program begins execution, )W
FmE
3488 0 :M
f5_9 sf
( )S
3493 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
254.572 202 M 0 0 50(my-address)FmTx
FmE
3493 0 :M
f2_9 sf
( )S
3495 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
304.572 202 M -0.189( and )W
FmE
3495 0 :M
f5_9 sf
( )S
3500 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
321.69 202 M 0 0 40(my-space)FmTx
FmE
3500 0 :M
f2_9 sf
( )S
3502 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
361.69 202 M -0.189( together return the Configuration Space )W
94 211 M (address of the device\'s configuration register set.)S
FmE
3502 0 :M
f3_9 sf
( )S
3504 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 223 M (Note: Since the phys.mid and phys.lo components of Configuration Spaces addresses must be zero, )S
FmE
3504 0 :M
f5_9 sf
( )S
3509 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
470.176 223 M 0 0 30(my-ad-)FmTx
112 232 M 0 0 25(dress)FmTx
FmE
3509 0 :M
f3_9 sf
( )S
3511 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137 232 M -0.276( returns a pair of zeros; the interesting phys.hi information, which is necessary for accessing the config-)W
112 241 M (uration registers via the )S
FmE
3512 0 :M
f5_9 sf
( )S
3517 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.983 241 M 0 0 45(config-xx)FmTx
FmE
3517 0 :M
f3_9 sf
( )S
3519 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
245.983 241 M ( methods, is returned by )S
FmE
3519 0 :M
f5_9 sf
( )S
3524 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
334.961 241 M 0 0 40(my-space)FmTx
FmE
3524 0 :M
f3_9 sf
( )S
3526 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
374.961 241 M (.)S
FmE
3526 0 :M
f2_9 sf
( )S
3528 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 253 M (The FCode Program is responsible for creating the )S
FmE
3528 0 :M
f5_9 sf
( )S
3533 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.432 253 M 0 0 30(\"name\")FmTx
FmE
3533 0 :M
f2_9 sf
( )S
3535 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
308.432 253 M ( and )S
FmE
3536 0 :M
f5_9 sf
( )S
3541 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.927 253 M 0 0 25(\"reg\")FmTx
FmE
3541 0 :M
f2_9 sf
( )S
3543 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.927 253 M ( properties.)S
76 265 M (If the function does not have an FCode Program:)S
94 277 M (Create the following properties from information in the device\'s Configuration Space registers:)S
FmE
3543 0 :M
f5_9 sf
( )S
3548 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 289 M 0 0 25(\"reg\")FmTx
FmE
3548 0 :M
f2_9 sf
( )S
3550 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
119 289 M (Create the following entries, in the order shown:)S
94 301 M (\245)S
14.851 N (An entry describing the Configuration Space for the device.)S
94 313 M (\245)S
14.851 N -0.562(For each active base address register, in Configuration Space order, an entry describing the entire space mapped )W
130 322 M -0.352(by that base address register \(or, register pair\).  The phys-mid and phys-lo components of these entries are )W
130 331 M -0.398(to be zero, and the size components are to be derived by probing the base address register \(or register pair\).)W
94 343 M (\245)S
14.851 N -0.147(If the device supports an Expansion ROM, an entry describing the Expansion ROM base address register, con-)W
130 352 M (structed as for normal base address registers.)S
94 364 M (\245)S
14.851 N (If applicable, \"legacy\" entries described in section )S
(7.)S
(, in the order shown.)S
FmE
3550 0 :M
f3_9 sf
( )S
3552 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 376 M (Note: Without FCode, it is not possible to determine whether or not there are multiple base address registers )S
130 385.667 M (mapping the same resource, so it is not possible to create an )S
FmE
3552 0 :M
f10_9 sf
( )S
3557 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.203 385.667 M 0 0 70(\"alternate-reg)FmTx
FmE
3557 0 :M
f10_10 sf
( )S
3563 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
420.203 385.667 M 0 0 6(\")FmTx
FmE
3563 0 :M
f3_9 sf
( )S
3565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
426.203 385.667 M (  property.)S
94 398 M -0.022(Note: the number of active base address registers depends in part on the header type configuration field; in partic-)W
130 407 M (ular, header types 0x01and 0x81, denoting the standard )S
(PCI-to-PCI b)S
(ridge header format, have at most )S
130 416 M -0.009(two base address registers, whereas header types 0x00 and 0x80have up to seven base address registers )W
130 425 M (\(including the Expansion ROM\'s\).)S
FmE
3566 0 :M
f5_9 sf
( )S
3571 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 437 M 0 0 30(\"name\")FmTx
FmE
3571 0 :M
f2_9 sf
( )S
3573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124 437 M -0.022(Construct a name of the form )W
FmE
3573 0 :M
f5_9 sf
( )S
3578 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.827 437 M 0 0 60(pciVVVV,DDDD)FmTx
FmE
3578 0 :M
f2_9 sf
( )S
3580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.827 437 M -0.022(. If the Subsystem ID field in the configuration registers for )W
130 446 M -0.442(this device is non-zero, VVVV,DDDD )W
FmE
3580 0 :M
f3_9 sf
( )S
3582 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.986 446 M (shall)S
FmE
3582 0 :M
f2_9 sf
( )S
3584 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.487 446 M -0.442( be the Subsystem Vendor ID and Subsystem ID respectively; )W
130 455 M (otherwise VVVV,DDDD )S
FmE
3585 0 :M
f3_9 sf
( )S
3587 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
223.711 455 M (shall)S
FmE
3587 0 :M
f2_9 sf
( )S
3589 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
241.212 455 M ( be the value of the Vendor ID and Device ID fields.  VVVV and DDDD )S
130 464 M (are ASCII hexadecimal numbers, lower case, without leading zeros.)S
94 476 M -0.207(Create the )W
FmE
3589 0 :M
f5_9 sf
( )S
3594 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.563 476 M 0 0 95(\"power-consumption\")FmTx
FmE
3594 0 :M
f2_9 sf
( )S
3596 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
227.563 476 M -0.207( property from the state of the PRSNT1# and PRSNT2# connector, if possible.)W
76 488 M (Disable fixed-address response by clearing the Command Register.)S
76 500 M -0.095(After all slots have been so probed, exit \"probe state\")W
-0.095( and a)W
-0.095(ssign base addresses \(by allocating the address space and set-)W
76 509 M -0.131(ting the base address register\) for each distinct base address register \(or register pair\))W
-0.131(.  For each base address register \(or )W
76 518 M (register pair\) l)S
(isted in any child\'s )S
FmE
3596 0 :M
f5_9 sf
( )S
3601 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196.072 518 M 0 0 25(\"reg\")FmTx
FmE
3601 0 :M
f2_9 sf
( )S
3603 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
221.072 518 M ( property,)S
( c)S
(reate)S
( an)S
( )S
FmE
3604 0 :M
f5_9 sf
( )S
3609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
292.775 518 M 0 0 105(\"assigned-addresses\" )FmTx
FmE
3609 0 :M
f2_9 sf
( )S
3611 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
397.775 518 M (properties describing those as-)S
76 527 M (signments in the corresponding child device nodes.)S
76 539 M (On each PCI bus within the domain, set the Latency Timer registers for each master to values appropriate for the other )S
76 548 M (devices on that bus, according to the values of the other device\'s MIN_GNT and MAX_LAT registers.)S
76 560 M -0.433(On each PCI bus within the domain, if all target devices on that bus have \"fast back-to-back\" capability, set the \"fast back-)W
76 569 M (to-back\" enable bits in the Command registers of master devices.)S
FmE
3611 0 :M
f5_10 sf
( )S
3617 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 580.667 M 0 0 90(make-properties)FmTx
FmE
3617 0 :M
f2_10 sf
( )S
3619 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.845 580.667 M (\( -- \))S
FmE
3619 0 :M
f2_9 sf
( )S
3621 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 595 M (Create the default PCI properties \(as described above for )S
FmE
3622 0 :M
f5_9 sf
( )S
3627 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.642 595 M 0 0 45(probe-pci)FmTx
FmE
3627 0 :M
f2_9 sf
( )S
3629 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
327.642 595 M (\) for the )S
FmE
3629 0 :M
f3_9 sf
( )S
3631 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
358.872 595 M (current instance)S
FmE
3631 0 :M
f2_9 sf
( )S
3633 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
417.602 595 M (.)S
76 607 M (This user interface word is intended to be used for debugging FCode within the context of )S
FmE
3633 0 :M
f5_9 sf
( )S
3638 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
402.395 607 M 0 0 65(begin-package)FmTx
FmE
3638 0 :M
f2_9 sf
( )S
3640 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
467.395 607 M ( \311 )S
FmE
3641 0 :M
f5_9 sf
( )S
3646 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
480.895 607 M 0 0 20(end-)FmTx
76 616 M 0 0 35(package)FmTx
FmE
3646 0 :M
f2_9 sf
( )S
3648 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 616 M (.  This word )S
FmE
3648 0 :M
f3_9 sf
( )S
3650 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
156.74 616 M (should)S
FmE
3650 0 :M
f2_9 sf
( )S
3652 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.741 616 M ( be )S
(executed b)S
(efore evaluating the FCode for the node.)S
FmE
3652 0 :M
f5_10 sf
( )S
3658 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 627.667 M 0 0 96(assign-addresses)FmTx
FmE
3658 0 :M
f2_10 sf
( )S
3660 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300.845 627.667 M (\( -- )S
(\))S
FmE
3661 0 :M
f2_9 sf
( )S
3663 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 642 M (A)S
(ssign addresses for the )S
FmE
3663 0 :M
f3_9 sf
( )S
3665 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.963 642 M (current instance)S
FmE
3665 0 :M
f2_9 sf
( )S
3667 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
224.693 642 M (.)S
76 654 M (This user interface word is intended to be used for debugging Fcode within the context of )S
FmE
3668 0 :M
f5_9 sf
( )S
3673 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.387 654 M 0 0 65(begin-package)FmTx
FmE
3673 0 :M
f2_9 sf
( )S
3675 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
465.387 654 M ( \311 )S
FmE
3675 0 :M
f5_9 sf
( )S
3680 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
478.887 654 M 0 0 20(end-)FmTx
76 663 M 0 0 35(package)FmTx
FmE
3680 0 :M
f2_9 sf
( )S
3682 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 663 M (.)S
-0.468(  Executing this word causes addresses to be assigned to this node \(based on the current )W
FmE
3682 0 :M
f5_9 sf
( )S
3687 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
422.433 663 M 0 0 25(\"reg\")FmTx
FmE
3687 0 :M
f2_9 sf
( )S
3689 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
447.433 663 M -0.468( property value\), )W
76 672 M (creating an )S
FmE
3689 0 :M
f5_9 sf
( )S
3694 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
117.974 672 M 0 0 100(\"assigned-addresses\")FmTx
FmE
3694 0 :M
f2_9 sf
( )S
3696 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
217.974 672 M ( )S
( )S
(property )S
(reflecting t)S
(hose addresses.  This word should be executed after evalu-)S
76 681 M (ating the FCode for  the node.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
38 133 2 18 FmqF
38 283 2 106 FmqF
38 401 2 9 FmqF
38 494 2 27 FmqF
38 610 2 35 FmqF
38 657 2 18 FmqF
FmE
endp
%%Page: 19 19
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 19 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
3697 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3697 0 :M
0 G
f0_12 sf
( )S
3700 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
3700 0 :M
f2_12 sf
( )S
3703 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (17)S
FmE
3703 0 :M
f4_12 sf
( )S
3710 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
3710 0 :M
f0_12 sf
( )S
3713 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 54 M (6. Probing PCI-)S
(to-)S
(PCI bridges)S
FmE
3713 0 :M
f2_10 sf
( )S
3715 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 70.667 M -0.424(The recursive algorithm described in this section allows bus number and address assignment to be done in a single)W
76 82.667 M -0.314(depth-first manner.  Bus numbers are assigned on the way down the PCI bus )W
-0.314(hierarchy a)W
-0.314(nd addresses are assigned)W
76 94.667 M (to on the way back up.  Another algorithm may be used.)S
FmE
3716 0 :M
f3_10 sf
( )S
3718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 110.667 M 0.511(Note: while this is a simple algorithm \(e.g., it does not require a \"global\" address allocation pass\), it does not)W
76 122.667 M (provide the most optimal system-wide address assignment.)S
FmE
3718 0 :M
f2_10 sf
( )S
3720 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 138.667 M 0.051(If the function is a standard )W
0.051(PCI-to-PCI b)W
0.051(ridge \(as indicated by the class code and the header type fields\), set the)W
76 150.667 M 0.5(bridge\'s Primary Bus # register to the bus number of the parent bus, assign the next bus number to that bridge,)W
76 162.667 M 0.243(setting its Secondary Bus # register to that number, set the bridge\'s Subordinate Bus # register to )W
FmE
3721 0 :M
f4_10 sf
( )S
3727 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.482 162.667 M 0 0 24(0xFF)FmTx
FmE
3727 0 :M
f2_10 sf
( )S
3729 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
492.482 162.667 M 0.243(, and re-)W
76 174.667 M (cursively scan the slots of that bridge\'s subordinate bus.)S
76 190.667 M -0.488(When that recursive scanning process returns, set the bridge\'s Subordinate Bus # register to the largest bus number)W
76 202.667 M 0.066(assigned during the recursive scan.   At this point, bus numbers have been assigned to all subordinate buses, and)W
76 214.666 M 0.842(addresses have been assigned for all devices on the )W
0.842(subordinate b)W
0.842(uses, for this bridge within the PCI domain.)W
76 226.666 M 0.27(Then, assign addresses to all devices on the Secondary Bus and set the Memory Base, Memory Limit, I/O Base)W
76 238.666 M -0.107(and I/O Limit registers of the bridge to their appropriate values and enable Memory and I/O transactions.  Due to)W
76 250.666 M -0.165(the mapping characteristics of )W
-0.165(PCI-to-PCI b)W
-0.165(ridges, the ranges of Memory addresses for subordinate devices )W
FmE
3729 0 :M
f3_10 sf
( )S
3731 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
506.554 250.666 M (shall)S
FmE
3732 0 :M
f2_10 sf
( )S
3734 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 262.666 M (be aligned to 1 MB boundaries, and the ranges of I/O addresses )S
FmE
3734 0 :M
f3_10 sf
( )S
3736 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
332.294 262.666 M (shall)S
FmE
3737 0 :M
f2_10 sf
( )S
3739 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
351.74 262.666 M ( be aligned to 4 KB boundaries.)S
76 278.666 M -0.251(After setting the Memory Base, Memory Limit, I/O Base and I/O Limit registers, create a )W
FmE
3739 0 :M
f5_9 sf
( )S
3744 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
432.636 278.666 M 0 0 40(\"ranges\")FmTx
FmE
3744 0 :M
f2_10 sf
( )S
3746 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
472.636 278.666 M -0.251( property that)W
76 290.666 M (represents the Memory and I/O mappings that have been established.)S
FmE
3747 0 :M
f0_12 sf
( )S
3750 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 332 M (7. )S
(Legacy devices)S
FmE
3750 0 :M
f2_10 sf
( )S
3752 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 348.666 M 0.45(\"Legacy\" VGA and IDE devices that are implemented on PCI will typically have the same \"hard-decoded\" ad-)W
76 360.666 M -0.518(dresses as they did on ISA.  Such devices that have FCode can use explicit indication of their address requirements)W
76 372.666 M 0.566(as described above.  However, for cards that have no FCode image, Open Firmware )W
FmE
3752 0 :M
f3_10 sf
( )S
3754 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
421.833 372.666 M (shall)S
FmE
3755 0 :M
f2_10 sf
( )S
3757 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
441.279 372.666 M 0.566( assume the standard)W
76 384.666 M -0.022(address ranges and )W
FmE
3757 0 :M
f3_10 sf
( )S
3759 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
153.949 384.666 M (shall)S
FmE
3760 0 :M
f2_10 sf
( )S
3762 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.395 384.666 M -0.022( create the )W
FmE
3762 0 :M
f5_10 sf
( )S
3768 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.905 384.666 M 0 0 30(\"reg\")FmTx
FmE
3768 0 :M
f2_10 sf
( )S
3770 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.905 384.666 M -0.022( property with these ranges, in addition to any relocatable regions that)W
76 396.666 M (have base registers.)S
76 412.666 M (For VGA devices \(class-code = )S
FmE
3771 0 :M
f4_10 sf
( )S
3777 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204.633 412.666 M 0 0 48(0x000100)FmTx
FmE
3777 0 :M
f2_10 sf
( )S
3779 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.633 412.666 M ( or )S
FmE
3779 0 :M
f4_10 sf
( )S
3785 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
265.96 412.666 M 0 0 48(0x030000)FmTx
FmE
3785 0 :M
f2_10 sf
( )S
3787 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.96 412.666 M (\), the address ranges are:)S
FmE
3788 0 :M
f4_10 sf
( )S
3794 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 424.666 M 0 0 66(0x3B0-0x3BB)FmTx
FmE
3794 0 :M
f2_10 sf
( )S
3796 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220 424.666 M (\(I/O, aliased; )S
FmE
3796 0 :M
f4_10 sf
( )S
3802 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274.692 424.666 M 0 0 6(t)FmTx
FmE
3802 0 :M
f2_10 sf
( )S
3804 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
280.692 424.666 M (=1\))S
FmE
3805 0 :M
f4_10 sf
( )S
3811 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 435.666 M 0 0 66(0x3C0-0x3DF)FmTx
FmE
3811 0 :M
f2_10 sf
( )S
3813 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220 435.666 M (\(I/O, aliased; )S
FmE
3813 0 :M
f4_10 sf
( )S
3819 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274.692 435.666 M 0 0 6(t)FmTx
FmE
3819 0 :M
f2_10 sf
( )S
3821 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
280.692 435.666 M (=1\))S
FmE
3822 0 :M
f4_10 sf
( )S
3828 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 446.666 M 0 0 90(0xA0000-0xBFFFF)FmTx
FmE
3828 0 :M
f2_10 sf
( )S
3830 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220 446.666 M (\(Memory, below 1MB, )S
FmE
3830 0 :M
f4_10 sf
( )S
3836 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
315.256 446.666 M 0 0 6(t)FmTx
FmE
3836 0 :M
f2_10 sf
( )S
3838 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
321.256 446.666 M (=1\))S
76 461.666 M (For IDE devices \(class-code = )S
FmE
3839 0 :M
f4_10 sf
( )S
3845 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
199.63 461.666 M 0 0 48(0x010100)FmTx
FmE
3845 0 :M
f2_10 sf
( )S
3847 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.63 461.666 M (\), the address ranges are:)S
FmE
3847 0 :M
f4_10 sf
( )S
3853 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 473.666 M 0 0 66(0x1F0-0x1F7)FmTx
FmE
3853 0 :M
f2_10 sf
( )S
3855 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220 473.666 M (Primary Command Block \(I/O\))S
FmE
3856 0 :M
f4_10 sf
( )S
3862 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 484.666 M 0 0 30(0x3F6)FmTx
FmE
3862 0 :M
f2_10 sf
( )S
3864 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220 484.666 M (Primary Control Block \(I/O\))S
FmE
3864 0 :M
f4_10 sf
( )S
3870 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 495.666 M 0 0 66(0x170-0x17F)FmTx
FmE
3870 0 :M
f2_10 sf
( )S
3872 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220 495.666 M (Secondary Command Block \(I/O\))S
FmE
3873 0 :M
f4_10 sf
( )S
3879 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 506.666 M 0 0 30(0x376)FmTx
FmE
3879 0 :M
f2_10 sf
( )S
3881 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220 506.666 M (Secondary Control Block \(I/O\))S
FmE
3881 0 :M
f0_12 sf
( )S
3884 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 547 M (8. )S
(Relationship between PCI Base Registers and Open Firmware Properties)S
FmE
3884 0 :M
f2_10 sf
( )S
3886 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 563.666 M -0.5(Especially in the case of a PCI device with onboard FCode support, there is no particular relationship between PCI)W
76 575.666 M -0.552(base registers and the )W
FmE
3887 0 :M
f5_10 sf
( )S
3893 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.079 575.666 M 0 0 30(\"reg\")FmTx
FmE
3893 0 :M
f2_10 sf
( )S
3895 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.079 575.666 M -0.552( and )W
FmE
3895 0 :M
f5_10 sf
( )S
3901 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.413 575.666 M 0 0 114(\"assigned-addresses)FmTx
FmE
3901 0 :M
f0_10 sf
( )S
3903 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
324.413 575.666 M (\")S
FmE
3904 0 :M
f2_10 sf
( )S
3906 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
329.962 575.666 M -0.552( properties.  A particular base register may or may)W
76 587.666 M -0.568(not be represented in )W
FmE
3906 0 :M
f5_10 sf
( )S
3912 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.801 587.666 M 0 0 24(\"reg)FmTx
FmE
3912 0 :M
f2_10 sf
( )S
3914 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.801 587.666 M -0.568(\" and )W
FmE
3915 0 :M
f5_10 sf
( )S
3921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
206.184 587.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
3921 0 :M
f2_10 sf
( )S
3923 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
326.184 587.666 M -0.568(, and those properties may contain entries referring)W
76 599.666 M -0.005(to addresses not controlled by any base register.  No particular ordering is required in either the )W
FmE
3923 0 :M
f5_10 sf
( )S
3929 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
459.633 599.666 M 0 0 30(\"reg\")FmTx
FmE
3929 0 :M
f2_10 sf
( )S
3931 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
489.633 599.666 M -0.005( property)W
76 611.666 M 0.304(or the )W
FmE
3932 0 :M
f5_10 sf
( )S
3938 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
102.152 611.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
3938 0 :M
f2_10 sf
( )S
3940 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222.152 611.666 M 0.304( property.  A client wishing to make use of the addressing information pro-)W
76 623.666 M -0.507(vided by Open Firmware must scan the )W
FmE
3940 0 :M
f5_10 sf
( )S
3946 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
232.118 623.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
3946 0 :M
f2_10 sf
( )S
3948 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.118 623.666 M -0.507( property looking for an entry specifying the)W
76 635.666 M (desired base-register field in its )S
FmE
3949 0 :M
f3_10 sf
( )S
3951 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
203.991 635.666 M (phys.hi)S
FmE
3951 0 :M
f2_10 sf
( )S
3953 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
232.597 635.666 M (.)S
FmE
3954 0 :M
f0_12 sf
( )S
3957 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 676.999 M (9. )S
(R)S
(OM Image Format for FCode:)S
FmE
3957 0 :M
f0_10 sf
( )S
3959 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121 693.666 M (Offset from start)S
121 705.666 M (of ROM Image)S
106.581 N (Data)S
FmE
3959 0 :M
f4_10 sf
( )S
3965 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.032 721.666 M 0 0 54(00h - 01h)FmTx
FmE
3965 0 :M
f2_10 sf
( )S
3967 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 721.666 M (ROM signature field of ROM Header \(PCI spec 6.3.1.1\))S
0.502 0.502 0 0.498 0 0 0.502 FmK
56 46 2 12 FmqF
56 76 2 10 FmqF
56 132 2 10 FmqF
56 208 2 10 FmqF
56 244 2 10 FmqF
56 272 2 22 FmqF
56 539 2 142 FmqF
FmE
endp
%%Page: 20 20
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 20 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
3968 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
3968 0 :M
0 G
f0_12 sf
( )S
3971 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
3971 0 :M
f2_12 sf
( )S
3974 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (18)S
FmE
3974 0 :M
f4_12 sf
( )S
3981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
3981 0 :M
f4_10 sf
( )S
3987 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107.536 52.667 M 0 0 54(02h - 03h)FmTx
FmE
3987 0 :M
f2_10 sf
( )S
3989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 52.667 M -0.312(Pointer to FCode program.  This is a 16-bit field that is the offset from the start of )W
184 64.667 M -0.468(the ROM image and points to the FCode Program.  The field is in little-endian for-)W
184 76.667 M (mat.  \(This field is within the \"Reserved for processor-unique data\" field of the )S
184 88.667 M (ROM Header.\))S
FmE
3990 0 :M
f4_10 sf
( )S
3996 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107.536 104.667 M 0 0 54(04h - 17h)FmTx
FmE
3996 0 :M
f2_10 sf
( )S
3998 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 104.667 M (Reserved \(remainder of \"Reserved for processor-unique data\" field of the ROM )S
184 116.667 M (Header\).)S
FmE
3998 0 :M
f4_10 sf
( )S
4004 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107.536 132.667 M 0 0 54(18h - 19h)FmTx
FmE
4004 0 :M
f2_10 sf
( )S
4006 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 132.667 M (\"Pointer to PCI Data Structure\" field of ROM Header.)S
FmE
4007 0 :M
f4_10 sf
( )S
4013 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107.536 148.667 M 0 0 66(1Ah - FFFFh)FmTx
FmE
4013 0 :M
f2_10 sf
( )S
4015 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 148.667 M (PCI Data Structure \(PCI spec 6.3.1.2\) with \"Code Type\" = 1)S
FmE
4015 0 :M
f4_10 sf
( )S
4021 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107.536 164.667 M 0 0 66(38h - FFFFh)FmTx
FmE
4021 0 :M
f2_10 sf
( )S
4023 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 164.667 M (The PCI Data Structure \(PCI spec 6.3.1.2\), Vital Product Data, and FCode Pro-)S
184 176.667 M -0.213(gram can each begin anywhere within this range, in any order.  The \"Code Type\" )W
184 188.667 M (field of the PCI Data Structure shall have the value \")S
FmE
4024 0 :M
f4_10 sf
( )S
4030 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
394.659 188.667 M 0 0 6(1)FmTx
FmE
4030 0 :M
f2_10 sf
( )S
4032 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
400.659 188.667 M (\".)S
184 204.666 M (The FCode Program is as described in Open Firmware; its size is given by the )S
184 216.666 M (standard Open Firmware FCode Program header.  FCode bytes shall appear at )S
184 228.666 M (consecutive byte addresses.)S
FmE
4032 0 :M
f0_12 sf
( )S
4035 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 270 M (10. Encapsulated Drivers)S
FmE
4035 0 :M
f2_10 sf
( )S
4037 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 286.666 M -0.155(This section describes a mechanism which allows the encapsulation of run-time drivers within the standard Open)W
58 298.666 M (Firmware expansion ROM.)S
58 314.666 M -0.322(The FCode contained within a PCI card\'s expansion ROM provides for Open Firmware drivers for the device.  To)W
58 326.666 M 0.216(enhance the \"plug-and-play\" of cards in common system platforms, it is desirable to be able to include run-time)W
58 338.666 M (drivers within this expansion ROM, thus eliminating the extra step of installing drivers onto the OS boot device.)S
58 354.666 M -0.283(The information about run-time drivers is encoded as additional standard properties within the device tree.  These)W
58 366.666 M -0.054(properties are created by the FCode probe code of the plug-in card, and are used by the OS to locate and load the)W
58 378.666 M 0.274(appropriate driver.  Two new properties are defined;  they differ as to how the location of the run-time driver is)W
58 390.666 M (defined.)S
FmE
4038 0 :M
f4_10 sf
( )S
4044 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 404.666 M 0 0 60(\"driver,\311\")FmTx
FmE
4044 0 :M
f2_10 sf
( )S
4046 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118 404.666 M ( format)S
FmE
4046 0 :M
f2_9 sf
( )S
4048 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 419 M (This property, encoded as with )S
FmE
4048 0 :M
f5_9 sf
( )S
4053 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
189.46 419 M 0 0 60(encode-bytes)FmTx
FmE
4053 0 :M
f2_9 sf
( )S
4055 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.46 419 M (, contains the run-time driver.)S
FmE
4056 0 :M
f2_10 sf
( )S
4058 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 432.666 M -0.02(This format is used when the run-time driver is contained within the FCode image, itself.  The value of the prop-)W
58 444.666 M -0.589(erty )W
(is)S
75.456 445.666 FmB
6.667 0 FmL
0 0.5 FmSo
82.123 444.666 M -0.589( the encapsulated driver;  the )W
FmE
4058 0 :M
f4_10 sf
( )S
4064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196.312 444.666 M 0 0 108(prop-addr,prop-len)FmTx
FmE
4064 0 :M
f2_10 sf
( )S
4066 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
304.312 444.666 M -0.589( reported by the various \"get-property\" FCodes and/)W
58 456.666 M -0.03(or )W
FmE
4067 0 :M
f4_10 sf
( )S
4073 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
68.798 456.666 M 0 0 42(getprop)FmTx
FmE
4073 0 :M
f2_10 sf
( )S
4075 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
110.798 456.666 M -0.03( Client interface call represent the location and size of the driver within the device tree\'s data space.)W
58 468.666 M (I.e., )S
FmE
4075 0 :M
f5_10 sf
( )S
4081 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
75.766 468.666 M 0 0 72(decode-bytes)FmTx
FmE
4081 0 :M
f2_10 sf
( )S
4083 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
147.766 468.666 M ( could be used to copy the driver into the desired run-time location.)S
FmE
4084 0 :M
f4_10 sf
( )S
4090 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 482.666 M 0 0 84(\"driver-reg,\311\")FmTx
FmE
4090 0 :M
f2_10 sf
( )S
4092 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
142 482.666 M ( format)S
FmE
4092 0 :M
f2_9 sf
( )S
4094 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 497 M (This property, encoded as with the )S
FmE
4094 0 :M
f5_9 sf
( )S
4099 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.705 497 M 0 0 25(\"reg\")FmTx
FmE
4099 0 :M
f0_9 sf
( )S
4101 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
227.705 497 M ( )S
FmE
4102 0 :M
f2_9 sf
( )S
4104 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
229.955 497 M (standard property , contains a relative pointer to the run-time driver.)S
FmE
4104 0 :M
f2_10 sf
( )S
4106 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 510.666 M -0.521(This format is used when the driver is not directly contained within the FCode image, but rather, is located in some)W
58 522.666 M -0.323(other portion of the Expansion ROM.  The value is encoded in a )W
FmE
4106 0 :M
f5_9 sf
( )S
4111 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.169 522.666 M 0 0 25(\"reg\")FmTx
FmE
4111 0 :M
f2_10 sf
( )S
4113 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
338.169 522.666 M -0.323( format, where the address is relative to the)W
58 534.666 M 0.623(expansion ROM\'s base address.  This format conserves device tree \(and, FCode\) space, but requires the OS to)W
58 546.666 M 0.235(perform the actions of mapping in the Expansion ROM, using the information supplied by this property and the)W
FmE
4114 0 :M
f5_9 sf
( )S
4119 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 558.666 M 0 0 100(\"assigned-addresses\")FmTx
FmE
4119 0 :M
f2_10 sf
( )S
4121 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
158 558.666 M ( for the Expansion ROM, and copying the driver, itself.)S
FmE
4121 0 :M
f3_10 sf
( )S
4123 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 574.666 M 1.061(Note:  the )W
FmE
4124 0 :M
f8_9 sf
( )S
4129 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.114 574.666 M 0 0 90(\"fcode-rom-offset\")FmTx
FmE
4129 0 :M
f3_10 sf
( )S
4131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
193.114 574.666 M 1.061( property facilitates the generation of this property within the context of the)W
58 586.666 M -0.351(FCode\'s image.  The driver can be located relative to the ROM image that contains the FCode \(but, does not have)W
58 598.666 M -0.371(to be within the FCode, itself\) without regard to the location of that ROM image relative to others within the same)W
58 610.666 M 0.061(Expansion ROM.  I.e., \"self-relocating\" images containing )W
0.061(encapsulated d)W
0.061(rivers can be created that can be )W
(con-)S
58 622.666 M 0.675(catenated w)W
0.675(ith other images without altering any data within an image \(except, of course, for the Indicator to)W
58 634.666 M (properly indicate the last image\).)S
FmE
4131 0 :M
f0_12 sf
( )S
4134 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 668.999 M (10.1. Naming conventions)S
FmE
4134 0 :M
f2_10 sf
( )S
4136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 685.666 M 0.011(The complete property name for these encapsulated drivers is chosen to allow multiple drivers to co-exist within)W
58 697.666 M -0.257(the expansion ROM.  An OS will locate its desired driver by an exact match of its property name among any such)W
FmE
4137 0 :M
f4_10 sf
( )S
4143 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 709.666 M 0 0 54(\"driver,\")FmTx
FmE
4143 0 :M
f2_10 sf
( )S
4145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 709.666 M -0.217( \(\")W
FmE
4145 0 :M
f4_10 sf
( )S
4151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
121.69 709.666 M 0 0 72(driver-reg,\")FmTx
FmE
4151 0 :M
f2_10 sf
( )S
4153 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
193.69 709.666 M -0.217(\) properties contained within the device tree for this device.  The formats of the)W
58 721.666 M (complete names are:)S
0.502 0.502 0 0.498 0 0 0.502 FmK
38 46 2 10 FmqF
38 126 2 42 FmqF
38 603.999 2 22 FmqF
FmE
endp
%%Page: 21 21
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 21 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
4154 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4154 0 :M
0 G
f0_12 sf
( )S
4157 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
4157 0 :M
f2_12 sf
( )S
4160 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (19)S
FmE
4160 0 :M
f4_12 sf
( )S
4167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
4167 0 :M
f4_10 sf
( )S
4173 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 52.667 M 0 0 48(\"driver,)FmTx
FmE
4173 0 :M
f10_10 sf
( )S
4179 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124 52.667 M 0 0 54(OS-vendor)FmTx
FmE
4179 0 :M
f4_10 sf
( )S
4185 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 52.667 M 0 0 6(,)FmTx
FmE
4185 0 :M
f10_10 sf
( )S
4191 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 52.667 M 0 0 42(OS-type)FmTx
FmE
4191 0 :M
f4_10 sf
( )S
4197 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226 52.667 M 0 0 6(,)FmTx
FmE
4197 0 :M
f10_10 sf
( )S
4203 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
232 52.667 M 0 0 90(Instruction-set)FmTx
FmE
4203 0 :M
f4_10 sf
( )S
4209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322 52.667 M 0 0 6(\")FmTx
76 64.667 M 0 0 72(\"driver-reg,)FmTx
FmE
4209 0 :M
f10_10 sf
( )S
4215 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 64.667 M 0 0 54(OS-vendor)FmTx
FmE
4215 0 :M
f4_10 sf
( )S
4221 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 64.667 M 0 0 6(,)FmTx
FmE
4221 0 :M
f10_10 sf
( )S
4227 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208 64.667 M 0 0 42(OS-type)FmTx
FmE
4227 0 :M
f4_10 sf
( )S
4233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250 64.667 M 0 0 6(,)FmTx
FmE
4233 0 :M
f10_10 sf
( )S
4239 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256 64.667 M 0 0 90(Instruction-set)FmTx
FmE
4239 0 :M
f4_10 sf
( )S
4245 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
346 64.667 M 0 0 6(\")FmTx
FmE
4245 0 :M
f2_10 sf
( )S
4247 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 80.667 M -0.191(The OS-vendor component is as defined for device-names;  i.e., organizational unique identifier \(e.g., stock sym-)W
76 92.667 M (bol\).  The OS-type & Instruction-set components are defined by the OS-vendor.  An example would be:)S
FmE
4248 0 :M
f4_10 sf
( )S
4254 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 108.667 M 0 0 186(\"driver-reg,AAPL,MacOS,PowerPC\")FmTx
FmE
4254 0 :M
f0_12 sf
( )S
4257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 150 M (11. )S
(Examples of )S
FmE
4257 0 :M
f5_12 sf
( )S
4264 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.988 150 M 0 0 35(\"reg\")FmTx
FmE
4264 0 :M
f0_12 sf
( )S
4267 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.988 150 M ( and )S
FmE
4267 0 :M
f5_12 sf
( )S
4274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220.33 150 M 0 0 147(\"assigned-addresses\" )FmTx
FmE
4274 0 :M
f0_12 sf
( )S
4277 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
367.33 150 M (properties)S
FmE
4277 0 :M
f2_10 sf
( )S
4279 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 166.667 M -0.205(The examples in these sections demonstrate the generation and use of the )W
FmE
4279 0 :M
f5_10 sf
( )S
4285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
368.972 166.667 M 0 0 30(\"reg\")FmTx
FmE
4285 0 :M
f2_10 sf
( )S
4287 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
398.972 166.667 M -0.205( and )W
FmE
4288 0 :M
f5_10 sf
( )S
4294 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
417.999 166.667 M 0 0 108(\"assigned-address-)FmTx
76 178.667 M 0 0 18(es\")FmTx
FmE
4294 0 :M
f2_10 sf
( )S
4296 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 178.667 M 0.419( properties for PCI devices.  The first sections demonstrate how )W
FmE
4296 0 :M
f5_10 sf
( )S
4302 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
355.724 178.667 M 0 0 30(\"reg\")FmTx
FmE
4302 0 :M
f2_10 sf
( )S
4304 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.724 178.667 M 0.419( and )W
FmE
4305 0 :M
f5_10 sf
( )S
4311 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
406 178.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4311 0 :M
f2_10 sf
( )S
4313 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 190.667 M -0.391(properties get created while the last sections show how a Client can use the information to determine PCI address-)W
76 202.667 M (es of device resources.)S
76 218.667 M (In the following examples:)S
FmE
4313 0 :M
f4_10 sf
( )S
4319 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103 230.667 M 0 0 6(x)FmTx
0 0 18(xxx)FmTx
FmE
4319 0 :M
f2_10 sf
( )S
4321 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 230.667 M (represents the bus, device, function numbers as appropriate)S
FmE
4322 0 :M
f4_10 sf
( )S
4328 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103 242.666 M 0 0 6(h)FmTx
0 0 42(hhhhhhh)FmTx
FmE
4328 0 :M
f2_10 sf
( )S
4330 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 242.666 M (represents the high 32 bits of a PCI domain address)S
FmE
4330 0 :M
f4_10 sf
( )S
4336 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103 254.666 M 0 0 6(l)FmTx
0 0 42(lllllll)FmTx
FmE
4336 0 :M
f2_10 sf
( )S
4338 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184 254.666 M (represents the low 32 bits of a PCI domain address)S
FmE
4339 0 :M
f0_12 sf
( )S
4342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 289 M (11.1. )S
(Creation of )S
FmE
4342 0 :M
f5_12 sf
( )S
4349 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.307 289 M 0 0 35(\"reg\")FmTx
FmE
4349 0 :M
f0_12 sf
( )S
4352 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
199.307 289 M ( and )S
FmE
4352 0 :M
f5_12 sf
( )S
4359 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
224.648 289 M 0 0 126(\"assigned-address\")FmTx
FmE
4359 0 :M
f0_12 sf
( )S
4362 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.648 289 M ( properties)S
FmE
4362 0 :M
f2_10 sf
( )S
4364 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 305.666 M 0.643(The following sections describe several scenarios of how )W
FmE
4364 0 :M
f5_10 sf
( )S
4370 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
312.154 305.666 M 0 0 30(\"reg\")FmTx
FmE
4370 0 :M
f2_10 sf
( )S
4372 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
342.154 305.666 M 0.643( and )W
FmE
4373 0 :M
f5_10 sf
( )S
4379 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
362.879 305.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4379 0 :M
f2_10 sf
( )S
4381 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
482.879 305.666 M 0.643( properties)W
76 317.666 M (would get created in various situations.)S
FmE
4381 0 :M
f0_12 sf
( )S
4384 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 352 M (11.1.1. )S
(A single 256-byte address base register, without FCode.)S
FmE
4384 0 :M
f2_10 sf
( )S
4386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 368.666 M (This example device has a single a single 256-byte, non-prefetchable memory range and no Expansion ROM:)S
112 384.666 M (Base address register )S
FmE
4387 0 :M
f4_10 sf
( )S
4393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.897 384.666 M 0 0 24(0x10)FmTx
FmE
4393 0 :M
f2_10 sf
( )S
4395 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
222.897 384.666 M (:)S
148 400.666 M 1.057(Discovered to be present, and requiring )W
FmE
4395 0 :M
f4_10 sf
( )S
4401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
314.552 400.666 M 0 0 30(0x100)FmTx
FmE
4401 0 :M
f2_10 sf
( )S
4403 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
344.552 400.666 M 1.057( bytes of address space, by reading)W
FmE
4404 0 :M
f4_10 sf
( )S
4410 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 412.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
4410 0 :M
f2_10 sf
( )S
4412 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208 412.666 M ( after writing )S
FmE
4412 0 :M
f4_10 sf
( )S
4418 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.692 412.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4418 0 :M
f2_10 sf
( )S
4420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.692 412.666 M (.)S
112 428.666 M (Base address register 0x14:)S
148 444.666 M 6.16(Not present, as discovered by reading back )W
FmE
4421 0 :M
f4_10 sf
( )S
4427 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.487 444.666 M 0 0 60(0x00000000)FmTx
FmE
4427 0 :M
f2_10 sf
( )S
4429 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
425.487 444.666 M 6.16( after writing)W
FmE
4429 0 :M
f4_10 sf
( )S
4435 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 456.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4435 0 :M
f2_10 sf
( )S
4437 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208 456.666 M (.)S
112 472.666 M (\(same for 0x18, 0x1C, 0x20, 0x24, and 0x30\))S
FmE
4438 0 :M
f5_10 sf
( )S
4444 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 488.666 M 0 0 30(\"reg\")FmTx
FmE
4444 0 :M
f2_10 sf
( )S
4446 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106 488.666 M ( property \(created during probing\))S
FmE
4446 0 :M
f4_10 sf
( )S
4452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 500.666 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
112 512.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
112 522.666 M 0 0 264(02xxxx10 00000000 00000000 00000000 00000100)FmTx
FmE
4452 0 :M
f5_10 sf
( )S
4458 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 536.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4458 0 :M
f2_10 sf
( )S
4460 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
196 536.666 M ( property \(created after probing, during address assignment\))S
FmE
4461 0 :M
f4_10 sf
( )S
4467 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 550.666 M 0 0 264(82xxxx10 00000000 llllll00 00000000 00000100)FmTx
FmE
4467 0 :M
f2_10 sf
( )S
4469 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 566.666 M (with the resulting base address registers contents:)S
FmE
4469 0 :M
f4_10 sf
( )S
4475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 582.666 M 0 0 30(0x10:)FmTx
42 N 0 0 48(llllll00)FmTx
FmE
4475 0 :M
f0_12 sf
( )S
4478 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 617 M (11.1.2. )S
(A simple VGA device, without FCode.)S
FmE
4478 0 :M
f2_10 sf
( )S
4480 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 633.666 M -0.596(This example consists of a simple VGA device, with no relocatable regions and a 4K non-FCode Expansion ROM.)W
112 649.666 M (Base address register 0x10:)S
148 665.666 M 1.48(Discovered to be not implemented by reading back a )W
FmE
4481 0 :M
f4_10 sf
( )S
4487 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
374.848 665.666 M 0 0 60(0x00000000)FmTx
FmE
4487 0 :M
f2_10 sf
( )S
4489 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
434.848 665.666 M 1.48( after writing)W
FmE
4489 0 :M
f4_10 sf
( )S
4495 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 677.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4495 0 :M
f2_10 sf
( )S
4497 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208 677.666 M (.)S
112 693.666 M (\(same for 0x14, 0x18, 0x1C, 0x20, 0x24\))S
112 709.666 M (Expansion ROM base address register \(0x30\):)S
148 725.666 M -0.034(Discovered to be present, and requiring 0x1000 bytes by reading back a 0xFFFFF000)W
0.502 0.502 0 0.498 0 0 0.502 FmK
56 142 2 587 FmqF
FmE
endp
%%Page: 22 22
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 22 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
4498 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4498 0 :M
0 G
f0_12 sf
( )S
4501 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
4501 0 :M
f2_12 sf
( )S
4504 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (20)S
FmE
4504 0 :M
f4_12 sf
( )S
4511 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
4511 0 :M
f2_10 sf
( )S
4513 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130 52.667 M (after writing 0xFFFFFFFF.)S
FmE
4514 0 :M
f5_10 sf
( )S
4520 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 68.667 M 0 0 30(\"reg\")FmTx
FmE
4520 0 :M
f2_10 sf
( )S
4522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88 68.667 M ( property \(created during probing\))S
FmE
4522 0 :M
f4_10 sf
( )S
4528 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 80.667 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
94 92.667 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
94 102.667 M 0 0 264(02xxxx30 00000000 00000000 00000000 00001000)FmTx
94 112.667 M 0 0 144(81xxxx00 00000000 000003)FmTx
0 0 12(B0)FmTx
0 0 102( 00000000 0000000)FmTx
0 0 6(C)FmTx
94 122.667 M 0 0 144(81xxxx00 00000000 000003)FmTx
0 0 12(C0)FmTx
0 0 108( 00000000 00000020)FmTx
94 132.667 M 0 0 126(82xxxx00 00000000 000)FmTx
0 0 12(A0)FmTx
0 0 126(000 00000000 00020000)FmTx
FmE
4528 0 :M
f5_10 sf
( )S
4534 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 146.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4534 0 :M
f2_10 sf
( )S
4536 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 146.667 M ( property \(created after probing, during address assignment\))S
FmE
4537 0 :M
f4_10 sf
( )S
4543 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 162.667 M 0 0 264(82xxxx30 00000000 lllll000 00000000 00001000)FmTx
FmE
4543 0 :M
f2_10 sf
( )S
4545 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 178.667 M (with the resulting base address registers:)S
FmE
4545 0 :M
f4_10 sf
( )S
4551 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 194.666 M 0 0 30(0x30:)FmTx
42 N 0 0 48(lllll000)FmTx
FmE
4551 0 :M
f0_12 sf
( )S
4554 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 229 M (11.1.3. )S
(A single 256 resource, Memory and I/O accessible, without FCode)S
FmE
4554 0 :M
f2_10 sf
( )S
4556 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 245.666 M 0.404(This example consists of a device that has a single resource, requiring 256 bytes of address space, but which is)W
58 257.666 M 0.346(accessible as either I/O or Memory mapping;  i.e., it contains two address base registers, one for I/O Space and)W
58 269.666 M -0.377(one for Memory Space.  For this example, no Expansion ROM base address register is implemented;  hence, there)W
58 281.666 M (is no FCode.)S
94 297.666 M (Base address register 0x10:)S
130 313.666 M -0.624(Discovered to be a Memory base address register, requiring 256 bytes of address space,)W
130 325.666 M (by reading back a )S
FmE
4557 0 :M
f4_10 sf
( )S
4563 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
203.298 325.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
4563 0 :M
f2_10 sf
( )S
4565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.298 325.666 M ( after writing )S
FmE
4565 0 :M
f4_10 sf
( )S
4571 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
317.991 325.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4571 0 :M
f2_10 sf
( )S
4573 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
377.991 325.666 M (.)S
94 341.666 M (Base address register 0x14:)S
130 357.666 M 0.035(Discovered to be a I/O base address register, requiring 256 bytes of address space, by)W
130 369.666 M (reading back a )S
FmE
4574 0 :M
f4_10 sf
( )S
4580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
190.798 369.666 M 0 0 60(0xFFFFFF01)FmTx
FmE
4580 0 :M
f2_10 sf
( )S
4582 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.798 369.666 M ( after writing )S
FmE
4582 0 :M
f4_10 sf
( )S
4588 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
305.491 369.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4588 0 :M
f2_10 sf
( )S
4590 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.491 369.666 M (.)S
94 385.666 M (Base address registers 0x18, 0x1C 0x20, 0x24 and 0x30:)S
130 401.666 M 1.48(Discovered to be not implemented by reading back a )W
FmE
4591 0 :M
f4_10 sf
( )S
4597 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.848 401.666 M 0 0 60(0x00000000)FmTx
FmE
4597 0 :M
f2_10 sf
( )S
4599 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
416.848 401.666 M 1.48( after writing)W
FmE
4599 0 :M
f4_10 sf
( )S
4605 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130 413.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4605 0 :M
f2_10 sf
( )S
4607 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
190 413.666 M (.)S
FmE
4608 0 :M
f5_10 sf
( )S
4614 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 429.666 M 0 0 30(\"reg\")FmTx
FmE
4614 0 :M
f2_10 sf
( )S
4616 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
88 429.666 M ( property \(created during probing\))S
FmE
4616 0 :M
f4_10 sf
( )S
4622 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 445.666 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
94 457.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
94 467.666 M 0 0 264(02xxxx10 00000000 00000000 00000000 00000100)FmTx
94 477.666 M 0 0 264(01xxxx14 00000000 00000000 00000000 00000100)FmTx
FmE
4622 0 :M
f5_10 sf
( )S
4628 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 501.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4628 0 :M
f2_10 sf
( )S
4630 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178 501.666 M ( property \(created after probing, during address assignment\))S
FmE
4631 0 :M
f4_10 sf
( )S
4637 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 513.666 M 0 0 264(81xxxx14 00000000 llllll00 00000000 00000100)FmTx
94 523.666 M 0 0 264(82xxxx10 00000000 llllll00 00000000 00000100)FmTx
FmE
4637 0 :M
f2_10 sf
( )S
4639 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 537.666 M (with the resulting base registers:)S
FmE
4639 0 :M
f4_10 sf
( )S
4645 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 549.666 M 0 0 30(0x10:)FmTx
42 N 0 0 48(llllll00)FmTx
FmE
4645 0 :M
f2_10 sf
( )S
4647 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 549.666 M (\(a memory address\))S
FmE
4648 0 :M
f4_10 sf
( )S
4654 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 559.666 M 0 0 30(0x14:)FmTx
42 N 0 0 48(llllll01)FmTx
FmE
4654 0 :M
f2_10 sf
( )S
4656 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238 559.666 M (\(an I/O address\))S
FmE
4656 0 :M
f3_10 sf
( )S
4658 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 573.666 M -0.081(Note that this platform appears to allocate I/O space first, yielding an assigned-addresses property in a different)W
58 585.666 M (order from the reg property.)S
FmE
4659 0 :M
f0_12 sf
( )S
4662 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 619.999 M (11.1.4. )S
(A single 256 resource, Memory and I/O accessible, with FCode.)S
FmE
4662 0 :M
f2_10 sf
( )S
4664 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 636.666 M -0.044(The same function as in 11.4, but with 4K of FCode that reveals that the first 32 bytes of the registers are unused)W
58 648.666 M (and the second 32 bytes are used only for diagnostic purposes:)S
94 680.666 M (Base address register 0x10:)S
130 696.666 M -0.624(Discovered to be a Memory base address register, requiring 256 bytes of address space,)W
130 708.666 M (by reading back a )S
FmE
4664 0 :M
f4_10 sf
( )S
4670 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
203.298 708.666 M 0 0 60(0xFFFFFF00)FmTx
FmE
4670 0 :M
f2_10 sf
( )S
4672 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.298 708.666 M ( after writing )S
FmE
4673 0 :M
f4_10 sf
( )S
4679 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
317.991 708.666 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4679 0 :M
f2_10 sf
( )S
4681 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
377.991 708.666 M (.)S
94 724.666 M (Base address register 0x14:)S
0.502 0.502 0 0.498 0 0 0.502 FmK
38 46 2 50 FmqF
38 106 2 621.999 FmqF
FmE
endp
%%Page: 23 23
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 23 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
4681 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4681 0 :M
0 G
f0_12 sf
( )S
4684 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 27 M (Revision 1.6)S
203.024 N (PCI Bus Binding to Open Firmware)S
FmE
4684 0 :M
f2_12 sf
( )S
4687 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (21)S
FmE
4687 0 :M
f4_12 sf
( )S
4694 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
31 55 M 0 0 14( 1)FmTx
31 67 M 0 0 14( 2)FmTx
31 79 M 0 0 14( 3)FmTx
31 91 M 0 0 14( 4)FmTx
31 103 M 0 0 14( 5)FmTx
31 115 M 0 0 14( 6)FmTx
31 127 M 0 0 14( 7)FmTx
31 139 M 0 0 14( 8)FmTx
31 151 M 0 0 14( 9)FmTx
31 163 M 0 0 14(10)FmTx
31 175 M 0 0 14(11)FmTx
31 187 M 0 0 14(12)FmTx
31 199 M 0 0 14(13)FmTx
31 211 M 0 0 14(14)FmTx
31 223 M 0 0 14(15)FmTx
31 235 M 0 0 14(16)FmTx
31 247 M 0 0 14(17)FmTx
31 259 M 0 0 14(18)FmTx
31 271 M 0 0 14(19)FmTx
31 283 M 0 0 14(20)FmTx
31 295 M 0 0 14(21)FmTx
31 307 M 0 0 14(22)FmTx
31 319 M 0 0 14(23)FmTx
31 331 M 0 0 14(24)FmTx
31 343 M 0 0 14(25)FmTx
31 355 M 0 0 14(26)FmTx
31 367 M 0 0 14(27)FmTx
31 379 M 0 0 14(28)FmTx
31 391 M 0 0 14(29)FmTx
31 403 M 0 0 14(30)FmTx
31 415 M 0 0 14(31)FmTx
31 427 M 0 0 14(32)FmTx
31 439 M 0 0 14(33)FmTx
31 451 M 0 0 14(34)FmTx
31 463 M 0 0 14(35)FmTx
31 475 M 0 0 14(36)FmTx
31 487 M 0 0 14(37)FmTx
31 499 M 0 0 14(38)FmTx
31 511 M 0 0 14(39)FmTx
31 523 M 0 0 14(40)FmTx
31 535 M 0 0 14(41)FmTx
31 547 M 0 0 14(42)FmTx
31 559 M 0 0 14(43)FmTx
31 571 M 0 0 14(44)FmTx
31 583 M 0 0 14(45)FmTx
31 595 M 0 0 14(46)FmTx
31 607 M 0 0 14(47)FmTx
31 619 M 0 0 14(48)FmTx
31 631 M 0 0 14(49)FmTx
31 643 M 0 0 14(50)FmTx
31 655 M 0 0 14(51)FmTx
31 667 M 0 0 14(52)FmTx
31 679 M 0 0 14(53)FmTx
31 691 M 0 0 14(54)FmTx
31 703 M 0 0 14(55)FmTx
31 715 M 0 0 14(56)FmTx
31 727 M 0 0 14(57)FmTx
FmE
4694 0 :M
f2_10 sf
( )S
4696 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 52.667 M 0.035(Discovered to be a I/O base address register, requiring 256 bytes of address space, by)W
148 64.667 M (reading back a )S
FmE
4697 0 :M
f4_10 sf
( )S
4703 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208.798 64.667 M 0 0 60(0xFFFFFF01)FmTx
FmE
4703 0 :M
f2_10 sf
( )S
4705 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.798 64.667 M ( after writing )S
FmE
4705 0 :M
f4_10 sf
( )S
4711 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
323.491 64.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4711 0 :M
f2_10 sf
( )S
4713 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
383.491 64.667 M (.)S
112 80.667 M (Base address registers 0x18, 0x1C 0x20, 0x24:)S
148 96.667 M 1.48(Discovered to be not implemented by reading back a )W
FmE
4714 0 :M
f4_10 sf
( )S
4720 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
374.848 96.667 M 0 0 60(0x00000000)FmTx
FmE
4720 0 :M
f2_10 sf
( )S
4722 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
434.848 96.667 M 1.48( after writing)W
FmE
4722 0 :M
f4_10 sf
( )S
4728 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 108.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4728 0 :M
f2_10 sf
( )S
4730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208 108.667 M (.)S
112 124.667 M (Expansion ROM base address register \(0x30\):)S
148 140.667 M 0.557(Discovered to be present, and requiring )W
FmE
4731 0 :M
f4_10 sf
( )S
4737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
311.552 140.667 M 0 0 36(0x1000)FmTx
FmE
4737 0 :M
f2_10 sf
( )S
4739 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
347.552 140.667 M 0.557( bytes of address space, by reading)W
FmE
4739 0 :M
f4_10 sf
( )S
4745 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148 152.667 M 0 0 60(0xFFFFF000)FmTx
FmE
4745 0 :M
f2_10 sf
( )S
4747 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
208 152.667 M ( after writing )S
FmE
4748 0 :M
f4_10 sf
( )S
4754 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.692 152.667 M 0 0 60(0xFFFFFFFF)FmTx
FmE
4754 0 :M
f2_10 sf
( )S
4756 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
322.692 152.667 M (.)S
76 168.667 M 0.455(The Expansion ROM is discovered to contain a valid FCode image which is evaluated.  This FCode creates its)W
76 180.667 M (own )S
FmE
4756 0 :M
f5_9 sf
( )S
4761 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95.719 180.667 M 0 0 25(\"reg\")FmTx
FmE
4761 0 :M
f2_10 sf
( )S
4763 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
120.719 180.667 M ( property, reflecting knowledge of the intended usage of the addressable resource.)S
FmE
4764 0 :M
f5_10 sf
( )S
4770 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 196.667 M 0 0 30(\"reg\")FmTx
FmE
4770 0 :M
f2_10 sf
( )S
4772 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106 196.667 M ( property \(created during probing by the FCode program\))S
FmE
4772 0 :M
f4_10 sf
( )S
4778 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 212.666 M 0 0 258(phys_hi  phys_mid phys_lo  size_hi  size_lo)FmTx
112 224.666 M 0 0 264(00xxxx00 00000000 00000000 00000000 00000000)FmTx
112 234.666 M 0 0 264(02xxxx10 00000000 00000040 00000000 000000C0)FmTx
FmE
4778 0 :M
f5_10 sf
( )S
4784 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 258.666 M 0 0 90(\"alternate-reg\")FmTx
FmE
4784 0 :M
f2_10 sf
( )S
4786 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166 258.666 M ( property \(created during probing by the FCode program\))S
FmE
4787 0 :M
f4_10 sf
( )S
4793 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 270.666 M 0 0 264(00000000 00000000 00000000 00000000 00000000)FmTx
112 280.666 M 0 0 282(01xxxx14 00000000 00000040 00000000 000000c0 *1)FmTx
112 290.666 M 0 0 282(02xxxx10 00000000 00000020 00000000 00000020 *2)FmTx
112 300.666 M 0 0 282(01xxxx14 00000000 00000020 00000000 00000020 *3)FmTx
FmE
4793 0 :M
f2_10 sf
( )S
4795 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 314.666 M (Notes:)S
112 326.666 M (    *1 Secondary access to operational registers)S
112 336.666 M (    *2 Primary access to diagnostic registers)S
112 346.666 M (    *3 Secondary access to diagnostic registers)S
FmE
4795 0 :M
f5_10 sf
( )S
4801 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 370.666 M 0 0 126(\"assigned-addresses\" )FmTx
FmE
4801 0 :M
f2_10 sf
( )S
4803 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202 370.666 M (property \(created after probing, during address assignment\))S
FmE
4804 0 :M
f4_10 sf
( )S
4810 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 382.666 M 0 0 264(81xxxx14 00000000 llllll00 00000000 00000100)FmTx
112 392.666 M 0 0 264(82xxxx10 00000000 llllll00 00000000 00000100)FmTx
FmE
4810 0 :M
f2_10 sf
( )S
4812 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94 416.666 M (with the resulting base registers:)S
FmE
4812 0 :M
f4_10 sf
( )S
4818 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 428.666 M 0 0 30(0x10:)FmTx
42 N 0 0 48(llllll00)FmTx
FmE
4818 0 :M
f2_10 sf
( )S
4820 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256 428.666 M (\(a memory address\))S
FmE
4821 0 :M
f4_10 sf
( )S
4827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
112 438.666 M 0 0 30(0x14:)FmTx
42 N 0 0 48(llllll01)FmTx
FmE
4827 0 :M
f2_10 sf
( )S
4829 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
256 438.666 M (\(an I/O address\))S
FmE
4829 0 :M
f0_12 sf
( )S
4832 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 471 M (11.2. )S
(Computing PCI addresses from )S
FmE
4832 0 :M
f5_12 sf
( )S
4839 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
268.29 471 M 0 0 35(\"reg\")FmTx
FmE
4839 0 :M
f0_12 sf
( )S
4842 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
303.29 471 M ( and )S
FmE
4842 0 :M
f5_12 sf
( )S
4849 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.632 471 M 0 0 140(\"assigned-addresses\")FmTx
FmE
4849 0 :M
f2_10 sf
( )S
4851 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 487.666 M 0.646(The following sections show how a device driver or Client program could use the information provided in the)W
FmE
4852 0 :M
f5_10 sf
( )S
4858 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 499.666 M 0 0 30(\"reg\")FmTx
FmE
4858 0 :M
f2_10 sf
( )S
4860 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106 499.666 M ( and )S
FmE
4860 0 :M
f5_10 sf
( )S
4866 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.438 499.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4866 0 :M
f2_10 sf
( )S
4868 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
245.438 499.666 M ( properties.)S
76 515.666 M 0.214(The phrases \"PCI address space\" or \"PCI domain\" indicate an address is the PCI physical address space as used)W
76 527.666 M 0.243(on the PCI bus in question.  This PCI physical address space is not necessarily the same as the physical address)W
76 539.666 M -0.56(space in which a processor would access the PCI resource.  Especially in the case of PCI I/O space, host PCI bridg-)W
76 551.666 M 0.405(es \(i.e., PCI bridges that are attached to the processor bus\) may perform an address translation function.  In the)W
76 563.666 M -0.393(following examples, another sequence of steps is, in general, necessary to determine the appropriate processor ad-)W
76 575.666 M (dress to use.  The information necessary for these steps is contained in the )S
FmE
4869 0 :M
f5_10 sf
( )S
4875 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
374.494 575.666 M 0 0 48(\"ranges\")FmTx
FmE
4875 0 :M
f2_10 sf
( )S
4877 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
422.494 575.666 M ( properties of bus nodes.)S
FmE
4877 0 :M
f0_12 sf
( )S
4880 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 609.999 M (11.2.1. )S
(Determining the address of a register of example in Section )S
(11.1.4.)S
FmE
4880 0 :M
f2_10 sf
( )S
4882 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
76 626.666 M 0.436(Problem: Given the last device described in Section )W
(11.1.4.)S
0.436(, determine the physical address associated with the)W
76 638.666 M (3rd byte of its operational registers.)S
76 654.666 M 0.36(1.  Extract the second )W
FmE
4883 0 :M
f3_10 sf
( )S
4885 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.653 654.666 M (phys-addr,size)S
FmE
4885 0 :M
f2_10 sf
( )S
4887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
224.692 654.666 M 0.36( pair from the )W
FmE
4888 0 :M
f5_10 sf
( )S
4894 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.327 654.666 M 0 0 30(\"reg\")FmTx
FmE
4894 0 :M
f2_10 sf
( )S
4896 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.327 654.666 M 0.36( property.  \(We know to use the second pair because)W
76 666.666 M -0.186(the first pair is the Configuration Space entry and the device documentation tells us that the second pair is the op-)W
76 678.666 M (erational registers.\))S
76 694.666 M (2.  Note that the \325)S
FmE
4896 0 :M
f4_10 sf
( )S
4902 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145.976 694.666 M 0 0 6(n)FmTx
FmE
4902 0 :M
f2_10 sf
( )S
4904 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
151.976 694.666 M (\325 bit is zero, indicating a relocatable region.  Note that the )S
FmE
4905 0 :M
f4_10 sf
( )S
4911 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.208 694.666 M 0 0 48(rrrrrrrr)FmTx
FmE
4911 0 :M
f2_10 sf
( )S
4913 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
433.208 694.666 M ( field is )S
FmE
4913 0 :M
f4_10 sf
( )S
4919 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
465.698 694.666 M 0 0 24(0x10)FmTx
FmE
4919 0 :M
f2_10 sf
( )S
4921 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
489.698 694.666 M (.)S
76 710.666 M 0.203(3.  Search the )W
FmE
4922 0 :M
f5_10 sf
( )S
4928 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.73 710.666 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4928 0 :M
f2_10 sf
( )S
4930 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.73 710.666 M 0.203(  property for an entry with an )W
FmE
4930 0 :M
f4_10 sf
( )S
4936 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
378.078 710.666 M 0 0 48(rrrrrrrr)FmTx
FmE
4936 0 :M
f2_10 sf
( )S
4938 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
426.078 710.666 M 0.203( field of )W
FmE
4939 0 :M
f4_10 sf
( )S
4945 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
460.837 710.666 M 0 0 24(0x10)FmTx
FmE
4945 0 :M
f2_10 sf
( )S
4947 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.837 710.666 M 0.203(.  Find the)W
76 722.666 M (second entry.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
56 46 2 679.999 FmqF
FmE
endp
%%Page: 24 24
%%BeginPageSetup
initializepage
(Ron Hochsprung; page: 24 of 24)setjob
%%EndPageSetup
gS 0 0 584 777 rC
0 0 .5 :F
4947 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
4947 0 :M
0 G
f0_12 sf
( )S
4950 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 27 M (PCI Bus Binding to Open Firmware)S
203.024 N (Revision 1.6)S
FmE
4950 0 :M
f2_12 sf
( )S
4953 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
274 757 M (22)S
FmE
4953 0 :M
f4_12 sf
( )S
4960 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
13 55 M 0 0 14( 1)FmTx
13 67 M 0 0 14( 2)FmTx
13 79 M 0 0 14( 3)FmTx
13 91 M 0 0 14( 4)FmTx
13 103 M 0 0 14( 5)FmTx
13 115 M 0 0 14( 6)FmTx
13 127 M 0 0 14( 7)FmTx
13 139 M 0 0 14( 8)FmTx
13 151 M 0 0 14( 9)FmTx
13 163 M 0 0 14(10)FmTx
13 175 M 0 0 14(11)FmTx
13 187 M 0 0 14(12)FmTx
13 199 M 0 0 14(13)FmTx
13 211 M 0 0 14(14)FmTx
13 223 M 0 0 14(15)FmTx
13 235 M 0 0 14(16)FmTx
13 247 M 0 0 14(17)FmTx
13 259 M 0 0 14(18)FmTx
13 271 M 0 0 14(19)FmTx
13 283 M 0 0 14(20)FmTx
13 295 M 0 0 14(21)FmTx
13 307 M 0 0 14(22)FmTx
13 319 M 0 0 14(23)FmTx
13 331 M 0 0 14(24)FmTx
13 343 M 0 0 14(25)FmTx
13 355 M 0 0 14(26)FmTx
13 367 M 0 0 14(27)FmTx
13 379 M 0 0 14(28)FmTx
13 391 M 0 0 14(29)FmTx
13 403 M 0 0 14(30)FmTx
13 415 M 0 0 14(31)FmTx
13 427 M 0 0 14(32)FmTx
13 439 M 0 0 14(33)FmTx
13 451 M 0 0 14(34)FmTx
13 463 M 0 0 14(35)FmTx
13 475 M 0 0 14(36)FmTx
13 487 M 0 0 14(37)FmTx
13 499 M 0 0 14(38)FmTx
13 511 M 0 0 14(39)FmTx
13 523 M 0 0 14(40)FmTx
13 535 M 0 0 14(41)FmTx
13 547 M 0 0 14(42)FmTx
13 559 M 0 0 14(43)FmTx
13 571 M 0 0 14(44)FmTx
13 583 M 0 0 14(45)FmTx
13 595 M 0 0 14(46)FmTx
13 607 M 0 0 14(47)FmTx
13 619 M 0 0 14(48)FmTx
13 631 M 0 0 14(49)FmTx
13 643 M 0 0 14(50)FmTx
13 655 M 0 0 14(51)FmTx
13 667 M 0 0 14(52)FmTx
13 679 M 0 0 14(53)FmTx
13 691 M 0 0 14(54)FmTx
13 703 M 0 0 14(55)FmTx
13 715 M 0 0 14(56)FmTx
13 727 M 0 0 14(57)FmTx
FmE
4960 0 :M
f2_10 sf
( )S
4962 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 52.667 M 0.092(4.  Add the )W
FmE
4963 0 :M
f3_10 sf
( )S
4965 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
105.306 52.667 M (phys_mid,phys_lo)S
FmE
4965 0 :M
f2_10 sf
( )S
4967 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.237 52.667 M 0.092( value from the )W
FmE
4968 0 :M
f5_10 sf
( )S
4974 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.912 52.667 M 0 0 120(\"assigned-addresses\")FmTx
FmE
4974 0 :M
f2_10 sf
( )S
4976 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
360.912 52.667 M 0.092( entry to the )W
FmE
4976 0 :M
f3_10 sf
( )S
4978 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
411.821 52.667 M (phys_mid,phys_lo)S
FmE
4979 0 :M
f2_10 sf
( )S
4981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
483.752 52.667 M 0.092( value)W
58 64.667 M 0.511(\(0x40\) from the )W
FmE
4981 0 :M
f5_10 sf
( )S
4987 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.339 64.667 M 0 0 30(\"reg\")FmTx
FmE
4987 0 :M
f2_10 sf
( )S
4989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
155.339 64.667 M 0.511( entry.  This yields the physical base \(in PCI address space\) of the device\'s operational)W
58 76.667 M (registers.)S
58 92.667 M -0.045(5.  Add this value to the desired register offset, 3.  This yields the \(PCI domain\325s\) physical address of the desired)W
58 104.667 M (register.)S
FmE
4990 0 :M
f0_12 sf
( )S
4993 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 139 M (11.2.2. )S
(Determining the address of a register of example in Section )S
(11.1.2.)S
FmE
4993 0 :M
f2_10 sf
( )S
4995 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
58 155.667 M -0.119(Problem: Given the VGA device described above \(in Section )W
(11.1.2.)S
-0.119(\), determine the PCI address associated with)W
58 167.667 M (the sequencer index register \(I/O address )S
FmE
4995 0 :M
f4_10 sf
( )S
5001 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
224.018 167.667 M 0 0 30(0x3C4)FmTx
FmE
5001 0 :M
f2_10 sf
( )S
5003 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
254.018 167.667 M ( in the documentation\).)S
58 183.667 M (\(Of course, we could \"just know\" that the answer is )S
FmE
5004 0 :M
f4_10 sf
( )S
5010 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.359 183.667 M 0 0 30(0x3C4)FmTx
FmE
5010 0 :M
f2_10 sf
( )S
5012 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
296.359 183.667 M (, but let\'s do it according to the book.\))S
58 199.667 M -0.177(1.  Extract the fourth )W
FmE
5012 0 :M
f3_10 sf
( )S
5014 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
142.636 199.667 M (phys-addr,size)S
FmE
5015 0 :M
f2_10 sf
( )S
5017 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.676 199.667 M -0.177(  pair from the )W
FmE
5017 0 :M
f5_10 sf
( )S
5023 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.487 199.667 M 0 0 30(\"reg\")FmTx
FmE
5023 0 :M
f2_10 sf
( )S
5025 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
289.487 199.667 M -0.177( property.  \(We know to use the fourth pair because the)W
58 211.667 M -0.478(first pair is the Configuration Space entry, the second pair is the ROM, the third pair is the monochrome I/O range,)W
58 223.667 M (the fourth pair is the color I/O range, and the fifth pair is the video memory.\))S
58 239.666 M (2.  Note that the \325)S
FmE
5026 0 :M
f4_10 sf
( )S
5032 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.976 239.666 M 0 0 6(n)FmTx
FmE
5032 0 :M
f2_10 sf
( )S
5034 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.976 239.666 M (\325 bit is one, indicating a non-relocatable region.)S
58 255.666 M -0.327(3.  Add the )W
FmE
5034 0 :M
f3_10 sf
( )S
5036 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
103.629 255.666 M (phys_mid,phys_lo)S
FmE
5037 0 :M
f2_10 sf
( )S
5039 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.56 255.666 M -0.327( values from this )W
FmE
5039 0 :M
f5_10 sf
( )S
5045 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
243.677 255.666 M 0 0 30(\"reg\")FmTx
FmE
5045 0 :M
f2_10 sf
( )S
5047 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
273.677 255.666 M -0.327( entry to the desired register offset, 4.  This yields the phys-)W
58 267.666 M (ical address \(in the PCI domain\) of the sequencer index register.)S
0.502 0.502 0 0.498 0 0 0.502 FmK
38 46 2 225 FmqF
FmE
endp
%%Trailer
end
%%EOF
