Date: Tue, 23 May 95 17:56:53 PDT
From: dmk@Eng.Sun.Com (David Kahn)
Subject: Item #270: Recomended Practice (Core) test-method Ver. 2

P1275 Open Firmware Working Group Proposal -- Proposal #270 Ver 2

Title:		'test-method' client interface (Superscede #269)

Author:		David Kahn

Date:		23 May 1995

Ed/Tech:	Technical

Synopsis:	Create 'test-method' client interface

Doc & Version:	Core Doc, Recomended Practice.

Scope:		Recomended practice to all implementations of the client
		interface.

Problem:	Though there is a 'test' client interface, there is
		no 'test-method' client interface, to determine if
		a given method-name in a given package exists.

Proposal:	

NOTE: This superscedes Proposal #269 V1.

I want to modify the proposal to make the return value consistant
with client interface "test", which has the opposite semantics
in it's return value. One might argue which way the return value
should be, but I'd argue that it's already decided since "test"
can't be changed.

Here's the updated proposal text:

Create a recomended practice, creating the following client interface:

test-method

IN:	phandle, method-cstr
OUT:	missing-flag?

test-method	( method-cstr phandle -- missing-flag? )

In the package given by the argument *phandle* test for the existance
of the method given by *method-cstr* (as with find-method) and return
the value FALSE if the method exists, or TRUE if the method does not
exist, in the return argument, missing-flag?.

NOTE: It is recomended that client programs test for existance of
the TEST-METHOD client interface prior to using it.

See Also: find-method.


[ P1275 Item #270 -- Received: Tue May 23 17:56:55 PDT 1995 ]

